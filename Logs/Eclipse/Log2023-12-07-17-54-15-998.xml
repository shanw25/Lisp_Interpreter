<Events startTimestamp="1701989655998" logVersion="1.0.0.202308221630">
  <Command __id="493" _type="DiffBasedFileOpenCommand" date="Thu Dec 07 21:02:28 EST 2023" docLength="268" projectName="Assignment4" starttimestamp="1701989655998" timestamp="11292495">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment4/src/Greeting.sml]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"fun greeting() = print ("hello\ngoodbye\n");fun makeList x = [x];fun identity x = x;fun composeIntAndBooleanCalls function = (function 1, function 2);val list1AndTrue = composeIntAndBooleanCalls makeList;val identity1AndTrue = composeIntAndBooleanCalls identity;")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="498" _type="DiffBasedFileOpenCommand" date="Thu Dec 07 21:03:22 EST 2023" docLength="7315" projectName="Assignment4" starttimestamp="1701989655998" timestamp="11346495">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment4/src/SocialDistance.sml]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];val SMALL_DISTANCE = 6;val MEDIUM_DISTANCE = 13;val LARGE_DISTANCE = 27;val SMALL_DURATION = 15;val MEDIUM_DURATION = 30;val LARGE_DURATION = 120;val SMALL_EXHALATION = 10;val MEDIUM_EXHALATION = 30;val LARGE_EXHALATION = 50;val MIN_VALUE = 0;val MAX_VALUE = 200;fun givenSafe (13, 30, 30) = true |		givenSafe (6, 30, 10) = true |		givenSafe (27, 30, 50) = true |		givenSafe (13, 15, 50) = true |		givenSafe (13, 120, 10) = true |		givenSafe (27, 120, 30) = true |		givenSafe (6, 15, 30) = true |		givenSafe (_,_,_) = false;				fun interpolateDistanceSmall(distance) =    if (distance >= SMALL_DISTANCE andalso distance < MEDIUM_DISTANCE) then        true    else        false;fun interpolateDistanceMedium(distance) =    if (distance >= MEDIUM_DISTANCE andalso distance < LARGE_DISTANCE) then        true    else        false;fun interpolateDistanceLarge(distance) =    if (distance >= LARGE_DISTANCE) then        true    else        false;fun interpolateDurationSmall(duration) =    if (duration >= MIN_VALUE andalso duration <= SMALL_DURATION) then        true    else        false;fun interpolateDurationMedium(duration) =    if (duration > SMALL_DURATION andalso duration <= MEDIUM_DURATION) then        true    else        false;fun interpolateDurationLarge(duration) =    if (duration > MEDIUM_DURATION andalso duration <= LARGE_DURATION) then        true    else        false;        fun interpolateExhalationSmall(exhalation) =    if (exhalation >= MIN_VALUE andalso exhalation <= SMALL_EXHALATION) then        true    else        false;fun interpolateExhalationMedium(exhalation) =    if (exhalation > SMALL_EXHALATION andalso exhalation <= MEDIUM_EXHALATION) then        true    else        false;fun interpolateExhalationLarge(exhalation) =    if (exhalation > MEDIUM_EXHALATION andalso exhalation <= LARGE_EXHALATION) then        true    else        false;        fun interpolatedSafe(distance, duration, exhalation) =     if ((interpolateDistanceMedium(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationMedium(exhalation)) orelse    (interpolateDistanceMedium(distance) andalso interpolateDurationSmall(duration) andalso interpolateExhalationLarge(exhalation)) orelse    (interpolateDistanceMedium(distance) andalso interpolateDurationLarge(duration) andalso interpolateExhalationSmall(exhalation)) orelse    (interpolateDistanceSmall(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationSmall(exhalation)) orelse    (interpolateDistanceSmall(distance) andalso interpolateDurationSmall(duration) andalso interpolateExhalationMedium(exhalation)) orelse    (interpolateDistanceLarge(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationLarge(exhalation)) orelse    (interpolateDistanceLarge(distance) andalso interpolateDurationLarge(duration) andalso interpolateExhalationMedium(exhalation))) then    		true    else    		false;fun listDerivedSafeHelper(_, _, _, nil) = false |listDerivedSafeHelper(distance, duration, exhalation, (Dist, Dura, Exha)::tail) =if (distance >= Dist andalso duration <= Dura andalso exhalation <= Exha) then		trueelse		listDerivedSafeHelper(distance, duration, exhalation, tail);fun listDerivedSafe(distance, duration, exhalation) =		listDerivedSafeHelper(distance, duration, exhalation, SAFETY_TABLE);		fun printSafety(safetyComputer, (distance: int, duration: int, exhalation: int)) = 		(print ("Distance:" ^ Int.toString (distance) ^ " Duration:" ^ Int.toString (duration) ^ " Exhalation:" ^ Int.toString (exhalation) ^ " Safe:");		if (safetyComputer(distance, duration, exhalation)) then				print("true\n")		else				print("false\n"));fun concisePrintSafety(safetyComputer, (distance: int, duration: int, exhalation: int)) = 		(print ("(" ^ Int.toString (distance) ^ ", " ^ Int.toString (duration) ^ ", " ^ Int.toString (exhalation) ^ ", ");		if (safetyComputer(distance, duration, exhalation)) then				print("true)\n")		else				print("false)\n"));				fun listPrintSafety(_, _, nil) = () |listPrintSafety(printSafety, safetyComputer, head::tail) =		(printSafety(safetyComputer, head);		listPrintSafety(printSafety, safetyComputer, tail));fun givenSafeMatcher((distance, duration, exhalation), (Dist, Dura, Exha)) =    distance = Dist andalso duration = Dura andalso exhalation = Exha;fun derivedSafeMatcher((distance, duration, exhalation), (Dist, Dura, Exha)) =		distance >= Dist andalso duration <= Dura andalso exhalation <= Exha; fun matchingSafeHelper(_, _, nil) = false |matchingSafeHelper(safeMatcher, (distance, duration, exhalation), (Dist, Dura, Exha)::tail) =if (safeMatcher((distance, duration, exhalation), (Dist, Dura, Exha))) then		trueelse		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), tail);fun matchingSafe(safeMatcher, (distance, duration, exhalation)) =		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), SAFETY_TABLE);fun matchingDerivedSafe(distance, duration, exhalation) =    let        fun matchingDerivedSafeHelper(_, _, _, nil) = false          | matchingDerivedSafeHelper(dist, dur, exh, (Dist, Dura, Exha)::tail) =            if (matchingSafe(derivedSafeMatcher, (dist, dur, exh))) then                true            else                matchingDerivedSafeHelper(dist, dur, exh, tail)    in        matchingDerivedSafeHelper(distance, duration, exhalation, SAFETY_TABLE)    endfun matchingGivenSafe(distance, duration, exhalation) =    let        fun matchingGivenSafeHelper(_, _, _, nil) = false          | matchingGivenSafeHelper(dist, dur, exh, (Dist, Dura, Exha)::tail) =            if (matchingSafe(givenSafeMatcher, (dist, dur, exh))) then                true            else                matchingGivenSafeHelper(dist, dur, exh, tail)    in        matchingGivenSafeHelper(distance, duration, exhalation, SAFETY_TABLE)    endfun curryableInterpolatedSafe distance duration exhalation =     if(interpolatedSafe(distance, duration, exhalation)) then    		true    else    		falsefun curriedOnceInterpolatedSafe duration exhalation =     if (curryableInterpolatedSafe MEDIUM_DISTANCE duration exhalation) then    		true    else    		false;fun curriedTwiceInterpolatedSafe exhalation =     if (curriedOnceInterpolatedSafe MEDIUM_DURATION exhalation) then    		true    else    		false;    		fun matchingSafeHelper(_, _, nil) = false |matchingSafeHelper(safeMatcher, (distance, duration, exhalation), (Dist, Dura, Exha)::tail) =if (safeMatcher((distance, duration, exhalation), (Dist, Dura, Exha))) then		trueelse		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), tail);fun curryableMatchingSafe safeMatcher (distance, duration, exhalation) =		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), SAFETY_TABLE);		fun curriedMatchingDerivedSafe (distance, duration, exhalation) =		curryableMatchingSafe derivedSafeMatcher (distance, duration, exhalation);		fun curriedMatchingGivenSafe (distance, duration, exhalation) =		curryableMatchingSafe givenSafeMatcher (distance, duration, exhalation);")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="499" _type="EclipseCommand" commandID="" date="Thu Dec 07 21:03:24 EST 2023" starttimestamp="1701989655998" timestamp="11348590" />
  <Command __id="500" _type="EclipseCommand" commandID="" date="Thu Dec 07 21:03:24 EST 2023" starttimestamp="1701989655998" timestamp="11348629" />
  <Command __id="502" _type="MoveCaretCommand" caretOffset="0" date="Thu Dec 07 21:03:27 EST 2023" docOffset="0" starttimestamp="1701989655998" timestamp="11351595" />
  <Command __id="503" _type="MoveCaretCommand" caretOffset="2627" date="Thu Dec 07 21:03:32 EST 2023" docOffset="2863" starttimestamp="1701989655998" timestamp="11356352" />
  <Command __id="504" _type="MoveCaretCommand" caretOffset="2627" date="Thu Dec 07 21:03:34 EST 2023" docOffset="2863" starttimestamp="1701989655998" timestamp="11358089" />
</Events>
