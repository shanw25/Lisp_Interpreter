<Events startTimestamp="1700582044267" logVersion="1.0.0.202308221630">
  <Command __id="2" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:54:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2652" type="Run" />
  <Command __id="3" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:54:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2652" type="Run" />
  <Command __id="4" _type="ShellCommand" date="Tue Nov 21 10:54:07 EST 2023" starttimestamp="1700582044267" timestamp="2965" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="26" _type="ShellCommand" date="Tue Nov 21 10:54:29 EST 2023" starttimestamp="1700582044267" timestamp="24776" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="27" _type="ShellCommand" date="Tue Nov 21 10:54:30 EST 2023" starttimestamp="1700582044267" timestamp="26611" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="28" _type="ShellCommand" date="Tue Nov 21 10:54:34 EST 2023" starttimestamp="1700582044267" timestamp="30717" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="29" _type="MoveCaretCommand" caretOffset="549" date="Tue Nov 21 10:54:35 EST 2023" docOffset="669" starttimestamp="1700582044267" timestamp="31030" />
  <Command __id="30" _type="MoveCaretCommand" caretOffset="486" date="Tue Nov 21 10:54:36 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="31735" />
  <Command __id="31" _type="ShellCommand" date="Tue Nov 21 10:54:36 EST 2023" starttimestamp="1700582044267" timestamp="32614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="32" _type="ShellCommand" date="Tue Nov 21 10:54:37 EST 2023" starttimestamp="1700582044267" timestamp="33412" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="33" _type="ShellCommand" date="Tue Nov 21 10:54:38 EST 2023" starttimestamp="1700582044267" timestamp="33898" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="34" _type="ShellCommand" date="Tue Nov 21 10:54:39 EST 2023" starttimestamp="1700582044267" timestamp="34872" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="35" _type="ShellCommand" date="Tue Nov 21 10:54:41 EST 2023" starttimestamp="1700582044267" timestamp="37268" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="36" _type="ShellCommand" date="Tue Nov 21 10:54:42 EST 2023" starttimestamp="1700582044267" timestamp="38189" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="37" _type="ShellCommand" date="Tue Nov 21 10:54:44 EST 2023" starttimestamp="1700582044267" timestamp="40337" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="38" _type="ShellCommand" date="Tue Nov 21 10:54:46 EST 2023" starttimestamp="1700582044267" timestamp="42445" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="39" _type="ShellCommand" date="Tue Nov 21 10:54:47 EST 2023" starttimestamp="1700582044267" timestamp="43070" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="40" _type="ShellCommand" date="Tue Nov 21 10:54:50 EST 2023" starttimestamp="1700582044267" timestamp="45962" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="41" _type="ShellCommand" date="Tue Nov 21 10:55:04 EST 2023" starttimestamp="1700582044267" timestamp="60004" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="42" _type="ShellCommand" date="Tue Nov 21 10:55:05 EST 2023" starttimestamp="1700582044267" timestamp="61160" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="43" _type="MoveCaretCommand" caretOffset="438" date="Tue Nov 21 10:55:21 EST 2023" docOffset="558" starttimestamp="1700582044267" timestamp="77039" />
  <Command __id="44" _type="MoveCaretCommand" caretOffset="475" date="Tue Nov 21 10:55:28 EST 2023" docOffset="595" starttimestamp="1700582044267" timestamp="84465" />
  <Command __id="45" _type="MoveCaretCommand" caretOffset="436" date="Tue Nov 21 10:55:30 EST 2023" docOffset="556" starttimestamp="1700582044267" timestamp="85817" />
  <Command __id="46" _type="SelectTextCommand" caretOffset="438" date="Tue Nov 21 10:55:30 EST 2023" end="438" start="434" starttimestamp="1700582044267" timestamp="85969" />
  <Command __id="47" _type="ShellCommand" date="Tue Nov 21 10:55:46 EST 2023" starttimestamp="1700582044267" timestamp="101871" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="48" _type="ShellCommand" date="Tue Nov 21 10:55:47 EST 2023" starttimestamp="1700582044267" timestamp="103566" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="49" _type="ShellCommand" date="Tue Nov 21 10:55:49 EST 2023" starttimestamp="1700582044267" timestamp="105635" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="50" _type="ShellCommand" date="Tue Nov 21 10:55:51 EST 2023" starttimestamp="1700582044267" timestamp="107642" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 10:54:04 EST 2023" docASTNodeCount="122" docActiveCodeLength="669" docExpressionCount="88" docLength="669" projectName="Assignment5" starttimestamp="1700582044267" timestamp="42">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(!expr.getHead().getHead().eval(environment).isNIL()) {
			System.out.println("AAAA: " + expr);
			return expr.getHead().getTail();
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="51" _type="MoveCaretCommand" caretOffset="252" date="Tue Nov 21 10:55:55 EST 2023" docOffset="372" starttimestamp="1700582044267" timestamp="111302" />
  <Command __id="52" _type="MoveCaretCommand" caretOffset="187" date="Tue Nov 21 10:55:55 EST 2023" docOffset="307" starttimestamp="1700582044267" timestamp="111715" />
  <DocumentChange __id="53" _type="Insert" date="Tue Nov 21 10:55:57 EST 2023" docASTNodeCount="126" docActiveCodeLength="682" docExpressionCount="90" docLength="682" length="13" offset="307" repeat="11" starttimestamp="1700582044267" timestamp="113223" timestamp2="115415">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <Command __id="54" _type="InsertStringCommand" date="Tue Nov 21 10:55:57 EST 2023" starttimestamp="1700582044267" timestamp="113229" timestamp2="113229">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="56" _type="InsertStringCommand" date="Tue Nov 21 10:55:58 EST 2023" starttimestamp="1700582044267" timestamp="113982" timestamp2="113982">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="58" _type="InsertStringCommand" date="Tue Nov 21 10:55:58 EST 2023" starttimestamp="1700582044267" timestamp="114203" timestamp2="114203">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="60" _type="InsertStringCommand" date="Tue Nov 21 10:55:58 EST 2023" starttimestamp="1700582044267" timestamp="114285" timestamp2="114285">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="62" _type="InsertStringCommand" date="Tue Nov 21 10:55:58 EST 2023" starttimestamp="1700582044267" timestamp="114406" timestamp2="114406">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="64" _type="InsertStringCommand" date="Tue Nov 21 10:55:58 EST 2023" starttimestamp="1700582044267" timestamp="114499" timestamp2="114499">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="66" _type="InsertStringCommand" date="Tue Nov 21 10:55:58 EST 2023" starttimestamp="1700582044267" timestamp="114619" timestamp2="114619">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="68" _type="InsertStringCommand" date="Tue Nov 21 10:55:59 EST 2023" starttimestamp="1700582044267" timestamp="114984" timestamp2="114984">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="69" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 10:55:59 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="115007" />
  <Command __id="73" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 10:55:59 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="115520" />
  <DocumentChange __id="74" _type="Replace" date="Tue Nov 21 10:55:59 EST 2023" docASTNodeCount="126" docActiveCodeLength="683" docExpressionCount="92" docLength="683" endLine="11" insertionLength="4" int_docASTNodeCount="124" int_docActiveCodeLength="679" int_docExpressionCount="90" int_docLength="679" length="3" offset="317" startLine="11" starttimestamp="1700582044267" timestamp="115525">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="77" _type="Insert" date="Tue Nov 21 10:55:59 EST 2023" docASTNodeCount="128" docActiveCodeLength="692" docExpressionCount="93" docLength="692" length="9" offset="321" repeat="8" starttimestamp="1700582044267" timestamp="115731" timestamp2="116522">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <Command __id="75" _type="InsertStringCommand" date="Tue Nov 21 10:55:59 EST 2023" starttimestamp="1700582044267" timestamp="115530" timestamp2="115530">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="76" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 10:55:59 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="115540" />
  <Command __id="86" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 10:56:03 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="119072" />
  <Command __id="88" _type="InsertStringCommand" date="Tue Nov 21 10:56:04 EST 2023" starttimestamp="1700582044267" timestamp="120328" timestamp2="120328">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="90" _type="InsertStringCommand" date="Tue Nov 21 10:56:04 EST 2023" starttimestamp="1700582044267" timestamp="120483" timestamp2="120483">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="92" _type="InsertStringCommand" date="Tue Nov 21 10:56:04 EST 2023" starttimestamp="1700582044267" timestamp="120627" timestamp2="120627">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="94" _type="InsertStringCommand" date="Tue Nov 21 10:56:05 EST 2023" starttimestamp="1700582044267" timestamp="120806" timestamp2="120806">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="96" _type="InsertStringCommand" date="Tue Nov 21 10:56:05 EST 2023" starttimestamp="1700582044267" timestamp="121571" timestamp2="121571">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="98" _type="InsertStringCommand" date="Tue Nov 21 10:56:06 EST 2023" starttimestamp="1700582044267" timestamp="121735" timestamp2="121735">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="99" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 10:56:06 EST 2023" starttimestamp="1700582044267" timestamp="121957" />
  <Command __id="101" _type="InsertStringCommand" date="Tue Nov 21 10:56:06 EST 2023" starttimestamp="1700582044267" timestamp="122483" timestamp2="122483">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="103" _type="InsertStringCommand" date="Tue Nov 21 10:56:06 EST 2023" starttimestamp="1700582044267" timestamp="122590" timestamp2="122590">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="105" _type="InsertStringCommand" date="Tue Nov 21 10:56:07 EST 2023" starttimestamp="1700582044267" timestamp="122771" timestamp2="122771">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="107" _type="InsertStringCommand" date="Tue Nov 21 10:56:07 EST 2023" starttimestamp="1700582044267" timestamp="122958" timestamp2="122958">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="109" _type="InsertStringCommand" date="Tue Nov 21 10:56:07 EST 2023" starttimestamp="1700582044267" timestamp="123154" timestamp2="123154">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="111" _type="InsertStringCommand" date="Tue Nov 21 10:56:07 EST 2023" starttimestamp="1700582044267" timestamp="123268" timestamp2="123268">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="113" _type="InsertStringCommand" date="Tue Nov 21 10:56:07 EST 2023" starttimestamp="1700582044267" timestamp="123337" timestamp2="123337">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="114" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 10:56:08 EST 2023" starttimestamp="1700582044267" timestamp="124054" />
  <Command __id="116" _type="InsertStringCommand" date="Tue Nov 21 10:56:08 EST 2023" starttimestamp="1700582044267" timestamp="124293" timestamp2="124293">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="117" _type="EclipseCommand" commandID="" date="Tue Nov 21 10:56:08 EST 2023" starttimestamp="1700582044267" timestamp="124715" />
  <Command __id="118" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 10:56:08 EST 2023" starttimestamp="1700582044267" timestamp="124729" />
  <Command __id="119" _type="EclipseCommand" commandID="" date="Tue Nov 21 10:56:09 EST 2023" starttimestamp="1700582044267" timestamp="124771" />
  <Command __id="120" _type="ShellCommand" date="Tue Nov 21 10:56:09 EST 2023" starttimestamp="1700582044267" timestamp="125714" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="121" _type="ShellCommand" date="Tue Nov 21 10:56:10 EST 2023" starttimestamp="1700582044267" timestamp="126229" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="122" _type="ShellCommand" date="Tue Nov 21 10:56:10 EST 2023" starttimestamp="1700582044267" timestamp="126719" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="123" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:56:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="127670" type="Run" />
  <Command __id="124" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:56:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="127670" type="Run" />
  <Command __id="125" _type="ShellCommand" date="Tue Nov 21 10:56:11 EST 2023" starttimestamp="1700582044267" timestamp="127671" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="126" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:56:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="128554" type="Run" />
  <Command __id="127" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:56:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="128554" type="Run" />
  <Command __id="128" _type="ShellCommand" date="Tue Nov 21 10:56:13 EST 2023" starttimestamp="1700582044267" timestamp="128866" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="129" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131273" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):1¶Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="130" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131276" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="131" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131291" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="132" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131294" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="133" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131297" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="134" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131298" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="135" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131298" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="136" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131299" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="137" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131302" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="138" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131304" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="139" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131305" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="140" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131306" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="141" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131307" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="142" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131310" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="143" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131312" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="144" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131313" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="145" _type="ConsoleOutput" date="Tue Nov 21 10:56:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="131315" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "), Diff(INSERT,"¶Test execution time (ms):2¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("), Diff(EQUAL,""a""), Diff(INSERT," ."), Diff(EQUAL," "), Diff(INSERT,"("), Diff(EQUAL,"(1 . 2) "), Diff(DELETE,"((LIST 1 (AND T T))))¶"), Diff(INSERT,". ((1 . (T . NIL)) . NIL)))actual string "), Diff(EQUAL,"(LIST "), Diff(INSERT,". ("), Diff(EQUAL,""a""), Diff(INSERT," ."), Diff(EQUAL," "), Diff(INSERT,"("), Diff(EQUAL,"(1 . 2) "), Diff(INSERT,". "), Diff(EQUAL,"(("), Diff(DELETE,"LIST 1 (AND T T))))¶"), Diff(EQUAL,"(LIST "), Diff(DELETE,""a""), Diff(INSERT,"."), Diff(EQUAL," (1 . "), Diff(DELETE,"2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T"), Diff(INSERT,"((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL"), Diff(EQUAL,"))))¶")]]]></diff>
  </Command>
  <Command __id="146" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132782" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"ListToStringDeepCheckerAdvanc"), Diff(INSERT,"TestLispFileProvid"), Diff(EQUAL,"ed,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,0.0,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,"), Diff(DELETE,"Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"¶¶Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="147" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132788" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(5)
(5)
(5)
(5)
(5)
(5)
(5)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
BBBB: (COND (NIL 1) ((+ 1 2) 2))
AAAA: (((+ 1 2) 2))
(2)
(2)
(2)
(2)
(2)
(2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶¶Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶BBBB: (COND (NIL 1) ((+ 1 2) 2))¶AAAA: (((+ 1 2) 2))¶(2)¶(2)¶(2)¶(2)¶(2)¶(2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="148" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132796" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,

Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶BBBB: (COND (NIL 1) ((+ 1 2) 2))¶AAAA: (((+ 1 2) 2))¶(2)¶(2)¶(2)¶(2)¶(2)¶(2)"), Diff(INSERT,"Test Result:LoadChecker,100.0% complete,0.0,0.0,¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="149" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132798" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:CondTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oa"), Diff(INSERT,"istTeste"), Diff(EQUAL,"dChecker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶¶Test execution time (ms):0¶Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"Cond"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="150" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132800" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1¶Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:CondTested"), Diff(INSERT,"Result:ConsTestedTwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="151" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132801" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="152" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132802" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="153" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132804" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="154" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132804" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="155" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132806" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="156" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132808" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="157" _type="ConsoleOutput" date="Tue Nov 21 10:56:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="132808" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="158" _type="LocalChecksRawCommand" date="Tue Nov 21 10:56:17 EST 2023" starttimestamp="1700582044267" timestamp="132830">
    <CSVRow><![CDATA[171,Tue Nov 21 10:56:15 EST 2023,30,0,A5ToStringSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,92,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="159" _type="LocalChecksRawCommand" date="Tue Nov 21 10:56:17 EST 2023" starttimestamp="1700582044267" timestamp="132830">
    <CSVRow><![CDATA[171,Tue Nov 21 10:56:15 EST 2023,30,0,A5ToStringSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,92,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="160" _type="ShellCommand" date="Tue Nov 21 10:56:35 EST 2023" starttimestamp="1700582044267" timestamp="151088" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="161" _type="ShellCommand" date="Tue Nov 21 10:56:35 EST 2023" starttimestamp="1700582044267" timestamp="151503" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="162" _type="ShellCommand" date="Tue Nov 21 10:56:36 EST 2023" starttimestamp="1700582044267" timestamp="151837" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="163" _type="ShellCommand" date="Tue Nov 21 10:56:36 EST 2023" starttimestamp="1700582044267" timestamp="152200" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="164" _type="ShellCommand" date="Tue Nov 21 10:56:37 EST 2023" starttimestamp="1700582044267" timestamp="153689" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="165" _type="ShellCommand" date="Tue Nov 21 10:56:38 EST 2023" starttimestamp="1700582044267" timestamp="154472" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="166" _type="ShellCommand" date="Tue Nov 21 10:56:39 EST 2023" starttimestamp="1700582044267" timestamp="155141" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="167" _type="ShellCommand" date="Tue Nov 21 10:56:40 EST 2023" starttimestamp="1700582044267" timestamp="155941" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="168" _type="ShellCommand" date="Tue Nov 21 10:56:40 EST 2023" starttimestamp="1700582044267" timestamp="156546" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="169" _type="ShellCommand" date="Tue Nov 21 10:56:41 EST 2023" starttimestamp="1700582044267" timestamp="157471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="170" _type="ShellCommand" date="Tue Nov 21 10:56:42 EST 2023" starttimestamp="1700582044267" timestamp="157994" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="171" _type="MoveCaretCommand" caretOffset="244" date="Tue Nov 21 10:57:26 EST 2023" docOffset="364" starttimestamp="1700582044267" timestamp="202709" />
  <Command __id="172" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:57:28 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="204641" />
  <Command __id="173" _type="ShellCommand" date="Tue Nov 21 10:57:52 EST 2023" starttimestamp="1700582044267" timestamp="227758" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="174" _type="ShellCommand" date="Tue Nov 21 10:58:03 EST 2023" starttimestamp="1700582044267" timestamp="239009" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="175" _type="ShellCommand" date="Tue Nov 21 10:58:06 EST 2023" starttimestamp="1700582044267" timestamp="242531" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="176" _type="ShellCommand" date="Tue Nov 21 10:58:07 EST 2023" starttimestamp="1700582044267" timestamp="242856" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="177" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:10 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="246666" />
  <Command __id="178" _type="SelectTextCommand" caretOffset="229" date="Tue Nov 21 10:58:12 EST 2023" end="251" start="229" starttimestamp="1700582044267" timestamp="247957" />
  <Command __id="179" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:12 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="248213" />
  <Command __id="180" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:13 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="249680" />
  <Command __id="181" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:14 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="250503" />
  <Command __id="182" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:15 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="250853" />
  <Command __id="183" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:15 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="251145" />
  <Command __id="184" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:15 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="251389" />
  <Command __id="185" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:16 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="251762" />
  <Command __id="186" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:17 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="252850" />
  <Command __id="187" _type="ShellCommand" date="Tue Nov 21 10:58:17 EST 2023" starttimestamp="1700582044267" timestamp="253440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="188" _type="ShellCommand" date="Tue Nov 21 10:58:19 EST 2023" starttimestamp="1700582044267" timestamp="254966" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="189" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:22 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="258110" />
  <Command __id="190" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:22 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="258567" />
  <Command __id="191" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:23 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="259048" />
  <Command __id="192" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:23 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="259297" />
  <Command __id="193" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:23 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="259579" />
  <Command __id="194" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:24 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="260039" />
  <Command __id="195" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:24 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="260328" />
  <Command __id="196" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:24 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="260485" />
  <Command __id="197" _type="SelectTextCommand" caretOffset="292" date="Tue Nov 21 10:58:25 EST 2023" end="292" start="252" starttimestamp="1700582044267" timestamp="260841" />
  <Command __id="198" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:25 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="261100" />
  <Command __id="199" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:25 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="261414" />
  <Command __id="200" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:25 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="261709" />
  <Command __id="201" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:26 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="262403" />
  <Command __id="202" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:26 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="262717" />
  <Command __id="203" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:27 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="263108" />
  <Command __id="204" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:27 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="263376" />
  <Command __id="205" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 10:58:27 EST 2023" docOffset="411" starttimestamp="1700582044267" timestamp="263530" />
  <Command __id="206" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:29 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="265362" />
  <Command __id="207" _type="MoveCaretCommand" caretOffset="238" date="Tue Nov 21 10:58:38 EST 2023" docOffset="358" starttimestamp="1700582044267" timestamp="274644" />
  <Command __id="208" _type="SelectTextCommand" caretOffset="240" date="Tue Nov 21 10:58:39 EST 2023" end="240" start="236" starttimestamp="1700582044267" timestamp="274791" />
  <Command __id="209" _type="MoveCaretCommand" caretOffset="242" date="Tue Nov 21 10:58:39 EST 2023" docOffset="362" starttimestamp="1700582044267" timestamp="275096" />
  <Command __id="210" _type="SelectTextCommand" caretOffset="248" date="Tue Nov 21 10:58:39 EST 2023" end="248" start="241" starttimestamp="1700582044267" timestamp="275256" />
  <Command __id="211" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:39 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="275597" />
  <Command __id="212" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 10:58:41 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="277442" />
  <Command __id="213" _type="SelectTextCommand" caretOffset="229" date="Tue Nov 21 10:58:43 EST 2023" end="251" start="229" starttimestamp="1700582044267" timestamp="279189" />
  <Command __id="214" _type="MoveCaretCommand" caretOffset="379" date="Tue Nov 21 10:58:46 EST 2023" docOffset="499" starttimestamp="1700582044267" timestamp="282570" />
  <Command __id="215" _type="SelectTextCommand" caretOffset="190" date="Tue Nov 21 10:58:48 EST 2023" end="226" start="190" starttimestamp="1700582044267" timestamp="284509" />
  <Command __id="216" _type="CopyCommand" date="Tue Nov 21 10:58:48 EST 2023" starttimestamp="1700582044267" timestamp="284680" />
  <Command __id="217" _type="MoveCaretCommand" caretOffset="379" date="Tue Nov 21 10:58:49 EST 2023" docOffset="499" starttimestamp="1700582044267" timestamp="285197" />
  <Command __id="219" _type="InsertStringCommand" date="Tue Nov 21 10:58:50 EST 2023" starttimestamp="1700582044267" timestamp="285745" timestamp2="285745">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="221" _type="PasteCommand" date="Tue Nov 21 10:58:50 EST 2023" starttimestamp="1700582044267" timestamp="285929" />
  <Command __id="222" _type="MoveCaretCommand" caretOffset="404" date="Tue Nov 21 10:58:51 EST 2023" docOffset="524" starttimestamp="1700582044267" timestamp="287003" />
  <Command __id="223" _type="SelectTextCommand" caretOffset="406" date="Tue Nov 21 10:58:51 EST 2023" end="406" start="402" starttimestamp="1700582044267" timestamp="287145" />
  <Command __id="229" _type="MoveCaretCommand" caretOffset="414" date="Tue Nov 21 10:58:52 EST 2023" docOffset="534" starttimestamp="1700582044267" timestamp="288451" />
  <Command __id="231" _type="InsertStringCommand" date="Tue Nov 21 10:58:53 EST 2023" starttimestamp="1700582044267" timestamp="288851" timestamp2="288851">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="233" _type="InsertStringCommand" date="Tue Nov 21 10:58:53 EST 2023" starttimestamp="1700582044267" timestamp="289031" timestamp2="289031">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="235" _type="UndoCommand" date="Tue Nov 21 10:58:53 EST 2023" starttimestamp="1700582044267" timestamp="289633" />
  <Command __id="236" _type="MoveCaretCommand" caretOffset="402" date="Tue Nov 21 10:58:54 EST 2023" docOffset="522" starttimestamp="1700582044267" timestamp="290366" />
  <Command __id="238" _type="InsertStringCommand" date="Tue Nov 21 10:58:54 EST 2023" starttimestamp="1700582044267" timestamp="290536" timestamp2="290536">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="240" _type="InsertStringCommand" date="Tue Nov 21 10:58:54 EST 2023" starttimestamp="1700582044267" timestamp="290726" timestamp2="290726">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="242" _type="InsertStringCommand" date="Tue Nov 21 10:58:55 EST 2023" starttimestamp="1700582044267" timestamp="290853" timestamp2="290853">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="244" _type="InsertStringCommand" date="Tue Nov 21 10:58:55 EST 2023" starttimestamp="1700582044267" timestamp="291047" timestamp2="291047">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="245" _type="ShellCommand" date="Tue Nov 21 10:58:56 EST 2023" starttimestamp="1700582044267" timestamp="291754" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="246" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:58:56 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="291954" type="Run" />
  <Command __id="247" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:58:56 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="291954" type="Run" />
  <Command __id="248" _type="ShellCommand" date="Tue Nov 21 10:58:56 EST 2023" starttimestamp="1700582044267" timestamp="291961" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="249" _type="ShellCommand" date="Tue Nov 21 10:58:57 EST 2023" starttimestamp="1700582044267" timestamp="292808" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="250" _type="ShellCommand" date="Tue Nov 21 10:58:58 EST 2023" starttimestamp="1700582044267" timestamp="293757" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="251" _type="EclipseCommand" commandID="" date="Tue Nov 21 10:58:58 EST 2023" starttimestamp="1700582044267" timestamp="293816" />
  <Command __id="252" _type="EclipseCommand" commandID="" date="Tue Nov 21 10:58:58 EST 2023" starttimestamp="1700582044267" timestamp="293826" />
  <Command __id="253" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:58:58 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="293895" type="Run" />
  <Command __id="254" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 10:58:58 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="293895" type="Run" />
  <Command __id="255" _type="ShellCommand" date="Tue Nov 21 10:58:58 EST 2023" starttimestamp="1700582044267" timestamp="294218" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="256" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296556" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="257" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296558" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="258" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296562" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="259" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296564" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="260" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296564" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="261" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296565" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="262" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296585" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="263" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296588" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
BBBB: (COND (NIL 1) ((+ 1 2) 2))
CCCC: ((NIL 1) ((+ 1 2) 2))
CCCC: (((+ 1 2) 2))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶BBBB: (COND (NIL 1) ((+ 1 2) 2))¶CCCC: ((NIL 1) ((+ 1 2) 2))¶CCCC: (((+ 1 2) 2))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="264" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296588" type="ConsoleOutput">
    <outputString><![CDATA[AAAA: (((+ 1 2) 2))
(2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶BBBB: (COND (NIL 1) ((+ 1 2) 2))¶CCCC: ((NIL 1) ((+ 1 2) 2))¶CCCC: (((+ 1 2) 2)"), Diff(INSERT,"AAAA: (((+ 1 2) 2))¶(2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="265" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296589" type="ConsoleOutput">
    <outputString><![CDATA[BBBB: (COND (NIL 1) (T 3))
CCCC: ((NIL 1) (T 3))
CCCC: ((T 3))
AAAA: ((T 3))
(3)
BBBB: (COND (NIL 1) (T (3 4)))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"AAAA: (((+ 1 2) 2))¶(2"), Diff(INSERT,"BBBB: (COND (NIL 1) (T 3))¶CCCC: ((NIL 1) (T 3))¶CCCC: ((T 3))¶AAAA: ((T 3))¶(3)¶BBBB: (COND (NIL 1) (T (3 4))"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="266" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296589" type="ConsoleOutput">
    <outputString><![CDATA[
CCCC: ((NIL 1) (T (3 4)))
CCCC: ((T (3 4)))
AAAA: ((T (3 4)))
((3 4))
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"BBBB: (COND (NIL 1) (T 3))"), Diff(EQUAL,"¶CCCC: ((NIL 1) (T "), Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"))¶CCCC: ((T "), Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"))¶AAAA: ((T "), Diff(DELETE,"3))¶(3)¶BBBB: (COND (NIL 1) (T "), Diff(INSERT,"(3 4)))¶("), Diff(EQUAL,"(3 4))"), Diff(DELETE,")"), Diff(INSERT,"¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="267" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296592" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶CCCC: ((NIL 1) (T (3 4)))¶CCCC: ((T (3 4)))¶AAAA: ((T (3 4)))¶((3 4))¶T"), Diff(INSERT,"Test execution time (ms):35"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="268" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296593" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):35"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="269" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296594" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="270" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296595" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="271" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296596" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="272" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296597" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="273" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296598" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="274" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296599" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="275" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296600" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="276" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296601" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="277" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296602" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="278" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296603" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="279" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296604" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="280" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296607" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="281" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296610" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1¶Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="282" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296611" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="283" _type="ConsoleOutput" date="Tue Nov 21 10:59:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="296612" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):2"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="284" _type="ShellCommand" date="Tue Nov 21 10:59:54 EST 2023" starttimestamp="1700582044267" timestamp="350724" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="285" _type="MoveCaretCommand" caretOffset="591" date="Tue Nov 21 10:59:55 EST 2023" docOffset="711" starttimestamp="1700582044267" timestamp="350810" />
  <DocumentChange __id="85" _type="Insert" date="Tue Nov 21 10:56:03 EST 2023" docASTNodeCount="131" docActiveCodeLength="707" docExpressionCount="96" docLength="707" length="15" offset="329" repeat="14" starttimestamp="1700582044267" timestamp="119057" timestamp2="123336">
    <text><![CDATA["BBBB: " + expr]]></text>
  </DocumentChange>
  <DocumentChange __id="115" _type="Insert" date="Tue Nov 21 10:56:08 EST 2023" docASTNodeCount="131" docActiveCodeLength="708" docExpressionCount="96" docLength="708" length="1" offset="345" starttimestamp="1700582044267" timestamp="124289">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="218" _type="Insert" date="Tue Nov 21 10:58:50 EST 2023" docASTNodeCount="131" docActiveCodeLength="711" docExpressionCount="96" docLength="711" length="3" offset="499" starttimestamp="1700582044267" timestamp="285740">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="220" _type="Replace" date="Tue Nov 21 10:58:50 EST 2023" docASTNodeCount="140" docActiveCodeLength="747" docExpressionCount="104" docLength="747" endLine="17" insertionLength="38" int_docASTNodeCount="131" int_docActiveCodeLength="709" int_docExpressionCount="96" int_docLength="709" length="2" offset="500" startLine="17" starttimestamp="1700582044267" timestamp="285926">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("BBBB: " + expr);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="224" _type="Replace" date="Tue Nov 21 10:58:51 EST 2023" docASTNodeCount="140" docActiveCodeLength="744" docExpressionCount="104" docLength="744" endLine="17" insertionLength="1" int_docASTNodeCount="140" int_docActiveCodeLength="743" int_docExpressionCount="104" int_docLength="743" length="4" offset="522" startLine="17" starttimestamp="1700582044267" timestamp="287258">
    <deletedText><![CDATA[BBBB]]></deletedText>
    <insertedText><![CDATA[C]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="225" _type="Replace" date="Tue Nov 21 10:58:51 EST 2023" docASTNodeCount="140" docActiveCodeLength="745" docExpressionCount="104" docLength="745" endLine="17" insertionLength="2" int_docASTNodeCount="140" int_docActiveCodeLength="743" int_docExpressionCount="104" int_docLength="743" length="1" offset="522" startLine="17" starttimestamp="1700582044267" timestamp="287419">
    <deletedText><![CDATA[C]]></deletedText>
    <insertedText><![CDATA[CC]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="226" _type="Replace" date="Tue Nov 21 10:58:51 EST 2023" docASTNodeCount="140" docActiveCodeLength="746" docExpressionCount="104" docLength="746" endLine="17" insertionLength="3" int_docASTNodeCount="140" int_docActiveCodeLength="743" int_docExpressionCount="104" int_docLength="743" length="2" offset="522" startLine="17" starttimestamp="1700582044267" timestamp="287571">
    <deletedText><![CDATA[CC]]></deletedText>
    <insertedText><![CDATA[CCC]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="227" _type="Replace" date="Tue Nov 21 10:58:52 EST 2023" docASTNodeCount="140" docActiveCodeLength="747" docExpressionCount="104" docLength="747" endLine="17" insertionLength="4" int_docASTNodeCount="140" int_docActiveCodeLength="743" int_docExpressionCount="104" int_docLength="743" length="3" offset="522" startLine="17" starttimestamp="1700582044267" timestamp="287747">
    <deletedText><![CDATA[CCC]]></deletedText>
    <insertedText><![CDATA[CCCC]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="228" _type="Delete" date="Tue Nov 21 10:58:52 EST 2023" docASTNodeCount="140" docActiveCodeLength="743" docExpressionCount="104" docLength="743" endLine="17" length="4" offset="522" startLine="17" starttimestamp="1700582044267" timestamp="288131">
    <text><![CDATA[CCCC]]></text>
  </DocumentChange>
  <DocumentChange __id="230" _type="Insert" date="Tue Nov 21 10:58:53 EST 2023" docASTNodeCount="142" docActiveCodeLength="745" docExpressionCount="105" docLength="745" length="2" offset="534" repeat="2" starttimestamp="1700582044267" timestamp="288849" timestamp2="289029">
    <text><![CDATA[CC]]></text>
  </DocumentChange>
  <DocumentChange __id="234" _type="Delete" date="Tue Nov 21 10:58:53 EST 2023" docASTNodeCount="140" docActiveCodeLength="743" docExpressionCount="104" docLength="743" endLine="17" length="2" offset="534" startLine="17" starttimestamp="1700582044267" timestamp="289629">
    <text><![CDATA[CC]]></text>
  </DocumentChange>
  <DocumentChange __id="237" _type="Insert" date="Tue Nov 21 10:58:54 EST 2023" docASTNodeCount="140" docActiveCodeLength="747" docExpressionCount="104" docLength="747" length="4" offset="522" repeat="4" starttimestamp="1700582044267" timestamp="290530" timestamp2="291045">
    <text><![CDATA[CCCC]]></text>
  </DocumentChange>
  <Command __id="286" _type="MoveCaretCommand" caretOffset="600" date="Tue Nov 21 11:00:13 EST 2023" docOffset="720" starttimestamp="1700582044267" timestamp="368927" />
  <DocumentChange __id="287" _type="Insert" date="Tue Nov 21 11:00:15 EST 2023" docASTNodeCount="142" docActiveCodeLength="752" docExpressionCount="106" docLength="752" length="5" offset="720" repeat="5" starttimestamp="1700582044267" timestamp="371499" timestamp2="372320">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <Command __id="288" _type="InsertStringCommand" date="Tue Nov 21 11:00:15 EST 2023" starttimestamp="1700582044267" timestamp="371504" timestamp2="371504">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="289" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:00:15 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="371515" />
  <Command __id="294" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:00:16 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="372545" />
  <Command __id="296" _type="InsertStringCommand" date="Tue Nov 21 11:00:16 EST 2023" starttimestamp="1700582044267" timestamp="372556" timestamp2="372556">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="297" _type="MoveCaretCommand" caretOffset="379" date="Tue Nov 21 11:00:17 EST 2023" docOffset="499" starttimestamp="1700582044267" timestamp="373497" />
  <Command __id="298" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:00:17 EST 2023" starttimestamp="1700582044267" timestamp="373635" />
  <Command __id="299" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:00:18 EST 2023" starttimestamp="1700582044267" timestamp="373738" />
  <Command __id="300" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:00:18 EST 2023" starttimestamp="1700582044267" timestamp="373752" />
  <Command __id="305" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:00:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="376935" type="Run" />
  <Command __id="306" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:00:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="376935" type="Run" />
  <Command __id="307" _type="ShellCommand" date="Tue Nov 21 11:00:21 EST 2023" starttimestamp="1700582044267" timestamp="377259" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="308" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385677" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="309" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385679" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="310" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385684" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="311" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385685" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="312" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385686" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="313" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385687" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="314" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385702" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="315" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385704" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
BBBB: (COND (NIL 1) ((+ 1 2) 2))
CCCC: ((NIL 1) ((+ 1 2) 2))
CCCC: ((+ 1 2) 2)
AAAA: ((+ 1 2) 2)
(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶BBBB: (COND (NIL 1) ((+ 1 2) 2))¶CCCC: ((NIL 1) ((+ 1 2) 2))¶CCCC: ((+ 1 2) 2)¶AAAA: ((+ 1 2) 2)¶(1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="316" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385705" type="ConsoleOutput">
    <outputString><![CDATA[BBBB: (COND (NIL 1) (T 3))
CCCC: ((NIL 1) (T 3))
CCCC: (T 3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶"), Diff(EQUAL,"BBBB: (COND (NIL 1) ("), Diff(DELETE,"(+ 1 2) 2"), Diff(INSERT,"T 3"), Diff(EQUAL,"))¶CCCC: ((NIL 1) ("), Diff(DELETE,"(+ 1 2) 2"), Diff(INSERT,"T 3"), Diff(EQUAL,"))¶CCCC: ("), Diff(DELETE,"(+ 1 2) 2)¶AAAA: ((+ 1 2) 2)¶(1 2"), Diff(INSERT,"T 3"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="317" _type="ExceptionCommand" date="Tue Nov 21 11:00:29 EST 2023" starttimestamp="1700582044267" timestamp="385705" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="318" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385710" type="ConsoleOutput">
    <outputString><![CDATA[	at index.CondEvaluator.evalHelper(CondEvaluator.java:19)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:23)
	at index.CondEvaluator.eval(CondEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:39)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"BBBB: (COND (NIL 1) (T 3))¶CCCC: ((NIL 1) (T 3))¶CCCC: (T 3"), Diff(INSERT,"	at index.CondEvaluator.evalHelper(CondEvaluator.java:19)¶	at index.CondEvaluator.evalHelper(CondEvaluator.java:23)¶	at index.CondEvaluator.eval(CondEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:39)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="319" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385719" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.CondEvaluator.evalHelper(CondEvaluator.java:19)¶	at index.CondEvaluator.evalHelper(CondEvaluator.java:23)¶	at index.CondEvaluator.eval(CondEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:39)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"27"), Diff(INSERT,"9"), Diff(EQUAL,"0)¶"), Diff(DELETE,"	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)"), Diff(INSERT,"¶Test execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="320" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385724" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (1 2)

Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,


Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90"), Diff(INSERT,"Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (1 2)¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp""), Diff(EQUAL,")¶¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"33"), Diff(INSERT,"1¶Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="321" _type="ConsoleOutput" date="Tue Nov 21 11:00:29 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="385727" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (1 2)¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:ConsTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:QuoteTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:EvalTested"), Diff(DELETE,"Checker,100.0% complete,10.0,10.0,¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:CondTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Encountered an unexpected error, see console for potential fixes¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="322" _type="ExceptionCommand" date="Tue Nov 21 11:00:30 EST 2023" starttimestamp="1700582044267" timestamp="385733" type="Exception">
    <exceptionString><![CDATA[java.lang.IndexOutOfBoundsException: Index 7 out of bounds for length 7
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedCondChecker.test(AbstractFunctionTestedCondChecker.java:80)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="323" _type="ShellCommand" date="Tue Nov 21 11:00:40 EST 2023" starttimestamp="1700582044267" timestamp="396623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="324" _type="LocalChecksRawCommand" date="Tue Nov 21 11:00:40 EST 2023" starttimestamp="1700582044267" timestamp="396628">
    <CSVRow><![CDATA[174,Tue Nov 21 11:00:29 EST 2023,27,-3,LispInterpreterLoadSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker- CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,94,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="325" _type="LocalChecksRawCommand" date="Tue Nov 21 11:00:40 EST 2023" starttimestamp="1700582044267" timestamp="396628">
    <CSVRow><![CDATA[174,Tue Nov 21 11:00:29 EST 2023,27,-3,LispInterpreterLoadSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker- CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,94,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="326" _type="MoveCaretCommand" caretOffset="610" date="Tue Nov 21 11:00:40 EST 2023" docOffset="730" starttimestamp="1700582044267" timestamp="396695" />
  <Command __id="367" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:00:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="410532" type="Run" />
  <Command __id="368" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:00:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="410532" type="Run" />
  <Command __id="369" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412245" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="370" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412247" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="371" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412252" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="372" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412253" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="373" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412253" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="374" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412254" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="375" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412269" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="376" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412271" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
BBBB: (COND (NIL 1) ((+ 1 2) 2))
CCCC: ((NIL 1) ((+ 1 2) 2))
CCCC: (((+ 1 2) 2))
AAAA: (((+ 1 2) 2))
2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶BBBB: (COND (NIL 1) ((+ 1 2) 2))¶CCCC: ((NIL 1) ((+ 1 2) 2))¶CCCC: (((+ 1 2) 2))¶AAAA: (((+ 1 2) 2))¶2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="377" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412271" type="ConsoleOutput">
    <outputString><![CDATA[BBBB: (COND (NIL 1) (T 3))
CCCC: ((NIL 1) (T 3))
CCCC: ((T 3))
AAAA: ((T 3))
3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶"), Diff(EQUAL,"BBBB: (COND (NIL 1) ("), Diff(DELETE,"(+ 1 2) 2"), Diff(INSERT,"T 3"), Diff(EQUAL,"))¶CCCC: ((NIL 1) ("), Diff(DELETE,"(+ 1 2) 2"), Diff(INSERT,"T 3"), Diff(EQUAL,"))¶CCCC: (("), Diff(DELETE,"(+ 1 2) 2"), Diff(INSERT,"T 3"), Diff(EQUAL,"))¶AAAA: (("), Diff(DELETE,"(+ 1 2) 2"), Diff(INSERT,"T 3"), Diff(EQUAL,"))¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="378" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412272" type="ConsoleOutput">
    <outputString><![CDATA[BBBB: (COND (NIL 1) (T (3 4)))
CCCC: ((NIL 1) (T (3 4)))
CCCC: ((T (3 4)))
AAAA: ((T (3 4)))
(3 4)
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"BBBB: (COND (NIL 1) (T "), Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"))¶CCCC: ((NIL 1) (T "), Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"))¶CCCC: ((T "), Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"))¶AAAA: ((T "), Diff(DELETE,"3"), Diff(INSERT,"(3 4"), Diff(EQUAL,"))"), Diff(INSERT,")"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"(3 4)¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="379" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412275" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"BBBB: (COND (NIL 1) (T (3 4)))¶CCCC: ((NIL 1) (T (3 4)))¶CCCC: ((T (3 4)))¶AAAA: ((T (3 4)))¶(3 4)¶T"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="380" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412275" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="381" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412277" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Loa"), Diff(INSERT,"ConsTeste"), Diff(EQUAL,"dChecker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶")]]]></diff>
  </Command>
  <Command __id="382" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412277" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="383" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412279" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="384" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412279" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="385" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412280" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="386" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412281" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="387" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412282" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="388" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412282" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="389" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412283" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="390" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412284" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:Con"), Diff(DELETE,"d"), Diff(INSERT,"s"), Diff(EQUAL,"Tested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="391" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412284" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="392" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412286" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="393" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412286" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="394" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412288" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="395" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412288" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="396" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412289" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="397" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412291" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="398" _type="ConsoleOutput" date="Tue Nov 21 11:00:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="412291" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="295" _type="Replace" date="Tue Nov 21 11:00:16 EST 2023" docASTNodeCount="142" docActiveCodeLength="757" docExpressionCount="106" docLength="757" endLine="22" insertionLength="9" int_docASTNodeCount="141" int_docActiveCodeLength="748" int_docExpressionCount="105" int_docLength="748" length="4" offset="721" startLine="22" starttimestamp="1700582044267" timestamp="372548">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="328" _type="Delete" date="Tue Nov 21 11:00:43 EST 2023" docASTNodeCount="140" docActiveCodeLength="747" docExpressionCount="104" docLength="747" endLine="22" length="10" offset="720" startLine="22" starttimestamp="1700582044267" timestamp="399244">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="335" _type="Insert" date="Tue Nov 21 11:00:45 EST 2023" docASTNodeCount="142" docActiveCodeLength="749" docExpressionCount="106" docLength="749" length="2" offset="673" repeat="2" starttimestamp="1700582044267" timestamp="401621" timestamp2="401772">
    <text><![CDATA[。g]]></text>
  </DocumentChange>
  <DocumentChange __id="338" _type="Replace" date="Tue Nov 21 11:00:46 EST 2023" docASTNodeCount="142" docActiveCodeLength="750" docExpressionCount="106" docLength="750" endLine="20" insertionLength="2" int_docASTNodeCount="140" int_docActiveCodeLength="748" int_docExpressionCount="104" int_docLength="748" length="1" offset="674" startLine="20" starttimestamp="1700582044267" timestamp="401870">
    <deletedText><![CDATA[g]]></deletedText>
    <insertedText><![CDATA[ge]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="339" _type="Replace" date="Tue Nov 21 11:00:46 EST 2023" docASTNodeCount="113" docActiveCodeLength="752" docExpressionCount="82" docLength="752" endLine="20" insertionLength="4" int_docASTNodeCount="140" int_docActiveCodeLength="748" int_docExpressionCount="104" int_docLength="748" length="2" offset="674" startLine="20" starttimestamp="1700582044267" timestamp="401993">
    <deletedText><![CDATA[ge]]></deletedText>
    <insertedText><![CDATA[ge't]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="340" _type="Delete" date="Tue Nov 21 11:00:46 EST 2023" docASTNodeCount="140" docActiveCodeLength="746" docExpressionCount="104" docLength="746" endLine="20" length="6" offset="672" repeat="3" startLine="20" starttimestamp="1700582044267" timestamp="402538" timestamp2="402794">
    <text><![CDATA[)。ge't]]></text>
  </DocumentChange>
  <DocumentChange __id="345" _type="Insert" date="Tue Nov 21 11:00:47 EST 2023" docASTNodeCount="142" docActiveCodeLength="749" docExpressionCount="106" docLength="749" length="3" offset="672" repeat="2" starttimestamp="1700582044267" timestamp="403560" timestamp2="403577">
    <text><![CDATA[)()]]></text>
  </DocumentChange>
  <DocumentChange __id="349" _type="Delete" date="Tue Nov 21 11:00:48 EST 2023" docASTNodeCount="140" docActiveCodeLength="747" docExpressionCount="104" docLength="747" endLine="20" length="2" offset="673" repeat="2" startLine="20" starttimestamp="1700582044267" timestamp="404139" timestamp2="404142">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="352" _type="Insert" date="Tue Nov 21 11:00:48 EST 2023" docASTNodeCount="142" docActiveCodeLength="752" docExpressionCount="106" docLength="752" length="5" offset="673" repeat="5" starttimestamp="1700582044267" timestamp="404463" timestamp2="405280">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="360" _type="Replace" date="Tue Nov 21 11:00:49 EST 2023" docASTNodeCount="142" docActiveCodeLength="757" docExpressionCount="106" docLength="757" endLine="20" insertionLength="9" int_docASTNodeCount="142" int_docActiveCodeLength="748" int_docExpressionCount="106" int_docLength="748" length="4" offset="674" startLine="20" starttimestamp="1700582044267" timestamp="405559">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="399" _type="ShellCommand" date="Tue Nov 21 11:01:14 EST 2023" starttimestamp="1700582044267" timestamp="430401" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="400" _type="MoveCaretCommand" caretOffset="407" date="Tue Nov 21 11:01:14 EST 2023" docOffset="527" starttimestamp="1700582044267" timestamp="430479" />
  <DocumentChange __id="401" _type="Delete" date="Tue Nov 21 11:01:15 EST 2023" docASTNodeCount="133" docActiveCodeLength="718" docExpressionCount="98" docLength="718" endLine="18" length="39" offset="500" startLine="17" starttimestamp="1700582044267" timestamp="431677">
    <text><![CDATA[		System.out.println("CCCC: " + expr);
]]></text>
  </DocumentChange>
  <Command __id="402" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:01:15 EST 2023" starttimestamp="1700582044267" timestamp="431683" />
  <Command __id="403" _type="MoveCaretCommand" caretOffset="456" date="Tue Nov 21 11:01:16 EST 2023" docOffset="576" starttimestamp="1700582044267" timestamp="432144" />
  <DocumentChange __id="404" _type="Delete" date="Tue Nov 21 11:01:16 EST 2023" docASTNodeCount="124" docActiveCodeLength="678" docExpressionCount="90" docLength="678" endLine="19" length="40" offset="560" startLine="18" starttimestamp="1700582044267" timestamp="432260">
    <text><![CDATA[			System.out.println("AAAA: " + expr);
]]></text>
  </DocumentChange>
  <Command __id="405" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:01:16 EST 2023" starttimestamp="1700582044267" timestamp="432261" />
  <Command __id="406" _type="MoveCaretCommand" caretOffset="216" date="Tue Nov 21 11:01:17 EST 2023" docOffset="336" starttimestamp="1700582044267" timestamp="432824" />
  <Command __id="408" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:01:17 EST 2023" starttimestamp="1700582044267" timestamp="432933" />
  <Command __id="409" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:01:17 EST 2023" starttimestamp="1700582044267" timestamp="433342" />
  <Command __id="410" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:01:17 EST 2023" starttimestamp="1700582044267" timestamp="433441" />
  <Command __id="411" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:01:17 EST 2023" starttimestamp="1700582044267" timestamp="433450" />
  <Command __id="412" _type="ShellCommand" date="Tue Nov 21 11:01:18 EST 2023" starttimestamp="1700582044267" timestamp="434344" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="416" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:01:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="437529" type="Run" />
  <Command __id="417" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:01:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="437529" type="Run" />
  <Command __id="418" _type="ShellCommand" date="Tue Nov 21 11:01:22 EST 2023" starttimestamp="1700582044267" timestamp="437837" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="419" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442461" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="420" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442462" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="421" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442467" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="422" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442468" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="423" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442469" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="424" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442470" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="425" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442486" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="426" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442488" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="427" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442488" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="428" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442489" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="429" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442493" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30
Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)¶T"), Diff(INSERT,"Test execution time (ms):30¶Test Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="430" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442493" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3"), Diff(EQUAL,"0¶"), Diff(DELETE,"Test Result:LoadChecker,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="431" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442494" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="432" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442495" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="433" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442496" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="434" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442497" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="435" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442498" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="436" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442499" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="437" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442500" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="438" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442500" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="439" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442502" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="440" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442503" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="441" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442504" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="442" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442504" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="443" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442505" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="444" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442506" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="445" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442507" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="446" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442508" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="447" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442509" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="448" _type="ConsoleOutput" date="Tue Nov 21 11:01:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="442509" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="449" _type="ShellCommand" date="Tue Nov 21 11:01:28 EST 2023" starttimestamp="1700582044267" timestamp="444154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="450" _type="ShellCommand" date="Tue Nov 21 11:01:37 EST 2023" starttimestamp="1700582044267" timestamp="453230" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="451" _type="ShellCommand" date="Tue Nov 21 11:01:38 EST 2023" starttimestamp="1700582044267" timestamp="454689" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="452" _type="ShellCommand" date="Tue Nov 21 11:02:12 EST 2023" starttimestamp="1700582044267" timestamp="487927" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="453" _type="ShellCommand" date="Tue Nov 21 11:02:17 EST 2023" starttimestamp="1700582044267" timestamp="493491" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="454" _type="ShellCommand" date="Tue Nov 21 11:02:18 EST 2023" starttimestamp="1700582044267" timestamp="493766" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="455" _type="ShellCommand" date="Tue Nov 21 11:02:18 EST 2023" starttimestamp="1700582044267" timestamp="494092" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="456" _type="ShellCommand" date="Tue Nov 21 11:02:18 EST 2023" starttimestamp="1700582044267" timestamp="494526" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="457" _type="ShellCommand" date="Tue Nov 21 11:02:36 EST 2023" starttimestamp="1700582044267" timestamp="512259" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="458" _type="ShellCommand" date="Tue Nov 21 11:02:37 EST 2023" starttimestamp="1700582044267" timestamp="512822" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="459" _type="ShellCommand" date="Tue Nov 21 11:02:37 EST 2023" starttimestamp="1700582044267" timestamp="513046" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="460" _type="ShellCommand" date="Tue Nov 21 11:02:38 EST 2023" starttimestamp="1700582044267" timestamp="514443" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="461" _type="ShellCommand" date="Tue Nov 21 11:02:52 EST 2023" starttimestamp="1700582044267" timestamp="528229" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="462" _type="ShellCommand" date="Tue Nov 21 11:02:55 EST 2023" starttimestamp="1700582044267" timestamp="531723" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="463" _type="ShellCommand" date="Tue Nov 21 11:03:15 EST 2023" starttimestamp="1700582044267" timestamp="551479" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="464" _type="ShellCommand" date="Tue Nov 21 11:03:23 EST 2023" starttimestamp="1700582044267" timestamp="559621" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="465" _type="ShellCommand" date="Tue Nov 21 11:03:28 EST 2023" starttimestamp="1700582044267" timestamp="563942" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="466" _type="ShellCommand" date="Tue Nov 21 11:03:41 EST 2023" starttimestamp="1700582044267" timestamp="577070" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="467" _type="ShellCommand" date="Tue Nov 21 11:03:48 EST 2023" starttimestamp="1700582044267" timestamp="584489" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="468" _type="ShellCommand" date="Tue Nov 21 11:03:53 EST 2023" starttimestamp="1700582044267" timestamp="589506" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="407" _type="Delete" date="Tue Nov 21 11:01:17 EST 2023" docASTNodeCount="115" docActiveCodeLength="639" docExpressionCount="82" docLength="639" endLine="12" length="39" offset="308" startLine="11" starttimestamp="1700582044267" timestamp="432932">
    <text><![CDATA[		System.out.println("BBBB: " + expr);
]]></text>
  </DocumentChange>
  <Command __id="470" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:03 EST 2023" docASTNodeCount="69" docActiveCodeLength="377" docExpressionCount="51" docLength="377" projectName="Assignment5" starttimestamp="1700582044267" timestamp="598986">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail().getHead().eval(environment);
	}

}
]]></snapshot>
  </Command>
  <Command __id="472" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:04 EST 2023" docASTNodeCount="90" docActiveCodeLength="787" docExpressionCount="63" docLength="787" projectName="Assignment5" starttimestamp="1700582044267" timestamp="600358">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="469" _type="ShellCommand" date="Tue Nov 21 11:04:03 EST 2023" starttimestamp="1700582044267" timestamp="598843" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="471" _type="MoveCaretCommand" caretOffset="104" date="Tue Nov 21 11:04:03 EST 2023" docOffset="234" starttimestamp="1700582044267" timestamp="599032" />
  <Command __id="473" _type="MoveCaretCommand" caretOffset="726" date="Tue Nov 21 11:04:04 EST 2023" docOffset="787" starttimestamp="1700582044267" timestamp="600441" />
  <Command __id="475" _type="MoveCaretCommand" caretOffset="42" date="Tue Nov 21 11:04:06 EST 2023" docOffset="42" starttimestamp="1700582044267" timestamp="602171" />
  <Command __id="477" _type="MoveCaretCommand" caretOffset="726" date="Tue Nov 21 11:04:07 EST 2023" docOffset="787" starttimestamp="1700582044267" timestamp="603170" />
  <Command __id="478" _type="MoveCaretCommand" caretOffset="722" date="Tue Nov 21 11:04:08 EST 2023" docOffset="783" starttimestamp="1700582044267" timestamp="604060" />
  <Command __id="479" _type="MoveCaretCommand" caretOffset="715" date="Tue Nov 21 11:04:08 EST 2023" docOffset="776" starttimestamp="1700582044267" timestamp="604408" />
  <Command __id="480" _type="MoveCaretCommand" caretOffset="619" date="Tue Nov 21 11:04:09 EST 2023" docOffset="680" starttimestamp="1700582044267" timestamp="605468" />
  <Command __id="481" _type="MoveCaretCommand" caretOffset="631" date="Tue Nov 21 11:04:10 EST 2023" docOffset="692" starttimestamp="1700582044267" timestamp="605995" />
  <Command __id="483" _type="MoveCaretCommand" caretOffset="42" date="Tue Nov 21 11:04:10 EST 2023" docOffset="42" starttimestamp="1700582044267" timestamp="606699" />
  <Command __id="474" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:06 EST 2023" docASTNodeCount="260" docActiveCodeLength="1675" docExpressionCount="125" docLength="2185" projectName="Assignment5" starttimestamp="1700582044267" timestamp="602113">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="476" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:07 EST 2023" docASTNodeCount="90" docActiveCodeLength="787" docExpressionCount="63" docLength="787" projectName="Assignment5" starttimestamp="1700582044267" timestamp="603126">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="482" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:10 EST 2023" docASTNodeCount="260" docActiveCodeLength="1675" docExpressionCount="125" docLength="2185" projectName="Assignment5" starttimestamp="1700582044267" timestamp="606651">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="484" _type="MoveCaretCommand" caretOffset="490" date="Tue Nov 21 11:04:22 EST 2023" docOffset="490" starttimestamp="1700582044267" timestamp="618377" />
  <Command __id="485" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:23 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="619422">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="486" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:04:23 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="619477" />
  <Command __id="487" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:25 EST 2023" docASTNodeCount="260" docActiveCodeLength="1675" docExpressionCount="125" docLength="2185" projectName="Assignment5" starttimestamp="1700582044267" timestamp="621139">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="488" _type="MoveCaretCommand" caretOffset="490" date="Tue Nov 21 11:04:25 EST 2023" docOffset="490" starttimestamp="1700582044267" timestamp="621184" />
  <Command __id="490" _type="MoveCaretCommand" caretOffset="631" date="Tue Nov 21 11:04:25 EST 2023" docOffset="692" starttimestamp="1700582044267" timestamp="621586" />
  <Command __id="491" _type="ShellCommand" date="Tue Nov 21 11:04:26 EST 2023" starttimestamp="1700582044267" timestamp="622258" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="492" _type="ShellCommand" date="Tue Nov 21 11:04:39 EST 2023" starttimestamp="1700582044267" timestamp="635444" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="489" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:25 EST 2023" docASTNodeCount="90" docActiveCodeLength="787" docExpressionCount="63" docLength="787" projectName="Assignment5" starttimestamp="1700582044267" timestamp="621536">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="493" _type="MoveCaretCommand" caretOffset="719" date="Tue Nov 21 11:04:40 EST 2023" docOffset="780" starttimestamp="1700582044267" timestamp="636577" />
  <Command __id="494" _type="MoveCaretCommand" caretOffset="700" date="Tue Nov 21 11:04:41 EST 2023" docOffset="761" starttimestamp="1700582044267" timestamp="636901" />
  <Command __id="495" _type="MoveCaretCommand" caretOffset="722" date="Tue Nov 21 11:04:41 EST 2023" docOffset="783" starttimestamp="1700582044267" timestamp="637249" />
  <Command __id="496" _type="MoveCaretCommand" caretOffset="700" date="Tue Nov 21 11:04:41 EST 2023" docOffset="761" starttimestamp="1700582044267" timestamp="637532" />
  <Command __id="497" _type="MoveCaretCommand" caretOffset="722" date="Tue Nov 21 11:04:42 EST 2023" docOffset="783" starttimestamp="1700582044267" timestamp="637781" />
  <Command __id="498" _type="MoveCaretCommand" caretOffset="700" date="Tue Nov 21 11:04:42 EST 2023" docOffset="761" starttimestamp="1700582044267" timestamp="638090" />
  <Command __id="499" _type="MoveCaretCommand" caretOffset="722" date="Tue Nov 21 11:04:42 EST 2023" docOffset="783" starttimestamp="1700582044267" timestamp="638326" />
  <Command __id="500" _type="MoveCaretCommand" caretOffset="700" date="Tue Nov 21 11:04:42 EST 2023" docOffset="761" starttimestamp="1700582044267" timestamp="638622" />
  <Command __id="501" _type="MoveCaretCommand" caretOffset="719" date="Tue Nov 21 11:04:43 EST 2023" docOffset="780" starttimestamp="1700582044267" timestamp="638872" />
  <Command __id="502" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:44 EST 2023" docASTNodeCount="69" docActiveCodeLength="377" docExpressionCount="51" docLength="377" projectName="Assignment5" starttimestamp="1700582044267" timestamp="639958">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().getHead().eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="503" _type="MoveCaretCommand" caretOffset="104" date="Tue Nov 21 11:04:44 EST 2023" docOffset="234" starttimestamp="1700582044267" timestamp="639995" />
  <Command __id="505" _type="MoveCaretCommand" caretOffset="188" date="Tue Nov 21 11:04:44 EST 2023" docOffset="308" starttimestamp="1700582044267" timestamp="640689" />
  <Command __id="506" _type="MoveCaretCommand" caretOffset="340" date="Tue Nov 21 11:04:47 EST 2023" docOffset="460" starttimestamp="1700582044267" timestamp="643000" />
  <Command __id="507" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 11:04:47 EST 2023" docOffset="520" starttimestamp="1700582044267" timestamp="643543" />
  <Command __id="508" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 11:04:48 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="644145" />
  <Command __id="509" _type="MoveCaretCommand" caretOffset="456" date="Tue Nov 21 11:04:48 EST 2023" docOffset="576" starttimestamp="1700582044267" timestamp="644439" />
  <Command __id="510" _type="MoveCaretCommand" caretOffset="511" date="Tue Nov 21 11:04:49 EST 2023" docOffset="631" starttimestamp="1700582044267" timestamp="645271" />
  <Command __id="511" _type="MoveCaretCommand" caretOffset="456" date="Tue Nov 21 11:04:49 EST 2023" docOffset="576" starttimestamp="1700582044267" timestamp="645671" />
  <Command __id="512" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 11:04:50 EST 2023" docOffset="520" starttimestamp="1700582044267" timestamp="646044" />
  <Command __id="513" _type="MoveCaretCommand" caretOffset="340" date="Tue Nov 21 11:04:50 EST 2023" docOffset="460" starttimestamp="1700582044267" timestamp="646634" />
  <Command __id="514" _type="ShellCommand" date="Tue Nov 21 11:04:52 EST 2023" starttimestamp="1700582044267" timestamp="648122" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="515" _type="ShellCommand" date="Tue Nov 21 11:04:53 EST 2023" starttimestamp="1700582044267" timestamp="648820" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="516" _type="ShellCommand" date="Tue Nov 21 11:05:13 EST 2023" starttimestamp="1700582044267" timestamp="669439" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="517" _type="ShellCommand" date="Tue Nov 21 11:05:20 EST 2023" starttimestamp="1700582044267" timestamp="676177" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="518" _type="ShellCommand" date="Tue Nov 21 11:05:25 EST 2023" starttimestamp="1700582044267" timestamp="680989" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="523" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:05:37 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="693180" type="Run" />
  <Command __id="524" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:05:37 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="693180" type="Run" />
  <Command __id="525" _type="ShellCommand" date="Tue Nov 21 11:05:37 EST 2023" starttimestamp="1700582044267" timestamp="693189" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="526" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:05:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="694128" type="Run" />
  <Command __id="527" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:05:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="694128" type="Run" />
  <Command __id="528" _type="ShellCommand" date="Tue Nov 21 11:05:38 EST 2023" starttimestamp="1700582044267" timestamp="694440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="529" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="696981" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="530" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="696982" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="531" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="696988" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="532" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="696989" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="533" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="696989" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="534" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="696989" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="535" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697004" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="536" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697007" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶T"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="537" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697008" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="538" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697009" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="539" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697009" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to CONS
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file a call to CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="540" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697010" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to CONS"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="541" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697011" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file a call to QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="542" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697011" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to QUOTE"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="543" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697013" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST¶¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="544" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697013" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to EVAL

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to "), Diff(DELETE,"LIST¶¶¶Test execution time (ms):0"), Diff(INSERT,"EVAL¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="545" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697014" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to EVAL¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="546" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697014" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to COND
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to COND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="547" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697015" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to COND"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="548" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697015" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="549" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697016" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of CONS"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="550" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697016" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="551" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697017" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of QUOTE"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="552" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697017" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="553" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697018" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of LIST"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="554" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697020" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL¶¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="555" _type="ConsoleOutput" date="Tue Nov 21 11:05:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="697020" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Cond"), Diff(EQUAL,"Tested"), Diff(DELETE,"Two"), Diff(EQUAL,"ResultsChecker,0.0% complete,0.0,"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"0.0,Expecting in test file "), Diff(DELETE,"two"), Diff(INSERT,"3 or more"), Diff(EQUAL," results of "), Diff(DELETE,"EVAL¶¶¶Test execution time (ms):0"), Diff(INSERT,"CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="557" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:05:57 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="713178" type="Run" />
  <Command __id="558" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:05:57 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="713178" type="Run" />
  <Command __id="560" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:06:01 EST 2023" starttimestamp="1700582044267" timestamp="717410" />
  <Command __id="561" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:06:01 EST 2023" starttimestamp="1700582044267" timestamp="717412" />
  <Command __id="562" _type="ShellCommand" date="Tue Nov 21 11:06:03 EST 2023" starttimestamp="1700582044267" timestamp="718751" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="563" _type="ShellCommand" date="Tue Nov 21 11:06:06 EST 2023" starttimestamp="1700582044267" timestamp="722109" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="564" _type="ShellCommand" date="Tue Nov 21 11:06:07 EST 2023" starttimestamp="1700582044267" timestamp="723645" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="565" _type="ShellCommand" date="Tue Nov 21 11:06:08 EST 2023" starttimestamp="1700582044267" timestamp="724099" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="566" _type="ShellCommand" date="Tue Nov 21 11:06:45 EST 2023" starttimestamp="1700582044267" timestamp="761523" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="567" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:06:46 EST 2023" starttimestamp="1700582044267" timestamp="762388" />
  <Command __id="568" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:06:46 EST 2023" starttimestamp="1700582044267" timestamp="762391" />
  <Command __id="569" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:06:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="762743" type="Run" />
  <Command __id="570" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:06:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="762743" type="Run" />
  <Command __id="571" _type="ShellCommand" date="Tue Nov 21 11:06:47 EST 2023" starttimestamp="1700582044267" timestamp="763149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="572" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765434" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="573" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765435" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="574" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765445" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="575" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765446" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):9"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="576" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765446" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="577" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765446" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):11"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="578" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765464" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="579" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765465" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="580" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765466" type="ConsoleOutput">
    <outputString><![CDATA[2
3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2¶3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="581" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765466" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="582" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765467" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="583" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765469" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:17)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:20)
	at index.CondEvaluator.eval(CondEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:39)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)¶	at index.CondEvaluator.evalHelper(CondEvaluator.java:17)¶	at index.CondEvaluator.evalHelper(CondEvaluator.java:20)¶	at index.CondEvaluator.eval(CondEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:39)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="584" _type="ConsoleOutput" date="Tue Nov 21 11:06:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="765522" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.Atom.getHead(Atom"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"index.CondEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".evalHelper(CondEvaluato"), Diff(INSERT,"g.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"1"), Diff(EQUAL,"7"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.CondEvalu"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".evalHelper(CondEvaluato"), Diff(INSERT,"g.junit.runners.ParentRunner$3.run(ParentRunne"), Diff(EQUAL,"r.java:2"), Diff(INSERT,"9"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"index.CondEvaluator.eval(CondEvaluato"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunne"), Diff(EQUAL,"r.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".eval(BasicExpressionEvaluato"), Diff(INSERT,"g.junit.runners.ParentRunner.access$000(ParentRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"16"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(EQUAL,".java:26"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(INSERT,"31"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(EQUAL,".java:3"), Diff(DELETE,"9"), Diff(INSERT,"48"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"21"), Diff(EQUAL,"9)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"9"), Diff(INSERT,"538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallabl"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"12"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"85"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="585" _type="ExceptionCommand" date="Tue Nov 21 11:06:49 EST 2023" starttimestamp="1700582044267" timestamp="765530" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):38
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)

Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:CondTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,

java.lang.IndexOutOfBoundsException: Index 9 out of bounds for length 9
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedCondChecker.test(AbstractFunctionTestedCondChecker.java:80)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="586" _type="ShellCommand" date="Tue Nov 21 11:07:02 EST 2023" starttimestamp="1700582044267" timestamp="778286" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="587" _type="LocalChecksRawCommand" date="Tue Nov 21 11:07:02 EST 2023" starttimestamp="1700582044267" timestamp="778294">
    <CSVRow><![CDATA[178,Tue Nov 21 11:06:49 EST 2023,28,13,LispInterpreterLoadSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker+ ConsTestedChecker+ ConsTestedTwoResultsChecker+ EvalTestedChecker+ EvalTestedTwoResultsChecker+ ListTestedChecker+ ListTestedTwoResultsChecker+ ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided QuoteTestedChecker+ QuoteTestedTwoResultsChecker+ TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,98,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="588" _type="LocalChecksRawCommand" date="Tue Nov 21 11:07:02 EST 2023" starttimestamp="1700582044267" timestamp="778294">
    <CSVRow><![CDATA[178,Tue Nov 21 11:06:49 EST 2023,28,13,LispInterpreterLoadSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker+ ConsTestedChecker+ ConsTestedTwoResultsChecker+ EvalTestedChecker+ EvalTestedTwoResultsChecker+ ListTestedChecker+ ListTestedTwoResultsChecker+ ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided QuoteTestedChecker+ QuoteTestedTwoResultsChecker+ TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,98,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="589" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 11:07:02 EST 2023" docOffset="520" starttimestamp="1700582044267" timestamp="778357" />
  <Command __id="504" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:04:44 EST 2023" docASTNodeCount="115" docActiveCodeLength="639" docExpressionCount="82" docLength="639" projectName="Assignment5" starttimestamp="1700582044267" timestamp="640647">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(!expr.getHead().getHead().eval(environment).isNIL()) {			"), Diff(DELETE,"System.out.println("AAAA: " + expr);			"), Diff(EQUAL,"return expr.getHead().getTail()"), Diff(INSERT,".getHead()"), Diff(EQUAL,";		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(!expr.getHead().getHead().eval(environment).isNIL()) {
			return expr.getHead().getTail().getHead();
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="590" _type="MoveCaretCommand" caretOffset="435" date="Tue Nov 21 11:07:04 EST 2023" docOffset="555" starttimestamp="1700582044267" timestamp="780232" />
  <Command __id="591" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 11:07:05 EST 2023" docOffset="520" starttimestamp="1700582044267" timestamp="780924" />
  <DocumentChange __id="592" _type="Insert" date="Tue Nov 21 11:07:07 EST 2023" docASTNodeCount="117" docActiveCodeLength="644" docExpressionCount="83" docLength="644" length="5" offset="520" repeat="2" starttimestamp="1700582044267" timestamp="782997" timestamp2="783246">
    <text><![CDATA[
			i]]></text>
  </DocumentChange>
  <Command __id="593" _type="InsertStringCommand" date="Tue Nov 21 11:07:07 EST 2023" starttimestamp="1700582044267" timestamp="783002" timestamp2="783002">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="595" _type="Replace" date="Tue Nov 21 11:07:07 EST 2023" docASTNodeCount="115" docActiveCodeLength="645" docExpressionCount="82" docLength="645" endLine="17" insertionLength="2" int_docASTNodeCount="115" int_docActiveCodeLength="643" int_docExpressionCount="82" int_docLength="643" length="1" offset="524" startLine="17" starttimestamp="1700582044267" timestamp="783333">
    <deletedText><![CDATA[i]]></deletedText>
    <insertedText><![CDATA[if]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="596" _type="Replace" date="Tue Nov 21 11:07:07 EST 2023" docASTNodeCount="115" docActiveCodeLength="646" docExpressionCount="82" docLength="646" endLine="17" insertionLength="3" int_docASTNodeCount="115" int_docActiveCodeLength="643" int_docExpressionCount="82" int_docLength="643" length="2" offset="524" startLine="17" starttimestamp="1700582044267" timestamp="783438">
    <deletedText><![CDATA[if]]></deletedText>
    <insertedText><![CDATA[if(]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="597" _type="Delete" date="Tue Nov 21 11:07:08 EST 2023" docASTNodeCount="115" docActiveCodeLength="643" docExpressionCount="82" docLength="643" endLine="17" length="3" offset="524" startLine="17" starttimestamp="1700582044267" timestamp="784140">
    <text><![CDATA[if(]]></text>
  </DocumentChange>
  <DocumentChange __id="598" _type="Insert" date="Tue Nov 21 11:07:09 EST 2023" docASTNodeCount="119" docActiveCodeLength="656" docExpressionCount="85" docLength="656" length="13" offset="524" repeat="12" starttimestamp="1700582044267" timestamp="784804" timestamp2="787713">
    <text><![CDATA[if(expr.getH)]]></text>
  </DocumentChange>
  <Command __id="599" _type="InsertStringCommand" date="Tue Nov 21 11:07:09 EST 2023" starttimestamp="1700582044267" timestamp="784806" timestamp2="784806">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="601" _type="InsertStringCommand" date="Tue Nov 21 11:07:09 EST 2023" starttimestamp="1700582044267" timestamp="784866" timestamp2="784866">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="603" _type="InsertStringCommand" date="Tue Nov 21 11:07:09 EST 2023" starttimestamp="1700582044267" timestamp="784997" timestamp2="784997">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="605" _type="InsertStringCommand" date="Tue Nov 21 11:07:10 EST 2023" starttimestamp="1700582044267" timestamp="785796" timestamp2="785796">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="607" _type="InsertStringCommand" date="Tue Nov 21 11:07:10 EST 2023" starttimestamp="1700582044267" timestamp="786017" timestamp2="786017">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="609" _type="InsertStringCommand" date="Tue Nov 21 11:07:10 EST 2023" starttimestamp="1700582044267" timestamp="786174" timestamp2="786174">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="611" _type="InsertStringCommand" date="Tue Nov 21 11:07:10 EST 2023" starttimestamp="1700582044267" timestamp="786533" timestamp2="786533">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="613" _type="InsertStringCommand" date="Tue Nov 21 11:07:11 EST 2023" starttimestamp="1700582044267" timestamp="786736" timestamp2="786736">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="614" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:07:11 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="786742" />
  <Command __id="619" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:07:12 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="788144" />
  <DocumentChange __id="620" _type="Replace" date="Tue Nov 21 11:07:12 EST 2023" docASTNodeCount="119" docActiveCodeLength="661" docExpressionCount="85" docLength="661" endLine="17" insertionLength="9" int_docASTNodeCount="119" int_docActiveCodeLength="652" int_docExpressionCount="84" int_docLength="652" length="4" offset="532" startLine="17" starttimestamp="1700582044267" timestamp="788148">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="621" _type="InsertStringCommand" date="Tue Nov 21 11:07:12 EST 2023" starttimestamp="1700582044267" timestamp="788153" timestamp2="788153">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="622" _type="Insert" date="Tue Nov 21 11:07:13 EST 2023" docASTNodeCount="121" docActiveCodeLength="666" docExpressionCount="87" docLength="666" length="5" offset="541" repeat="5" starttimestamp="1700582044267" timestamp="788831" timestamp2="789451">
    <text><![CDATA[.getT]]></text>
  </DocumentChange>
  <Command __id="623" _type="InsertStringCommand" date="Tue Nov 21 11:07:13 EST 2023" starttimestamp="1700582044267" timestamp="788832" timestamp2="788832">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="624" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:07:13 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="788838" />
  <Command __id="629" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:07:13 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="789702" />
  <DocumentChange __id="630" _type="Replace" date="Tue Nov 21 11:07:13 EST 2023" docASTNodeCount="121" docActiveCodeLength="671" docExpressionCount="87" docLength="671" endLine="17" insertionLength="9" int_docASTNodeCount="121" int_docActiveCodeLength="662" int_docExpressionCount="87" int_docLength="662" length="4" offset="542" startLine="17" starttimestamp="1700582044267" timestamp="789706">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="631" _type="InsertStringCommand" date="Tue Nov 21 11:07:13 EST 2023" starttimestamp="1700582044267" timestamp="789712" timestamp2="789712">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="632" _type="Insert" date="Tue Nov 21 11:07:14 EST 2023" docASTNodeCount="123" docActiveCodeLength="674" docExpressionCount="89" docLength="674" length="3" offset="551" repeat="3" starttimestamp="1700582044267" timestamp="790201" timestamp2="791124">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <Command __id="633" _type="InsertStringCommand" date="Tue Nov 21 11:07:14 EST 2023" starttimestamp="1700582044267" timestamp="790202" timestamp2="790202">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="634" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:07:14 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="790209" />
  <Command __id="637" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:07:16 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="792077" />
  <Command __id="639" _type="InsertStringCommand" date="Tue Nov 21 11:07:16 EST 2023" starttimestamp="1700582044267" timestamp="792086" timestamp2="792086">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="638" _type="Replace" date="Tue Nov 21 11:07:16 EST 2023" docASTNodeCount="123" docActiveCodeLength="680" docExpressionCount="89" docLength="680" endLine="17" insertionLength="8" int_docASTNodeCount="123" int_docActiveCodeLength="672" int_docExpressionCount="89" int_docLength="672" length="2" offset="552" startLine="17" starttimestamp="1700582044267" timestamp="792080">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="641" _type="Insert" date="Tue Nov 21 11:07:18 EST 2023" docASTNodeCount="125" docActiveCodeLength="699" docExpressionCount="89" docLength="699" length="19" offset="561" repeat="9" starttimestamp="1700582044267" timestamp="794286" timestamp2="795441">
    <text><![CDATA[ {
				return 
			}]]></text>
  </DocumentChange>
  <Command __id="640" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:07:17 EST 2023" starttimestamp="1700582044267" timestamp="793496" />
  <Command __id="642" _type="InsertStringCommand" date="Tue Nov 21 11:07:18 EST 2023" starttimestamp="1700582044267" timestamp="794287" timestamp2="794287">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="644" _type="InsertStringCommand" date="Tue Nov 21 11:07:18 EST 2023" starttimestamp="1700582044267" timestamp="794465" timestamp2="794465">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="646" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="794855" timestamp2="794855">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="648" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="794917" timestamp2="794917">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="650" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="795035" timestamp2="795035">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="652" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="795129" timestamp2="795129">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="654" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="795220" timestamp2="795220">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="656" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="795299" timestamp2="795299">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="658" _type="InsertStringCommand" date="Tue Nov 21 11:07:19 EST 2023" starttimestamp="1700582044267" timestamp="795443" timestamp2="795443">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="660" _type="InsertStringCommand" date="Tue Nov 21 11:07:22 EST 2023" starttimestamp="1700582044267" timestamp="798078" timestamp2="798078">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="662" _type="InsertStringCommand" date="Tue Nov 21 11:07:22 EST 2023" starttimestamp="1700582044267" timestamp="798292" timestamp2="798292">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="664" _type="InsertStringCommand" date="Tue Nov 21 11:07:22 EST 2023" starttimestamp="1700582044267" timestamp="798425" timestamp2="798425">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="666" _type="InsertStringCommand" date="Tue Nov 21 11:07:22 EST 2023" starttimestamp="1700582044267" timestamp="798517" timestamp2="798517">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="668" _type="InsertStringCommand" date="Tue Nov 21 11:07:22 EST 2023" starttimestamp="1700582044267" timestamp="798632" timestamp2="798632">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="669" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:07:22 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="798639" />
  <Command __id="674" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:07:23 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="799336" />
  <Command __id="676" _type="InsertStringCommand" date="Tue Nov 21 11:07:23 EST 2023" starttimestamp="1700582044267" timestamp="799345" timestamp2="799345">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="678" _type="InsertStringCommand" date="Tue Nov 21 11:07:23 EST 2023" starttimestamp="1700582044267" timestamp="799594" timestamp2="799594">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="679" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:07:23 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="799601" />
  <Command __id="684" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:07:25 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="800840" />
  <Command __id="686" _type="InsertStringCommand" date="Tue Nov 21 11:07:25 EST 2023" starttimestamp="1700582044267" timestamp="800844" timestamp2="800844">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="688" _type="InsertStringCommand" date="Tue Nov 21 11:07:25 EST 2023" starttimestamp="1700582044267" timestamp="801061" timestamp2="801061">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="659" _type="Insert" date="Tue Nov 21 11:07:22 EST 2023" docASTNodeCount="128" docActiveCodeLength="708" docExpressionCount="92" docLength="708" length="9" offset="575" repeat="9" starttimestamp="1700582044267" timestamp="798075" timestamp2="799170">
    <text><![CDATA[expr.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="675" _type="Replace" date="Tue Nov 21 11:07:23 EST 2023" docASTNodeCount="128" docActiveCodeLength="713" docExpressionCount="92" docLength="713" endLine="18" insertionLength="9" int_docASTNodeCount="126" int_docActiveCodeLength="704" int_docExpressionCount="90" int_docLength="704" length="4" offset="580" startLine="18" starttimestamp="1700582044267" timestamp="799340">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="677" _type="Insert" date="Tue Nov 21 11:07:23 EST 2023" docASTNodeCount="130" docActiveCodeLength="718" docExpressionCount="94" docLength="718" length="5" offset="589" repeat="5" starttimestamp="1700582044267" timestamp="799590" timestamp2="800626">
    <text><![CDATA[.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="685" _type="Replace" date="Tue Nov 21 11:07:25 EST 2023" docASTNodeCount="130" docActiveCodeLength="723" docExpressionCount="94" docLength="723" endLine="18" insertionLength="9" int_docASTNodeCount="128" int_docActiveCodeLength="714" int_docExpressionCount="92" int_docLength="714" length="4" offset="590" startLine="18" starttimestamp="1700582044267" timestamp="800841">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="687" _type="Insert" date="Tue Nov 21 11:07:25 EST 2023" docASTNodeCount="130" docActiveCodeLength="724" docExpressionCount="94" docLength="724" length="1" offset="599" starttimestamp="1700582044267" timestamp="801058">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="689" _type="MoveCaretCommand" caretOffset="485" date="Tue Nov 21 11:07:26 EST 2023" docOffset="605" starttimestamp="1700582044267" timestamp="802424" />
  <Command __id="691" _type="InsertStringCommand" date="Tue Nov 21 11:07:27 EST 2023" starttimestamp="1700582044267" timestamp="802924" timestamp2="802924">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="693" _type="InsertStringCommand" date="Tue Nov 21 11:07:27 EST 2023" starttimestamp="1700582044267" timestamp="803031" timestamp2="803031">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="695" _type="InsertStringCommand" date="Tue Nov 21 11:07:27 EST 2023" starttimestamp="1700582044267" timestamp="803076" timestamp2="803076">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="697" _type="InsertStringCommand" date="Tue Nov 21 11:07:27 EST 2023" starttimestamp="1700582044267" timestamp="803167" timestamp2="803167">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="699" _type="InsertStringCommand" date="Tue Nov 21 11:07:28 EST 2023" starttimestamp="1700582044267" timestamp="804247" timestamp2="804247">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="701" _type="InsertStringCommand" date="Tue Nov 21 11:07:28 EST 2023" starttimestamp="1700582044267" timestamp="804440" timestamp2="804440">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="702" _type="MoveCaretCommand" caretOffset="547" date="Tue Nov 21 11:07:29 EST 2023" docOffset="667" starttimestamp="1700582044267" timestamp="805584" />
  <Command __id="703" _type="InsertStringCommand" date="Tue Nov 21 11:07:30 EST 2023" starttimestamp="1700582044267" timestamp="805840" timestamp2="805840">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="704" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:07:31 EST 2023" starttimestamp="1700582044267" timestamp="806759" />
  <Command __id="705" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:07:31 EST 2023" starttimestamp="1700582044267" timestamp="806860" />
  <Command __id="706" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:07:31 EST 2023" starttimestamp="1700582044267" timestamp="806869" />
  <Command __id="707" _type="SelectTextCommand" caretOffset="505" date="Tue Nov 21 11:07:32 EST 2023" end="547" start="505" starttimestamp="1700582044267" timestamp="808708" />
  <Command __id="709" _type="CutCommand" date="Tue Nov 21 11:07:33 EST 2023" starttimestamp="1700582044267" timestamp="808857" />
  <Command __id="710" _type="MoveCaretCommand" caretOffset="496" date="Tue Nov 21 11:07:33 EST 2023" docOffset="616" starttimestamp="1700582044267" timestamp="809181" />
  <Command __id="712" _type="PasteCommand" date="Tue Nov 21 11:07:33 EST 2023" starttimestamp="1700582044267" timestamp="809329" />
  <Command __id="713" _type="SelectTextCommand" caretOffset="547" date="Tue Nov 21 11:07:34 EST 2023" end="547" start="543" starttimestamp="1700582044267" timestamp="810037" />
  <Command __id="714" _type="MoveCaretCommand" caretOffset="547" date="Tue Nov 21 11:07:34 EST 2023" docOffset="667" starttimestamp="1700582044267" timestamp="810324" />
  <Command __id="716" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:07:35 EST 2023" starttimestamp="1700582044267" timestamp="810932" />
  <Command __id="718" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:07:35 EST 2023" starttimestamp="1700582044267" timestamp="811280" />
  <Command __id="720" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:07:35 EST 2023" starttimestamp="1700582044267" timestamp="811427" />
  <Command __id="722" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:07:35 EST 2023" starttimestamp="1700582044267" timestamp="811686" />
  <Command __id="723" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:07:36 EST 2023" starttimestamp="1700582044267" timestamp="812089" />
  <Command __id="724" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:07:36 EST 2023" starttimestamp="1700582044267" timestamp="812187" />
  <Command __id="725" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:07:36 EST 2023" starttimestamp="1700582044267" timestamp="812194" />
  <Command __id="726" _type="ShellCommand" date="Tue Nov 21 11:07:37 EST 2023" starttimestamp="1700582044267" timestamp="813444" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="727" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:07:37 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="813645" type="Run" />
  <Command __id="728" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:07:37 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="813645" type="Run" />
  <Command __id="729" _type="ShellCommand" date="Tue Nov 21 11:07:37 EST 2023" starttimestamp="1700582044267" timestamp="813650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="730" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:07:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="814433" type="Run" />
  <Command __id="731" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:07:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="814433" type="Run" />
  <Command __id="732" _type="ShellCommand" date="Tue Nov 21 11:07:39 EST 2023" starttimestamp="1700582044267" timestamp="814753" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="733" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817130" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="734" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817132" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="735" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817136" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="736" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817138" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="737" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817154" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="738" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817155" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="739" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817155" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="740" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817156" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="741" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817157" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="742" _type="ExceptionCommand" date="Tue Nov 21 11:07:41 EST 2023" starttimestamp="1700582044267" timestamp="817158" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:17)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:24)
	at index.CondEvaluator.eval(CondEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:39)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="743" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817159" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4"), Diff(INSERT,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="744" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817171" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.reflect"), Diff(INSERT,"bus.uigen.controller"), Diff(EQUAL,".Method"), Diff(DELETE,".i"), Diff(INSERT,"I"), Diff(EQUAL,"nvo"), Diff(DELETE,"ke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"cationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"91"), Diff(INSERT,"406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvo"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClic"), Diff(EQUAL,"ke"), Diff(INSERT,"d"), Diff(EQUAL,"(A"), Diff(DELETE,"VirtualMethod"), Diff(INSERT,"WTEventMulticaster"), Diff(EQUAL,".java:27"), Diff(DELETE,"0"), Diff(INSERT,"8"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="745" _type="ConsoleOutput" date="Tue Nov 21 11:07:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="817197" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):34
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)

Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"219"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1444"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"190"), Diff(INSERT,"455"), Diff(EQUAL,"6)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"7"), Diff(EQUAL,"15"), Diff(DELETE,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"153"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1531"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1406"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(INSERT,"1"), Diff(EQUAL,"3"), Diff(DELETE,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"469"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:278)"), Diff(INSERT,"DispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):34¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="746" _type="ExceptionCommand" date="Tue Nov 21 11:07:41 EST 2023" starttimestamp="1700582044267" timestamp="817202" type="Exception">
    <exceptionString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:CondTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,

java.lang.IndexOutOfBoundsException: Index 9 out of bounds for length 9
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedCondChecker.test(AbstractFunctionTestedCondChecker.java:80)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="747" _type="ShellCommand" date="Tue Nov 21 11:07:53 EST 2023" starttimestamp="1700582044267" timestamp="829386" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="748" _type="LocalChecksRawCommand" date="Tue Nov 21 11:07:53 EST 2023" starttimestamp="1700582044267" timestamp="829390">
    <CSVRow><![CDATA[179,Tue Nov 21 11:07:41 EST 2023,28,0,LispInterpreterLoadSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,99,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="749" _type="LocalChecksRawCommand" date="Tue Nov 21 11:07:53 EST 2023" starttimestamp="1700582044267" timestamp="829390">
    <CSVRow><![CDATA[179,Tue Nov 21 11:07:41 EST 2023,28,0,LispInterpreterLoadSuite,AndTestedChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,99,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="750" _type="MoveCaretCommand" caretOffset="491" date="Tue Nov 21 11:07:53 EST 2023" docOffset="611" starttimestamp="1700582044267" timestamp="829439" />
  <Command __id="751" _type="MoveCaretCommand" caretOffset="543" date="Tue Nov 21 11:07:54 EST 2023" docOffset="663" starttimestamp="1700582044267" timestamp="830583" />
  <Command __id="752" _type="ShellCommand" date="Tue Nov 21 11:08:37 EST 2023" starttimestamp="1700582044267" timestamp="873074" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="753" _type="ShellCommand" date="Tue Nov 21 11:08:37 EST 2023" starttimestamp="1700582044267" timestamp="873086" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="754" _type="ShellCommand" date="Tue Nov 21 11:08:38 EST 2023" starttimestamp="1700582044267" timestamp="874605" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="755" _type="ShellCommand" date="Tue Nov 21 11:08:42 EST 2023" starttimestamp="1700582044267" timestamp="878493" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="756" _type="ShellCommand" date="Tue Nov 21 11:08:49 EST 2023" starttimestamp="1700582044267" timestamp="885065" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="757" _type="ShellCommand" date="Tue Nov 21 11:08:50 EST 2023" starttimestamp="1700582044267" timestamp="886168" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="758" _type="MoveCaretCommand" caretOffset="340" date="Tue Nov 21 11:08:56 EST 2023" docOffset="460" starttimestamp="1700582044267" timestamp="891984" />
  <Command __id="760" _type="InsertStringCommand" date="Tue Nov 21 11:08:57 EST 2023" starttimestamp="1700582044267" timestamp="892947" timestamp2="892947">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="762" _type="InsertStringCommand" date="Tue Nov 21 11:08:57 EST 2023" starttimestamp="1700582044267" timestamp="893522" timestamp2="893522">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="764" _type="InsertStringCommand" date="Tue Nov 21 11:08:57 EST 2023" starttimestamp="1700582044267" timestamp="893578" timestamp2="893578">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="766" _type="InsertStringCommand" date="Tue Nov 21 11:08:58 EST 2023" starttimestamp="1700582044267" timestamp="893742" timestamp2="893742">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="768" _type="InsertStringCommand" date="Tue Nov 21 11:08:58 EST 2023" starttimestamp="1700582044267" timestamp="894004" timestamp2="894004">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="770" _type="InsertStringCommand" date="Tue Nov 21 11:08:58 EST 2023" starttimestamp="1700582044267" timestamp="894209" timestamp2="894209">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="772" _type="InsertStringCommand" date="Tue Nov 21 11:08:58 EST 2023" starttimestamp="1700582044267" timestamp="894348" timestamp2="894348">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="774" _type="InsertStringCommand" date="Tue Nov 21 11:08:58 EST 2023" starttimestamp="1700582044267" timestamp="894438" timestamp2="894438">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="776" _type="InsertStringCommand" date="Tue Nov 21 11:08:58 EST 2023" starttimestamp="1700582044267" timestamp="894572" timestamp2="894572">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="777" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:08:58 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="894579" />
  <Command __id="781" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:09:00 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="895953" />
  <Command __id="783" _type="InsertStringCommand" date="Tue Nov 21 11:09:00 EST 2023" starttimestamp="1700582044267" timestamp="895962" timestamp2="895962">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="690" _type="Insert" date="Tue Nov 21 11:07:27 EST 2023" docASTNodeCount="131" docActiveCodeLength="740" docExpressionCount="94" docLength="740" length="16" offset="605" repeat="6" starttimestamp="1700582044267" timestamp="802921" timestamp2="804438">
    <text><![CDATA[else {
				
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="708" _type="Delete" date="Tue Nov 21 11:07:33 EST 2023" docASTNodeCount="123" docActiveCodeLength="698" docExpressionCount="87" docLength="698" endLine="22" length="42" offset="625" startLine="22" starttimestamp="1700582044267" timestamp="808850">
    <text><![CDATA[return expr.getHead().getTail().getHead();]]></text>
  </DocumentChange>
  <DocumentChange __id="711" _type="Replace" date="Tue Nov 21 11:07:33 EST 2023" docASTNodeCount="131" docActiveCodeLength="740" docExpressionCount="94" docLength="740" endLine="20" insertionLength="46" int_docASTNodeCount="123" int_docActiveCodeLength="694" int_docExpressionCount="87" int_docLength="694" length="4" offset="612" startLine="20" starttimestamp="1700582044267" timestamp="809324">
    <deletedText><![CDATA[				]]></deletedText>
    <insertedText><![CDATA[				return expr.getHead().getTail().getHead();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="715" _type="Delete" date="Tue Nov 21 11:07:35 EST 2023" docASTNodeCount="131" docActiveCodeLength="736" docExpressionCount="94" docLength="736" endLine="22" length="4" offset="663" repeat="4" startLine="21" starttimestamp="1700582044267" timestamp="810929" timestamp2="811681">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="759" _type="Insert" date="Tue Nov 21 11:08:57 EST 2023" docASTNodeCount="135" docActiveCodeLength="751" docExpressionCount="97" docLength="751" length="15" offset="460" repeat="12" starttimestamp="1700582044267" timestamp="892942" timestamp2="895681">
    <text><![CDATA[
		if(expr.isN)]]></text>
  </DocumentChange>
  <DocumentChange __id="782" _type="Replace" date="Tue Nov 21 11:09:00 EST 2023" docASTNodeCount="135" docActiveCodeLength="755" docExpressionCount="97" docLength="755" endLine="16" insertionLength="7" int_docASTNodeCount="135" int_docActiveCodeLength="748" int_docExpressionCount="96" int_docLength="748" length="3" offset="471" startLine="16" starttimestamp="1700582044267" timestamp="895957">
    <deletedText><![CDATA[isN]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <Command __id="784" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:09:01 EST 2023" starttimestamp="1700582044267" timestamp="897169" />
  <Command __id="786" _type="InsertStringCommand" date="Tue Nov 21 11:09:01 EST 2023" starttimestamp="1700582044267" timestamp="897450" timestamp2="897450">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="788" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.smartEnter" date="Tue Nov 21 11:09:01 EST 2023" starttimestamp="1700582044267" timestamp="897578" />
  <Command __id="790" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="897827" timestamp2="897827">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="792" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="897877" timestamp2="897877">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="794" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="897998" timestamp2="897998">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="796" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="898077" timestamp2="898077">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="798" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="898169" timestamp2="898169">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="800" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="898228" timestamp2="898228">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="802" _type="InsertStringCommand" date="Tue Nov 21 11:09:02 EST 2023" starttimestamp="1700582044267" timestamp="898324" timestamp2="898324">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="804" _type="InsertStringCommand" date="Tue Nov 21 11:09:03 EST 2023" starttimestamp="1700582044267" timestamp="899674" timestamp2="899674">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="806" _type="InsertStringCommand" date="Tue Nov 21 11:09:04 EST 2023" starttimestamp="1700582044267" timestamp="899750" timestamp2="899750">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="808" _type="InsertStringCommand" date="Tue Nov 21 11:09:04 EST 2023" starttimestamp="1700582044267" timestamp="899835" timestamp2="899835">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="810" _type="InsertStringCommand" date="Tue Nov 21 11:09:04 EST 2023" starttimestamp="1700582044267" timestamp="899929" timestamp2="899929">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="812" _type="InsertStringCommand" date="Tue Nov 21 11:09:04 EST 2023" starttimestamp="1700582044267" timestamp="900109" timestamp2="900109">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="814" _type="InsertStringCommand" date="Tue Nov 21 11:09:04 EST 2023" starttimestamp="1700582044267" timestamp="900299" timestamp2="900299">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="816" _type="InsertStringCommand" date="Tue Nov 21 11:09:04 EST 2023" starttimestamp="1700582044267" timestamp="900392" timestamp2="900392">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="818" _type="InsertStringCommand" date="Tue Nov 21 11:09:05 EST 2023" starttimestamp="1700582044267" timestamp="900785" timestamp2="900785">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="820" _type="InsertStringCommand" date="Tue Nov 21 11:09:05 EST 2023" starttimestamp="1700582044267" timestamp="900979" timestamp2="900979">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="822" _type="InsertStringCommand" date="Tue Nov 21 11:09:05 EST 2023" starttimestamp="1700582044267" timestamp="901055" timestamp2="901055">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="824" _type="InsertStringCommand" date="Tue Nov 21 11:09:05 EST 2023" starttimestamp="1700582044267" timestamp="901148" timestamp2="901148">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="826" _type="InsertStringCommand" date="Tue Nov 21 11:09:05 EST 2023" starttimestamp="1700582044267" timestamp="901279" timestamp2="901279">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="836" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:09:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="907958" type="Run" />
  <Command __id="837" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:09:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="907958" type="Run" />
  <Command __id="838" _type="ShellCommand" date="Tue Nov 21 11:09:12 EST 2023" starttimestamp="1700582044267" timestamp="908284" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="839" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910773" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):34¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="840" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910774" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="841" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910779" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="842" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910780" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="843" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910781" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="844" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910781" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="845" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910796" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="846" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910797" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="847" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910798" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="848" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910799" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="849" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910799" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="850" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910799" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="851" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910804" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
Test Result:LoadChecker,100.0% complete,0.0,0.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶T"), Diff(INSERT,"Test execution time (ms):27¶Test Result:LoadChecker,100.0% complete,0.0,0.0,¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="852" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910805" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27¶Test Result:Loa"), Diff(INSERT,"Result:ConsTeste"), Diff(EQUAL,"dChecker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="853" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910805" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="854" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910807" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="855" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910807" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="856" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910809" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="857" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910809" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="858" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910811" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="859" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910811" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="860" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910812" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="861" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910813" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="862" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910814" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="863" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910814" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="864" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910816" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="865" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910816" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="866" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910818" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="867" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910819" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="868" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910820" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="869" _type="ConsoleOutput" date="Tue Nov 21 11:09:15 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="910821" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="870" _type="ShellCommand" date="Tue Nov 21 11:09:26 EST 2023" starttimestamp="1700582044267" timestamp="922264" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="871" _type="MoveCaretCommand" caretOffset="663" date="Tue Nov 21 11:09:29 EST 2023" docOffset="783" starttimestamp="1700582044267" timestamp="925680" />
  <Command __id="873" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:09:30 EST 2023" starttimestamp="1700582044267" timestamp="926564" />
  <Command __id="875" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:09:30 EST 2023" starttimestamp="1700582044267" timestamp="926722" />
  <Command __id="876" _type="MoveCaretCommand" caretOffset="658" date="Tue Nov 21 11:09:31 EST 2023" docOffset="778" starttimestamp="1700582044267" timestamp="927228" />
  <Command __id="877" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:09:32 EST 2023" starttimestamp="1700582044267" timestamp="927890" />
  <Command __id="878" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:09:32 EST 2023" starttimestamp="1700582044267" timestamp="927991" />
  <Command __id="879" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:09:32 EST 2023" starttimestamp="1700582044267" timestamp="927999" />
  <DocumentChange __id="785" _type="Insert" date="Tue Nov 21 11:09:01 EST 2023" docASTNodeCount="140" docActiveCodeLength="786" docExpressionCount="99" docLength="786" length="31" offset="479" repeat="22" starttimestamp="1700582044267" timestamp="897449" timestamp2="902487">
    <text><![CDATA[ {
			return new NilAtom();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="872" _type="Delete" date="Tue Nov 21 11:09:30 EST 2023" docASTNodeCount="140" docActiveCodeLength="784" docExpressionCount="99" docLength="784" endLine="29" length="2" offset="781" repeat="2" startLine="28" starttimestamp="1700582044267" timestamp="926562" timestamp2="926720">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="880" _type="ShellCommand" date="Tue Nov 21 11:09:34 EST 2023" starttimestamp="1700582044267" timestamp="930537" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="881" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:09:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="930715" type="Run" />
  <Command __id="882" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:09:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="930715" type="Run" />
  <Command __id="883" _type="ShellCommand" date="Tue Nov 21 11:09:34 EST 2023" starttimestamp="1700582044267" timestamp="930720" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="884" _type="MoveCaretCommand" caretOffset="471" date="Tue Nov 21 11:09:35 EST 2023" docOffset="591" starttimestamp="1700582044267" timestamp="931223" />
  <Command __id="885" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:09:37 EST 2023" docASTNodeCount="69" docActiveCodeLength="377" docExpressionCount="51" docLength="377" projectName="Assignment5" starttimestamp="1700582044267" timestamp="933078">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().getHead().eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="886" _type="MoveCaretCommand" caretOffset="104" date="Tue Nov 21 11:09:37 EST 2023" docOffset="234" starttimestamp="1700582044267" timestamp="933107" />
  <Command __id="888" _type="MoveCaretCommand" caretOffset="471" date="Tue Nov 21 11:09:38 EST 2023" docOffset="591" starttimestamp="1700582044267" timestamp="933974" />
  <Command __id="889" _type="ShellCommand" date="Tue Nov 21 11:09:39 EST 2023" starttimestamp="1700582044267" timestamp="935446" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="890" _type="ShellCommand" date="Tue Nov 21 11:09:50 EST 2023" starttimestamp="1700582044267" timestamp="946282" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="891" _type="ShellCommand" date="Tue Nov 21 11:09:52 EST 2023" starttimestamp="1700582044267" timestamp="947776" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="887" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:09:38 EST 2023" docASTNodeCount="140" docActiveCodeLength="784" docExpressionCount="99" docLength="784" projectName="Assignment5" starttimestamp="1700582044267" timestamp="933934">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		"), Diff(INSERT,"if(expr.isNIL()) {			return new NilAtom();		}		"), Diff(EQUAL,"if(!expr.getHead().getHead().eval(environment).isNIL()) {			"), Diff(INSERT,"if(expr.getHead().getTail().isAtom()) {				return expr.getHead().getTail();			}else {				"), Diff(EQUAL,"return expr.getHead().getTail().getHead();		"), Diff(INSERT,"	}		"), Diff(EQUAL,"}else {			return evalHelper(expr.getTail(), environment);		}"), Diff(INSERT,""), Diff(EQUAL,"	}"), Diff(DELETE,"	"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isNIL()) {
			return new NilAtom();
		}
		if(!expr.getHead().getHead().eval(environment).isNIL()) {
			if(expr.getHead().getTail().isAtom()) {
				return expr.getHead().getTail();
			}else {
				return expr.getHead().getTail().getHead();
			}
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="892" _type="ShellCommand" date="Tue Nov 21 11:10:36 EST 2023" starttimestamp="1700582044267" timestamp="992676" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="894" _type="MoveCaretCommand" caretOffset="719" date="Tue Nov 21 11:10:39 EST 2023" docOffset="780" starttimestamp="1700582044267" timestamp="994850" />
  <Command __id="895" _type="MoveCaretCommand" caretOffset="648" date="Tue Nov 21 11:10:40 EST 2023" docOffset="709" starttimestamp="1700582044267" timestamp="996395" />
  <Command __id="896" _type="InsertStringCommand" date="Tue Nov 21 11:10:42 EST 2023" starttimestamp="1700582044267" timestamp="998052" timestamp2="998052">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Tue Nov 21 11:10:42 EST 2023" starttimestamp="1700582044267" timestamp="998296" timestamp2="998296">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="898" _type="ShellCommand" date="Tue Nov 21 11:10:42 EST 2023" starttimestamp="1700582044267" timestamp="998551" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="899" _type="ShellCommand" date="Tue Nov 21 11:10:59 EST 2023" starttimestamp="1700582044267" timestamp="1014758" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="900" _type="MoveCaretCommand" caretOffset="1143" date="Tue Nov 21 11:11:01 EST 2023" docOffset="1204" starttimestamp="1700582044267" timestamp="1017647" />
  <Command __id="901" _type="InsertStringCommand" date="Tue Nov 21 11:11:02 EST 2023" starttimestamp="1700582044267" timestamp="1018207" timestamp2="1018207">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="902" _type="InsertStringCommand" date="Tue Nov 21 11:11:02 EST 2023" starttimestamp="1700582044267" timestamp="1018351" timestamp2="1018351">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Tue Nov 21 11:11:02 EST 2023" starttimestamp="1700582044267" timestamp="1018390" timestamp2="1018390">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="904" _type="InsertStringCommand" date="Tue Nov 21 11:11:02 EST 2023" starttimestamp="1700582044267" timestamp="1018555" timestamp2="1018555">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Tue Nov 21 11:11:02 EST 2023" starttimestamp="1700582044267" timestamp="1018683" timestamp2="1018683">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="906" _type="InsertStringCommand" date="Tue Nov 21 11:11:03 EST 2023" starttimestamp="1700582044267" timestamp="1018757" timestamp2="1018757">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="907" _type="InsertStringCommand" date="Tue Nov 21 11:11:03 EST 2023" starttimestamp="1700582044267" timestamp="1018878" timestamp2="1018878">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="908" _type="InsertStringCommand" date="Tue Nov 21 11:11:03 EST 2023" starttimestamp="1700582044267" timestamp="1019013" timestamp2="1019013">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="909" _type="InsertStringCommand" date="Tue Nov 21 11:11:03 EST 2023" starttimestamp="1700582044267" timestamp="1019065" timestamp2="1019065">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="910" _type="InsertStringCommand" date="Tue Nov 21 11:11:05 EST 2023" starttimestamp="1700582044267" timestamp="1020763" timestamp2="1020763">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="911" _type="InsertStringCommand" date="Tue Nov 21 11:11:05 EST 2023" starttimestamp="1700582044267" timestamp="1021019" timestamp2="1021019">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="912" _type="InsertStringCommand" date="Tue Nov 21 11:11:05 EST 2023" starttimestamp="1700582044267" timestamp="1021325" timestamp2="1021325">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="913" _type="InsertStringCommand" date="Tue Nov 21 11:11:05 EST 2023" starttimestamp="1700582044267" timestamp="1021456" timestamp2="1021456">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="914" _type="InsertStringCommand" date="Tue Nov 21 11:11:05 EST 2023" starttimestamp="1700582044267" timestamp="1021618" timestamp2="1021618">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="915" _type="InsertStringCommand" date="Tue Nov 21 11:11:06 EST 2023" starttimestamp="1700582044267" timestamp="1021848" timestamp2="1021848">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="916" _type="InsertStringCommand" date="Tue Nov 21 11:11:06 EST 2023" starttimestamp="1700582044267" timestamp="1021938" timestamp2="1021938">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="917" _type="InsertStringCommand" date="Tue Nov 21 11:11:06 EST 2023" starttimestamp="1700582044267" timestamp="1022040" timestamp2="1022040">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="918" _type="InsertStringCommand" date="Tue Nov 21 11:11:06 EST 2023" starttimestamp="1700582044267" timestamp="1022179" timestamp2="1022179">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="919" _type="InsertStringCommand" date="Tue Nov 21 11:11:06 EST 2023" starttimestamp="1700582044267" timestamp="1022249" timestamp2="1022249">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="920" _type="InsertStringCommand" date="Tue Nov 21 11:11:06 EST 2023" starttimestamp="1700582044267" timestamp="1022492" timestamp2="1022492">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="921" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:11:07 EST 2023" starttimestamp="1700582044267" timestamp="1023450" />
  <Command __id="922" _type="InsertStringCommand" date="Tue Nov 21 11:11:07 EST 2023" starttimestamp="1700582044267" timestamp="1023706" timestamp2="1023706">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="923" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:11:08 EST 2023" starttimestamp="1700582044267" timestamp="1024129" />
  <Command __id="924" _type="InsertStringCommand" date="Tue Nov 21 11:11:08 EST 2023" starttimestamp="1700582044267" timestamp="1024303" timestamp2="1024303">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="928" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:11:11 EST 2023" starttimestamp="1700582044267" timestamp="1027714" />
  <Command __id="929" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:11:11 EST 2023" starttimestamp="1700582044267" timestamp="1027729" />
  <Command __id="930" _type="MoveCaretCommand" caretOffset="1072" date="Tue Nov 21 11:11:12 EST 2023" docOffset="1133" starttimestamp="1700582044267" timestamp="1028008" />
  <Command __id="931" _type="ShellCommand" date="Tue Nov 21 11:11:13 EST 2023" starttimestamp="1700582044267" timestamp="1028935" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="932" _type="ShellCommand" date="Tue Nov 21 11:11:26 EST 2023" starttimestamp="1700582044267" timestamp="1042127" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="933" _type="InsertStringCommand" date="Tue Nov 21 11:11:27 EST 2023" starttimestamp="1700582044267" timestamp="1043261" timestamp2="1043261">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="934" _type="InsertStringCommand" date="Tue Nov 21 11:11:27 EST 2023" starttimestamp="1700582044267" timestamp="1043713" timestamp2="1043713">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="935" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044016" timestamp2="1044016">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="936" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044135" timestamp2="1044135">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="937" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044180" timestamp2="1044180">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="938" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044303" timestamp2="1044303">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="939" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044373" timestamp2="1044373">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="940" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044479" timestamp2="1044479">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="941" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044588" timestamp2="1044588">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="942" _type="InsertStringCommand" date="Tue Nov 21 11:11:28 EST 2023" starttimestamp="1700582044267" timestamp="1044659" timestamp2="1044659">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="943" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1044765" timestamp2="1044765">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="944" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1044839" timestamp2="1044839">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="945" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1044931" timestamp2="1044931">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="946" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1044991" timestamp2="1044991">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="947" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045140" timestamp2="1045140">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="948" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045151" timestamp2="1045151">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="949" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045306" timestamp2="1045306">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="950" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045370" timestamp2="1045370">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="951" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045422" timestamp2="1045422">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="952" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045502" timestamp2="1045502">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="953" _type="InsertStringCommand" date="Tue Nov 21 11:11:29 EST 2023" starttimestamp="1700582044267" timestamp="1045587" timestamp2="1045587">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="954" _type="InsertStringCommand" date="Tue Nov 21 11:11:30 EST 2023" starttimestamp="1700582044267" timestamp="1046044" timestamp2="1046044">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="955" _type="InsertStringCommand" date="Tue Nov 21 11:11:30 EST 2023" starttimestamp="1700582044267" timestamp="1046236" timestamp2="1046236">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="956" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:11:30 EST 2023" starttimestamp="1700582044267" timestamp="1046530" />
  <Command __id="957" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:11:30 EST 2023" starttimestamp="1700582044267" timestamp="1046655" />
  <Command __id="958" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1046735" timestamp2="1046735">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="959" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1046783" timestamp2="1046783">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="960" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1046952" timestamp2="1046952">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="961" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1047077" timestamp2="1047077">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="962" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1047175" timestamp2="1047175">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="963" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1047274" timestamp2="1047274">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="964" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1047376" timestamp2="1047376">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="965" _type="InsertStringCommand" date="Tue Nov 21 11:11:31 EST 2023" starttimestamp="1700582044267" timestamp="1047452" timestamp2="1047452">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="966" _type="InsertStringCommand" date="Tue Nov 21 11:11:32 EST 2023" starttimestamp="1700582044267" timestamp="1048307" timestamp2="1048307">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="967" _type="InsertStringCommand" date="Tue Nov 21 11:11:32 EST 2023" starttimestamp="1700582044267" timestamp="1048560" timestamp2="1048560">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="968" _type="InsertStringCommand" date="Tue Nov 21 11:11:32 EST 2023" starttimestamp="1700582044267" timestamp="1048715" timestamp2="1048715">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="969" _type="InsertStringCommand" date="Tue Nov 21 11:11:33 EST 2023" starttimestamp="1700582044267" timestamp="1048784" timestamp2="1048784">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="970" _type="InsertStringCommand" date="Tue Nov 21 11:11:33 EST 2023" starttimestamp="1700582044267" timestamp="1048890" timestamp2="1048890">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="971" _type="InsertStringCommand" date="Tue Nov 21 11:11:33 EST 2023" starttimestamp="1700582044267" timestamp="1049256" timestamp2="1049256">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="972" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:11:34 EST 2023" starttimestamp="1700582044267" timestamp="1050064" />
  <Command __id="973" _type="InsertStringCommand" date="Tue Nov 21 11:11:34 EST 2023" starttimestamp="1700582044267" timestamp="1050290" timestamp2="1050290">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="974" _type="InsertStringCommand" date="Tue Nov 21 11:11:34 EST 2023" starttimestamp="1700582044267" timestamp="1050439" timestamp2="1050439">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="975" _type="MoveCaretCommand" caretOffset="1115" date="Tue Nov 21 11:11:35 EST 2023" docOffset="1176" starttimestamp="1700582044267" timestamp="1051570" />
  <Command __id="1000" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:11:42 EST 2023" starttimestamp="1700582044267" timestamp="1057868" />
  <Command __id="1001" _type="MoveCaretCommand" caretOffset="1120" date="Tue Nov 21 11:11:42 EST 2023" docOffset="1181" starttimestamp="1700582044267" timestamp="1058137" />
  <Command __id="1002" _type="InsertStringCommand" date="Tue Nov 21 11:11:42 EST 2023" starttimestamp="1700582044267" timestamp="1058334" timestamp2="1058334">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1003" _type="MoveCaretCommand" caretOffset="1069" date="Tue Nov 21 11:11:47 EST 2023" docOffset="1130" starttimestamp="1700582044267" timestamp="1062842" />
  <Command __id="1004" _type="MoveCaretCommand" caretOffset="967" date="Tue Nov 21 11:11:48 EST 2023" docOffset="1028" starttimestamp="1700582044267" timestamp="1064303" />
  <Command __id="1005" _type="MoveCaretCommand" caretOffset="875" date="Tue Nov 21 11:11:48 EST 2023" docOffset="936" starttimestamp="1700582044267" timestamp="1064711" />
  <Command __id="1006" _type="ShellCommand" date="Tue Nov 21 11:11:49 EST 2023" starttimestamp="1700582044267" timestamp="1065559" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1007" _type="ShellCommand" date="Tue Nov 21 11:12:02 EST 2023" starttimestamp="1700582044267" timestamp="1077784" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1008" _type="SelectTextCommand" caretOffset="760" date="Tue Nov 21 11:12:03 EST 2023" end="761" start="760" starttimestamp="1700582044267" timestamp="1079704" />
  <Command __id="1009" _type="MoveCaretCommand" caretOffset="760" date="Tue Nov 21 11:12:04 EST 2023" docOffset="821" starttimestamp="1700582044267" timestamp="1079951" />
  <Command __id="1010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:12:04 EST 2023" starttimestamp="1700582044267" timestamp="1080614" />
  <Command __id="1011" _type="InsertStringCommand" date="Tue Nov 21 11:12:05 EST 2023" starttimestamp="1700582044267" timestamp="1080841" timestamp2="1080841">
    <data><![CDATA[>]]></data>
  </Command>
  <Command __id="1012" _type="ShellCommand" date="Tue Nov 21 11:12:11 EST 2023" starttimestamp="1700582044267" timestamp="1086875" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="893" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:10:39 EST 2023" docASTNodeCount="90" docActiveCodeLength="787" docExpressionCount="63" docLength="787" projectName="Assignment5" starttimestamp="1700582044267" timestamp="994808">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1016" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:12:20 EST 2023" docASTNodeCount="6" docActiveCodeLength="51" docExpressionCount="2" docLength="51" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1096075">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class GreaterEvaluator {

}
]]></snapshot>
  </Command>
  <Command __id="1013" _type="ShellCommand" date="Tue Nov 21 11:12:20 EST 2023" starttimestamp="1700582044267" timestamp="1095959" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1014" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:12:20 EST 2023" starttimestamp="1700582044267" timestamp="1095980" />
  <Command __id="1015" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:12:20 EST 2023" starttimestamp="1700582044267" timestamp="1095991" />
  <Command __id="1017" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:12:20 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1096114" />
  <Command __id="1019" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:12:23 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1099045" />
  <Command __id="1020" _type="SelectTextCommand" caretOffset="56" date="Tue Nov 21 11:12:25 EST 2023" end="93" start="56" starttimestamp="1700582044267" timestamp="1101328" />
  <Command __id="1021" _type="CopyCommand" date="Tue Nov 21 11:12:25 EST 2023" starttimestamp="1700582044267" timestamp="1101463" />
  <Command __id="1023" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:12:26 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1101900" />
  <Command __id="1024" _type="MoveCaretCommand" caretOffset="15" date="Tue Nov 21 11:12:26 EST 2023" docOffset="15" starttimestamp="1700582044267" timestamp="1102652" />
  <Command __id="1026" _type="InsertStringCommand" date="Tue Nov 21 11:12:27 EST 2023" starttimestamp="1700582044267" timestamp="1103410" timestamp2="1103410">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1028" _type="InsertStringCommand" date="Tue Nov 21 11:12:27 EST 2023" starttimestamp="1700582044267" timestamp="1103520" timestamp2="1103520">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1029" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 11:12:27 EST 2023" starttimestamp="1700582044267" timestamp="1103692" />
  <Command __id="1031" _type="PasteCommand" date="Tue Nov 21 11:12:28 EST 2023" starttimestamp="1700582044267" timestamp="1103869" />
  <Command __id="1032" _type="MoveCaretCommand" caretOffset="85" date="Tue Nov 21 11:12:29 EST 2023" docOffset="85" starttimestamp="1700582044267" timestamp="1104737" />
  <Command __id="1033" _type="MoveCaretCommand" caretOffset="47" date="Tue Nov 21 11:12:29 EST 2023" docOffset="47" starttimestamp="1700582044267" timestamp="1105177" />
  <Command __id="1034" _type="SelectTextCommand" caretOffset="52" date="Tue Nov 21 11:12:29 EST 2023" end="52" start="43" starttimestamp="1700582044267" timestamp="1105321" />
  <Command __id="1035" _type="CopyCommand" date="Tue Nov 21 11:12:29 EST 2023" starttimestamp="1700582044267" timestamp="1105332" />
  <Command __id="1036" _type="MoveCaretCommand" caretOffset="85" date="Tue Nov 21 11:12:29 EST 2023" docOffset="85" starttimestamp="1700582044267" timestamp="1105585" />
  <Command __id="1037" _type="SelectTextCommand" caretOffset="88" date="Tue Nov 21 11:12:29 EST 2023" end="88" start="86" starttimestamp="1700582044267" timestamp="1105687" />
  <Command __id="1038" _type="MoveCaretCommand" caretOffset="54" date="Tue Nov 21 11:12:30 EST 2023" docOffset="54" starttimestamp="1700582044267" timestamp="1106412" />
  <Command __id="1039" _type="MoveCaretCommand" caretOffset="85" date="Tue Nov 21 11:12:30 EST 2023" docOffset="85" starttimestamp="1700582044267" timestamp="1106648" />
  <Command __id="1041" _type="InsertStringCommand" date="Tue Nov 21 11:12:31 EST 2023" starttimestamp="1700582044267" timestamp="1107383" timestamp2="1107383">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1043" _type="InsertStringCommand" date="Tue Nov 21 11:12:31 EST 2023" starttimestamp="1700582044267" timestamp="1107486" timestamp2="1107486">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1045" _type="InsertStringCommand" date="Tue Nov 21 11:12:31 EST 2023" starttimestamp="1700582044267" timestamp="1107571" timestamp2="1107571">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1047" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1107888" timestamp2="1107888">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1049" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108058" timestamp2="1108058">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1051" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108158" timestamp2="1108158">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1053" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108264" timestamp2="1108264">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1055" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108336" timestamp2="1108336">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1057" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108403" timestamp2="1108403">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1059" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108493" timestamp2="1108493">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1061" _type="InsertStringCommand" date="Tue Nov 21 11:12:32 EST 2023" starttimestamp="1700582044267" timestamp="1108627" timestamp2="1108627">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1063" _type="PasteCommand" date="Tue Nov 21 11:12:33 EST 2023" starttimestamp="1700582044267" timestamp="1108863" />
  <Command __id="1076" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:12:37 EST 2023" starttimestamp="1700582044267" timestamp="1113400" />
  <Command __id="1077" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:12:37 EST 2023" starttimestamp="1700582044267" timestamp="1113407" />
  <Command __id="1078" _type="ShellCommand" date="Tue Nov 21 11:12:38 EST 2023" starttimestamp="1700582044267" timestamp="1114072" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1079" _type="ShellCommand" date="Tue Nov 21 11:12:45 EST 2023" starttimestamp="1700582044267" timestamp="1121395" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1080" _type="ShellCommand" date="Tue Nov 21 11:12:56 EST 2023" starttimestamp="1700582044267" timestamp="1132500" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1081" _type="ShellCommand" date="Tue Nov 21 11:12:56 EST 2023" starttimestamp="1700582044267" timestamp="1132567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1082" _type="ShellCommand" date="Tue Nov 21 11:12:57 EST 2023" starttimestamp="1700582044267" timestamp="1133540" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1083" _type="ShellCommand" date="Tue Nov 21 11:13:05 EST 2023" starttimestamp="1700582044267" timestamp="1141383" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1084" _type="ShellCommand" date="Tue Nov 21 11:13:07 EST 2023" starttimestamp="1700582044267" timestamp="1143456" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1085" _type="ShellCommand" date="Tue Nov 21 11:13:07 EST 2023" starttimestamp="1700582044267" timestamp="1143549" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1086" _type="ShellCommand" date="Tue Nov 21 11:13:33 EST 2023" starttimestamp="1700582044267" timestamp="1169120" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1087" _type="ShellCommand" date="Tue Nov 21 11:13:35 EST 2023" starttimestamp="1700582044267" timestamp="1170859" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1088" _type="ShellCommand" date="Tue Nov 21 11:13:37 EST 2023" starttimestamp="1700582044267" timestamp="1173324" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1089" _type="ShellCommand" date="Tue Nov 21 11:13:45 EST 2023" starttimestamp="1700582044267" timestamp="1181083" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1090" _type="ShellCommand" date="Tue Nov 21 11:13:47 EST 2023" starttimestamp="1700582044267" timestamp="1182747" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1091" _type="ShellCommand" date="Tue Nov 21 11:13:48 EST 2023" starttimestamp="1700582044267" timestamp="1183785" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1092" _type="ShellCommand" date="Tue Nov 21 11:13:51 EST 2023" starttimestamp="1700582044267" timestamp="1187226" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1093" _type="ShellCommand" date="Tue Nov 21 11:13:52 EST 2023" starttimestamp="1700582044267" timestamp="1188482" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1094" _type="ShellCommand" date="Tue Nov 21 11:13:56 EST 2023" starttimestamp="1700582044267" timestamp="1191920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1095" _type="ShellCommand" date="Tue Nov 21 11:14:03 EST 2023" starttimestamp="1700582044267" timestamp="1199431" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1096" _type="ShellCommand" date="Tue Nov 21 11:14:06 EST 2023" starttimestamp="1700582044267" timestamp="1202224" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1097" _type="ShellCommand" date="Tue Nov 21 11:14:17 EST 2023" starttimestamp="1700582044267" timestamp="1213392" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1098" _type="ShellCommand" date="Tue Nov 21 11:14:19 EST 2023" starttimestamp="1700582044267" timestamp="1215471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1099" _type="ShellCommand" date="Tue Nov 21 11:14:20 EST 2023" starttimestamp="1700582044267" timestamp="1215910" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1100" _type="ShellCommand" date="Tue Nov 21 11:14:29 EST 2023" starttimestamp="1700582044267" timestamp="1225215" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1101" _type="ShellCommand" date="Tue Nov 21 11:14:40 EST 2023" starttimestamp="1700582044267" timestamp="1235976" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1102" _type="ShellCommand" date="Tue Nov 21 11:14:42 EST 2023" starttimestamp="1700582044267" timestamp="1238574" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1103" _type="ShellCommand" date="Tue Nov 21 11:15:28 EST 2023" starttimestamp="1700582044267" timestamp="1284114" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1104" _type="ShellCommand" date="Tue Nov 21 11:15:29 EST 2023" starttimestamp="1700582044267" timestamp="1285188" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1105" _type="ShellCommand" date="Tue Nov 21 11:15:53 EST 2023" starttimestamp="1700582044267" timestamp="1309555" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1106" _type="ShellCommand" date="Tue Nov 21 11:15:55 EST 2023" starttimestamp="1700582044267" timestamp="1310804" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1107" _type="ShellCommand" date="Tue Nov 21 11:15:57 EST 2023" starttimestamp="1700582044267" timestamp="1312786" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1108" _type="ShellCommand" date="Tue Nov 21 11:16:25 EST 2023" starttimestamp="1700582044267" timestamp="1341602" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1109" _type="ShellCommand" date="Tue Nov 21 11:16:43 EST 2023" starttimestamp="1700582044267" timestamp="1359519" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1110" _type="ShellCommand" date="Tue Nov 21 11:16:53 EST 2023" starttimestamp="1700582044267" timestamp="1369553" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1111" _type="ShellCommand" date="Tue Nov 21 11:16:55 EST 2023" starttimestamp="1700582044267" timestamp="1371137" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1112" _type="ShellCommand" date="Tue Nov 21 11:16:56 EST 2023" starttimestamp="1700582044267" timestamp="1372160" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1113" _type="ShellCommand" date="Tue Nov 21 11:16:58 EST 2023" starttimestamp="1700582044267" timestamp="1374014" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1114" _type="ShellCommand" date="Tue Nov 21 11:17:09 EST 2023" starttimestamp="1700582044267" timestamp="1385586" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1115" _type="ShellCommand" date="Tue Nov 21 11:17:10 EST 2023" starttimestamp="1700582044267" timestamp="1386539" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1116" _type="ShellCommand" date="Tue Nov 21 11:17:37 EST 2023" starttimestamp="1700582044267" timestamp="1413273" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1117" _type="ShellCommand" date="Tue Nov 21 11:17:38 EST 2023" starttimestamp="1700582044267" timestamp="1413826" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1119" _type="MoveCaretCommand" caretOffset="760" date="Tue Nov 21 11:17:39 EST 2023" docOffset="821" starttimestamp="1700582044267" timestamp="1414841" />
  <Command __id="1121" _type="SelectTextCommand" caretOffset="876" date="Tue Nov 21 11:17:39 EST 2023" end="888" start="876" starttimestamp="1700582044267" timestamp="1415700" />
  <Command __id="1122" _type="ShellCommand" date="Tue Nov 21 11:17:42 EST 2023" starttimestamp="1700582044267" timestamp="1418482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1123" _type="ShellCommand" date="Tue Nov 21 11:18:40 EST 2023" starttimestamp="1700582044267" timestamp="1476067" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1124" _type="MoveCaretCommand" caretOffset="347" date="Tue Nov 21 11:18:42 EST 2023" docOffset="347" starttimestamp="1700582044267" timestamp="1478406" />
  <Command __id="1125" _type="SelectTextCommand" caretOffset="278" date="Tue Nov 21 11:18:45 EST 2023" end="1102" start="278" starttimestamp="1700582044267" timestamp="1481163" />
  <Command __id="1126" _type="MoveCaretCommand" caretOffset="347" date="Tue Nov 21 11:18:46 EST 2023" docOffset="347" starttimestamp="1700582044267" timestamp="1482060" />
  <Command __id="1127" _type="SelectTextCommand" caretOffset="348" date="Tue Nov 21 11:18:48 EST 2023" end="1102" start="348" starttimestamp="1700582044267" timestamp="1484159" />
  <Command __id="1129" _type="PasteCommand" date="Tue Nov 21 11:18:48 EST 2023" starttimestamp="1700582044267" timestamp="1484382" />
  <Command __id="1130" _type="ShellCommand" date="Tue Nov 21 11:18:53 EST 2023" starttimestamp="1700582044267" timestamp="1488800" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1131" _type="ShellCommand" date="Tue Nov 21 11:18:53 EST 2023" starttimestamp="1700582044267" timestamp="1488876" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1134" _type="ShellCommand" date="Tue Nov 21 11:18:55 EST 2023" starttimestamp="1700582044267" timestamp="1490837" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1135" _type="ShellCommand" date="Tue Nov 21 11:18:55 EST 2023" starttimestamp="1700582044267" timestamp="1490899" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1138" _type="MoveCaretCommand" caretOffset="1536" date="Tue Nov 21 11:18:59 EST 2023" docOffset="1536" starttimestamp="1700582044267" timestamp="1494984" />
  <Command __id="1139" _type="MoveCaretCommand" caretOffset="1530" date="Tue Nov 21 11:19:00 EST 2023" docOffset="1530" starttimestamp="1700582044267" timestamp="1495735" />
  <Command __id="1140" _type="MoveCaretCommand" caretOffset="1651" date="Tue Nov 21 11:19:00 EST 2023" docOffset="1651" starttimestamp="1700582044267" timestamp="1496528" />
  <Command __id="1141" _type="SelectTextCommand" caretOffset="1676" date="Tue Nov 21 11:19:01 EST 2023" end="1676" start="1675" starttimestamp="1700582044267" timestamp="1497138" />
  <Command __id="1142" _type="MoveCaretCommand" caretOffset="1653" date="Tue Nov 21 11:19:01 EST 2023" docOffset="1653" starttimestamp="1700582044267" timestamp="1497657" />
  <Command __id="1143" _type="MoveCaretCommand" caretOffset="1663" date="Tue Nov 21 11:19:02 EST 2023" docOffset="1663" starttimestamp="1700582044267" timestamp="1498016" />
  <Command __id="1144" _type="MoveCaretCommand" caretOffset="1717" date="Tue Nov 21 11:19:02 EST 2023" docOffset="1717" starttimestamp="1700582044267" timestamp="1498359" />
  <Command __id="1145" _type="MoveCaretCommand" caretOffset="1729" date="Tue Nov 21 11:19:02 EST 2023" docOffset="1729" starttimestamp="1700582044267" timestamp="1498725" />
  <Command __id="1146" _type="MoveCaretCommand" caretOffset="1702" date="Tue Nov 21 11:19:03 EST 2023" docOffset="1702" starttimestamp="1700582044267" timestamp="1499156" />
  <Command __id="1147" _type="MoveCaretCommand" caretOffset="1790" date="Tue Nov 21 11:19:04 EST 2023" docOffset="1790" starttimestamp="1700582044267" timestamp="1500335" />
  <Command __id="1148" _type="MoveCaretCommand" caretOffset="1801" date="Tue Nov 21 11:19:04 EST 2023" docOffset="1801" starttimestamp="1700582044267" timestamp="1500549" />
  <Command __id="1149" _type="MoveCaretCommand" caretOffset="1790" date="Tue Nov 21 11:19:05 EST 2023" docOffset="1790" starttimestamp="1700582044267" timestamp="1501266" />
  <Command __id="1150" _type="MoveCaretCommand" caretOffset="1768" date="Tue Nov 21 11:19:06 EST 2023" docOffset="1768" starttimestamp="1700582044267" timestamp="1502632" />
  <Command __id="1151" _type="MoveCaretCommand" caretOffset="1783" date="Tue Nov 21 11:19:07 EST 2023" docOffset="1783" starttimestamp="1700582044267" timestamp="1503149" />
  <Command __id="1152" _type="MoveCaretCommand" caretOffset="1770" date="Tue Nov 21 11:19:09 EST 2023" docOffset="1770" starttimestamp="1700582044267" timestamp="1505414" />
  <Command __id="1153" _type="MoveCaretCommand" caretOffset="1775" date="Tue Nov 21 11:19:11 EST 2023" docOffset="1775" starttimestamp="1700582044267" timestamp="1507264" />
  <Command __id="1154" _type="MoveCaretCommand" caretOffset="1783" date="Tue Nov 21 11:19:12 EST 2023" docOffset="1783" starttimestamp="1700582044267" timestamp="1508259" />
  <Command __id="1155" _type="MoveCaretCommand" caretOffset="1700" date="Tue Nov 21 11:19:13 EST 2023" docOffset="1700" starttimestamp="1700582044267" timestamp="1508777" />
  <Command __id="1156" _type="MoveCaretCommand" caretOffset="1886" date="Tue Nov 21 11:19:15 EST 2023" docOffset="1886" starttimestamp="1700582044267" timestamp="1511640" />
  <Command __id="1157" _type="MoveCaretCommand" caretOffset="1854" date="Tue Nov 21 11:19:22 EST 2023" docOffset="1854" starttimestamp="1700582044267" timestamp="1518460" />
  <Command __id="1158" _type="MoveCaretCommand" caretOffset="1892" date="Tue Nov 21 11:19:23 EST 2023" docOffset="1892" starttimestamp="1700582044267" timestamp="1519510" />
  <Command __id="1159" _type="MoveCaretCommand" caretOffset="1926" date="Tue Nov 21 11:19:24 EST 2023" docOffset="1926" starttimestamp="1700582044267" timestamp="1520032" />
  <Command __id="1160" _type="MoveCaretCommand" caretOffset="1964" date="Tue Nov 21 11:19:24 EST 2023" docOffset="1964" starttimestamp="1700582044267" timestamp="1520387" />
  <Command __id="1161" _type="MoveCaretCommand" caretOffset="1950" date="Tue Nov 21 11:19:31 EST 2023" docOffset="1950" starttimestamp="1700582044267" timestamp="1527090" />
  <Command __id="1162" _type="SelectTextCommand" caretOffset="1952" date="Tue Nov 21 11:19:31 EST 2023" end="1952" start="1944" starttimestamp="1700582044267" timestamp="1527225" />
  <Command __id="1163" _type="MoveCaretCommand" caretOffset="2140" date="Tue Nov 21 11:19:39 EST 2023" docOffset="2140" starttimestamp="1700582044267" timestamp="1535495" />
  <Command __id="1164" _type="MoveCaretCommand" caretOffset="2151" date="Tue Nov 21 11:19:40 EST 2023" docOffset="2151" starttimestamp="1700582044267" timestamp="1536440" />
  <Command __id="1165" _type="MoveCaretCommand" caretOffset="1801" date="Tue Nov 21 11:19:43 EST 2023" docOffset="1801" starttimestamp="1700582044267" timestamp="1539510" />
  <Command __id="1166" _type="MoveCaretCommand" caretOffset="1686" date="Tue Nov 21 11:19:45 EST 2023" docOffset="1686" starttimestamp="1700582044267" timestamp="1540850" />
  <Command __id="1167" _type="MoveCaretCommand" caretOffset="1801" date="Tue Nov 21 11:19:45 EST 2023" docOffset="1801" starttimestamp="1700582044267" timestamp="1541489" />
  <Command __id="1168" _type="MoveCaretCommand" caretOffset="1702" date="Tue Nov 21 11:19:52 EST 2023" docOffset="1702" starttimestamp="1700582044267" timestamp="1548314" />
  <Command __id="1169" _type="MoveCaretCommand" caretOffset="1827" date="Tue Nov 21 11:20:04 EST 2023" docOffset="1827" starttimestamp="1700582044267" timestamp="1560052" />
  <Command __id="1170" _type="MoveCaretCommand" caretOffset="1820" date="Tue Nov 21 11:20:04 EST 2023" docOffset="1820" starttimestamp="1700582044267" timestamp="1560688" />
  <Command __id="1171" _type="MoveCaretCommand" caretOffset="1819" date="Tue Nov 21 11:20:05 EST 2023" docOffset="1819" starttimestamp="1700582044267" timestamp="1561257" />
  <Command __id="1172" _type="ShellCommand" date="Tue Nov 21 11:20:38 EST 2023" starttimestamp="1700582044267" timestamp="1594510" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1173" _type="ShellCommand" date="Tue Nov 21 11:20:38 EST 2023" starttimestamp="1700582044267" timestamp="1594579" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1174" _type="ShellCommand" date="Tue Nov 21 11:20:39 EST 2023" starttimestamp="1700582044267" timestamp="1594899" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1175" _type="ShellCommand" date="Tue Nov 21 11:20:41 EST 2023" starttimestamp="1700582044267" timestamp="1597258" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1176" _type="MoveCaretCommand" caretOffset="982" date="Tue Nov 21 11:20:41 EST 2023" docOffset="982" starttimestamp="1700582044267" timestamp="1597317" />
  <Command __id="1177" _type="ShellCommand" date="Tue Nov 21 11:21:37 EST 2023" starttimestamp="1700582044267" timestamp="1653262" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1178" _type="ShellCommand" date="Tue Nov 21 11:21:38 EST 2023" starttimestamp="1700582044267" timestamp="1654459" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1179" _type="ShellCommand" date="Tue Nov 21 11:21:39 EST 2023" starttimestamp="1700582044267" timestamp="1655289" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1180" _type="ShellCommand" date="Tue Nov 21 11:21:57 EST 2023" starttimestamp="1700582044267" timestamp="1673152" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1181" _type="MoveCaretCommand" caretOffset="433" date="Tue Nov 21 11:22:03 EST 2023" docOffset="433" starttimestamp="1700582044267" timestamp="1678946" />
  <Command __id="1182" _type="MoveCaretCommand" caretOffset="458" date="Tue Nov 21 11:22:04 EST 2023" docOffset="458" starttimestamp="1700582044267" timestamp="1680727" />
  <Command __id="1183" _type="SelectTextCommand" caretOffset="567" date="Tue Nov 21 11:22:07 EST 2023" end="643" start="567" starttimestamp="1700582044267" timestamp="1683115" />
  <Command __id="1184" _type="ShellCommand" date="Tue Nov 21 11:22:07 EST 2023" starttimestamp="1700582044267" timestamp="1683327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1018" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:12:23 EST 2023" docASTNodeCount="106" docActiveCodeLength="630" docExpressionCount="75" docLength="630" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1098998">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1022" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:12:26 EST 2023" docASTNodeCount="6" docActiveCodeLength="51" docExpressionCount="2" docLength="51" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1101851">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;public class GreaterEvaluator {}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1025" _type="Insert" date="Tue Nov 21 11:12:27 EST 2023" docASTNodeCount="14" docActiveCodeLength="90" docExpressionCount="9" docLength="90" length="39" offset="15" repeat="3" starttimestamp="1700582044267" timestamp="1103409" timestamp2="1103866">
    <text><![CDATA[
import main.lisp.evaluator.Evaluator;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1040" _type="Insert" date="Tue Nov 21 11:12:31 EST 2023" docASTNodeCount="16" docActiveCodeLength="110" docExpressionCount="10" docLength="110" length="20" offset="85" repeat="12" starttimestamp="1700582044267" timestamp="1107381" timestamp2="1108860">
    <text><![CDATA[implements Evaluator]]></text>
  </DocumentChange>
  <DocumentChange __id="1066" _type="Insert" date="Tue Nov 21 11:12:35 EST 2023" docASTNodeCount="34" docActiveCodeLength="206" docExpressionCount="19" docLength="240" length="130" offset="106" repeat="4" starttimestamp="1700582044267" timestamp="1111090" timestamp2="1111092">
    <text><![CDATA[

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1070" _type="Insert" date="Tue Nov 21 11:12:35 EST 2023" docASTNodeCount="44" docActiveCodeLength="249" docExpressionCount="28" docLength="283" length="43" offset="53" repeat="2" starttimestamp="1700582044267" timestamp="1111092" timestamp2="1111092">
    <text><![CDATA[
import main.lisp.parser.terms.SExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="1072" _type="Insert" date="Tue Nov 21 11:12:35 EST 2023" docASTNodeCount="52" docActiveCodeLength="289" docExpressionCount="35" docLength="323" length="40" offset="16" repeat="2" starttimestamp="1700582044267" timestamp="1111092" timestamp2="1111092">
    <text><![CDATA[import main.lisp.evaluator.Environment;
]]></text>
  </DocumentChange>
  <Command __id="1118" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:17:39 EST 2023" docASTNodeCount="118" docActiveCodeLength="1014" docExpressionCount="77" docLength="1014" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1414799">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		"), Diff(INSERT,"public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new SumEvaluator());	}		public static void registerLogic() {			}		"), Diff(EQUAL,"	@Override	public void registerOperations() {		registerBasic();	"), Diff(INSERT,"	registerArithmetic();		registerLogic();	"), Diff(EQUAL,"}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new SumEvaluator());
	}
	
	public static void registerLogic() {
		
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
		registerArithmetic();
		registerLogic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1120" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:17:39 EST 2023" docASTNodeCount="180" docActiveCodeLength="1109" docExpressionCount="125" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1415658">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class GreaterEvaluator {"), Diff(INSERT,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				if (expr instanceof NilAtom || expr.getTail() instanceof NilAtom) {			throw new IllegalStateException("Missing arguments for operator '>'");		}		if (!(expr.getTail().getTail() instanceof NilAtom)) {			throw new IllegalStateException("Too many arguments for operator '>'");		}		SExpression firstExpr = expr.getHead();		SExpression secondExpr = expr.getTail().getHead();		SExpression firstEvaled = firstExpr.eval(environment);		SExpression secondEvaled = secondExpr.eval(environment);				firstEvaled.		if (!firstEvaled.getClass().equals(secondEvaled.getClass())) {			return new NilAtom();		} else {			if(firstEvaled.equals(secondEvaled)) {				return new TAtom();			} else {				return new NilAtom();			}		}	}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtom;

public class GreaterEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
		if (expr instanceof NilAtom || expr.getTail() instanceof NilAtom) {
			throw new IllegalStateException("Missing arguments for operator '>'");
		}
		if (!(expr.getTail().getTail() instanceof NilAtom)) {
			throw new IllegalStateException("Too many arguments for operator '>'");
		}
		SExpression firstExpr = expr.getHead();
		SExpression secondExpr = expr.getTail().getHead();

		SExpression firstEvaled = firstExpr.eval(environment);
		SExpression secondEvaled = secondExpr.eval(environment);
		
		firstEvaled.
		if (!firstEvaled.getClass().equals(secondEvaled.getClass())) {
			return new NilAtom();
		} else {
			if(firstEvaled.equals(secondEvaled)) {
				return new TAtom();
			} else {
				return new NilAtom();
			}
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1128" _type="Replace" date="Tue Nov 21 11:18:48 EST 2023" docASTNodeCount="324" docActiveCodeLength="2081" docExpressionCount="219" docLength="2081" endLine="35" insertionLength="1726" int_docASTNodeCount="70" int_docActiveCodeLength="355" int_docExpressionCount="52" int_docLength="355" length="754" offset="348" startLine="12" starttimestamp="1700582044267" timestamp="1484372">
    <deletedText><![CDATA[		expr = expr.getTail();
		
		if (expr instanceof NilAtom || expr.getTail() instanceof NilAtom) {
			throw new IllegalStateException("Missing arguments for operator '>'");
		}
		if (!(expr.getTail().getTail() instanceof NilAtom)) {
			throw new IllegalStateException("Too many arguments for operator '>'");
		}
		SExpression firstExpr = expr.getHead();
		SExpression secondExpr = expr.getTail().getHead();

		SExpression firstEvaled = firstExpr.eval(environment);
		SExpression secondEvaled = secondExpr.eval(environment);
		
		firstEvaled.
		if (!firstEvaled.getClass().equals(secondEvaled.getClass())) {
			return new NilAtom();
		} else {
			if(firstEvaled.equals(secondEvaled)) {
				return new TAtom();
			} else {
				return new NilAtom();
			}
		}]]></deletedText>
    <insertedText><![CDATA[		expr = expr.getTail();
		if (expr instanceof NilAtom || expr.getHead() instanceof NilAtom || expr.getTail() instanceof NilAtom) {
			throw new IllegalStateException("Missing arguments for operator '-'");
		}
		if (!(expr.getTail().getTail() instanceof NilAtom)) {
			throw new IllegalStateException("Too many arguments for operator '-'");
		}
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		int correctArgs = 0;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			correctArgs++;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			correctArgs++;
		}
		
		if (secondEvaled instanceof IntegerAtom) {
			secondInt = (IntegerAtom)secondEvaled;
			correctArgs++;
		}
		if (secondEvaled instanceof DecimalAtom) {
			secondDec = (DecimalAtom)secondEvaled;
			correctArgs++;
		}
		
		if (correctArgs != 2) {
			throw new IllegalStateException("Arguments for operator '-' must both evaluate to numbers");
		}
		
		if (firstInt != null && secondInt != null) {
			long difference = firstInt.getValue() - secondInt.getValue();
			return new IntegerAtom(difference);
		} else {
			double difference = 0;
			if (firstInt != null) {
				difference = firstInt.getValue();
			} else if (firstDec != null) {
				difference = firstDec.getValue();
			}
			if (secondInt != null) {
				difference -= secondInt.getValue();
			} else if (secondDec != null) {
				difference -= secondDec.getValue();
			}
			return new DecimalAtom(difference);
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1132" _type="Insert" date="Tue Nov 21 11:18:53 EST 2023" docASTNodeCount="334" docActiveCodeLength="2124" docExpressionCount="228" docLength="2124" length="43" offset="93" repeat="2" starttimestamp="1700582044267" timestamp="1488881" timestamp2="1488882">
    <text><![CDATA[
import main.lisp.parser.terms.IntegerAtom;]]></text>
  </DocumentChange>
  <DocumentChange __id="1136" _type="Insert" date="Tue Nov 21 11:18:55 EST 2023" docASTNodeCount="344" docActiveCodeLength="2167" docExpressionCount="237" docLength="2167" length="43" offset="93" repeat="2" starttimestamp="1700582044267" timestamp="1490905" timestamp2="1490906">
    <text><![CDATA[
import main.lisp.parser.terms.DecimalAtom;]]></text>
  </DocumentChange>
  <Command __id="1185" _type="ShellCommand" date="Tue Nov 21 11:22:10 EST 2023" starttimestamp="1700582044267" timestamp="1686667" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1186" _type="MoveCaretCommand" caretOffset="643" date="Tue Nov 21 11:22:11 EST 2023" docOffset="643" starttimestamp="1700582044267" timestamp="1687274" />
  <Command __id="1187" _type="ShellCommand" date="Tue Nov 21 11:22:11 EST 2023" starttimestamp="1700582044267" timestamp="1687558" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1188" _type="ShellCommand" date="Tue Nov 21 11:22:12 EST 2023" starttimestamp="1700582044267" timestamp="1688034" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1189" _type="SelectTextCommand" caretOffset="459" date="Tue Nov 21 11:22:13 EST 2023" end="643" start="459" starttimestamp="1700582044267" timestamp="1688951" />
  <DocumentChange __id="1190" _type="Delete" date="Tue Nov 21 11:22:14 EST 2023" docASTNodeCount="320" docActiveCodeLength="1983" docExpressionCount="220" docLength="1983" endLine="17" length="184" offset="459" startLine="15" starttimestamp="1700582044267" timestamp="1690249">
    <text><![CDATA[		if (expr instanceof NilAtom || expr.getHead() instanceof NilAtom || expr.getTail() instanceof NilAtom) {
			throw new IllegalStateException("Missing arguments for operator '-'");
		}]]></text>
  </DocumentChange>
  <Command __id="1191" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:22:14 EST 2023" starttimestamp="1700582044267" timestamp="1690256" />
  <Command __id="1192" _type="SelectTextCommand" caretOffset="460" date="Tue Nov 21 11:22:15 EST 2023" end="519" start="460" starttimestamp="1700582044267" timestamp="1691070" />
  <DocumentChange __id="1193" _type="Delete" date="Tue Nov 21 11:22:15 EST 2023" docASTNodeCount="283" docActiveCodeLength="1924" docExpressionCount="189" docLength="1924" endLine="17" length="59" offset="460" startLine="16" starttimestamp="1700582044267" timestamp="1691182">
    <text><![CDATA[		if (!(expr.getTail().getTail() instanceof NilAtom)) {
			]]></text>
  </DocumentChange>
  <Command __id="1194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:22:15 EST 2023" starttimestamp="1700582044267" timestamp="1691185" />
  <Command __id="1195" _type="SelectTextCommand" caretOffset="459" date="Tue Nov 21 11:22:16 EST 2023" end="535" start="459" starttimestamp="1700582044267" timestamp="1691875" />
  <Command __id="1197" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:22:16 EST 2023" starttimestamp="1700582044267" timestamp="1691950" />
  <Command __id="1199" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:22:16 EST 2023" starttimestamp="1700582044267" timestamp="1692420" />
  <Command __id="1200" _type="MoveCaretCommand" caretOffset="439" date="Tue Nov 21 11:22:17 EST 2023" docOffset="439" starttimestamp="1700582044267" timestamp="1693572" />
  <Command __id="1201" _type="MoveCaretCommand" caretOffset="481" date="Tue Nov 21 11:22:18 EST 2023" docOffset="481" starttimestamp="1700582044267" timestamp="1694159" />
  <Command __id="1202" _type="MoveCaretCommand" caretOffset="471" date="Tue Nov 21 11:22:19 EST 2023" docOffset="471" starttimestamp="1700582044267" timestamp="1695386" />
  <Command __id="1203" _type="MoveCaretCommand" caretOffset="482" date="Tue Nov 21 11:22:20 EST 2023" docOffset="482" starttimestamp="1700582044267" timestamp="1695848" />
  <Command __id="1204" _type="MoveCaretCommand" caretOffset="548" date="Tue Nov 21 11:22:20 EST 2023" docOffset="548" starttimestamp="1700582044267" timestamp="1696193" />
  <Command __id="1205" _type="MoveCaretCommand" caretOffset="507" date="Tue Nov 21 11:22:21 EST 2023" docOffset="507" starttimestamp="1700582044267" timestamp="1697493" />
  <Command __id="1206" _type="MoveCaretCommand" caretOffset="547" date="Tue Nov 21 11:22:22 EST 2023" docOffset="547" starttimestamp="1700582044267" timestamp="1697977" />
  <Command __id="1207" _type="MoveCaretCommand" caretOffset="618" date="Tue Nov 21 11:22:23 EST 2023" docOffset="618" starttimestamp="1700582044267" timestamp="1699369" />
  <Command __id="1208" _type="MoveCaretCommand" caretOffset="609" date="Tue Nov 21 11:22:23 EST 2023" docOffset="609" starttimestamp="1700582044267" timestamp="1699649" />
  <Command __id="1209" _type="MoveCaretCommand" caretOffset="751" date="Tue Nov 21 11:22:24 EST 2023" docOffset="751" starttimestamp="1700582044267" timestamp="1700523" />
  <Command __id="1210" _type="MoveCaretCommand" caretOffset="742" date="Tue Nov 21 11:22:26 EST 2023" docOffset="742" starttimestamp="1700582044267" timestamp="1701964" />
  <Command __id="1211" _type="MoveCaretCommand" caretOffset="849" date="Tue Nov 21 11:22:26 EST 2023" docOffset="849" starttimestamp="1700582044267" timestamp="1702371" />
  <Command __id="1212" _type="MoveCaretCommand" caretOffset="767" date="Tue Nov 21 11:22:28 EST 2023" docOffset="767" starttimestamp="1700582044267" timestamp="1704181" />
  <Command __id="1213" _type="MoveCaretCommand" caretOffset="767" date="Tue Nov 21 11:22:30 EST 2023" docOffset="767" starttimestamp="1700582044267" timestamp="1706669" />
  <Command __id="1214" _type="MoveCaretCommand" caretOffset="788" date="Tue Nov 21 11:22:32 EST 2023" docOffset="788" starttimestamp="1700582044267" timestamp="1708724" />
  <Command __id="1215" _type="MoveCaretCommand" caretOffset="807" date="Tue Nov 21 11:22:33 EST 2023" docOffset="807" starttimestamp="1700582044267" timestamp="1709605" />
  <Command __id="1216" _type="MoveCaretCommand" caretOffset="827" date="Tue Nov 21 11:22:34 EST 2023" docOffset="827" starttimestamp="1700582044267" timestamp="1709851" />
  <Command __id="1217" _type="SelectTextCommand" caretOffset="1191" date="Tue Nov 21 11:22:39 EST 2023" end="1316" start="1191" starttimestamp="1700582044267" timestamp="1715598" />
  <Command __id="1219" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:22:40 EST 2023" starttimestamp="1700582044267" timestamp="1716382" />
  <Command __id="1221" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:22:40 EST 2023" starttimestamp="1700582044267" timestamp="1716685" />
  <DocumentChange __id="1196" _type="Delete" date="Tue Nov 21 11:22:16 EST 2023" docASTNodeCount="303" docActiveCodeLength="1847" docExpressionCount="208" docLength="1847" endLine="17" length="77" offset="458" repeat="2" startLine="14" starttimestamp="1700582044267" timestamp="1691947" timestamp2="1692417">
    <text><![CDATA[

throw new IllegalStateException("Too many arguments for operator '-'");
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1218" _type="Delete" date="Tue Nov 21 11:22:40 EST 2023" docASTNodeCount="293" docActiveCodeLength="1721" docExpressionCount="202" docLength="1721" endLine="46" length="126" offset="1190" repeat="2" startLine="43" starttimestamp="1700582044267" timestamp="1716376" timestamp2="1716682">
    <text><![CDATA[
		if (correctArgs != 2) {
			throw new IllegalStateException("Arguments for operator '-' must both evaluate to numbers");
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1223" _type="Delete" date="Tue Nov 21 11:22:45 EST 2023" docASTNodeCount="283" docActiveCodeLength="1662" docExpressionCount="195" docLength="1662" endLine="37" length="59" offset="1015" startLine="36" starttimestamp="1700582044267" timestamp="1720811">
    <text><![CDATA[			secondInt = (IntegerAtom)secondEvaled;
			correctArgs++;]]></text>
  </DocumentChange>
  <Command __id="1222" _type="SelectTextCommand" caretOffset="1015" date="Tue Nov 21 11:22:44 EST 2023" end="1074" start="1015" starttimestamp="1700582044267" timestamp="1720049" />
  <Command __id="1224" _type="CutCommand" date="Tue Nov 21 11:22:45 EST 2023" starttimestamp="1700582044267" timestamp="1720818" />
  <Command __id="1225" _type="MoveCaretCommand" caretOffset="856" date="Tue Nov 21 11:22:45 EST 2023" docOffset="856" starttimestamp="1700582044267" timestamp="1721122" />
  <Command __id="1227" _type="InsertStringCommand" date="Tue Nov 21 11:22:47 EST 2023" starttimestamp="1700582044267" timestamp="1722858" timestamp2="1722858">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1229" _type="PasteCommand" date="Tue Nov 21 11:22:47 EST 2023" starttimestamp="1700582044267" timestamp="1723131" />
  <Command __id="1230" _type="MoveCaretCommand" caretOffset="856" date="Tue Nov 21 11:22:48 EST 2023" docOffset="856" starttimestamp="1700582044267" timestamp="1724025" />
  <Command __id="1231" _type="InsertStringCommand" date="Tue Nov 21 11:22:48 EST 2023" starttimestamp="1700582044267" timestamp="1724285" timestamp2="1724285">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1233" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:22:49 EST 2023" starttimestamp="1700582044267" timestamp="1724986" />
  <Command __id="1234" _type="MoveCaretCommand" caretOffset="898" date="Tue Nov 21 11:22:49 EST 2023" docOffset="898" starttimestamp="1700582044267" timestamp="1725505" />
  <Command __id="1236" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:22:49 EST 2023" starttimestamp="1700582044267" timestamp="1725657" />
  <Command __id="1237" _type="MoveCaretCommand" caretOffset="751" date="Tue Nov 21 11:22:50 EST 2023" docOffset="751" starttimestamp="1700582044267" timestamp="1725954" />
  <Command __id="1239" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:22:50 EST 2023" starttimestamp="1700582044267" timestamp="1726062" />
  <Command __id="1241" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:22:50 EST 2023" starttimestamp="1700582044267" timestamp="1726412" />
  <Command __id="1242" _type="MoveCaretCommand" caretOffset="858" date="Tue Nov 21 11:22:51 EST 2023" docOffset="858" starttimestamp="1700582044267" timestamp="1727078" />
  <Command __id="1243" _type="MoveCaretCommand" caretOffset="959" date="Tue Nov 21 11:22:51 EST 2023" docOffset="959" starttimestamp="1700582044267" timestamp="1727496" />
  <Command __id="1244" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 11:22:52 EST 2023" docOffset="960" starttimestamp="1700582044267" timestamp="1727980" />
  <Command __id="1245" _type="MoveCaretCommand" caretOffset="1122" date="Tue Nov 21 11:22:53 EST 2023" docOffset="1122" starttimestamp="1700582044267" timestamp="1729027" />
  <Command __id="1247" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:22:53 EST 2023" starttimestamp="1700582044267" timestamp="1729316" />
  <Command __id="1248" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 11:22:53 EST 2023" docOffset="960" starttimestamp="1700582044267" timestamp="1729622" />
  <Command __id="1250" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:22:54 EST 2023" starttimestamp="1700582044267" timestamp="1729738" />
  <Command __id="1251" _type="SelectTextCommand" caretOffset="1048" date="Tue Nov 21 11:23:01 EST 2023" end="1086" start="1048" starttimestamp="1700582044267" timestamp="1737141" />
  <Command __id="1253" _type="CutCommand" date="Tue Nov 21 11:23:01 EST 2023" starttimestamp="1700582044267" timestamp="1737392" />
  <Command __id="1254" _type="MoveCaretCommand" caretOffset="942" date="Tue Nov 21 11:23:02 EST 2023" docOffset="942" starttimestamp="1700582044267" timestamp="1737754" />
  <Command __id="1256" _type="InsertStringCommand" date="Tue Nov 21 11:23:02 EST 2023" starttimestamp="1700582044267" timestamp="1738460" timestamp2="1738460">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1258" _type="PasteCommand" date="Tue Nov 21 11:23:02 EST 2023" starttimestamp="1700582044267" timestamp="1738610" />
  <Command __id="1259" _type="MoveCaretCommand" caretOffset="1037" date="Tue Nov 21 11:23:04 EST 2023" docOffset="1037" starttimestamp="1700582044267" timestamp="1739908" />
  <Command __id="1260" _type="SelectTextCommand" caretOffset="992" date="Tue Nov 21 11:23:04 EST 2023" end="1094" start="992" starttimestamp="1700582044267" timestamp="1740667" />
  <Command __id="1262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:05 EST 2023" starttimestamp="1700582044267" timestamp="1741055" />
  <Command __id="1264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:05 EST 2023" starttimestamp="1700582044267" timestamp="1741178" />
  <Command __id="1266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:05 EST 2023" starttimestamp="1700582044267" timestamp="1741496" />
  <Command __id="1268" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:06 EST 2023" starttimestamp="1700582044267" timestamp="1741855" />
  <Command __id="1270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:06 EST 2023" starttimestamp="1700582044267" timestamp="1742078" />
  <Command __id="1271" _type="MoveCaretCommand" caretOffset="991" date="Tue Nov 21 11:23:06 EST 2023" docOffset="991" starttimestamp="1700582044267" timestamp="1742662" />
  <Command __id="1273" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:07 EST 2023" starttimestamp="1700582044267" timestamp="1742831" />
  <Command __id="1275" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:07 EST 2023" starttimestamp="1700582044267" timestamp="1743102" />
  <Command __id="1277" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:07 EST 2023" starttimestamp="1700582044267" timestamp="1743313" />
  <Command __id="1278" _type="MoveCaretCommand" caretOffset="984" date="Tue Nov 21 11:23:07 EST 2023" docOffset="984" starttimestamp="1700582044267" timestamp="1743707" />
  <Command __id="1279" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:23:08 EST 2023" starttimestamp="1700582044267" timestamp="1744441" />
  <Command __id="1280" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:23:08 EST 2023" starttimestamp="1700582044267" timestamp="1744544" />
  <Command __id="1281" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:23:08 EST 2023" starttimestamp="1700582044267" timestamp="1744561" />
  <Command __id="1282" _type="MoveCaretCommand" caretOffset="975" date="Tue Nov 21 11:23:10 EST 2023" docOffset="975" starttimestamp="1700582044267" timestamp="1746451" />
  <Command __id="1283" _type="MoveCaretCommand" caretOffset="937" date="Tue Nov 21 11:23:11 EST 2023" docOffset="937" starttimestamp="1700582044267" timestamp="1746838" />
  <Command __id="1284" _type="MoveCaretCommand" caretOffset="848" date="Tue Nov 21 11:23:11 EST 2023" docOffset="848" starttimestamp="1700582044267" timestamp="1747280" />
  <Command __id="1285" _type="MoveCaretCommand" caretOffset="807" date="Tue Nov 21 11:23:11 EST 2023" docOffset="807" starttimestamp="1700582044267" timestamp="1747493" />
  <Command __id="1286" _type="MoveCaretCommand" caretOffset="847" date="Tue Nov 21 11:23:12 EST 2023" docOffset="847" starttimestamp="1700582044267" timestamp="1747820" />
  <Command __id="1287" _type="MoveCaretCommand" caretOffset="988" date="Tue Nov 21 11:23:12 EST 2023" docOffset="988" starttimestamp="1700582044267" timestamp="1748166" />
  <Command __id="1288" _type="MoveCaretCommand" caretOffset="953" date="Tue Nov 21 11:23:12 EST 2023" docOffset="953" starttimestamp="1700582044267" timestamp="1748507" />
  <Command __id="1289" _type="MoveCaretCommand" caretOffset="1001" date="Tue Nov 21 11:23:13 EST 2023" docOffset="1001" starttimestamp="1700582044267" timestamp="1749381" />
  <Command __id="1290" _type="MoveCaretCommand" caretOffset="1010" date="Tue Nov 21 11:23:14 EST 2023" docOffset="1010" starttimestamp="1700582044267" timestamp="1750103" />
  <Command __id="1291" _type="MoveCaretCommand" caretOffset="1001" date="Tue Nov 21 11:23:14 EST 2023" docOffset="1001" starttimestamp="1700582044267" timestamp="1750397" />
  <Command __id="1292" _type="MoveCaretCommand" caretOffset="1011" date="Tue Nov 21 11:23:14 EST 2023" docOffset="1011" starttimestamp="1700582044267" timestamp="1750690" />
  <Command __id="1293" _type="MoveCaretCommand" caretOffset="1022" date="Tue Nov 21 11:23:15 EST 2023" docOffset="1022" starttimestamp="1700582044267" timestamp="1751138" />
  <Command __id="1294" _type="MoveCaretCommand" caretOffset="1002" date="Tue Nov 21 11:23:15 EST 2023" docOffset="1002" starttimestamp="1700582044267" timestamp="1751673" />
  <Command __id="1295" _type="MoveCaretCommand" caretOffset="991" date="Tue Nov 21 11:23:16 EST 2023" docOffset="991" starttimestamp="1700582044267" timestamp="1752296" />
  <DocumentChange __id="1226" _type="Insert" date="Tue Nov 21 11:22:47 EST 2023" docASTNodeCount="283" docActiveCodeLength="1666" docExpressionCount="195" docLength="1666" length="4" offset="856" starttimestamp="1700582044267" timestamp="1722853">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="1228" _type="Replace" date="Tue Nov 21 11:22:47 EST 2023" docASTNodeCount="293" docActiveCodeLength="1722" docExpressionCount="202" docLength="1722" endLine="29" insertionLength="59" int_docASTNodeCount="283" int_docActiveCodeLength="1663" int_docExpressionCount="195" int_docLength="1663" length="3" offset="857" startLine="29" starttimestamp="1700582044267" timestamp="1723125">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			secondInt = (IntegerAtom)secondEvaled;
			correctArgs++;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1232" _type="Delete" date="Tue Nov 21 11:22:49 EST 2023" docASTNodeCount="290" docActiveCodeLength="1704" docExpressionCount="200" docLength="1704" endLine="29" length="18" offset="839" startLine="28" starttimestamp="1700582044267" timestamp="1724983">
    <text><![CDATA[			correctArgs++;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1235" _type="Delete" date="Tue Nov 21 11:22:49 EST 2023" docASTNodeCount="287" docActiveCodeLength="1686" docExpressionCount="198" docLength="1686" endLine="30" length="18" offset="881" startLine="29" starttimestamp="1700582044267" timestamp="1725655">
    <text><![CDATA[			correctArgs++;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1238" _type="Delete" date="Tue Nov 21 11:22:50 EST 2023" docASTNodeCount="282" docActiveCodeLength="1660" docExpressionCount="196" docLength="1660" endLine="26" length="26" offset="729" repeat="2" startLine="24" starttimestamp="1700582044267" timestamp="1726060" timestamp2="1726409">
    <text><![CDATA[		int correctArgs = 0;
		
]]></text>
  </DocumentChange>
  <DocumentChange __id="1246" _type="Delete" date="Tue Nov 21 11:22:53 EST 2023" docASTNodeCount="279" docActiveCodeLength="1642" docExpressionCount="194" docLength="1642" endLine="39" length="18" offset="1105" startLine="38" starttimestamp="1700582044267" timestamp="1729313">
    <text><![CDATA[			correctArgs++;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1249" _type="Delete" date="Tue Nov 21 11:22:54 EST 2023" docASTNodeCount="276" docActiveCodeLength="1624" docExpressionCount="192" docLength="1624" endLine="31" length="18" offset="943" startLine="30" starttimestamp="1700582044267" timestamp="1729736">
    <text><![CDATA[			correctArgs++;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1252" _type="Delete" date="Tue Nov 21 11:23:01 EST 2023" docASTNodeCount="269" docActiveCodeLength="1586" docExpressionCount="187" docLength="1586" endLine="36" length="38" offset="1048" startLine="36" starttimestamp="1700582044267" timestamp="1737385">
    <text><![CDATA[secondDec = (DecimalAtom)secondEvaled;]]></text>
  </DocumentChange>
  <DocumentChange __id="1255" _type="Insert" date="Tue Nov 21 11:23:02 EST 2023" docASTNodeCount="269" docActiveCodeLength="1590" docExpressionCount="187" docLength="1590" length="4" offset="942" starttimestamp="1700582044267" timestamp="1738456">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="1257" _type="Replace" date="Tue Nov 21 11:23:02 EST 2023" docASTNodeCount="276" docActiveCodeLength="1628" docExpressionCount="192" docLength="1628" endLine="30" insertionLength="41" int_docASTNodeCount="269" int_docActiveCodeLength="1587" int_docExpressionCount="187" int_docLength="1587" length="3" offset="943" startLine="30" starttimestamp="1700582044267" timestamp="1738606">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			secondDec = (DecimalAtom)secondEvaled;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1261" _type="Delete" date="Tue Nov 21 11:23:05 EST 2023" docASTNodeCount="264" docActiveCodeLength="1522" docExpressionCount="186" docLength="1522" endLine="38" length="106" offset="988" repeat="5" startLine="31" starttimestamp="1700582044267" timestamp="1741050" timestamp2="1742074">
    <text><![CDATA[
		
		if (secondEvaled instanceof IntegerAtom) {

		}
		if (secondEvaled instanceof DecimalAtom) {
			
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1272" _type="Delete" date="Tue Nov 21 11:23:07 EST 2023" docASTNodeCount="264" docActiveCodeLength="1519" docExpressionCount="186" docLength="1519" endLine="32" length="3" offset="988" repeat="3" startLine="31" starttimestamp="1700582044267" timestamp="1742829" timestamp2="1743310">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="1296" _type="SelectTextCommand" caretOffset="1034" date="Tue Nov 21 11:23:18 EST 2023" end="1034" start="1015" starttimestamp="1700582044267" timestamp="1754601" />
  <Command __id="1298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:20 EST 2023" starttimestamp="1700582044267" timestamp="1756028" />
  <Command __id="1299" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:23:20 EST 2023" starttimestamp="1700582044267" timestamp="1756174" />
  <Command __id="1301" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:20 EST 2023" starttimestamp="1700582044267" timestamp="1756252" />
  <Command __id="1303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:20 EST 2023" starttimestamp="1700582044267" timestamp="1756500" />
  <Command __id="1304" _type="MoveCaretCommand" caretOffset="1121" date="Tue Nov 21 11:23:21 EST 2023" docOffset="1121" starttimestamp="1700582044267" timestamp="1757650" />
  <Command __id="1305" _type="MoveCaretCommand" caretOffset="1093" date="Tue Nov 21 11:23:23 EST 2023" docOffset="1093" starttimestamp="1700582044267" timestamp="1759347" />
  <Command __id="1306" _type="MoveCaretCommand" caretOffset="1102" date="Tue Nov 21 11:23:24 EST 2023" docOffset="1102" starttimestamp="1700582044267" timestamp="1759802" />
  <Command __id="1307" _type="MoveCaretCommand" caretOffset="1121" date="Tue Nov 21 11:23:32 EST 2023" docOffset="1121" starttimestamp="1700582044267" timestamp="1767904" />
  <Command __id="1308" _type="SelectTextCommand" caretOffset="1093" date="Tue Nov 21 11:23:33 EST 2023" end="1121" start="1093" starttimestamp="1700582044267" timestamp="1769643" />
  <DocumentChange __id="1297" _type="Delete" date="Tue Nov 21 11:23:20 EST 2023" docASTNodeCount="260" docActiveCodeLength="1498" docExpressionCount="182" docLength="1498" endLine="33" length="21" offset="1014" repeat="3" startLine="33" starttimestamp="1700582044267" timestamp="1756019" timestamp2="1756498">
    <text><![CDATA[ && secondInt != null]]></text>
  </DocumentChange>
  <DocumentChange __id="1310" _type="Insert" date="Tue Nov 21 11:23:36 EST 2023" docASTNodeCount="262" docActiveCodeLength="1516" docExpressionCount="183" docLength="1516" length="18" offset="1082" repeat="14" starttimestamp="1700582044267" timestamp="1772386" timestamp2="1774793">
    <text><![CDATA[
			if(difference)]]></text>
  </DocumentChange>
  <DocumentChange __id="1338" _type="Insert" date="Tue Nov 21 11:23:48 EST 2023" docASTNodeCount="264" docActiveCodeLength="1518" docExpressionCount="185" docLength="1518" length="2" offset="1099" repeat="2" starttimestamp="1700582044267" timestamp="1784729" timestamp2="1784878">
    <text><![CDATA[ =]]></text>
  </DocumentChange>
  <DocumentChange __id="1342" _type="Delete" date="Tue Nov 21 11:23:49 EST 2023" docASTNodeCount="262" docActiveCodeLength="1517" docExpressionCount="183" docLength="1517" endLine="35" length="1" offset="1100" startLine="35" starttimestamp="1700582044267" timestamp="1785266">
    <text><![CDATA[=]]></text>
  </DocumentChange>
  <Command __id="1309" _type="MoveCaretCommand" caretOffset="1082" date="Tue Nov 21 11:23:36 EST 2023" docOffset="1082" starttimestamp="1700582044267" timestamp="1771919" />
  <Command __id="1311" _type="InsertStringCommand" date="Tue Nov 21 11:23:36 EST 2023" starttimestamp="1700582044267" timestamp="1772389" timestamp2="1772389">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1313" _type="InsertStringCommand" date="Tue Nov 21 11:23:37 EST 2023" starttimestamp="1700582044267" timestamp="1772775" timestamp2="1772775">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1315" _type="InsertStringCommand" date="Tue Nov 21 11:23:37 EST 2023" starttimestamp="1700582044267" timestamp="1772895" timestamp2="1772895">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1317" _type="InsertStringCommand" date="Tue Nov 21 11:23:37 EST 2023" starttimestamp="1700582044267" timestamp="1773015" timestamp2="1773015">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1319" _type="InsertStringCommand" date="Tue Nov 21 11:23:37 EST 2023" starttimestamp="1700582044267" timestamp="1773470" timestamp2="1773470">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1321" _type="InsertStringCommand" date="Tue Nov 21 11:23:37 EST 2023" starttimestamp="1700582044267" timestamp="1773553" timestamp2="1773553">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1323" _type="InsertStringCommand" date="Tue Nov 21 11:23:37 EST 2023" starttimestamp="1700582044267" timestamp="1773626" timestamp2="1773626">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1325" _type="InsertStringCommand" date="Tue Nov 21 11:23:38 EST 2023" starttimestamp="1700582044267" timestamp="1773795" timestamp2="1773795">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1327" _type="InsertStringCommand" date="Tue Nov 21 11:23:38 EST 2023" starttimestamp="1700582044267" timestamp="1774244" timestamp2="1774244">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1329" _type="InsertStringCommand" date="Tue Nov 21 11:23:38 EST 2023" starttimestamp="1700582044267" timestamp="1774318" timestamp2="1774318">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1331" _type="InsertStringCommand" date="Tue Nov 21 11:23:38 EST 2023" starttimestamp="1700582044267" timestamp="1774428" timestamp2="1774428">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1333" _type="InsertStringCommand" date="Tue Nov 21 11:23:38 EST 2023" starttimestamp="1700582044267" timestamp="1774542" timestamp2="1774542">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1335" _type="InsertStringCommand" date="Tue Nov 21 11:23:38 EST 2023" starttimestamp="1700582044267" timestamp="1774614" timestamp2="1774614">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1337" _type="InsertStringCommand" date="Tue Nov 21 11:23:39 EST 2023" starttimestamp="1700582044267" timestamp="1774793" timestamp2="1774793">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1339" _type="InsertStringCommand" date="Tue Nov 21 11:23:48 EST 2023" starttimestamp="1700582044267" timestamp="1784730" timestamp2="1784730">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1341" _type="InsertStringCommand" date="Tue Nov 21 11:23:49 EST 2023" starttimestamp="1700582044267" timestamp="1784879" timestamp2="1784879">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:49 EST 2023" starttimestamp="1700582044267" timestamp="1785269" />
  <Command __id="1345" _type="InsertStringCommand" date="Tue Nov 21 11:23:51 EST 2023" starttimestamp="1700582044267" timestamp="1786833" timestamp2="1786833">
    <data><![CDATA[>]]></data>
  </Command>
  <Command __id="1347" _type="InsertStringCommand" date="Tue Nov 21 11:23:51 EST 2023" starttimestamp="1700582044267" timestamp="1787642" timestamp2="1787642">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1349" _type="InsertStringCommand" date="Tue Nov 21 11:23:52 EST 2023" starttimestamp="1700582044267" timestamp="1787735" timestamp2="1787735">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="1351" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:52 EST 2023" starttimestamp="1700582044267" timestamp="1788326" />
  <Command __id="1353" _type="InsertStringCommand" date="Tue Nov 21 11:23:52 EST 2023" starttimestamp="1700582044267" timestamp="1788482" timestamp2="1788482">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="1355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:23:53 EST 2023" starttimestamp="1700582044267" timestamp="1788849" />
  <Command __id="1357" _type="InsertStringCommand" date="Tue Nov 21 11:23:53 EST 2023" starttimestamp="1700582044267" timestamp="1788992" timestamp2="1788992">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="1358" _type="ShellCommand" date="Tue Nov 21 11:23:53 EST 2023" starttimestamp="1700582044267" timestamp="1789370" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1359" _type="ShellCommand" date="Tue Nov 21 11:23:58 EST 2023" starttimestamp="1700582044267" timestamp="1793891" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1360" _type="ShellCommand" date="Tue Nov 21 11:23:58 EST 2023" starttimestamp="1700582044267" timestamp="1794678" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1361" _type="ShellCommand" date="Tue Nov 21 11:23:59 EST 2023" starttimestamp="1700582044267" timestamp="1795314" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1362" _type="MoveCaretCommand" caretOffset="1104" date="Tue Nov 21 11:24:01 EST 2023" docOffset="1104" starttimestamp="1700582044267" timestamp="1797341" />
  <Command __id="1364" _type="InsertStringCommand" date="Tue Nov 21 11:24:02 EST 2023" starttimestamp="1700582044267" timestamp="1798233" timestamp2="1798233">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1366" _type="InsertStringCommand" date="Tue Nov 21 11:24:02 EST 2023" starttimestamp="1700582044267" timestamp="1798397" timestamp2="1798397">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1367" _type="ShellCommand" date="Tue Nov 21 11:24:02 EST 2023" starttimestamp="1700582044267" timestamp="1798714" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1368" _type="ShellCommand" date="Tue Nov 21 11:24:06 EST 2023" starttimestamp="1700582044267" timestamp="1802255" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1370" _type="InsertStringCommand" date="Tue Nov 21 11:24:07 EST 2023" starttimestamp="1700582044267" timestamp="1802898" timestamp2="1802898">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1372" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:24:07 EST 2023" starttimestamp="1700582044267" timestamp="1803604" />
  <Command __id="1374" _type="InsertStringCommand" date="Tue Nov 21 11:24:07 EST 2023" starttimestamp="1700582044267" timestamp="1803683" timestamp2="1803683">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1376" _type="InsertStringCommand" date="Tue Nov 21 11:24:08 EST 2023" starttimestamp="1700582044267" timestamp="1803764" timestamp2="1803764">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1378" _type="InsertStringCommand" date="Tue Nov 21 11:24:08 EST 2023" starttimestamp="1700582044267" timestamp="1803886" timestamp2="1803886">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1380" _type="InsertStringCommand" date="Tue Nov 21 11:24:08 EST 2023" starttimestamp="1700582044267" timestamp="1803953" timestamp2="1803953">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1382" _type="InsertStringCommand" date="Tue Nov 21 11:24:08 EST 2023" starttimestamp="1700582044267" timestamp="1804056" timestamp2="1804056">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1384" _type="InsertStringCommand" date="Tue Nov 21 11:24:08 EST 2023" starttimestamp="1700582044267" timestamp="1804117" timestamp2="1804117">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1386" _type="InsertStringCommand" date="Tue Nov 21 11:24:08 EST 2023" starttimestamp="1700582044267" timestamp="1804229" timestamp2="1804229">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1387" _type="ShellCommand" date="Tue Nov 21 11:24:10 EST 2023" starttimestamp="1700582044267" timestamp="1806450" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1344" _type="Insert" date="Tue Nov 21 11:23:51 EST 2023" docASTNodeCount="195" docActiveCodeLength="1520" docExpressionCount="139" docLength="1520" length="3" offset="1100" repeat="3" starttimestamp="1700582044267" timestamp="1786831" timestamp2="1787735">
    <text><![CDATA[> -]]></text>
  </DocumentChange>
  <DocumentChange __id="1350" _type="Delete" date="Tue Nov 21 11:23:52 EST 2023" docASTNodeCount="195" docActiveCodeLength="1519" docExpressionCount="139" docLength="1519" endLine="35" length="1" offset="1102" startLine="35" starttimestamp="1700582044267" timestamp="1788324">
    <text><![CDATA[-]]></text>
  </DocumentChange>
  <DocumentChange __id="1352" _type="Insert" date="Tue Nov 21 11:23:52 EST 2023" docASTNodeCount="195" docActiveCodeLength="1520" docExpressionCount="139" docLength="1520" length="1" offset="1102" starttimestamp="1700582044267" timestamp="1788481">
    <text><![CDATA[-]]></text>
  </DocumentChange>
  <DocumentChange __id="1354" _type="Delete" date="Tue Nov 21 11:23:53 EST 2023" docASTNodeCount="195" docActiveCodeLength="1519" docExpressionCount="139" docLength="1519" endLine="35" length="1" offset="1102" startLine="35" starttimestamp="1700582044267" timestamp="1788847">
    <text><![CDATA[-]]></text>
  </DocumentChange>
  <DocumentChange __id="1356" _type="Insert" date="Tue Nov 21 11:23:53 EST 2023" docASTNodeCount="264" docActiveCodeLength="1520" docExpressionCount="185" docLength="1520" length="1" offset="1102" starttimestamp="1700582044267" timestamp="1788991">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="1363" _type="Insert" date="Tue Nov 21 11:24:02 EST 2023" docASTNodeCount="265" docActiveCodeLength="1532" docExpressionCount="185" docLength="1532" length="12" offset="1104" repeat="2" starttimestamp="1700582044267" timestamp="1798232" timestamp2="1798396">
    <text><![CDATA[ {
				
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1369" _type="Insert" date="Tue Nov 21 11:24:07 EST 2023" docASTNodeCount="267" docActiveCodeLength="1533" docExpressionCount="186" docLength="1533" length="1" offset="1111" starttimestamp="1700582044267" timestamp="1802896">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="1371" _type="Delete" date="Tue Nov 21 11:24:07 EST 2023" docASTNodeCount="265" docActiveCodeLength="1532" docExpressionCount="185" docLength="1532" endLine="36" length="1" offset="1111" startLine="36" starttimestamp="1700582044267" timestamp="1803604">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="1373" _type="Insert" date="Tue Nov 21 11:24:07 EST 2023" docASTNodeCount="266" docActiveCodeLength="1539" docExpressionCount="185" docLength="1539" length="7" offset="1111" repeat="7" starttimestamp="1700582044267" timestamp="1803682" timestamp2="1804226">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <DocumentChange __id="1389" _type="Insert" date="Tue Nov 21 11:24:12 EST 2023" docASTNodeCount="268" docActiveCodeLength="1547" docExpressionCount="187" docLength="1547" length="8" offset="1118" repeat="7" starttimestamp="1700582044267" timestamp="1807865" timestamp2="1810301">
    <text><![CDATA[TAtom();]]></text>
  </DocumentChange>
  <Command __id="1388" _type="ShellCommand" date="Tue Nov 21 11:24:11 EST 2023" starttimestamp="1700582044267" timestamp="1807481" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1390" _type="InsertStringCommand" date="Tue Nov 21 11:24:12 EST 2023" starttimestamp="1700582044267" timestamp="1807867" timestamp2="1807867">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1392" _type="InsertStringCommand" date="Tue Nov 21 11:24:12 EST 2023" starttimestamp="1700582044267" timestamp="1808131" timestamp2="1808131">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1394" _type="InsertStringCommand" date="Tue Nov 21 11:24:13 EST 2023" starttimestamp="1700582044267" timestamp="1808901" timestamp2="1808901">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1396" _type="InsertStringCommand" date="Tue Nov 21 11:24:13 EST 2023" starttimestamp="1700582044267" timestamp="1809004" timestamp2="1809004">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1398" _type="InsertStringCommand" date="Tue Nov 21 11:24:13 EST 2023" starttimestamp="1700582044267" timestamp="1809108" timestamp2="1809108">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1400" _type="InsertStringCommand" date="Tue Nov 21 11:24:13 EST 2023" starttimestamp="1700582044267" timestamp="1809275" timestamp2="1809275">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1401" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:24:14 EST 2023" starttimestamp="1700582044267" timestamp="1810090" />
  <Command __id="1403" _type="InsertStringCommand" date="Tue Nov 21 11:24:14 EST 2023" starttimestamp="1700582044267" timestamp="1810303" timestamp2="1810303">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1404" _type="MoveCaretCommand" caretOffset="1131" date="Tue Nov 21 11:24:15 EST 2023" docOffset="1131" starttimestamp="1700582044267" timestamp="1811144" />
  <Command __id="1406" _type="InsertStringCommand" date="Tue Nov 21 11:24:16 EST 2023" starttimestamp="1700582044267" timestamp="1812080" timestamp2="1812080">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1408" _type="InsertStringCommand" date="Tue Nov 21 11:24:16 EST 2023" starttimestamp="1700582044267" timestamp="1812133" timestamp2="1812133">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1410" _type="InsertStringCommand" date="Tue Nov 21 11:24:16 EST 2023" starttimestamp="1700582044267" timestamp="1812241" timestamp2="1812241">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1412" _type="InsertStringCommand" date="Tue Nov 21 11:24:16 EST 2023" starttimestamp="1700582044267" timestamp="1812317" timestamp2="1812317">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1414" _type="InsertStringCommand" date="Tue Nov 21 11:24:17 EST 2023" starttimestamp="1700582044267" timestamp="1813579" timestamp2="1813579">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1416" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1813860" timestamp2="1813860">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1418" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1814220" timestamp2="1814220">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1420" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1814279" timestamp2="1814279">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1422" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1814384" timestamp2="1814384">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1424" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1814463" timestamp2="1814463">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1426" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1814571" timestamp2="1814571">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1428" _type="InsertStringCommand" date="Tue Nov 21 11:24:18 EST 2023" starttimestamp="1700582044267" timestamp="1814634" timestamp2="1814634">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1430" _type="InsertStringCommand" date="Tue Nov 21 11:24:19 EST 2023" starttimestamp="1700582044267" timestamp="1814742" timestamp2="1814742">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1432" _type="InsertStringCommand" date="Tue Nov 21 11:24:19 EST 2023" starttimestamp="1700582044267" timestamp="1815706" timestamp2="1815706">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1434" _type="InsertStringCommand" date="Tue Nov 21 11:24:20 EST 2023" starttimestamp="1700582044267" timestamp="1815978" timestamp2="1815978">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1436" _type="InsertStringCommand" date="Tue Nov 21 11:24:20 EST 2023" starttimestamp="1700582044267" timestamp="1816017" timestamp2="1816017">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1438" _type="InsertStringCommand" date="Tue Nov 21 11:24:20 EST 2023" starttimestamp="1700582044267" timestamp="1816559" timestamp2="1816559">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1440" _type="InsertStringCommand" date="Tue Nov 21 11:24:21 EST 2023" starttimestamp="1700582044267" timestamp="1816846" timestamp2="1816846">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1442" _type="InsertStringCommand" date="Tue Nov 21 11:24:21 EST 2023" starttimestamp="1700582044267" timestamp="1816935" timestamp2="1816935">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1444" _type="InsertStringCommand" date="Tue Nov 21 11:24:21 EST 2023" starttimestamp="1700582044267" timestamp="1817042" timestamp2="1817042">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1446" _type="InsertStringCommand" date="Tue Nov 21 11:24:21 EST 2023" starttimestamp="1700582044267" timestamp="1817576" timestamp2="1817576">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1447" _type="MoveCaretCommand" caretOffset="1158" date="Tue Nov 21 11:24:22 EST 2023" docOffset="1158" starttimestamp="1700582044267" timestamp="1818704" />
  <Command __id="1449" _type="InsertStringCommand" date="Tue Nov 21 11:24:23 EST 2023" starttimestamp="1700582044267" timestamp="1819346" timestamp2="1819346">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1450" _type="MoveCaretCommand" caretOffset="1118" date="Tue Nov 21 11:24:24 EST 2023" docOffset="1118" starttimestamp="1700582044267" timestamp="1820099" />
  <Command __id="1452" _type="InsertStringCommand" date="Tue Nov 21 11:24:24 EST 2023" starttimestamp="1700582044267" timestamp="1820625" timestamp2="1820625">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1454" _type="InsertStringCommand" date="Tue Nov 21 11:24:25 EST 2023" starttimestamp="1700582044267" timestamp="1821374" timestamp2="1821374">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1456" _type="InsertStringCommand" date="Tue Nov 21 11:24:25 EST 2023" starttimestamp="1700582044267" timestamp="1821446" timestamp2="1821446">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1458" _type="InsertStringCommand" date="Tue Nov 21 11:24:25 EST 2023" starttimestamp="1700582044267" timestamp="1821646" timestamp2="1821646">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1459" _type="MoveCaretCommand" caretOffset="1153" date="Tue Nov 21 11:24:26 EST 2023" docOffset="1153" starttimestamp="1700582044267" timestamp="1822148" />
  <Command __id="1461" _type="InsertStringCommand" date="Tue Nov 21 11:24:26 EST 2023" starttimestamp="1700582044267" timestamp="1822665" timestamp2="1822665">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1463" _type="InsertStringCommand" date="Tue Nov 21 11:24:27 EST 2023" starttimestamp="1700582044267" timestamp="1822843" timestamp2="1822843">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1465" _type="InsertStringCommand" date="Tue Nov 21 11:24:27 EST 2023" starttimestamp="1700582044267" timestamp="1822931" timestamp2="1822931">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1467" _type="InsertStringCommand" date="Tue Nov 21 11:24:27 EST 2023" starttimestamp="1700582044267" timestamp="1823049" timestamp2="1823049">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1405" _type="Insert" date="Tue Nov 21 11:24:16 EST 2023" docASTNodeCount="272" docActiveCodeLength="1580" docExpressionCount="189" docLength="1580" length="33" offset="1131" repeat="22" starttimestamp="1700582044267" timestamp="1812076" timestamp2="1819344">
    <text><![CDATA[else {
				return NilAtom();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1451" _type="Insert" date="Tue Nov 21 11:24:24 EST 2023" docASTNodeCount="273" docActiveCodeLength="1584" docExpressionCount="189" docLength="1584" length="4" offset="1118" repeat="4" starttimestamp="1700582044267" timestamp="1820622" timestamp2="1821643">
    <text><![CDATA[new ]]></text>
  </DocumentChange>
  <DocumentChange __id="1460" _type="Insert" date="Tue Nov 21 11:24:26 EST 2023" docASTNodeCount="274" docActiveCodeLength="1588" docExpressionCount="189" docLength="1588" length="4" offset="1153" repeat="4" starttimestamp="1700582044267" timestamp="1822663" timestamp2="1823047">
    <text><![CDATA[new ]]></text>
  </DocumentChange>
  <Command __id="1468" _type="MoveCaretCommand" caretOffset="1211" date="Tue Nov 21 11:24:29 EST 2023" docOffset="1211" starttimestamp="1700582044267" timestamp="1824911" />
  <Command __id="1470" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:24:30 EST 2023" starttimestamp="1700582044267" timestamp="1826003" />
  <Command __id="1471" _type="MoveCaretCommand" caretOffset="1183" date="Tue Nov 21 11:24:30 EST 2023" docOffset="1183" starttimestamp="1700582044267" timestamp="1826421" />
  <Command __id="1472" _type="MoveCaretCommand" caretOffset="1209" date="Tue Nov 21 11:24:31 EST 2023" docOffset="1209" starttimestamp="1700582044267" timestamp="1826787" />
  <Command __id="1473" _type="MoveCaretCommand" caretOffset="1199" date="Tue Nov 21 11:24:31 EST 2023" docOffset="1199" starttimestamp="1700582044267" timestamp="1827276" />
  <Command __id="1474" _type="MoveCaretCommand" caretOffset="1190" date="Tue Nov 21 11:24:31 EST 2023" docOffset="1190" starttimestamp="1700582044267" timestamp="1827537" />
  <Command __id="1475" _type="MoveCaretCommand" caretOffset="1200" date="Tue Nov 21 11:24:32 EST 2023" docOffset="1200" starttimestamp="1700582044267" timestamp="1827837" />
  <Command __id="1476" _type="MoveCaretCommand" caretOffset="1222" date="Tue Nov 21 11:24:33 EST 2023" docOffset="1222" starttimestamp="1700582044267" timestamp="1828996" />
  <Command __id="1477" _type="SelectTextCommand" caretOffset="1210" date="Tue Nov 21 11:24:41 EST 2023" end="1351" start="1210" starttimestamp="1700582044267" timestamp="1836828" />
  <Command __id="1478" _type="MoveCaretCommand" caretOffset="1236" date="Tue Nov 21 11:24:43 EST 2023" docOffset="1236" starttimestamp="1700582044267" timestamp="1839563" />
  <Command __id="1479" _type="ShellCommand" date="Tue Nov 21 11:24:47 EST 2023" starttimestamp="1700582044267" timestamp="1843261" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1480" _type="ShellCommand" date="Tue Nov 21 11:24:47 EST 2023" starttimestamp="1700582044267" timestamp="1843359" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1485" _type="MoveCaretCommand" caretOffset="1279" date="Tue Nov 21 11:24:49 EST 2023" docOffset="1279" starttimestamp="1700582044267" timestamp="1845064" />
  <Command __id="1486" _type="InsertStringCommand" date="Tue Nov 21 11:24:49 EST 2023" starttimestamp="1700582044267" timestamp="1845353" timestamp2="1845353">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1491" _type="UndoCommand" date="Tue Nov 21 11:24:49 EST 2023" starttimestamp="1700582044267" timestamp="1845407" />
  <Command __id="1492" _type="ShellCommand" date="Tue Nov 21 11:24:53 EST 2023" starttimestamp="1700582044267" timestamp="1849278" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1493" _type="ShellCommand" date="Tue Nov 21 11:24:53 EST 2023" starttimestamp="1700582044267" timestamp="1849347" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1498" _type="MoveCaretCommand" caretOffset="1306" date="Tue Nov 21 11:24:54 EST 2023" docOffset="1306" starttimestamp="1700582044267" timestamp="1850136" />
  <Command __id="1499" _type="SelectTextCommand" caretOffset="1280" date="Tue Nov 21 11:24:57 EST 2023" end="1358" start="1280" starttimestamp="1700582044267" timestamp="1853014" />
  <Command __id="1501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:24:57 EST 2023" starttimestamp="1700582044267" timestamp="1853460" />
  <Command __id="1503" _type="InsertStringCommand" date="Tue Nov 21 11:24:58 EST 2023" starttimestamp="1700582044267" timestamp="1854361" timestamp2="1854361">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="1505" _type="InsertStringCommand" date="Tue Nov 21 11:24:58 EST 2023" starttimestamp="1700582044267" timestamp="1854563" timestamp2="1854563">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="1507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:24:59 EST 2023" starttimestamp="1700582044267" timestamp="1855358" />
  <Command __id="1508" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:00 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1856273" />
  <Command __id="1509" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:01 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1857290" />
  <Command __id="1510" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:01 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1857673" />
  <Command __id="1511" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:02 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1857939" />
  <Command __id="1512" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:02 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1858235" />
  <Command __id="1513" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:02 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1858460" />
  <Command __id="1514" _type="MoveCaretCommand" caretOffset="1337" date="Tue Nov 21 11:25:03 EST 2023" docOffset="1337" starttimestamp="1700582044267" timestamp="1858741" />
  <Command __id="1515" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:03 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1858979" />
  <Command __id="1516" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:03 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1859244" />
  <Command __id="1517" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:03 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1859539" />
  <Command __id="1518" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:04 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1860014" />
  <Command __id="1519" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:04 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1860584" />
  <Command __id="1520" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:05 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1860810" />
  <Command __id="1521" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:05 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1861072" />
  <Command __id="1522" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:05 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1861316" />
  <Command __id="1523" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:05 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1861615" />
  <Command __id="1524" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:06 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1861820" />
  <Command __id="1525" _type="MoveCaretCommand" caretOffset="1307" date="Tue Nov 21 11:25:06 EST 2023" docOffset="1307" starttimestamp="1700582044267" timestamp="1862068" />
  <Command __id="1526" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:06 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1862298" />
  <Command __id="1527" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:07 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1863478" />
  <Command __id="1528" _type="SelectTextCommand" caretOffset="1083" date="Tue Nov 21 11:25:09 EST 2023" end="1172" start="1083" starttimestamp="1700582044267" timestamp="1864987" />
  <Command __id="1529" _type="CopyCommand" date="Tue Nov 21 11:25:09 EST 2023" starttimestamp="1700582044267" timestamp="1865145" />
  <Command __id="1530" _type="MoveCaretCommand" caretOffset="1312" date="Tue Nov 21 11:25:10 EST 2023" docOffset="1312" starttimestamp="1700582044267" timestamp="1865757" />
  <Command __id="1531" _type="MoveCaretCommand" caretOffset="1352" date="Tue Nov 21 11:25:10 EST 2023" docOffset="1352" starttimestamp="1700582044267" timestamp="1865983" />
  <Command __id="1532" _type="SelectTextCommand" caretOffset="1356" date="Tue Nov 21 11:25:11 EST 2023" end="1391" start="1356" starttimestamp="1700582044267" timestamp="1867225" />
  <Command __id="1534" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:25:11 EST 2023" starttimestamp="1700582044267" timestamp="1867731" />
  <Command __id="1536" _type="PasteCommand" date="Tue Nov 21 11:25:12 EST 2023" starttimestamp="1700582044267" timestamp="1867940" />
  <Command __id="1537" _type="MoveCaretCommand" caretOffset="1390" date="Tue Nov 21 11:25:14 EST 2023" docOffset="1390" starttimestamp="1700582044267" timestamp="1870125" />
  <Command __id="1538" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:25:16 EST 2023" starttimestamp="1700582044267" timestamp="1872507" />
  <Command __id="1539" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:25:16 EST 2023" starttimestamp="1700582044267" timestamp="1872606" />
  <Command __id="1540" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:25:16 EST 2023" starttimestamp="1700582044267" timestamp="1872618" />
  <DocumentChange __id="1469" _type="Delete" date="Tue Nov 21 11:24:30 EST 2023" docASTNodeCount="269" docActiveCodeLength="1549" docExpressionCount="186" docLength="1549" endLine="41" length="39" offset="1173" startLine="40" starttimestamp="1700582044267" timestamp="1826000">
    <text><![CDATA[			return new IntegerAtom(difference);
]]></text>
  </DocumentChange>
  <DocumentChange __id="1481" _type="Delete" date="Tue Nov 21 11:24:47 EST 2023" docASTNodeCount="247" docActiveCodeLength="1411" docExpressionCount="170" docLength="1411" endLine="46" length="138" offset="1213" repeat="3" startLine="42" starttimestamp="1700582044267" timestamp="1843368" timestamp2="1843369">
    <text><![CDATA[if (firstInt != null) {
				difference = firstInt.getValue();
			} else if (firstDec != null) {
				difference = firstDec.getValue();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1484" _type="Insert" date="Tue Nov 21 11:24:47 EST 2023" docASTNodeCount="258" docActiveCodeLength="1477" docExpressionCount="178" docLength="1477" length="66" offset="1213" starttimestamp="1700582044267" timestamp="1843369">
    <text><![CDATA[if (firstDec != null) {
				difference = firstDec.getValue();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1487" _type="Delete" date="Tue Nov 21 11:24:49 EST 2023" docASTNodeCount="247" docActiveCodeLength="1411" docExpressionCount="170" docLength="1411" endLine="44" length="66" offset="1213" startLine="42" starttimestamp="1700582044267" timestamp="1845401">
    <text><![CDATA[if (firstDec != null) {
				difference = firstDec.getValue();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1488" _type="Insert" date="Tue Nov 21 11:24:49 EST 2023" docASTNodeCount="269" docActiveCodeLength="1549" docExpressionCount="186" docLength="1549" length="138" offset="1213" repeat="3" starttimestamp="1700582044267" timestamp="1845403" timestamp2="1845406">
    <text><![CDATA[if (firstInt != null) {
				difference = firstInt.getValue();
			} else if (firstDec != null) {
				difference = firstDec.getValue();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1494" _type="Delete" date="Tue Nov 21 11:24:53 EST 2023" docASTNodeCount="247" docActiveCodeLength="1411" docExpressionCount="170" docLength="1411" endLine="46" length="138" offset="1213" repeat="3" startLine="42" starttimestamp="1700582044267" timestamp="1849352" timestamp2="1849353">
    <text><![CDATA[if (firstInt != null) {
				difference = firstInt.getValue();
			} else if (firstDec != null) {
				difference = firstDec.getValue();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1497" _type="Insert" date="Tue Nov 21 11:24:53 EST 2023" docASTNodeCount="258" docActiveCodeLength="1477" docExpressionCount="178" docLength="1477" length="66" offset="1213" starttimestamp="1700582044267" timestamp="1849353">
    <text><![CDATA[if (firstDec != null) {
				difference = firstDec.getValue();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="1500" _type="Delete" date="Tue Nov 21 11:24:57 EST 2023" docASTNodeCount="247" docActiveCodeLength="1399" docExpressionCount="170" docLength="1399" endLine="47" length="78" offset="1280" startLine="45" starttimestamp="1700582044267" timestamp="1853455">
    <text><![CDATA[			if (secondInt != null) {
				difference -= secondInt.getValue();
			} else ]]></text>
  </DocumentChange>
  <DocumentChange __id="1502" _type="Insert" date="Tue Nov 21 11:24:58 EST 2023" docASTNodeCount="247" docActiveCodeLength="1403" docExpressionCount="170" docLength="1403" length="4" offset="1280" repeat="2" starttimestamp="1700582044267" timestamp="1854359" timestamp2="1854561">
    <text><![CDATA[				]]></text>
  </DocumentChange>
  <DocumentChange __id="1506" _type="Delete" date="Tue Nov 21 11:24:59 EST 2023" docASTNodeCount="247" docActiveCodeLength="1402" docExpressionCount="170" docLength="1402" endLine="45" length="1" offset="1283" startLine="45" starttimestamp="1700582044267" timestamp="1855356">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="1533" _type="Delete" date="Tue Nov 21 11:25:11 EST 2023" docASTNodeCount="242" docActiveCodeLength="1367" docExpressionCount="167" docLength="1367" endLine="48" length="35" offset="1356" startLine="48" starttimestamp="1700582044267" timestamp="1867726">
    <text><![CDATA[return new DecimalAtom(difference);]]></text>
  </DocumentChange>
  <DocumentChange __id="1535" _type="Replace" date="Tue Nov 21 11:25:12 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" endLine="48" insertionLength="89" int_docASTNodeCount="242" int_docActiveCodeLength="1364" int_docExpressionCount="167" int_docLength="1364" length="3" offset="1353" startLine="48" starttimestamp="1700582044267" timestamp="1867932">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}]]></insertedText>
  </DocumentChange>
  <Command __id="1541" _type="MoveCaretCommand" caretOffset="1347" date="Tue Nov 21 11:25:28 EST 2023" docOffset="1347" starttimestamp="1700582044267" timestamp="1884284" />
  <Command __id="1542" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:25:35 EST 2023" docASTNodeCount="118" docActiveCodeLength="1014" docExpressionCount="77" docLength="1014" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1890782">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new SumEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1543" _type="MoveCaretCommand" caretOffset="760" date="Tue Nov 21 11:25:35 EST 2023" docOffset="821" starttimestamp="1700582044267" timestamp="1890828" />
  <Command __id="1544" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:25:36 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1892361">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(INSERT,"import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;"), Diff(EQUAL,"import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				"), Diff(DELETE,"if (expr instanceof NilAtom || expr.getTail() instanceof NilAtom) {			throw new IllegalStateException("Missing arguments for operator '>'");		}		if (!(expr.getTail().getTail() instanceof NilAtom)) {			throw new IllegalStateException("Too many arguments for operator '>'")"), Diff(INSERT,"SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null"), Diff(EQUAL,";		"), Diff(DELETE,"}"), Diff(EQUAL,"		"), Diff(DELETE,"SExpression firstExpr = expr.getHead();		SExpression secondExpr = expr.getTail().getHead();		SExpression firstEvaled = firstExpr.eval(environment);		SExpression second"), Diff(INSERT,"if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)first"), Diff(EQUAL,"Evaled"), Diff(DELETE," = "), Diff(INSERT,";			"), Diff(EQUAL,"second"), Diff(DELETE,"Expr.eval(environment)"), Diff(INSERT,"Dec = (DecimalAtom)secondEvaled"), Diff(EQUAL,";		"), Diff(INSERT,"}"), Diff(EQUAL,"		"), Diff(DELETE,"firstEvaled.		if (!firstEvaled.getClass().equals(secondEvaled.getClass()))"), Diff(INSERT,"		if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else"), Diff(EQUAL," {			"), Diff(INSERT,"	"), Diff(EQUAL,"return new NilAtom();		"), Diff(INSERT,"	}		"), Diff(EQUAL,"} else {			"), Diff(DELETE,"if(firstEvaled.equals(secondEvaled)"), Diff(INSERT,"double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0"), Diff(EQUAL,") {				return new TAtom();			}"), Diff(DELETE," "), Diff(EQUAL,"else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.DecimalAtom;
import main.lisp.parser.terms.IntegerAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtom;

public class GreaterEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			secondInt = (IntegerAtom)secondEvaled;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			secondDec = (DecimalAtom)secondEvaled;
		}
		
		if (firstInt != null) {
			long difference = firstInt.getValue() - secondInt.getValue();
			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		} else {
			double difference = 0;
			if (firstDec != null) {
				difference = firstDec.getValue();
			}
			if (secondDec != null) {
				difference -= secondDec.getValue();
			}
			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="1545" _type="MoveCaretCommand" caretOffset="1347" date="Tue Nov 21 11:25:36 EST 2023" docOffset="1347" starttimestamp="1700582044267" timestamp="1892413" />
  <Command __id="1546" _type="MoveCaretCommand" caretOffset="324" date="Tue Nov 21 11:25:37 EST 2023" docOffset="324" starttimestamp="1700582044267" timestamp="1893407" />
  <Command __id="1547" _type="SelectTextCommand" caretOffset="329" date="Tue Nov 21 11:25:37 EST 2023" end="329" start="313" starttimestamp="1700582044267" timestamp="1893553" />
  <Command __id="1548" _type="CopyCommand" date="Tue Nov 21 11:25:38 EST 2023" starttimestamp="1700582044267" timestamp="1893762" />
  <Command __id="1549" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:25:38 EST 2023" docASTNodeCount="118" docActiveCodeLength="1014" docExpressionCount="77" docLength="1014" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1894058">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new SumEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1550" _type="MoveCaretCommand" caretOffset="760" date="Tue Nov 21 11:25:38 EST 2023" docOffset="821" starttimestamp="1700582044267" timestamp="1894097" />
  <Command __id="1551" _type="MoveCaretCommand" caretOffset="774" date="Tue Nov 21 11:25:38 EST 2023" docOffset="835" starttimestamp="1700582044267" timestamp="1894598" />
  <Command __id="1552" _type="MoveCaretCommand" caretOffset="774" date="Tue Nov 21 11:25:38 EST 2023" docOffset="835" starttimestamp="1700582044267" timestamp="1894598" />
  <Command __id="1553" _type="SelectTextCommand" caretOffset="779" date="Tue Nov 21 11:25:39 EST 2023" end="779" start="767" starttimestamp="1700582044267" timestamp="1894740" />
  <Command __id="1554" _type="SelectTextCommand" caretOffset="779" date="Tue Nov 21 11:25:39 EST 2023" end="779" start="767" starttimestamp="1700582044267" timestamp="1894740" />
  <Command __id="1556" _type="PasteCommand" date="Tue Nov 21 11:25:39 EST 2023" starttimestamp="1700582044267" timestamp="1894855" />
  <Command __id="1557" _type="MoveCaretCommand" caretOffset="787" date="Tue Nov 21 11:25:39 EST 2023" docOffset="848" starttimestamp="1700582044267" timestamp="1895011" />
  <Command __id="1558" _type="MoveCaretCommand" caretOffset="787" date="Tue Nov 21 11:25:39 EST 2023" docOffset="848" starttimestamp="1700582044267" timestamp="1895011" />
  <Command __id="1559" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:25:40 EST 2023" starttimestamp="1700582044267" timestamp="1895773" />
  <Command __id="1560" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:25:40 EST 2023" starttimestamp="1700582044267" timestamp="1895871" />
  <Command __id="1561" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:25:40 EST 2023" starttimestamp="1700582044267" timestamp="1895880" />
  <Command __id="1562" _type="ShellCommand" date="Tue Nov 21 11:25:40 EST 2023" starttimestamp="1700582044267" timestamp="1896108" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1563" _type="ShellCommand" date="Tue Nov 21 11:25:41 EST 2023" starttimestamp="1700582044267" timestamp="1897044" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1564" _type="ShellCommand" date="Tue Nov 21 11:25:44 EST 2023" starttimestamp="1700582044267" timestamp="1900492" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1555" _type="Replace" date="Tue Nov 21 11:25:39 EST 2023" docASTNodeCount="118" docActiveCodeLength="1018" docExpressionCount="77" docLength="1018" endLine="16" insertionLength="16" int_docASTNodeCount="108" int_docActiveCodeLength="1002" int_docExpressionCount="69" int_docLength="1002" length="12" offset="828" startLine="16" starttimestamp="1700582044267" timestamp="1894852">
    <deletedText><![CDATA[SumEvaluator]]></deletedText>
    <insertedText><![CDATA[GreaterEvaluator]]></insertedText>
  </DocumentChange>
  <Command __id="1568" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:25:57 EST 2023" docASTNodeCount="52" docActiveCodeLength="289" docExpressionCount="35" docLength="323" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1913474">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LesserEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class LesserEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="1565" _type="ShellCommand" date="Tue Nov 21 11:25:57 EST 2023" starttimestamp="1700582044267" timestamp="1913385" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1566" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:25:57 EST 2023" starttimestamp="1700582044267" timestamp="1913443" />
  <Command __id="1567" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:25:57 EST 2023" starttimestamp="1700582044267" timestamp="1913450" />
  <Command __id="1569" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:25:57 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1913534" />
  <Command __id="1571" _type="SelectTextCommand" caretOffset="329" date="Tue Nov 21 11:25:59 EST 2023" end="329" start="313" starttimestamp="1700582044267" timestamp="1914903" />
  <Command __id="1572" _type="MoveCaretCommand" caretOffset="351" date="Tue Nov 21 11:26:00 EST 2023" docOffset="351" starttimestamp="1700582044267" timestamp="1916230" />
  <Command __id="1573" _type="SelectTextCommand" caretOffset="364" date="Tue Nov 21 11:26:03 EST 2023" end="1449" start="364" starttimestamp="1700582044267" timestamp="1919624" />
  <Command __id="1574" _type="CopyCommand" date="Tue Nov 21 11:26:04 EST 2023" starttimestamp="1700582044267" timestamp="1919845" />
  <Command __id="1570" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:25:59 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1914859">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.SELECT_LINE_UP" date="Tue Nov 21 11:26:06 EST 2023" starttimestamp="1700582044267" timestamp="1921755" />
  <Command __id="1576" _type="CopyCommand" date="Tue Nov 21 11:26:06 EST 2023" starttimestamp="1700582044267" timestamp="1922145" />
  <Command __id="1578" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:26:07 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1923318" />
  <Command __id="1579" _type="MoveCaretCommand" caretOffset="235" date="Tue Nov 21 11:26:08 EST 2023" docOffset="316" starttimestamp="1700582044267" timestamp="1924547" />
  <Command __id="1580" _type="SelectTextCommand" caretOffset="110" date="Tue Nov 21 11:26:09 EST 2023" end="238" start="110" starttimestamp="1700582044267" timestamp="1925731" />
  <Command __id="1590" _type="PasteCommand" date="Tue Nov 21 11:26:10 EST 2023" starttimestamp="1700582044267" timestamp="1926285" />
  <Command __id="1577" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:26:07 EST 2023" docASTNodeCount="52" docActiveCodeLength="289" docExpressionCount="35" docLength="323" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1923277">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LesserEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class LesserEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1581" _type="Replace" date="Tue Nov 21 11:26:10 EST 2023" docASTNodeCount="216" docActiveCodeLength="1291" docExpressionCount="138" docLength="1291" endLine="12" insertionLength="1096" int_docASTNodeCount="34" int_docActiveCodeLength="195" int_docExpressionCount="26" int_docLength="195" length="128" offset="191" startLine="8" starttimestamp="1700582044267" timestamp="1926226">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			secondInt = (IntegerAtom)secondEvaled;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			secondDec = (DecimalAtom)secondEvaled;
		}
		
		if (firstInt != null) {
			long difference = firstInt.getValue() - secondInt.getValue();
			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		} else {
			double difference = 0;
			if (firstDec != null) {
				difference = firstDec.getValue();
			}
			if (secondDec != null) {
				difference -= secondDec.getValue();
			}
			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		}
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1582" _type="Insert" date="Tue Nov 21 11:26:10 EST 2023" docASTNodeCount="226" docActiveCodeLength="1328" docExpressionCount="147" docLength="1328" length="37" offset="136" repeat="2" starttimestamp="1700582044267" timestamp="1926264" timestamp2="1926264">
    <text><![CDATA[
import main.lisp.parser.terms.TAtom;]]></text>
  </DocumentChange>
  <DocumentChange __id="1584" _type="Insert" date="Tue Nov 21 11:26:10 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" length="125" offset="93" repeat="6" starttimestamp="1700582044267" timestamp="1926264" timestamp2="1926265">
    <text><![CDATA[
import main.lisp.parser.terms.DecimalAtom;
import main.lisp.parser.terms.IntegerAtom;
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="1591" _type="SelectTextCommand" caretOffset="857" date="Tue Nov 21 11:26:16 EST 2023" end="858" start="857" starttimestamp="1700582044267" timestamp="1931892" />
  <Command __id="1593" _type="InsertStringCommand" date="Tue Nov 21 11:26:17 EST 2023" starttimestamp="1700582044267" timestamp="1933051" timestamp2="1933051">
    <data><![CDATA[<]]></data>
  </Command>
  <DocumentChange __id="1592" _type="Replace" date="Tue Nov 21 11:26:17 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" endLine="35" insertionLength="1" int_docASTNodeCount="254" int_docActiveCodeLength="1452" int_docExpressionCount="172" int_docLength="1452" length="1" offset="1100" startLine="35" starttimestamp="1700582044267" timestamp="1933046">
    <deletedText><![CDATA[>]]></deletedText>
    <insertedText><![CDATA[<]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1595" _type="Delete" date="Tue Nov 21 11:26:19 EST 2023" docASTNodeCount="254" docActiveCodeLength="1452" docExpressionCount="172" docLength="1452" endLine="48" length="1" offset="1370" startLine="48" starttimestamp="1700582044267" timestamp="1934805">
    <text><![CDATA[>]]></text>
  </DocumentChange>
  <DocumentChange __id="1597" _type="Insert" date="Tue Nov 21 11:26:19 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" length="1" offset="1370" starttimestamp="1700582044267" timestamp="1935457">
    <text><![CDATA[<]]></text>
  </DocumentChange>
  <Command __id="1603" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:26:25 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1941444">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1594" _type="MoveCaretCommand" caretOffset="1128" date="Tue Nov 21 11:26:18 EST 2023" docOffset="1371" starttimestamp="1700582044267" timestamp="1934192" />
  <Command __id="1596" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:26:19 EST 2023" starttimestamp="1700582044267" timestamp="1934808" />
  <Command __id="1598" _type="InsertStringCommand" date="Tue Nov 21 11:26:19 EST 2023" starttimestamp="1700582044267" timestamp="1935458" timestamp2="1935458">
    <data><![CDATA[<]]></data>
  </Command>
  <Command __id="1599" _type="MoveCaretCommand" caretOffset="1102" date="Tue Nov 21 11:26:20 EST 2023" docOffset="1345" starttimestamp="1700582044267" timestamp="1936137" />
  <Command __id="1600" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:26:20 EST 2023" starttimestamp="1700582044267" timestamp="1936277" />
  <Command __id="1601" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:26:20 EST 2023" starttimestamp="1700582044267" timestamp="1936379" />
  <Command __id="1602" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:26:20 EST 2023" starttimestamp="1700582044267" timestamp="1936392" />
  <Command __id="1604" _type="SelectTextCommand" caretOffset="353" date="Tue Nov 21 11:26:25 EST 2023" end="1449" start="353" starttimestamp="1700582044267" timestamp="1941528" />
  <Command __id="1606" _type="MoveCaretCommand" caretOffset="787" date="Tue Nov 21 11:26:34 EST 2023" docOffset="848" starttimestamp="1700582044267" timestamp="1950215" />
  <Command __id="1607" _type="ShellCommand" date="Tue Nov 21 11:26:34 EST 2023" starttimestamp="1700582044267" timestamp="1950338" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1608" _type="ShellCommand" date="Tue Nov 21 11:26:35 EST 2023" starttimestamp="1700582044267" timestamp="1951295" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1609" _type="ShellCommand" date="Tue Nov 21 11:26:39 EST 2023" starttimestamp="1700582044267" timestamp="1955527" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1605" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:26:34 EST 2023" docASTNodeCount="118" docActiveCodeLength="1018" docExpressionCount="77" docLength="1018" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1950158">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new "), Diff(DELETE,"Sum"), Diff(INSERT,"Greater"), Diff(EQUAL,"Evaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
	}
	
	public static void registerLogic() {
		
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
		registerArithmetic();
		registerLogic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1613" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:26:51 EST 2023" docASTNodeCount="52" docActiveCodeLength="295" docExpressionCount="35" docLength="329" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1967518">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEqualEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class GreaterEqualEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="1615" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:26:55 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1970986">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1610" _type="ShellCommand" date="Tue Nov 21 11:26:51 EST 2023" starttimestamp="1700582044267" timestamp="1967426" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1611" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:26:51 EST 2023" starttimestamp="1700582044267" timestamp="1967481" />
  <Command __id="1612" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:26:51 EST 2023" starttimestamp="1700582044267" timestamp="1967488" />
  <Command __id="1614" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:26:51 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1967571" />
  <Command __id="1616" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:26:55 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1971048" />
  <Command __id="1618" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:26:57 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1972980" />
  <Command __id="1619" _type="SelectTextCommand" caretOffset="127" date="Tue Nov 21 11:26:58 EST 2023" end="229" start="127" starttimestamp="1700582044267" timestamp="1973958" />
  <Command __id="1620" _type="SelectTextCommand" caretOffset="116" date="Tue Nov 21 11:26:59 EST 2023" end="244" start="116" starttimestamp="1700582044267" timestamp="1974734" />
  <Command __id="1630" _type="PasteCommand" date="Tue Nov 21 11:26:59 EST 2023" starttimestamp="1700582044267" timestamp="1974906" />
  <Command __id="1631" _type="MoveCaretCommand" caretOffset="1133" date="Tue Nov 21 11:27:02 EST 2023" docOffset="1376" starttimestamp="1700582044267" timestamp="1977950" />
  <Command __id="1617" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:26:57 EST 2023" docASTNodeCount="52" docActiveCodeLength="295" docExpressionCount="35" docLength="329" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1972924">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEqualEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class GreaterEqualEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1621" _type="Replace" date="Tue Nov 21 11:26:59 EST 2023" docASTNodeCount="216" docActiveCodeLength="1297" docExpressionCount="138" docLength="1297" endLine="12" insertionLength="1096" int_docASTNodeCount="34" int_docActiveCodeLength="201" int_docExpressionCount="26" int_docLength="201" length="128" offset="197" startLine="8" starttimestamp="1700582044267" timestamp="1974852">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			secondInt = (IntegerAtom)secondEvaled;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			secondDec = (DecimalAtom)secondEvaled;
		}
		
		if (firstInt != null) {
			long difference = firstInt.getValue() - secondInt.getValue();
			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		} else {
			double difference = 0;
			if (firstDec != null) {
				difference = firstDec.getValue();
			}
			if (secondDec != null) {
				difference -= secondDec.getValue();
			}
			if(difference > 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		}
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1622" _type="Insert" date="Tue Nov 21 11:26:59 EST 2023" docASTNodeCount="226" docActiveCodeLength="1334" docExpressionCount="147" docLength="1334" length="37" offset="136" repeat="2" starttimestamp="1700582044267" timestamp="1974884" timestamp2="1974884">
    <text><![CDATA[
import main.lisp.parser.terms.TAtom;]]></text>
  </DocumentChange>
  <DocumentChange __id="1624" _type="Insert" date="Tue Nov 21 11:26:59 EST 2023" docASTNodeCount="256" docActiveCodeLength="1459" docExpressionCount="174" docLength="1459" length="125" offset="93" repeat="6" starttimestamp="1700582044267" timestamp="1974884" timestamp2="1974885">
    <text><![CDATA[
import main.lisp.parser.terms.DecimalAtom;
import main.lisp.parser.terms.IntegerAtom;
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="1632" _type="MoveCaretCommand" caretOffset="864" date="Tue Nov 21 11:27:04 EST 2023" docOffset="1107" starttimestamp="1700582044267" timestamp="1979885" />
  <DocumentChange __id="1633" _type="Insert" date="Tue Nov 21 11:27:05 EST 2023" docASTNodeCount="256" docActiveCodeLength="1460" docExpressionCount="174" docLength="1460" length="1" offset="1107" starttimestamp="1700582044267" timestamp="1980908">
    <text><![CDATA[=]]></text>
  </DocumentChange>
  <Command __id="1634" _type="InsertStringCommand" date="Tue Nov 21 11:27:05 EST 2023" starttimestamp="1700582044267" timestamp="1980910" timestamp2="1980910">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1635" _type="MoveCaretCommand" caretOffset="1135" date="Tue Nov 21 11:27:05 EST 2023" docOffset="1378" starttimestamp="1700582044267" timestamp="1981695" />
  <Command __id="1637" _type="InsertStringCommand" date="Tue Nov 21 11:27:06 EST 2023" starttimestamp="1700582044267" timestamp="1981765" timestamp2="1981765">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1638" _type="MoveCaretCommand" caretOffset="1116" date="Tue Nov 21 11:27:06 EST 2023" docOffset="1359" starttimestamp="1700582044267" timestamp="1981983" />
  <Command __id="1639" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:27:07 EST 2023" starttimestamp="1700582044267" timestamp="1983387" />
  <Command __id="1640" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:27:07 EST 2023" starttimestamp="1700582044267" timestamp="1983489" />
  <Command __id="1641" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:27:07 EST 2023" starttimestamp="1700582044267" timestamp="1983497" />
  <Command __id="1642" _type="MoveCaretCommand" caretOffset="83" date="Tue Nov 21 11:27:12 EST 2023" docOffset="326" starttimestamp="1700582044267" timestamp="1988422" />
  <Command __id="1643" _type="SelectTextCommand" caretOffset="91" date="Tue Nov 21 11:27:12 EST 2023" end="91" start="70" starttimestamp="1700582044267" timestamp="1988552" />
  <Command __id="1644" _type="CopyCommand" date="Tue Nov 21 11:27:12 EST 2023" starttimestamp="1700582044267" timestamp="1988646" />
  <Command __id="1645" _type="ShellCommand" date="Tue Nov 21 11:27:15 EST 2023" starttimestamp="1700582044267" timestamp="1990900" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1646" _type="PasteCommand" date="Tue Nov 21 11:27:16 EST 2023" starttimestamp="1700582044267" timestamp="1992632" />
  <Command __id="1647" _type="ShellCommand" date="Tue Nov 21 11:27:22 EST 2023" starttimestamp="1700582044267" timestamp="1998421" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1648" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:27:22 EST 2023" starttimestamp="1700582044267" timestamp="1998482" />
  <Command __id="1649" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:27:22 EST 2023" starttimestamp="1700582044267" timestamp="1998488" />
  <Command __id="1651" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:27:22 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="1998583" />
  <Command __id="1652" _type="SelectTextCommand" caretOffset="115" date="Tue Nov 21 11:27:24 EST 2023" end="243" start="115" starttimestamp="1700582044267" timestamp="2000234" />
  <Command __id="1654" _type="PasteCommand" date="Tue Nov 21 11:27:24 EST 2023" starttimestamp="1700582044267" timestamp="2000376" />
  <Command __id="1656" _type="UndoCommand" date="Tue Nov 21 11:27:25 EST 2023" starttimestamp="1700582044267" timestamp="2001073" />
  <Command __id="1658" _type="SelectTextCommand" caretOffset="91" date="Tue Nov 21 11:27:26 EST 2023" end="91" start="70" starttimestamp="1700582044267" timestamp="2002043" />
  <Command __id="1659" _type="MoveCaretCommand" caretOffset="126" date="Tue Nov 21 11:27:27 EST 2023" docOffset="369" starttimestamp="1700582044267" timestamp="2002877" />
  <Command __id="1660" _type="SelectTextCommand" caretOffset="1214" date="Tue Nov 21 11:27:31 EST 2023" end="1214" start="116" starttimestamp="1700582044267" timestamp="2007322" />
  <DocumentChange __id="1636" _type="Insert" date="Tue Nov 21 11:27:06 EST 2023" docASTNodeCount="256" docActiveCodeLength="1461" docExpressionCount="174" docLength="1461" length="1" offset="1378" starttimestamp="1700582044267" timestamp="1981763">
    <text><![CDATA[=]]></text>
  </DocumentChange>
  <Command __id="1650" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:27:22 EST 2023" docASTNodeCount="52" docActiveCodeLength="294" docExpressionCount="35" docLength="328" projectName="Assignment5" starttimestamp="1700582044267" timestamp="1998536">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LesserEqualEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class LesserEqualEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1653" _type="Replace" date="Tue Nov 21 11:27:24 EST 2023" docASTNodeCount="34" docActiveCodeLength="222" docExpressionCount="26" docLength="222" endLine="12" insertionLength="22" int_docASTNodeCount="34" int_docActiveCodeLength="200" int_docExpressionCount="26" int_docLength="200" length="128" offset="196" startLine="8" starttimestamp="1700582044267" timestamp="2000371">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></deletedText>
    <insertedText><![CDATA[	GreaterEqualEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1655" _type="Replace" date="Tue Nov 21 11:27:25 EST 2023" docASTNodeCount="52" docActiveCodeLength="294" docExpressionCount="35" docLength="328" endLine="8" insertionLength="128" int_docASTNodeCount="34" int_docActiveCodeLength="200" int_docExpressionCount="26" int_docLength="200" length="22" offset="196" startLine="8" starttimestamp="1700582044267" timestamp="2001065">
    <deletedText><![CDATA[	GreaterEqualEvaluator]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></insertedText>
  </DocumentChange>
  <Command __id="1657" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:27:26 EST 2023" docASTNodeCount="256" docActiveCodeLength="1461" docExpressionCount="174" docLength="1461" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2002001">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEqualEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms."), Diff(DELETE,"SExpression"), Diff(INSERT,"DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom"), Diff(EQUAL,";public class GreaterEqualEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1) {		// TODO Auto-generated method stub		return null;"), Diff(INSERT,"environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference >= 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference >= 0) {				return new TAtom();			}else {				return new NilAtom();			}		}"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.DecimalAtom;
import main.lisp.parser.terms.IntegerAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtom;

public class GreaterEqualEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			secondInt = (IntegerAtom)secondEvaled;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			secondDec = (DecimalAtom)secondEvaled;
		}
		
		if (firstInt != null) {
			long difference = firstInt.getValue() - secondInt.getValue();
			if(difference >= 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		} else {
			double difference = 0;
			if (firstDec != null) {
				difference = firstDec.getValue();
			}
			if (secondDec != null) {
				difference -= secondDec.getValue();
			}
			if(difference >= 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="1662" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:27:37 EST 2023" docASTNodeCount="52" docActiveCodeLength="294" docExpressionCount="35" docLength="328" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2012838">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LesserEqualEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class LesserEqualEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1661" _type="CopyCommand" date="Tue Nov 21 11:27:36 EST 2023" starttimestamp="1700582044267" timestamp="2012112" />
  <Command __id="1663" _type="SelectTextCommand" caretOffset="243" date="Tue Nov 21 11:27:37 EST 2023" end="243" start="115" starttimestamp="1700582044267" timestamp="2012882" />
  <Command __id="1673" _type="PasteCommand" date="Tue Nov 21 11:27:38 EST 2023" starttimestamp="1700582044267" timestamp="2014299" />
  <Command __id="1674" _type="MoveCaretCommand" caretOffset="863" date="Tue Nov 21 11:27:42 EST 2023" docOffset="1106" starttimestamp="1700582044267" timestamp="2018568" />
  <Command __id="1676" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:27:43 EST 2023" starttimestamp="1700582044267" timestamp="2019208" />
  <Command __id="1678" _type="InsertStringCommand" date="Tue Nov 21 11:27:43 EST 2023" starttimestamp="1700582044267" timestamp="2019661" timestamp2="2019661">
    <data><![CDATA[<]]></data>
  </Command>
  <DocumentChange __id="1664" _type="Replace" date="Tue Nov 21 11:27:38 EST 2023" docASTNodeCount="216" docActiveCodeLength="1298" docExpressionCount="138" docLength="1298" endLine="12" insertionLength="1098" int_docASTNodeCount="34" int_docActiveCodeLength="200" int_docExpressionCount="26" int_docLength="200" length="128" offset="196" startLine="8" starttimestamp="1700582044267" timestamp="2014239">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			secondInt = (IntegerAtom)secondEvaled;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			secondDec = (DecimalAtom)secondEvaled;
		}
		
		if (firstInt != null) {
			long difference = firstInt.getValue() - secondInt.getValue();
			if(difference >= 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		} else {
			double difference = 0;
			if (firstDec != null) {
				difference = firstDec.getValue();
			}
			if (secondDec != null) {
				difference -= secondDec.getValue();
			}
			if(difference >= 0) {
				return new TAtom();
			}else {
				return new NilAtom();
			}
		}
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1665" _type="Insert" date="Tue Nov 21 11:27:38 EST 2023" docASTNodeCount="226" docActiveCodeLength="1335" docExpressionCount="147" docLength="1335" length="37" offset="136" repeat="2" starttimestamp="1700582044267" timestamp="2014279" timestamp2="2014279">
    <text><![CDATA[
import main.lisp.parser.terms.TAtom;]]></text>
  </DocumentChange>
  <DocumentChange __id="1667" _type="Insert" date="Tue Nov 21 11:27:38 EST 2023" docASTNodeCount="256" docActiveCodeLength="1460" docExpressionCount="174" docLength="1460" length="125" offset="93" repeat="6" starttimestamp="1700582044267" timestamp="2014279" timestamp2="2014280">
    <text><![CDATA[
import main.lisp.parser.terms.DecimalAtom;
import main.lisp.parser.terms.IntegerAtom;
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <DocumentChange __id="1675" _type="Delete" date="Tue Nov 21 11:27:43 EST 2023" docASTNodeCount="256" docActiveCodeLength="1459" docExpressionCount="174" docLength="1459" endLine="35" length="1" offset="1105" startLine="35" starttimestamp="1700582044267" timestamp="2019206">
    <text><![CDATA[>]]></text>
  </DocumentChange>
  <DocumentChange __id="1677" _type="Insert" date="Tue Nov 21 11:27:43 EST 2023" docASTNodeCount="256" docActiveCodeLength="1460" docExpressionCount="174" docLength="1460" length="1" offset="1105" starttimestamp="1700582044267" timestamp="2019659">
    <text><![CDATA[<]]></text>
  </DocumentChange>
  <DocumentChange __id="1680" _type="Delete" date="Tue Nov 21 11:27:45 EST 2023" docASTNodeCount="256" docActiveCodeLength="1459" docExpressionCount="174" docLength="1459" endLine="48" length="1" offset="1376" startLine="48" starttimestamp="1700582044267" timestamp="2021452">
    <text><![CDATA[>]]></text>
  </DocumentChange>
  <DocumentChange __id="1682" _type="Insert" date="Tue Nov 21 11:27:46 EST 2023" docASTNodeCount="256" docActiveCodeLength="1460" docExpressionCount="174" docLength="1460" length="1" offset="1376" starttimestamp="1700582044267" timestamp="2021739">
    <text><![CDATA[<]]></text>
  </DocumentChange>
  <Command __id="1679" _type="MoveCaretCommand" caretOffset="1134" date="Tue Nov 21 11:27:45 EST 2023" docOffset="1377" starttimestamp="1700582044267" timestamp="2020786" />
  <Command __id="1681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:27:45 EST 2023" starttimestamp="1700582044267" timestamp="2021455" />
  <Command __id="1683" _type="InsertStringCommand" date="Tue Nov 21 11:27:46 EST 2023" starttimestamp="1700582044267" timestamp="2021741" timestamp2="2021741">
    <data><![CDATA[<]]></data>
  </Command>
  <Command __id="1684" _type="MoveCaretCommand" caretOffset="1110" date="Tue Nov 21 11:27:46 EST 2023" docOffset="1353" starttimestamp="1700582044267" timestamp="2022398" />
  <Command __id="1685" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:27:46 EST 2023" starttimestamp="1700582044267" timestamp="2022549" />
  <Command __id="1686" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:27:46 EST 2023" starttimestamp="1700582044267" timestamp="2022648" />
  <Command __id="1687" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:27:46 EST 2023" starttimestamp="1700582044267" timestamp="2022655" />
  <Command __id="1689" _type="SelectTextCommand" caretOffset="1214" date="Tue Nov 21 11:27:49 EST 2023" end="1214" start="116" starttimestamp="1700582044267" timestamp="2025533" />
  <Command __id="1691" _type="MoveCaretCommand" caretOffset="787" date="Tue Nov 21 11:27:50 EST 2023" docOffset="848" starttimestamp="1700582044267" timestamp="2026389" />
  <Command __id="1692" _type="SelectTextCommand" caretOffset="696" date="Tue Nov 21 11:27:54 EST 2023" end="787" start="696" starttimestamp="1700582044267" timestamp="2030389" />
  <Command __id="1693" _type="InsertStringCommand" date="Tue Nov 21 11:27:56 EST 2023" starttimestamp="1700582044267" timestamp="2031743" timestamp2="2031743">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1694" _type="InsertStringCommand" date="Tue Nov 21 11:27:56 EST 2023" starttimestamp="1700582044267" timestamp="2032145" timestamp2="2032145">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1695" _type="InsertStringCommand" date="Tue Nov 21 11:27:56 EST 2023" starttimestamp="1700582044267" timestamp="2032440" timestamp2="2032440">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1696" _type="MoveCaretCommand" caretOffset="854" date="Tue Nov 21 11:27:57 EST 2023" docOffset="915" starttimestamp="1700582044267" timestamp="2033692" />
  <Command __id="1697" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:27:58 EST 2023" starttimestamp="1700582044267" timestamp="2034239" />
  <Command __id="1698" _type="InsertStringCommand" date="Tue Nov 21 11:27:58 EST 2023" starttimestamp="1700582044267" timestamp="2034434" timestamp2="2034434">
    <data><![CDATA[<]]></data>
  </Command>
  <Command __id="1699" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 11:27:59 EST 2023" docOffset="1009" starttimestamp="1700582044267" timestamp="2035296" />
  <Command __id="1700" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 11:28:00 EST 2023" docOffset="1009" starttimestamp="1700582044267" timestamp="2035741" />
  <Command __id="1701" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 11:28:00 EST 2023" docOffset="1009" starttimestamp="1700582044267" timestamp="2036075" />
  <Command __id="1702" _type="InsertStringCommand" date="Tue Nov 21 11:28:01 EST 2023" starttimestamp="1700582044267" timestamp="2036821" timestamp2="2036821">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1703" _type="MoveCaretCommand" caretOffset="1042" date="Tue Nov 21 11:28:01 EST 2023" docOffset="1103" starttimestamp="1700582044267" timestamp="2037155" />
  <Command __id="1704" _type="MoveCaretCommand" caretOffset="1043" date="Tue Nov 21 11:28:01 EST 2023" docOffset="1104" starttimestamp="1700582044267" timestamp="2037472" />
  <Command __id="1705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:28:02 EST 2023" starttimestamp="1700582044267" timestamp="2038003" />
  <Command __id="1706" _type="InsertStringCommand" date="Tue Nov 21 11:28:02 EST 2023" starttimestamp="1700582044267" timestamp="2038525" timestamp2="2038525">
    <data><![CDATA[<]]></data>
  </Command>
  <Command __id="1707" _type="InsertStringCommand" date="Tue Nov 21 11:28:03 EST 2023" starttimestamp="1700582044267" timestamp="2038920" timestamp2="2038920">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1708" _type="SelectTextCommand" caretOffset="865" date="Tue Nov 21 11:28:05 EST 2023" end="867" start="865" starttimestamp="1700582044267" timestamp="2040941" />
  <Command __id="1709" _type="MoveCaretCommand" caretOffset="866" date="Tue Nov 21 11:28:05 EST 2023" docOffset="927" starttimestamp="1700582044267" timestamp="2041435" />
  <Command __id="1710" _type="SelectTextCommand" caretOffset="861" date="Tue Nov 21 11:28:06 EST 2023" end="866" start="861" starttimestamp="1700582044267" timestamp="2042728" />
  <Command __id="1711" _type="InsertStringCommand" date="Tue Nov 21 11:28:07 EST 2023" starttimestamp="1700582044267" timestamp="2043255" timestamp2="2043255">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1712" _type="InsertStringCommand" date="Tue Nov 21 11:28:07 EST 2023" starttimestamp="1700582044267" timestamp="2043420" timestamp2="2043420">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1713" _type="InsertStringCommand" date="Tue Nov 21 11:28:07 EST 2023" starttimestamp="1700582044267" timestamp="2043569" timestamp2="2043569">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1714" _type="InsertStringCommand" date="Tue Nov 21 11:28:07 EST 2023" starttimestamp="1700582044267" timestamp="2043715" timestamp2="2043715">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1715" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 11:28:08 EST 2023" docOffset="1021" starttimestamp="1700582044267" timestamp="2044612" />
  <Command __id="1716" _type="MoveCaretCommand" caretOffset="962" date="Tue Nov 21 11:28:10 EST 2023" docOffset="1023" starttimestamp="1700582044267" timestamp="2045945" />
  <Command __id="1717" _type="InsertStringCommand" date="Tue Nov 21 11:28:11 EST 2023" starttimestamp="1700582044267" timestamp="2046854" timestamp2="2046854">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1718" _type="InsertStringCommand" date="Tue Nov 21 11:28:11 EST 2023" starttimestamp="1700582044267" timestamp="2047184" timestamp2="2047184">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="1719" _type="InsertStringCommand" date="Tue Nov 21 11:28:12 EST 2023" starttimestamp="1700582044267" timestamp="2048223" timestamp2="2048223">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1720" _type="InsertStringCommand" date="Tue Nov 21 11:28:12 EST 2023" starttimestamp="1700582044267" timestamp="2048346" timestamp2="2048346">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1721" _type="InsertStringCommand" date="Tue Nov 21 11:28:12 EST 2023" starttimestamp="1700582044267" timestamp="2048416" timestamp2="2048416">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1722" _type="SelectTextCommand" caretOffset="1055" date="Tue Nov 21 11:28:14 EST 2023" end="1060" start="1055" starttimestamp="1700582044267" timestamp="2050414" />
  <Command __id="1723" _type="InsertStringCommand" date="Tue Nov 21 11:28:15 EST 2023" starttimestamp="1700582044267" timestamp="2050950" timestamp2="2050950">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1724" _type="InsertStringCommand" date="Tue Nov 21 11:28:15 EST 2023" starttimestamp="1700582044267" timestamp="2051058" timestamp2="2051058">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1725" _type="InsertStringCommand" date="Tue Nov 21 11:28:15 EST 2023" starttimestamp="1700582044267" timestamp="2051198" timestamp2="2051198">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1726" _type="InsertStringCommand" date="Tue Nov 21 11:28:15 EST 2023" starttimestamp="1700582044267" timestamp="2051408" timestamp2="2051408">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1727" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:28:16 EST 2023" starttimestamp="1700582044267" timestamp="2051831" />
  <Command __id="1728" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:28:16 EST 2023" starttimestamp="1700582044267" timestamp="2052103" />
  <Command __id="1729" _type="InsertStringCommand" date="Tue Nov 21 11:28:16 EST 2023" starttimestamp="1700582044267" timestamp="2052525" timestamp2="2052525">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1730" _type="InsertStringCommand" date="Tue Nov 21 11:28:17 EST 2023" starttimestamp="1700582044267" timestamp="2053290" timestamp2="2053290">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="1731" _type="InsertStringCommand" date="Tue Nov 21 11:28:17 EST 2023" starttimestamp="1700582044267" timestamp="2053395" timestamp2="2053395">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1732" _type="InsertStringCommand" date="Tue Nov 21 11:28:18 EST 2023" starttimestamp="1700582044267" timestamp="2054066" timestamp2="2054066">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1733" _type="InsertStringCommand" date="Tue Nov 21 11:28:18 EST 2023" starttimestamp="1700582044267" timestamp="2054146" timestamp2="2054146">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1734" _type="MoveCaretCommand" caretOffset="1122" date="Tue Nov 21 11:28:19 EST 2023" docOffset="1183" starttimestamp="1700582044267" timestamp="2054930" />
  <Command __id="1735" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:28:19 EST 2023" starttimestamp="1700582044267" timestamp="2055728" />
  <Command __id="1736" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:28:20 EST 2023" starttimestamp="1700582044267" timestamp="2055736" />
  <Command __id="1737" _type="MoveCaretCommand" caretOffset="775" date="Tue Nov 21 11:28:21 EST 2023" docOffset="836" starttimestamp="1700582044267" timestamp="2057553" />
  <Command __id="1738" _type="SelectTextCommand" caretOffset="783" date="Tue Nov 21 11:28:21 EST 2023" end="783" start="767" starttimestamp="1700582044267" timestamp="2057718" />
  <Command __id="1740" _type="MoveCaretCommand" caretOffset="490" date="Tue Nov 21 11:28:22 EST 2023" docOffset="490" starttimestamp="1700582044267" timestamp="2058317" />
  <Command __id="1741" _type="ShellCommand" date="Tue Nov 21 11:28:41 EST 2023" starttimestamp="1700582044267" timestamp="2077016" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1742" _type="ShellCommand" date="Tue Nov 21 11:28:41 EST 2023" starttimestamp="1700582044267" timestamp="2077313" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1744" _type="SelectTextCommand" caretOffset="783" date="Tue Nov 21 11:28:42 EST 2023" end="783" start="767" starttimestamp="1700582044267" timestamp="2077943" />
  <Command __id="1746" _type="MoveCaretCommand" caretOffset="490" date="Tue Nov 21 11:28:43 EST 2023" docOffset="490" starttimestamp="1700582044267" timestamp="2078784" />
  <Command __id="1747" _type="MoveCaretCommand" caretOffset="1011" date="Tue Nov 21 11:28:44 EST 2023" docOffset="1011" starttimestamp="1700582044267" timestamp="2079841" />
  <Command __id="1748" _type="SelectTextCommand" caretOffset="1012" date="Tue Nov 21 11:28:44 EST 2023" end="1012" start="1008" starttimestamp="1700582044267" timestamp="2079987" />
  <Command __id="1750" _type="PasteCommand" date="Tue Nov 21 11:28:44 EST 2023" starttimestamp="1700582044267" timestamp="2080154" />
  <Command __id="1752" _type="InsertStringCommand" date="Tue Nov 21 11:28:45 EST 2023" starttimestamp="1700582044267" timestamp="2081058" timestamp2="2081058">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1753" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:28:45 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2081064" />
  <Command __id="1759" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:28:46 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2082321" />
  <Command __id="1760" _type="MoveCaretCommand" caretOffset="896" date="Tue Nov 21 11:28:46 EST 2023" docOffset="896" starttimestamp="1700582044267" timestamp="2082384" />
  <Command __id="1762" _type="SelectTextCommand" caretOffset="783" date="Tue Nov 21 11:28:47 EST 2023" end="783" start="767" starttimestamp="1700582044267" timestamp="2082979" />
  <Command __id="1763" _type="MoveCaretCommand" caretOffset="866" date="Tue Nov 21 11:28:47 EST 2023" docOffset="927" starttimestamp="1700582044267" timestamp="2083562" />
  <Command __id="1764" _type="MoveCaretCommand" caretOffset="866" date="Tue Nov 21 11:28:47 EST 2023" docOffset="927" starttimestamp="1700582044267" timestamp="2083562" />
  <Command __id="1765" _type="SelectTextCommand" caretOffset="876" date="Tue Nov 21 11:28:47 EST 2023" end="876" start="861" starttimestamp="1700582044267" timestamp="2083676" />
  <Command __id="1766" _type="SelectTextCommand" caretOffset="876" date="Tue Nov 21 11:28:47 EST 2023" end="876" start="861" starttimestamp="1700582044267" timestamp="2083676" />
  <Command __id="1767" _type="CopyCommand" date="Tue Nov 21 11:28:48 EST 2023" starttimestamp="1700582044267" timestamp="2083804" />
  <Command __id="1769" _type="MoveCaretCommand" caretOffset="896" date="Tue Nov 21 11:28:48 EST 2023" docOffset="896" starttimestamp="1700582044267" timestamp="2084347" />
  <Command __id="1770" _type="MoveCaretCommand" caretOffset="1272" date="Tue Nov 21 11:28:50 EST 2023" docOffset="1272" starttimestamp="1700582044267" timestamp="2086210" />
  <Command __id="1771" _type="SelectTextCommand" caretOffset="1273" date="Tue Nov 21 11:28:50 EST 2023" end="1273" start="1269" starttimestamp="1700582044267" timestamp="2086355" />
  <Command __id="1773" _type="PasteCommand" date="Tue Nov 21 11:28:50 EST 2023" starttimestamp="1700582044267" timestamp="2086467" />
  <Command __id="1775" _type="InsertStringCommand" date="Tue Nov 21 11:28:51 EST 2023" starttimestamp="1700582044267" timestamp="2087282" timestamp2="2087282">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1776" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:28:51 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2087288" />
  <Command __id="1782" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:28:52 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2088192" />
  <Command __id="1783" _type="MoveCaretCommand" caretOffset="1096" date="Tue Nov 21 11:28:52 EST 2023" docOffset="1096" starttimestamp="1700582044267" timestamp="2088266" />
  <Command __id="1785" _type="SelectTextCommand" caretOffset="876" date="Tue Nov 21 11:28:53 EST 2023" end="876" start="861" starttimestamp="1700582044267" timestamp="2089229" />
  <Command __id="1786" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 11:28:54 EST 2023" docOffset="1021" starttimestamp="1700582044267" timestamp="2089938" />
  <Command __id="1787" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 11:28:54 EST 2023" docOffset="1021" starttimestamp="1700582044267" timestamp="2089938" />
  <Command __id="1788" _type="SelectTextCommand" caretOffset="976" date="Tue Nov 21 11:28:54 EST 2023" end="976" start="955" starttimestamp="1700582044267" timestamp="2090093" />
  <Command __id="1789" _type="SelectTextCommand" caretOffset="976" date="Tue Nov 21 11:28:54 EST 2023" end="976" start="955" starttimestamp="1700582044267" timestamp="2090093" />
  <Command __id="1790" _type="CopyCommand" date="Tue Nov 21 11:28:54 EST 2023" starttimestamp="1700582044267" timestamp="2090196" />
  <Command __id="1792" _type="MoveCaretCommand" caretOffset="1096" date="Tue Nov 21 11:28:55 EST 2023" docOffset="1096" starttimestamp="1700582044267" timestamp="2090756" />
  <Command __id="1688" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:27:49 EST 2023" docASTNodeCount="256" docActiveCodeLength="1461" docExpressionCount="174" docLength="1461" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2025482">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEqualEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEqualEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference >= 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference >= 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1690" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:27:50 EST 2023" docASTNodeCount="118" docActiveCodeLength="1018" docExpressionCount="77" docLength="1018" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2026343">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1739" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:22 EST 2023" docASTNodeCount="260" docActiveCodeLength="1675" docExpressionCount="125" docLength="2185" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2058268">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1743" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:42 EST 2023" docASTNodeCount="148" docActiveCodeLength="1310" docExpressionCount="101" docLength="1310" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2077902">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());	"), Diff(INSERT,"	BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	"), Diff(EQUAL,"}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());
	}
	
	public static void registerLogic() {
		
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
		registerArithmetic();
		registerLogic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1745" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:43 EST 2023" docASTNodeCount="260" docActiveCodeLength="1675" docExpressionCount="125" docLength="2185" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2078747">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1749" _type="Replace" date="Tue Nov 21 11:28:44 EST 2023" docASTNodeCount="260" docActiveCodeLength="1687" docExpressionCount="125" docLength="2197" endLine="42" insertionLength="16" int_docASTNodeCount="259" int_docActiveCodeLength="1671" int_docExpressionCount="124" int_docLength="2181" length="4" offset="1008" startLine="42" starttimestamp="1700582044267" timestamp="2080147">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[GreaterEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1751" _type="Insert" date="Tue Nov 21 11:28:45 EST 2023" docASTNodeCount="262" docActiveCodeLength="1693" docExpressionCount="126" docLength="2203" length="6" offset="1024" repeat="6" starttimestamp="1700582044267" timestamp="2081056" timestamp2="2081907">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="1761" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:47 EST 2023" docASTNodeCount="148" docActiveCodeLength="1310" docExpressionCount="101" docLength="1310" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2082931">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1768" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:48 EST 2023" docASTNodeCount="262" docActiveCodeLength="1693" docExpressionCount="126" docLength="2203" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2084300">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"GreaterEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1772" _type="Replace" date="Tue Nov 21 11:28:50 EST 2023" docASTNodeCount="262" docActiveCodeLength="1704" docExpressionCount="126" docLength="2214" endLine="54" insertionLength="15" int_docASTNodeCount="261" int_docActiveCodeLength="1689" int_docExpressionCount="125" int_docLength="2199" length="4" offset="1269" startLine="54" starttimestamp="1700582044267" timestamp="2086465">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[LesserEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1774" _type="Insert" date="Tue Nov 21 11:28:51 EST 2023" docASTNodeCount="264" docActiveCodeLength="1710" docExpressionCount="127" docLength="2220" length="6" offset="1284" repeat="6" starttimestamp="1700582044267" timestamp="2087279" timestamp2="2087848">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="1784" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:53 EST 2023" docASTNodeCount="148" docActiveCodeLength="1310" docExpressionCount="101" docLength="1310" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2089180">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1791" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:54 EST 2023" docASTNodeCount="264" docActiveCodeLength="1710" docExpressionCount="127" docLength="2220" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2090705">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"LesserEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1795" _type="Replace" date="Tue Nov 21 11:28:56 EST 2023" docASTNodeCount="264" docActiveCodeLength="1727" docExpressionCount="127" docLength="2237" endLine="36" insertionLength="21" int_docASTNodeCount="263" int_docActiveCodeLength="1706" int_docExpressionCount="126" int_docLength="2216" length="4" offset="887" startLine="36" starttimestamp="1700582044267" timestamp="2092645">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[GreaterEqualEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1797" _type="Insert" date="Tue Nov 21 11:28:57 EST 2023" docASTNodeCount="266" docActiveCodeLength="1733" docExpressionCount="128" docLength="2243" length="6" offset="908" repeat="6" starttimestamp="1700582044267" timestamp="2093439" timestamp2="2093981">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="1805" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:28:58 EST 2023" docASTNodeCount="148" docActiveCodeLength="1310" docExpressionCount="101" docLength="1310" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2094671">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1812" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:29:00 EST 2023" docASTNodeCount="266" docActiveCodeLength="1733" docExpressionCount="128" docLength="2243" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2096074">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"GreaterEqualEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="1815" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:29:01 EST 2023" docASTNodeCount="148" docActiveCodeLength="1310" docExpressionCount="101" docLength="1310" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2096878">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1793" _type="MoveCaretCommand" caretOffset="890" date="Tue Nov 21 11:28:56 EST 2023" docOffset="890" starttimestamp="1700582044267" timestamp="2092329" />
  <Command __id="1794" _type="SelectTextCommand" caretOffset="891" date="Tue Nov 21 11:28:56 EST 2023" end="891" start="887" starttimestamp="1700582044267" timestamp="2092455" />
  <Command __id="1796" _type="PasteCommand" date="Tue Nov 21 11:28:56 EST 2023" starttimestamp="1700582044267" timestamp="2092646" />
  <Command __id="1798" _type="InsertStringCommand" date="Tue Nov 21 11:28:57 EST 2023" starttimestamp="1700582044267" timestamp="2093441" timestamp2="2093441">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1799" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:28:57 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2093447" />
  <Command __id="1806" _type="SelectTextCommand" caretOffset="976" date="Tue Nov 21 11:28:58 EST 2023" end="976" start="955" starttimestamp="1700582044267" timestamp="2094723" />
  <Command __id="1807" _type="MoveCaretCommand" caretOffset="1060" date="Tue Nov 21 11:28:59 EST 2023" docOffset="1121" starttimestamp="1700582044267" timestamp="2095321" />
  <Command __id="1808" _type="MoveCaretCommand" caretOffset="1060" date="Tue Nov 21 11:28:59 EST 2023" docOffset="1121" starttimestamp="1700582044267" timestamp="2095321" />
  <Command __id="1809" _type="SelectTextCommand" caretOffset="1075" date="Tue Nov 21 11:28:59 EST 2023" end="1075" start="1055" starttimestamp="1700582044267" timestamp="2095465" />
  <Command __id="1810" _type="SelectTextCommand" caretOffset="1075" date="Tue Nov 21 11:28:59 EST 2023" end="1075" start="1055" starttimestamp="1700582044267" timestamp="2095465" />
  <Command __id="1811" _type="CopyCommand" date="Tue Nov 21 11:28:59 EST 2023" starttimestamp="1700582044267" timestamp="2095594" />
  <Command __id="1813" _type="MoveCaretCommand" caretOffset="914" date="Tue Nov 21 11:29:00 EST 2023" docOffset="914" starttimestamp="1700582044267" timestamp="2096126" />
  <Command __id="1814" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:29:01 EST 2023" starttimestamp="1700582044267" timestamp="2096840" />
  <Command __id="1816" _type="SelectTextCommand" caretOffset="1075" date="Tue Nov 21 11:29:01 EST 2023" end="1075" start="1055" starttimestamp="1700582044267" timestamp="2096923" />
  <Command __id="1817" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:29:01 EST 2023" starttimestamp="1700582044267" timestamp="2096944" />
  <Command __id="1818" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:29:01 EST 2023" starttimestamp="1700582044267" timestamp="2096956" />
  <Command __id="1820" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:29:04 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2100635" />
  <Command __id="1819" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:29:04 EST 2023" docASTNodeCount="266" docActiveCodeLength="1733" docExpressionCount="128" docLength="2243" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2100577">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1823" _type="Replace" date="Tue Nov 21 11:29:08 EST 2023" docASTNodeCount="266" docActiveCodeLength="1749" docExpressionCount="128" docLength="2259" endLine="48" insertionLength="20" int_docASTNodeCount="265" int_docActiveCodeLength="1729" int_docExpressionCount="127" int_docLength="2239" length="4" offset="1171" startLine="48" starttimestamp="1700582044267" timestamp="2103912">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[LesserEqualEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1825" _type="Insert" date="Tue Nov 21 11:29:08 EST 2023" docASTNodeCount="268" docActiveCodeLength="1755" docExpressionCount="129" docLength="2265" length="6" offset="1191" repeat="6" starttimestamp="1700582044267" timestamp="2104724" timestamp2="2105261">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="1821" _type="MoveCaretCommand" caretOffset="1042" date="Tue Nov 21 11:29:07 EST 2023" docOffset="1171" starttimestamp="1700582044267" timestamp="2103437" />
  <Command __id="1822" _type="SelectTextCommand" caretOffset="1046" date="Tue Nov 21 11:29:07 EST 2023" end="1046" start="1042" starttimestamp="1700582044267" timestamp="2103591" />
  <Command __id="1824" _type="PasteCommand" date="Tue Nov 21 11:29:08 EST 2023" starttimestamp="1700582044267" timestamp="2103918" />
  <Command __id="1826" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:29:08 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2104732" />
  <Command __id="1832" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:29:09 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2105655" />
  <Command __id="1833" _type="MoveCaretCommand" caretOffset="929" date="Tue Nov 21 11:29:09 EST 2023" docOffset="1058" starttimestamp="1700582044267" timestamp="2105714" />
  <Command __id="1834" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:29:10 EST 2023" starttimestamp="1700582044267" timestamp="2105858" />
  <Command __id="1835" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:29:10 EST 2023" starttimestamp="1700582044267" timestamp="2105960" />
  <Command __id="1836" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:29:10 EST 2023" starttimestamp="1700582044267" timestamp="2105967" />
  <Command __id="1838" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:29:12 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="2108603" />
  <Command __id="1839" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:29:13 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2109419" type="Run" />
  <Command __id="1840" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:29:13 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2109419" type="Run" />
  <Command __id="1841" _type="ShellCommand" date="Tue Nov 21 11:29:14 EST 2023" starttimestamp="1700582044267" timestamp="2109777" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1842" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115363" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1843" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115364" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1844" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115371" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="1845" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115372" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="1846" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115388" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1847" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115389" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1848" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115389" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2"), Diff(INSERT,"(+ 3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="1849" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115390" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1850" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115392" type="ConsoleOutput">
    <outputString><![CDATA[3
(3 4)
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3¶(3 4)¶NIL¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1851" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115394" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3¶(3 4)¶NIL¶T"), Diff(INSERT,"Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1852" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115395" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1853" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115396" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):30"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1854" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115396" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to AND
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:AndTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):30"), Diff(INSERT,"ng in test file a call to AND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1855" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115397" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to AND"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1856" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115398" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of AND


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of AND¶¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1857" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115399" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to NOT

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"And"), Diff(INSERT,"Not"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,0.0% complete,0.0,10.0,Expecting in test file "), Diff(DELETE,"two results of AND¶¶¶Test execution time (ms):0"), Diff(INSERT,"a call to NOT¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1858" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115399" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to NOT¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1859" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115400" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of NOT
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of NOT"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1860" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115400" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of NOT"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1861" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115400" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to OR
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:OrTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to OR"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1862" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115401" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to OR"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1863" _type="ConsoleOutput" date="Tue Nov 21 11:29:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2115401" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of OR
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:OrTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of OR"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1864" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120364" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedTwoResults"), Diff(INSERT,"execution time (ms):1¶Test Result:ConsTested"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Exp"), Diff(INSERT,"¶¶Test ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of OR"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1865" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120365" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="1866" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120367" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="1867" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120367" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1868" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120369" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1869" _type="LocalChecksRawCommand" date="Tue Nov 21 11:29:24 EST 2023" starttimestamp="1700582044267" timestamp="2120370">
    <CSVRow><![CDATA[181,Tue Nov 21 11:29:19 EST 2023,28,-2,LispInterpreterLoadLogicalSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker- AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,101,0,true,AndTestedChecker AndTestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,AndTestedChecker-(0.0/10.0) AndTestedTwoResultsChecker-(0.0/10.0) NotTestedChecker-(0.0/10.0) NotTestedTwoResultsChecker-(0.0/10.0) OrTestedChecker-(0.0/10.0) OrTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1870" _type="LocalChecksRawCommand" date="Tue Nov 21 11:29:24 EST 2023" starttimestamp="1700582044267" timestamp="2120370">
    <CSVRow><![CDATA[181,Tue Nov 21 11:29:19 EST 2023,28,-2,LispInterpreterLoadLogicalSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker- AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,101,0,true,AndTestedChecker AndTestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,AndTestedChecker-(0.0/10.0) AndTestedTwoResultsChecker-(0.0/10.0) NotTestedChecker-(0.0/10.0) NotTestedTwoResultsChecker-(0.0/10.0) OrTestedChecker-(0.0/10.0) OrTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1871" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120371" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Cond"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="1872" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120372" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:CondTestedChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="1873" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120373" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1874" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120374" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1875" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120375" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1876" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120376" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1877" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120378" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1878" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120379" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1879" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120379" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1880" _type="ConsoleOutput" date="Tue Nov 21 11:29:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2120380" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1892" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:29:38 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2134447" type="Run" />
  <Command __id="1893" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:29:38 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2134447" type="Run" />
  <Command __id="1894" _type="ShellCommand" date="Tue Nov 21 11:29:38 EST 2023" starttimestamp="1700582044267" timestamp="2134450" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1895" _type="ShellCommand" date="Tue Nov 21 11:29:41 EST 2023" starttimestamp="1700582044267" timestamp="2136881" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1896" _type="ShellCommand" date="Tue Nov 21 11:29:42 EST 2023" starttimestamp="1700582044267" timestamp="2138539" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1897" _type="ShellCommand" date="Tue Nov 21 11:29:43 EST 2023" starttimestamp="1700582044267" timestamp="2139224" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1898" _type="ShellCommand" date="Tue Nov 21 11:29:43 EST 2023" starttimestamp="1700582044267" timestamp="2139446" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1899" _type="ShellCommand" date="Tue Nov 21 11:29:43 EST 2023" starttimestamp="1700582044267" timestamp="2139626" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1901" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:30:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2191829" type="Run" />
  <Command __id="1902" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:30:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2191829" type="Run" />
  <Command __id="1903" _type="ShellCommand" date="Tue Nov 21 11:30:36 EST 2023" starttimestamp="1700582044267" timestamp="2192181" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1904" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198629" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of <="), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1905" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198631" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1906" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198637" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1907" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198638" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1908" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198639" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1909" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198639" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1910" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198655" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1911" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198657" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1912" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198657" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1913" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198657" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1914" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198658" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1915" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198658" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1916" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198658" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="1917" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198658" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1918" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198658" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="1919" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198659" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1920" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198659" type="ConsoleOutput">
    <outputString><![CDATA[T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL"), Diff(INSERT,"T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1921" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198659" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶T¶")]]]></diff>
  </Command>
  <Command __id="1922" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198663" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶T"), Diff(INSERT,"Test execution time (ms):31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1923" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198663" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):31"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1924" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198663" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1925" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198664" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1926" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198665" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1927" _type="ConsoleOutput" date="Tue Nov 21 11:30:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2198666" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1939" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:30:50 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2206058" type="Run" />
  <Command __id="1940" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:30:50 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2206058" type="Run" />
  <Command __id="1941" _type="ShellCommand" date="Tue Nov 21 11:30:50 EST 2023" starttimestamp="1700582044267" timestamp="2206065" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1942" _type="ShellCommand" date="Tue Nov 21 11:30:51 EST 2023" starttimestamp="1700582044267" timestamp="2206863" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1943" _type="ShellCommand" date="Tue Nov 21 11:31:31 EST 2023" starttimestamp="1700582044267" timestamp="2247367" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1944" _type="ShellCommand" date="Tue Nov 21 11:31:32 EST 2023" starttimestamp="1700582044267" timestamp="2248148" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1945" _type="ShellCommand" date="Tue Nov 21 11:31:32 EST 2023" starttimestamp="1700582044267" timestamp="2248340" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1946" _type="ShellCommand" date="Tue Nov 21 11:31:32 EST 2023" starttimestamp="1700582044267" timestamp="2248715" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1947" _type="ShellCommand" date="Tue Nov 21 11:31:37 EST 2023" starttimestamp="1700582044267" timestamp="2252855" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1948" _type="ShellCommand" date="Tue Nov 21 11:31:37 EST 2023" starttimestamp="1700582044267" timestamp="2253633" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1949" _type="ShellCommand" date="Tue Nov 21 11:32:17 EST 2023" starttimestamp="1700582044267" timestamp="2293674" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1950" _type="ShellCommand" date="Tue Nov 21 11:32:21 EST 2023" starttimestamp="1700582044267" timestamp="2297718" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1951" _type="ShellCommand" date="Tue Nov 21 11:32:33 EST 2023" starttimestamp="1700582044267" timestamp="2309300" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1952" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:32:33 EST 2023" starttimestamp="1700582044267" timestamp="2309356" />
  <Command __id="1953" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:32:33 EST 2023" starttimestamp="1700582044267" timestamp="2309363" />
  <Command __id="1955" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:32:33 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2309474" />
  <Command __id="1956" _type="MoveCaretCommand" caretOffset="232" date="Tue Nov 21 11:32:34 EST 2023" docOffset="313" starttimestamp="1700582044267" timestamp="2310294" />
  <Command __id="1957" _type="MoveCaretCommand" caretOffset="158" date="Tue Nov 21 11:32:34 EST 2023" docOffset="239" starttimestamp="1700582044267" timestamp="2310723" />
  <Command __id="1958" _type="SelectTextCommand" caretOffset="159" date="Tue Nov 21 11:32:35 EST 2023" end="159" start="155" starttimestamp="1700582044267" timestamp="2310882" />
  <Command __id="1960" _type="InsertStringCommand" date="Tue Nov 21 11:32:35 EST 2023" starttimestamp="1700582044267" timestamp="2311397" timestamp2="2311397">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1962" _type="InsertStringCommand" date="Tue Nov 21 11:32:35 EST 2023" starttimestamp="1700582044267" timestamp="2311606" timestamp2="2311606">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1964" _type="InsertStringCommand" date="Tue Nov 21 11:32:35 EST 2023" starttimestamp="1700582044267" timestamp="2311681" timestamp2="2311681">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1966" _type="InsertStringCommand" date="Tue Nov 21 11:32:36 EST 2023" starttimestamp="1700582044267" timestamp="2311777" timestamp2="2311777">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1967" _type="MoveCaretCommand" caretOffset="175" date="Tue Nov 21 11:32:36 EST 2023" docOffset="256" starttimestamp="1700582044267" timestamp="2312581" />
  <Command __id="1968" _type="SelectTextCommand" caretOffset="177" date="Tue Nov 21 11:32:36 EST 2023" end="177" start="173" starttimestamp="1700582044267" timestamp="2312707" />
  <Command __id="1970" _type="InsertStringCommand" date="Tue Nov 21 11:32:37 EST 2023" starttimestamp="1700582044267" timestamp="2313188" timestamp2="2313188">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1972" _type="InsertStringCommand" date="Tue Nov 21 11:32:37 EST 2023" starttimestamp="1700582044267" timestamp="2313268" timestamp2="2313268">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1974" _type="InsertStringCommand" date="Tue Nov 21 11:32:37 EST 2023" starttimestamp="1700582044267" timestamp="2313383" timestamp2="2313383">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1976" _type="InsertStringCommand" date="Tue Nov 21 11:32:37 EST 2023" starttimestamp="1700582044267" timestamp="2313653" timestamp2="2313653">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1978" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2313951" timestamp2="2313951">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1980" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2314043" timestamp2="2314043">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1982" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2314100" timestamp2="2314100">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1984" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2314282" timestamp2="2314282">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1986" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2314374" timestamp2="2314374">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1988" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2314434" timestamp2="2314434">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1990" _type="InsertStringCommand" date="Tue Nov 21 11:32:38 EST 2023" starttimestamp="1700582044267" timestamp="2314538" timestamp2="2314538">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1837" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:29:12 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2108559">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1954" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:32:33 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2309425">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1959" _type="Replace" date="Tue Nov 21 11:32:35 EST 2023" docASTNodeCount="52" docActiveCodeLength="283" docExpressionCount="35" docLength="317" endLine="9" insertionLength="1" int_docASTNodeCount="42" int_docActiveCodeLength="282" int_docExpressionCount="30" int_docLength="316" length="4" offset="236" startLine="9" starttimestamp="1700582044267" timestamp="2311393">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1961" _type="Insert" date="Tue Nov 21 11:32:35 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" length="3" offset="237" repeat="3" starttimestamp="1700582044267" timestamp="2311605" timestamp2="2311774">
    <text><![CDATA[xpr]]></text>
  </DocumentChange>
  <DocumentChange __id="1969" _type="Replace" date="Tue Nov 21 11:32:37 EST 2023" docASTNodeCount="52" docActiveCodeLength="283" docExpressionCount="35" docLength="317" endLine="9" insertionLength="1" int_docASTNodeCount="46" int_docActiveCodeLength="282" int_docExpressionCount="32" int_docLength="316" length="4" offset="254" startLine="9" starttimestamp="1700582044267" timestamp="2313184">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1971" _type="Insert" date="Tue Nov 21 11:32:37 EST 2023" docASTNodeCount="52" docActiveCodeLength="293" docExpressionCount="35" docLength="327" length="10" offset="255" repeat="10" starttimestamp="1700582044267" timestamp="2313266" timestamp2="2314536">
    <text><![CDATA[nvironment]]></text>
  </DocumentChange>
  <DocumentChange __id="1993" _type="Delete" date="Tue Nov 21 11:32:40 EST 2023" docASTNodeCount="50" docActiveCodeLength="278" docExpressionCount="34" docLength="278" endLine="11" length="49" offset="271" startLine="10" starttimestamp="1700582044267" timestamp="2316673">
    <text><![CDATA[// TODO Auto-generated method stub
		return null;]]></text>
  </DocumentChange>
  <Command __id="1991" _type="MoveCaretCommand" caretOffset="238" date="Tue Nov 21 11:32:39 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="2315522" />
  <Command __id="1992" _type="SelectTextCommand" caretOffset="190" date="Tue Nov 21 11:32:40 EST 2023" end="239" start="190" starttimestamp="1700582044267" timestamp="2316215" />
  <Command __id="1994" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:40 EST 2023" starttimestamp="1700582044267" timestamp="2316676" />
  <Command __id="1996" _type="InsertStringCommand" date="Tue Nov 21 11:32:42 EST 2023" starttimestamp="1700582044267" timestamp="2318035" timestamp2="2318035">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1998" _type="InsertStringCommand" date="Tue Nov 21 11:32:42 EST 2023" starttimestamp="1700582044267" timestamp="2318242" timestamp2="2318242">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2000" _type="InsertStringCommand" date="Tue Nov 21 11:32:42 EST 2023" starttimestamp="1700582044267" timestamp="2318332" timestamp2="2318332">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2002" _type="InsertStringCommand" date="Tue Nov 21 11:32:42 EST 2023" starttimestamp="1700582044267" timestamp="2318422" timestamp2="2318422">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2004" _type="InsertStringCommand" date="Tue Nov 21 11:32:42 EST 2023" starttimestamp="1700582044267" timestamp="2318509" timestamp2="2318509">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2005" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:32:42 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2318514" />
  <Command __id="2006" _type="ShellCommand" date="Tue Nov 21 11:32:44 EST 2023" starttimestamp="1700582044267" timestamp="2319761" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2007" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:32:44 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2319788" />
  <Command __id="2008" _type="ShellCommand" date="Tue Nov 21 11:32:45 EST 2023" starttimestamp="1700582044267" timestamp="2321304" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:46 EST 2023" starttimestamp="1700582044267" timestamp="2322121" />
  <Command __id="2012" _type="InsertStringCommand" date="Tue Nov 21 11:32:46 EST 2023" starttimestamp="1700582044267" timestamp="2322627" timestamp2="2322627">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2014" _type="InsertStringCommand" date="Tue Nov 21 11:32:47 EST 2023" starttimestamp="1700582044267" timestamp="2322764" timestamp2="2322764">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2016" _type="InsertStringCommand" date="Tue Nov 21 11:32:47 EST 2023" starttimestamp="1700582044267" timestamp="2322824" timestamp2="2322824">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2018" _type="InsertStringCommand" date="Tue Nov 21 11:32:47 EST 2023" starttimestamp="1700582044267" timestamp="2322948" timestamp2="2322948">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2020" _type="InsertStringCommand" date="Tue Nov 21 11:32:47 EST 2023" starttimestamp="1700582044267" timestamp="2323156" timestamp2="2323156">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2022" _type="InsertStringCommand" date="Tue Nov 21 11:32:47 EST 2023" starttimestamp="1700582044267" timestamp="2323293" timestamp2="2323293">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2024" _type="InsertStringCommand" date="Tue Nov 21 11:32:47 EST 2023" starttimestamp="1700582044267" timestamp="2323427" timestamp2="2323427">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2026" _type="InsertStringCommand" date="Tue Nov 21 11:32:48 EST 2023" starttimestamp="1700582044267" timestamp="2324263" timestamp2="2324263">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2027" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:32:48 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2324266" />
  <Command __id="2032" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:32:49 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2325218" />
  <Command __id="2034" _type="InsertStringCommand" date="Tue Nov 21 11:32:49 EST 2023" starttimestamp="1700582044267" timestamp="2325225" timestamp2="2325225">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2036" _type="InsertStringCommand" date="Tue Nov 21 11:32:49 EST 2023" starttimestamp="1700582044267" timestamp="2325460" timestamp2="2325460">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2037" _type="ShellCommand" date="Tue Nov 21 11:32:51 EST 2023" starttimestamp="1700582044267" timestamp="2327252" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2038" _type="ShellCommand" date="Tue Nov 21 11:32:51 EST 2023" starttimestamp="1700582044267" timestamp="2327507" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2040" _type="InsertStringCommand" date="Tue Nov 21 11:32:52 EST 2023" starttimestamp="1700582044267" timestamp="2328066" timestamp2="2328066">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2041" _type="ShellCommand" date="Tue Nov 21 11:32:52 EST 2023" starttimestamp="1700582044267" timestamp="2328325" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2042" _type="ShellCommand" date="Tue Nov 21 11:32:55 EST 2023" starttimestamp="1700582044267" timestamp="2331212" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2044" _type="InsertStringCommand" date="Tue Nov 21 11:32:55 EST 2023" starttimestamp="1700582044267" timestamp="2331451" timestamp2="2331451">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2046" _type="InsertStringCommand" date="Tue Nov 21 11:32:55 EST 2023" starttimestamp="1700582044267" timestamp="2331524" timestamp2="2331524">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2048" _type="InsertStringCommand" date="Tue Nov 21 11:32:55 EST 2023" starttimestamp="1700582044267" timestamp="2331636" timestamp2="2331636">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2051" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2331904" />
  <Command __id="2053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332028" />
  <Command __id="2055" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332151" />
  <Command __id="2057" _type="InsertStringCommand" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332274" timestamp2="2332274">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2059" _type="InsertStringCommand" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332411" timestamp2="2332411">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2061" _type="InsertStringCommand" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332472" timestamp2="2332472">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2063" _type="InsertStringCommand" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332516" timestamp2="2332516">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2065" _type="InsertStringCommand" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332525" timestamp2="2332525">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2067" _type="InsertStringCommand" date="Tue Nov 21 11:32:56 EST 2023" starttimestamp="1700582044267" timestamp="2332709" timestamp2="2332709">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2070" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:57 EST 2023" starttimestamp="1700582044267" timestamp="2333164" />
  <Command __id="2072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:57 EST 2023" starttimestamp="1700582044267" timestamp="2333279" />
  <Command __id="2074" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:32:57 EST 2023" starttimestamp="1700582044267" timestamp="2333416" />
  <Command __id="2076" _type="InsertStringCommand" date="Tue Nov 21 11:32:57 EST 2023" starttimestamp="1700582044267" timestamp="2333628" timestamp2="2333628">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2078" _type="InsertStringCommand" date="Tue Nov 21 11:32:57 EST 2023" starttimestamp="1700582044267" timestamp="2333688" timestamp2="2333688">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2080" _type="InsertStringCommand" date="Tue Nov 21 11:32:58 EST 2023" starttimestamp="1700582044267" timestamp="2333809" timestamp2="2333809">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2082" _type="InsertStringCommand" date="Tue Nov 21 11:32:58 EST 2023" starttimestamp="1700582044267" timestamp="2334616" timestamp2="2334616">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2084" _type="InsertStringCommand" date="Tue Nov 21 11:32:59 EST 2023" starttimestamp="1700582044267" timestamp="2334795" timestamp2="2334795">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2086" _type="InsertStringCommand" date="Tue Nov 21 11:32:59 EST 2023" starttimestamp="1700582044267" timestamp="2334903" timestamp2="2334903">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2088" _type="InsertStringCommand" date="Tue Nov 21 11:32:59 EST 2023" starttimestamp="1700582044267" timestamp="2334996" timestamp2="2334996">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2090" _type="InsertStringCommand" date="Tue Nov 21 11:32:59 EST 2023" starttimestamp="1700582044267" timestamp="2335084" timestamp2="2335084">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2091" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:32:59 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2335088" />
  <Command __id="2092" _type="ShellCommand" date="Tue Nov 21 11:33:01 EST 2023" starttimestamp="1700582044267" timestamp="2337067" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2093" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:33:01 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2337093" />
  <DocumentChange __id="1995" _type="Insert" date="Tue Nov 21 11:32:42 EST 2023" docASTNodeCount="52" docActiveCodeLength="283" docExpressionCount="35" docLength="283" length="5" offset="271" repeat="5" starttimestamp="1700582044267" timestamp="2318033" timestamp2="2318507">
    <text><![CDATA[expr.]]></text>
  </DocumentChange>
  <DocumentChange __id="2009" _type="Delete" date="Tue Nov 21 11:32:46 EST 2023" docASTNodeCount="52" docActiveCodeLength="282" docExpressionCount="35" docLength="282" endLine="10" length="1" offset="275" startLine="10" starttimestamp="1700582044267" timestamp="2322120">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2011" _type="Insert" date="Tue Nov 21 11:32:46 EST 2023" docASTNodeCount="56" docActiveCodeLength="294" docExpressionCount="39" docLength="294" length="12" offset="275" repeat="12" starttimestamp="1700582044267" timestamp="2322626" timestamp2="2324986">
    <text><![CDATA[ = expr.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="2033" _type="Replace" date="Tue Nov 21 11:32:49 EST 2023" docASTNodeCount="56" docActiveCodeLength="299" docExpressionCount="39" docLength="299" endLine="10" insertionLength="9" int_docASTNodeCount="54" int_docActiveCodeLength="290" int_docExpressionCount="37" int_docLength="290" length="4" offset="283" startLine="10" starttimestamp="1700582044267" timestamp="2325220">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2035" _type="Insert" date="Tue Nov 21 11:32:49 EST 2023" docASTNodeCount="56" docActiveCodeLength="300" docExpressionCount="39" docLength="300" length="1" offset="292" starttimestamp="1700582044267" timestamp="2325456">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2039" _type="Insert" date="Tue Nov 21 11:32:52 EST 2023" docASTNodeCount="56" docActiveCodeLength="303" docExpressionCount="39" docLength="303" length="3" offset="293" starttimestamp="1700582044267" timestamp="2328065">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2043" _type="Insert" date="Tue Nov 21 11:32:55 EST 2023" docASTNodeCount="56" docActiveCodeLength="307" docExpressionCount="39" docLength="307" length="4" offset="296" repeat="3" starttimestamp="1700582044267" timestamp="2331448" timestamp2="2331634">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <DocumentChange __id="2049" _type="Delete" date="Tue Nov 21 11:32:56 EST 2023" docASTNodeCount="56" docActiveCodeLength="303" docExpressionCount="39" docLength="303" endLine="11" length="4" offset="296" repeat="4" startLine="11" starttimestamp="1700582044267" timestamp="2331901" timestamp2="2332150">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <DocumentChange __id="2056" _type="Insert" date="Tue Nov 21 11:32:56 EST 2023" docASTNodeCount="59" docActiveCodeLength="310" docExpressionCount="41" docLength="310" length="7" offset="296" repeat="6" starttimestamp="1700582044267" timestamp="2332273" timestamp2="2332707">
    <text><![CDATA[whiel()]]></text>
  </DocumentChange>
  <DocumentChange __id="2068" _type="Delete" date="Tue Nov 21 11:32:57 EST 2023" docASTNodeCount="58" docActiveCodeLength="306" docExpressionCount="40" docLength="306" endLine="11" length="4" offset="299" repeat="4" startLine="11" starttimestamp="1700582044267" timestamp="2333160" timestamp2="2333413">
    <text><![CDATA[el()]]></text>
  </DocumentChange>
  <DocumentChange __id="2075" _type="Insert" date="Tue Nov 21 11:32:57 EST 2023" docASTNodeCount="59" docActiveCodeLength="315" docExpressionCount="40" docLength="315" length="9" offset="299" repeat="8" starttimestamp="1700582044267" timestamp="2333627" timestamp2="2335084">
    <text><![CDATA[le(expr.)]]></text>
  </DocumentChange>
  <Command __id="2094" _type="ShellCommand" date="Tue Nov 21 11:33:05 EST 2023" starttimestamp="1700582044267" timestamp="2340746" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2095" _type="Insert" date="Tue Nov 21 11:33:06 EST 2023" docASTNodeCount="56" docActiveCodeLength="318" docExpressionCount="39" docLength="318" length="3" offset="307" repeat="3" starttimestamp="1700582044267" timestamp="2342250" timestamp2="2342425">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <Command __id="2096" _type="InsertStringCommand" date="Tue Nov 21 11:33:06 EST 2023" starttimestamp="1700582044267" timestamp="2342251" timestamp2="2342251">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2098" _type="InsertStringCommand" date="Tue Nov 21 11:33:06 EST 2023" starttimestamp="1700582044267" timestamp="2342333" timestamp2="2342333">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2100" _type="InsertStringCommand" date="Tue Nov 21 11:33:06 EST 2023" starttimestamp="1700582044267" timestamp="2342426" timestamp2="2342426">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="2101" _type="Delete" date="Tue Nov 21 11:33:07 EST 2023" docASTNodeCount="56" docActiveCodeLength="314" docExpressionCount="39" docLength="314" endLine="11" length="4" offset="306" repeat="4" startLine="11" starttimestamp="1700582044267" timestamp="2342773" timestamp2="2343180">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <Command __id="2102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:33:07 EST 2023" starttimestamp="1700582044267" timestamp="2342775" />
  <Command __id="2104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:33:07 EST 2023" starttimestamp="1700582044267" timestamp="2342910" />
  <Command __id="2106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:33:07 EST 2023" starttimestamp="1700582044267" timestamp="2343035" />
  <Command __id="2108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:33:07 EST 2023" starttimestamp="1700582044267" timestamp="2343182" />
  <DocumentChange __id="2109" _type="Insert" date="Tue Nov 21 11:33:07 EST 2023" docASTNodeCount="56" docActiveCodeLength="319" docExpressionCount="39" docLength="319" length="5" offset="306" repeat="5" starttimestamp="1700582044267" timestamp="2343391" timestamp2="2343844">
    <text><![CDATA[.getT]]></text>
  </DocumentChange>
  <Command __id="2110" _type="InsertStringCommand" date="Tue Nov 21 11:33:07 EST 2023" starttimestamp="1700582044267" timestamp="2343391" timestamp2="2343391">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2111" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:33:07 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2343394" />
  <Command __id="2122" _type="ShellCommand" date="Tue Nov 21 11:33:12 EST 2023" starttimestamp="1700582044267" timestamp="2347845" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2123" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:33:12 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2347863" />
  <Command __id="2124" _type="ShellCommand" date="Tue Nov 21 11:33:17 EST 2023" starttimestamp="1700582044267" timestamp="2352897" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2125" _type="ShellCommand" date="Tue Nov 21 11:33:19 EST 2023" starttimestamp="1700582044267" timestamp="2355256" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="2116" _type="Delete" date="Tue Nov 21 11:33:08 EST 2023" docASTNodeCount="56" docActiveCodeLength="318" docExpressionCount="39" docLength="318" endLine="11" length="1" offset="310" startLine="11" starttimestamp="1700582044267" timestamp="2344162">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="2117" _type="Insert" date="Tue Nov 21 11:33:08 EST 2023" docASTNodeCount="56" docActiveCodeLength="324" docExpressionCount="39" docLength="324" length="6" offset="310" repeat="5" starttimestamp="1700582044267" timestamp="2344377" timestamp2="2345749">
    <text><![CDATA[Head()]]></text>
  </DocumentChange>
  <Command __id="2126" _type="ShellCommand" date="Tue Nov 21 11:33:23 EST 2023" starttimestamp="1700582044267" timestamp="2359568" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2127" _type="Insert" date="Tue Nov 21 11:33:30 EST 2023" docASTNodeCount="61" docActiveCodeLength="325" docExpressionCount="42" docLength="325" length="1" offset="316" starttimestamp="1700582044267" timestamp="2366624">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2128" _type="InsertStringCommand" date="Tue Nov 21 11:33:30 EST 2023" starttimestamp="1700582044267" timestamp="2366626" timestamp2="2366626">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2129" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:33:30 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2366629" />
  <DocumentChange __id="2130" _type="Delete" date="Tue Nov 21 11:33:31 EST 2023" docASTNodeCount="56" docActiveCodeLength="324" docExpressionCount="39" docLength="324" endLine="11" length="1" offset="316" startLine="11" starttimestamp="1700582044267" timestamp="2366960">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2131" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:33:32 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2368686" />
  <DocumentChange __id="2132" _type="Insert" date="Tue Nov 21 11:33:32 EST 2023" docASTNodeCount="63" docActiveCodeLength="336" docExpressionCount="43" docLength="336" length="12" offset="316" starttimestamp="1700582044267" timestamp="2368692">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <Command __id="2133" _type="InsertStringCommand" date="Tue Nov 21 11:33:32 EST 2023" starttimestamp="1700582044267" timestamp="2368696" timestamp2="2368696">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2134" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:33:32 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2368706" />
  <DocumentChange __id="2135" _type="Delete" date="Tue Nov 21 11:33:33 EST 2023" docASTNodeCount="56" docActiveCodeLength="324" docExpressionCount="39" docLength="324" endLine="11" length="12" offset="316" repeat="12" startLine="11" starttimestamp="1700582044267" timestamp="2369436" timestamp2="2371017">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <Command __id="2147" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:33:35 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2371288" />
  <DocumentChange __id="2148" _type="Insert" date="Tue Nov 21 11:33:35 EST 2023" docASTNodeCount="63" docActiveCodeLength="336" docExpressionCount="43" docLength="336" length="12" offset="316" starttimestamp="1700582044267" timestamp="2371292">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="2151" _type="Delete" date="Tue Nov 21 11:33:36 EST 2023" docASTNodeCount="61" docActiveCodeLength="323" docExpressionCount="42" docLength="323" endLine="11" length="13" offset="315" repeat="13" startLine="11" starttimestamp="1700582044267" timestamp="2371804" timestamp2="2373546">
    <text><![CDATA[)environment.]]></text>
  </DocumentChange>
  <Command __id="2149" _type="InsertStringCommand" date="Tue Nov 21 11:33:35 EST 2023" starttimestamp="1700582044267" timestamp="2371296" timestamp2="2371296">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2150" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:33:35 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2371304" />
  <Command __id="2165" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:33:39 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2375509" />
  <Command __id="2167" _type="InsertStringCommand" date="Tue Nov 21 11:33:40 EST 2023" starttimestamp="1700582044267" timestamp="2376205" timestamp2="2376205">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2168" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:33:40 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2376211" />
  <Command __id="2171" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:33:42 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2378212" />
  <Command __id="2173" _type="InsertStringCommand" date="Tue Nov 21 11:33:42 EST 2023" starttimestamp="1700582044267" timestamp="2378223" timestamp2="2378223">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2174" _type="MoveCaretCommand" caretOffset="221" date="Tue Nov 21 11:33:44 EST 2023" docOffset="302" starttimestamp="1700582044267" timestamp="2380245" />
  <Command __id="2176" _type="InsertStringCommand" date="Tue Nov 21 11:33:44 EST 2023" starttimestamp="1700582044267" timestamp="2380685" timestamp2="2380685">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="2177" _type="MoveCaretCommand" caretOffset="244" date="Tue Nov 21 11:33:45 EST 2023" docOffset="325" starttimestamp="1700582044267" timestamp="2381121" />
  <Command __id="2178" _type="MoveCaretCommand" caretOffset="222" date="Tue Nov 21 11:33:56 EST 2023" docOffset="303" starttimestamp="1700582044267" timestamp="2392351" />
  <Command __id="2179" _type="SelectTextCommand" caretOffset="215" date="Tue Nov 21 11:34:01 EST 2023" end="245" start="215" starttimestamp="1700582044267" timestamp="2397443" />
  <Command __id="2181" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:02 EST 2023" starttimestamp="1700582044267" timestamp="2398397" />
  <Command __id="2182" _type="ShellCommand" date="Tue Nov 21 11:34:03 EST 2023" starttimestamp="1700582044267" timestamp="2399445" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2183" _type="ShellCommand" date="Tue Nov 21 11:34:04 EST 2023" starttimestamp="1700582044267" timestamp="2400019" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2164" _type="Insert" date="Tue Nov 21 11:33:39 EST 2023" docASTNodeCount="56" docActiveCodeLength="327" docExpressionCount="39" docLength="327" length="4" offset="315" repeat="4" starttimestamp="1700582044267" timestamp="2375497" timestamp2="2376850">
    <text><![CDATA[).is]]></text>
  </DocumentChange>
  <DocumentChange __id="2172" _type="Replace" date="Tue Nov 21 11:33:42 EST 2023" docASTNodeCount="56" docActiveCodeLength="332" docExpressionCount="39" docLength="332" endLine="11" insertionLength="7" int_docASTNodeCount="61" int_docActiveCodeLength="325" int_docExpressionCount="42" int_docLength="325" length="2" offset="317" startLine="11" starttimestamp="1700582044267" timestamp="2378214">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2175" _type="Insert" date="Tue Nov 21 11:33:44 EST 2023" docASTNodeCount="56" docActiveCodeLength="333" docExpressionCount="39" docLength="333" length="1" offset="302" starttimestamp="1700582044267" timestamp="2380683">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="2180" _type="Delete" date="Tue Nov 21 11:34:02 EST 2023" docASTNodeCount="56" docActiveCodeLength="303" docExpressionCount="39" docLength="303" endLine="11" length="30" offset="296" startLine="11" starttimestamp="1700582044267" timestamp="2398394">
    <text><![CDATA[while(!expr.getHead().isNIL())]]></text>
  </DocumentChange>
  <Command __id="2184" _type="MoveCaretCommand" caretOffset="207" date="Tue Nov 21 11:34:06 EST 2023" docOffset="288" starttimestamp="1700582044267" timestamp="2401954" />
  <Command __id="2185" _type="MoveCaretCommand" caretOffset="215" date="Tue Nov 21 11:34:07 EST 2023" docOffset="296" starttimestamp="1700582044267" timestamp="2402750" />
  <Command __id="2187" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:34:10 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2406126" />
  <Command __id="2186" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:34:10 EST 2023" docASTNodeCount="106" docActiveCodeLength="630" docExpressionCount="75" docLength="630" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2406070">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2191" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:34:12 EST 2023" docASTNodeCount="56" docActiveCodeLength="303" docExpressionCount="39" docLength="303" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2408663">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1) {		// TODO Auto-generated method stub		return null;"), Diff(INSERT,"environment) {		expr = expr.getTail();		"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2194" _type="Insert" date="Tue Nov 21 11:34:14 EST 2023" docASTNodeCount="56" docActiveCodeLength="307" docExpressionCount="39" docLength="307" length="4" offset="300" repeat="2" starttimestamp="1700582044267" timestamp="2410239" timestamp2="2410387">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2199" _type="Replace" date="Tue Nov 21 11:34:15 EST 2023" docASTNodeCount="97" docActiveCodeLength="569" docExpressionCount="67" docLength="569" endLine="14" insertionLength="263" int_docASTNodeCount="56" int_docActiveCodeLength="306" int_docExpressionCount="39" int_docLength="306" length="1" offset="301" startLine="14" starttimestamp="1700582044267" timestamp="2410805">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2200" _type="Insert" date="Tue Nov 21 11:34:15 EST 2023" docASTNodeCount="107" docActiveCodeLength="618" docExpressionCount="76" docLength="618" length="49" offset="93" repeat="2" starttimestamp="1700582044267" timestamp="2410837" timestamp2="2410838">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <Command __id="2188" _type="MoveCaretCommand" caretOffset="187" date="Tue Nov 21 11:34:11 EST 2023" docOffset="317" starttimestamp="1700582044267" timestamp="2407224" />
  <Command __id="2189" _type="SelectTextCommand" caretOffset="233" date="Tue Nov 21 11:34:12 EST 2023" end="496" start="233" starttimestamp="1700582044267" timestamp="2408133" />
  <Command __id="2190" _type="CopyCommand" date="Tue Nov 21 11:34:12 EST 2023" starttimestamp="1700582044267" timestamp="2408306" />
  <Command __id="2192" _type="MoveCaretCommand" caretOffset="215" date="Tue Nov 21 11:34:12 EST 2023" docOffset="296" starttimestamp="1700582044267" timestamp="2408710" />
  <Command __id="2193" _type="MoveCaretCommand" caretOffset="219" date="Tue Nov 21 11:34:13 EST 2023" docOffset="300" starttimestamp="1700582044267" timestamp="2409278" />
  <Command __id="2195" _type="InsertStringCommand" date="Tue Nov 21 11:34:14 EST 2023" starttimestamp="1700582044267" timestamp="2410242" timestamp2="2410242">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2197" _type="InsertStringCommand" date="Tue Nov 21 11:34:14 EST 2023" starttimestamp="1700582044267" timestamp="2410390" timestamp2="2410390">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2198" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 11:34:14 EST 2023" starttimestamp="1700582044267" timestamp="2410580" />
  <Command __id="2202" _type="PasteCommand" date="Tue Nov 21 11:34:15 EST 2023" starttimestamp="1700582044267" timestamp="2410864" />
  <Command __id="2204" _type="InsertStringCommand" date="Tue Nov 21 11:34:18 EST 2023" starttimestamp="1700582044267" timestamp="2414187" timestamp2="2414187">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:19 EST 2023" starttimestamp="1700582044267" timestamp="2414957" />
  <Command __id="2208" _type="InsertStringCommand" date="Tue Nov 21 11:34:19 EST 2023" starttimestamp="1700582044267" timestamp="2415332" timestamp2="2415332">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2210" _type="InsertStringCommand" date="Tue Nov 21 11:34:19 EST 2023" starttimestamp="1700582044267" timestamp="2415395" timestamp2="2415395">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2212" _type="InsertStringCommand" date="Tue Nov 21 11:34:19 EST 2023" starttimestamp="1700582044267" timestamp="2415502" timestamp2="2415502">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2214" _type="InsertStringCommand" date="Tue Nov 21 11:34:19 EST 2023" starttimestamp="1700582044267" timestamp="2415609" timestamp2="2415609">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2216" _type="InsertStringCommand" date="Tue Nov 21 11:34:19 EST 2023" starttimestamp="1700582044267" timestamp="2415707" timestamp2="2415707">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2218" _type="InsertStringCommand" date="Tue Nov 21 11:34:20 EST 2023" starttimestamp="1700582044267" timestamp="2415768" timestamp2="2415768">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2220" _type="InsertStringCommand" date="Tue Nov 21 11:34:20 EST 2023" starttimestamp="1700582044267" timestamp="2415921" timestamp2="2415921">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2222" _type="InsertStringCommand" date="Tue Nov 21 11:34:20 EST 2023" starttimestamp="1700582044267" timestamp="2416405" timestamp2="2416405">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2224" _type="InsertStringCommand" date="Tue Nov 21 11:34:20 EST 2023" starttimestamp="1700582044267" timestamp="2416607" timestamp2="2416607">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2226" _type="InsertStringCommand" date="Tue Nov 21 11:34:20 EST 2023" starttimestamp="1700582044267" timestamp="2416710" timestamp2="2416710">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2228" _type="InsertStringCommand" date="Tue Nov 21 11:34:21 EST 2023" starttimestamp="1700582044267" timestamp="2416772" timestamp2="2416772">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2230" _type="InsertStringCommand" date="Tue Nov 21 11:34:21 EST 2023" starttimestamp="1700582044267" timestamp="2417098" timestamp2="2417098">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="2232" _type="InsertStringCommand" date="Tue Nov 21 11:34:21 EST 2023" starttimestamp="1700582044267" timestamp="2417274" timestamp2="2417274">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2234" _type="InsertStringCommand" date="Tue Nov 21 11:34:21 EST 2023" starttimestamp="1700582044267" timestamp="2417363" timestamp2="2417363">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2236" _type="InsertStringCommand" date="Tue Nov 21 11:34:21 EST 2023" starttimestamp="1700582044267" timestamp="2417607" timestamp2="2417607">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2238" _type="InsertStringCommand" date="Tue Nov 21 11:34:22 EST 2023" starttimestamp="1700582044267" timestamp="2417740" timestamp2="2417740">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2240" _type="InsertStringCommand" date="Tue Nov 21 11:34:22 EST 2023" starttimestamp="1700582044267" timestamp="2417876" timestamp2="2417876">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2242" _type="InsertStringCommand" date="Tue Nov 21 11:34:22 EST 2023" starttimestamp="1700582044267" timestamp="2417946" timestamp2="2417946">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2244" _type="InsertStringCommand" date="Tue Nov 21 11:34:22 EST 2023" starttimestamp="1700582044267" timestamp="2418085" timestamp2="2418085">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2246" _type="InsertStringCommand" date="Tue Nov 21 11:34:22 EST 2023" starttimestamp="1700582044267" timestamp="2418550" timestamp2="2418550">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2248" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2418750" timestamp2="2418750">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2250" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2418834" timestamp2="2418834">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2252" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2418951" timestamp2="2418951">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2254" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2419041" timestamp2="2419041">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2256" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2419131" timestamp2="2419131">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2258" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2419293" timestamp2="2419293">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2260" _type="InsertStringCommand" date="Tue Nov 21 11:34:23 EST 2023" starttimestamp="1700582044267" timestamp="2419719" timestamp2="2419719">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2262" _type="InsertStringCommand" date="Tue Nov 21 11:34:24 EST 2023" starttimestamp="1700582044267" timestamp="2420301" timestamp2="2420301">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2264" _type="InsertStringCommand" date="Tue Nov 21 11:34:24 EST 2023" starttimestamp="1700582044267" timestamp="2420445" timestamp2="2420445">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2266" _type="InsertStringCommand" date="Tue Nov 21 11:34:24 EST 2023" starttimestamp="1700582044267" timestamp="2420593" timestamp2="2420593">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2268" _type="InsertStringCommand" date="Tue Nov 21 11:34:24 EST 2023" starttimestamp="1700582044267" timestamp="2420652" timestamp2="2420652">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2270" _type="InsertStringCommand" date="Tue Nov 21 11:34:25 EST 2023" starttimestamp="1700582044267" timestamp="2420741" timestamp2="2420741">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2272" _type="InsertStringCommand" date="Tue Nov 21 11:34:25 EST 2023" starttimestamp="1700582044267" timestamp="2420906" timestamp2="2420906">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2274" _type="InsertStringCommand" date="Tue Nov 21 11:34:25 EST 2023" starttimestamp="1700582044267" timestamp="2421010" timestamp2="2421010">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2276" _type="InsertStringCommand" date="Tue Nov 21 11:34:25 EST 2023" starttimestamp="1700582044267" timestamp="2421072" timestamp2="2421072">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2278" _type="InsertStringCommand" date="Tue Nov 21 11:34:25 EST 2023" starttimestamp="1700582044267" timestamp="2421146" timestamp2="2421146">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2279" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:34:26 EST 2023" starttimestamp="1700582044267" timestamp="2421875" />
  <Command __id="2281" _type="InsertStringCommand" date="Tue Nov 21 11:34:26 EST 2023" starttimestamp="1700582044267" timestamp="2422091" timestamp2="2422091">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2282" _type="MoveCaretCommand" caretOffset="253" date="Tue Nov 21 11:34:27 EST 2023" docOffset="383" starttimestamp="1700582044267" timestamp="2423038" />
  <Command __id="2283" _type="MoveCaretCommand" caretOffset="231" date="Tue Nov 21 11:34:28 EST 2023" docOffset="361" starttimestamp="1700582044267" timestamp="2424569" />
  <Command __id="2285" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:29 EST 2023" starttimestamp="1700582044267" timestamp="2425172" />
  <Command __id="2286" _type="MoveCaretCommand" caretOffset="249" date="Tue Nov 21 11:34:29 EST 2023" docOffset="379" starttimestamp="1700582044267" timestamp="2425309" />
  <Command __id="2287" _type="MoveCaretCommand" caretOffset="295" date="Tue Nov 21 11:34:30 EST 2023" docOffset="425" starttimestamp="1700582044267" timestamp="2425989" />
  <Command __id="2288" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:30 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2426257" />
  <Command __id="2289" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:30 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2426433" />
  <Command __id="2290" _type="MoveCaretCommand" caretOffset="378" date="Tue Nov 21 11:34:30 EST 2023" docOffset="508" starttimestamp="1700582044267" timestamp="2426704" />
  <Command __id="2291" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:31 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2426985" />
  <Command __id="2292" _type="MoveCaretCommand" caretOffset="380" date="Tue Nov 21 11:34:31 EST 2023" docOffset="510" starttimestamp="1700582044267" timestamp="2427214" />
  <Command __id="2293" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:31 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2427621" />
  <Command __id="2294" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:32 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2427833" />
  <Command __id="2295" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:32 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2428084" />
  <Command __id="2296" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:32 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2428352" />
  <Command __id="2297" _type="SelectTextCommand" caretOffset="398" date="Tue Nov 21 11:34:32 EST 2023" end="398" start="361" starttimestamp="1700582044267" timestamp="2428442" />
  <Command __id="2298" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:33 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2429186" />
  <Command __id="2299" _type="MoveCaretCommand" caretOffset="382" date="Tue Nov 21 11:34:33 EST 2023" docOffset="512" starttimestamp="1700582044267" timestamp="2429407" />
  <Command __id="2300" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:33 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2429679" />
  <Command __id="2301" _type="MoveCaretCommand" caretOffset="382" date="Tue Nov 21 11:34:34 EST 2023" docOffset="512" starttimestamp="1700582044267" timestamp="2429871" />
  <Command __id="2302" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:34 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2430128" />
  <Command __id="2303" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:34 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2430387" />
  <Command __id="2304" _type="SelectTextCommand" caretOffset="398" date="Tue Nov 21 11:34:34 EST 2023" end="398" start="361" starttimestamp="1700582044267" timestamp="2430455" />
  <Command __id="2305" _type="SelectTextCommand" caretOffset="400" date="Tue Nov 21 11:34:34 EST 2023" end="400" start="396" starttimestamp="1700582044267" timestamp="2430524" />
  <Command __id="2306" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:34 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2430730" />
  <Command __id="2307" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:35 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2431017" />
  <Command __id="2308" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:35 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2431344" />
  <Command __id="2309" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:35 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2431603" />
  <Command __id="2310" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:36 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2431897" />
  <Command __id="2311" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:36 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2432143" />
  <Command __id="2312" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:36 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2432387" />
  <Command __id="2313" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:36 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2432651" />
  <Command __id="2314" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:37 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2432907" />
  <Command __id="2315" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:37 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2433472" />
  <Command __id="2316" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:38 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2433808" />
  <Command __id="2317" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:38 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2433995" />
  <Command __id="2318" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:38 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2434260" />
  <Command __id="2319" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:38 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2434517" />
  <Command __id="2320" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:39 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2434796" />
  <Command __id="2321" _type="MoveCaretCommand" caretOffset="380" date="Tue Nov 21 11:34:39 EST 2023" docOffset="510" starttimestamp="1700582044267" timestamp="2435245" />
  <Command __id="2322" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:39 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2435671" />
  <Command __id="2323" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:34:40 EST 2023" docOffset="491" starttimestamp="1700582044267" timestamp="2435952" />
  <Command __id="2324" _type="MoveCaretCommand" caretOffset="399" date="Tue Nov 21 11:34:40 EST 2023" docOffset="529" starttimestamp="1700582044267" timestamp="2436159" />
  <DocumentChange __id="2203" _type="Insert" date="Tue Nov 21 11:34:18 EST 2023" docASTNodeCount="109" docActiveCodeLength="619" docExpressionCount="77" docLength="619" length="1" offset="345" starttimestamp="1700582044267" timestamp="2414185">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2205" _type="Delete" date="Tue Nov 21 11:34:19 EST 2023" docASTNodeCount="107" docActiveCodeLength="618" docExpressionCount="76" docLength="618" endLine="12" length="1" offset="345" startLine="12" starttimestamp="1700582044267" timestamp="2414955">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2207" _type="Insert" date="Tue Nov 21 11:34:19 EST 2023" docASTNodeCount="112" docActiveCodeLength="656" docExpressionCount="80" docLength="656" length="38" offset="345" repeat="37" starttimestamp="1700582044267" timestamp="2415330" timestamp2="2422088">
    <text><![CDATA[return evalHelpder(expr, environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="2284" _type="Delete" date="Tue Nov 21 11:34:29 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" endLine="12" length="1" offset="360" startLine="12" starttimestamp="1700582044267" timestamp="2425171">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <Command __id="2325" _type="SelectTextCommand" caretOffset="365" date="Tue Nov 21 11:34:42 EST 2023" end="395" start="365" starttimestamp="1700582044267" timestamp="2437836" />
  <DocumentChange __id="2326" _type="Replace" date="Tue Nov 21 11:34:46 EST 2023" docASTNodeCount="109" docActiveCodeLength="626" docExpressionCount="77" docLength="626" endLine="17" insertionLength="1" int_docASTNodeCount="107" int_docActiveCodeLength="625" int_docExpressionCount="76" int_docLength="625" length="30" offset="495" startLine="17" starttimestamp="1700582044267" timestamp="2442187">
    <deletedText><![CDATA[return expr.eval(environment);]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="2327" _type="InsertStringCommand" date="Tue Nov 21 11:34:46 EST 2023" starttimestamp="1700582044267" timestamp="2442192" timestamp2="2442192">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="2328" _type="Insert" date="Tue Nov 21 11:34:46 EST 2023" docASTNodeCount="109" docActiveCodeLength="629" docExpressionCount="76" docLength="629" length="3" offset="496" repeat="2" starttimestamp="1700582044267" timestamp="2442229" timestamp2="2442369">
    <text><![CDATA[f()]]></text>
  </DocumentChange>
  <Command __id="2329" _type="InsertStringCommand" date="Tue Nov 21 11:34:46 EST 2023" starttimestamp="1700582044267" timestamp="2442231" timestamp2="2442231">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2331" _type="InsertStringCommand" date="Tue Nov 21 11:34:46 EST 2023" starttimestamp="1700582044267" timestamp="2442372" timestamp2="2442372">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="2332" _type="Insert" date="Tue Nov 21 11:34:50 EST 2023" docASTNodeCount="112" docActiveCodeLength="637" docExpressionCount="79" docLength="637" length="8" offset="498" repeat="8" starttimestamp="1700582044267" timestamp="2446226" timestamp2="2449030">
    <text><![CDATA[expr.isN]]></text>
  </DocumentChange>
  <Command __id="2333" _type="InsertStringCommand" date="Tue Nov 21 11:34:50 EST 2023" starttimestamp="1700582044267" timestamp="2446228" timestamp2="2446228">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2335" _type="InsertStringCommand" date="Tue Nov 21 11:34:50 EST 2023" starttimestamp="1700582044267" timestamp="2446433" timestamp2="2446433">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2337" _type="InsertStringCommand" date="Tue Nov 21 11:34:50 EST 2023" starttimestamp="1700582044267" timestamp="2446556" timestamp2="2446556">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2339" _type="InsertStringCommand" date="Tue Nov 21 11:34:50 EST 2023" starttimestamp="1700582044267" timestamp="2446618" timestamp2="2446618">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2341" _type="InsertStringCommand" date="Tue Nov 21 11:34:51 EST 2023" starttimestamp="1700582044267" timestamp="2446743" timestamp2="2446743">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2342" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:34:51 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2446748" />
  <Command __id="2346" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:34:53 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2449401" />
  <Command __id="2348" _type="InsertStringCommand" date="Tue Nov 21 11:34:53 EST 2023" starttimestamp="1700582044267" timestamp="2449410" timestamp2="2449410">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2347" _type="Replace" date="Tue Nov 21 11:34:53 EST 2023" docASTNodeCount="112" docActiveCodeLength="641" docExpressionCount="79" docLength="641" endLine="17" insertionLength="7" int_docASTNodeCount="111" int_docActiveCodeLength="634" int_docExpressionCount="78" int_docLength="634" length="3" offset="503" startLine="17" starttimestamp="1700582044267" timestamp="2449405">
    <deletedText><![CDATA[isN]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <Command __id="2349" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:34:55 EST 2023" starttimestamp="1700582044267" timestamp="2451214" />
  <DocumentChange __id="2350" _type="Delete" date="Tue Nov 21 11:34:56 EST 2023" docASTNodeCount="107" docActiveCodeLength="625" docExpressionCount="76" docLength="625" endLine="17" length="16" offset="495" repeat="16" startLine="17" starttimestamp="1700582044267" timestamp="2452357" timestamp2="2454397">
    <text><![CDATA[if(expr.isNIL())]]></text>
  </DocumentChange>
  <Command __id="2351" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:56 EST 2023" starttimestamp="1700582044267" timestamp="2452360" />
  <Command __id="2353" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:56 EST 2023" starttimestamp="1700582044267" timestamp="2452508" />
  <Command __id="2355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:56 EST 2023" starttimestamp="1700582044267" timestamp="2452645" />
  <Command __id="2357" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:57 EST 2023" starttimestamp="1700582044267" timestamp="2452778" />
  <Command __id="2359" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:57 EST 2023" starttimestamp="1700582044267" timestamp="2452932" />
  <Command __id="2361" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:57 EST 2023" starttimestamp="1700582044267" timestamp="2453428" />
  <Command __id="2363" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:57 EST 2023" starttimestamp="1700582044267" timestamp="2453511" />
  <Command __id="2365" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:57 EST 2023" starttimestamp="1700582044267" timestamp="2453597" />
  <Command __id="2367" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:57 EST 2023" starttimestamp="1700582044267" timestamp="2453681" />
  <Command __id="2369" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2453764" />
  <Command __id="2371" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2453845" />
  <Command __id="2373" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2453930" />
  <Command __id="2375" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2454014" />
  <Command __id="2377" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2454096" />
  <Command __id="2379" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2454263" />
  <Command __id="2381" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2454398" />
  <DocumentChange __id="2382" _type="Insert" date="Tue Nov 21 11:34:58 EST 2023" docASTNodeCount="111" docActiveCodeLength="639" docExpressionCount="79" docLength="639" length="14" offset="495" repeat="14" starttimestamp="1700582044267" timestamp="2454639" timestamp2="2456392">
    <text><![CDATA[return expr.is]]></text>
  </DocumentChange>
  <Command __id="2383" _type="InsertStringCommand" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2454641" timestamp2="2454641">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2385" _type="InsertStringCommand" date="Tue Nov 21 11:34:58 EST 2023" starttimestamp="1700582044267" timestamp="2454695" timestamp2="2454695">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2387" _type="InsertStringCommand" date="Tue Nov 21 11:34:59 EST 2023" starttimestamp="1700582044267" timestamp="2454863" timestamp2="2454863">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2389" _type="InsertStringCommand" date="Tue Nov 21 11:34:59 EST 2023" starttimestamp="1700582044267" timestamp="2454952" timestamp2="2454952">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2391" _type="InsertStringCommand" date="Tue Nov 21 11:34:59 EST 2023" starttimestamp="1700582044267" timestamp="2455074" timestamp2="2455074">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2393" _type="InsertStringCommand" date="Tue Nov 21 11:34:59 EST 2023" starttimestamp="1700582044267" timestamp="2455134" timestamp2="2455134">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2395" _type="InsertStringCommand" date="Tue Nov 21 11:34:59 EST 2023" starttimestamp="1700582044267" timestamp="2455281" timestamp2="2455281">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2397" _type="InsertStringCommand" date="Tue Nov 21 11:34:59 EST 2023" starttimestamp="1700582044267" timestamp="2455633" timestamp2="2455633">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2399" _type="InsertStringCommand" date="Tue Nov 21 11:35:00 EST 2023" starttimestamp="1700582044267" timestamp="2455813" timestamp2="2455813">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2401" _type="InsertStringCommand" date="Tue Nov 21 11:35:00 EST 2023" starttimestamp="1700582044267" timestamp="2455914" timestamp2="2455914">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2403" _type="InsertStringCommand" date="Tue Nov 21 11:35:00 EST 2023" starttimestamp="1700582044267" timestamp="2456017" timestamp2="2456017">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2405" _type="InsertStringCommand" date="Tue Nov 21 11:35:00 EST 2023" starttimestamp="1700582044267" timestamp="2456092" timestamp2="2456092">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2406" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:35:00 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2456097" />
  <Command __id="2409" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:35:00 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2456539" />
  <DocumentChange __id="2410" _type="Replace" date="Tue Nov 21 11:35:00 EST 2023" docASTNodeCount="111" docActiveCodeLength="645" docExpressionCount="79" docLength="645" endLine="17" insertionLength="8" int_docASTNodeCount="109" int_docActiveCodeLength="637" int_docExpressionCount="77" int_docLength="637" length="2" offset="507" startLine="17" starttimestamp="1700582044267" timestamp="2456541">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <Command __id="2411" _type="InsertStringCommand" date="Tue Nov 21 11:35:00 EST 2023" starttimestamp="1700582044267" timestamp="2456546" timestamp2="2456546">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2412" _type="Delete" date="Tue Nov 21 11:35:01 EST 2023" docASTNodeCount="111" docActiveCodeLength="639" docExpressionCount="79" docLength="639" endLine="17" length="6" offset="509" repeat="6" startLine="17" starttimestamp="1700582044267" timestamp="2457124" timestamp2="2457817">
    <text><![CDATA[Atom()]]></text>
  </DocumentChange>
  <Command __id="2413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:01 EST 2023" starttimestamp="1700582044267" timestamp="2457126" />
  <Command __id="2415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:01 EST 2023" starttimestamp="1700582044267" timestamp="2457224" />
  <Command __id="2417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:01 EST 2023" starttimestamp="1700582044267" timestamp="2457366" />
  <Command __id="2419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:01 EST 2023" starttimestamp="1700582044267" timestamp="2457519" />
  <Command __id="2421" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:01 EST 2023" starttimestamp="1700582044267" timestamp="2457684" />
  <Command __id="2423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:02 EST 2023" starttimestamp="1700582044267" timestamp="2457820" />
  <DocumentChange __id="2424" _type="Insert" date="Tue Nov 21 11:35:02 EST 2023" docASTNodeCount="111" docActiveCodeLength="642" docExpressionCount="79" docLength="642" length="3" offset="509" repeat="3" starttimestamp="1700582044267" timestamp="2458446" timestamp2="2458801">
    <text><![CDATA[Nil]]></text>
  </DocumentChange>
  <Command __id="2425" _type="InsertStringCommand" date="Tue Nov 21 11:35:02 EST 2023" starttimestamp="1700582044267" timestamp="2458447" timestamp2="2458447">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2427" _type="InsertStringCommand" date="Tue Nov 21 11:35:03 EST 2023" starttimestamp="1700582044267" timestamp="2458736" timestamp2="2458736">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2429" _type="InsertStringCommand" date="Tue Nov 21 11:35:03 EST 2023" starttimestamp="1700582044267" timestamp="2458803" timestamp2="2458803">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="2430" _type="Delete" date="Tue Nov 21 11:35:03 EST 2023" docASTNodeCount="107" docActiveCodeLength="625" docExpressionCount="76" docLength="625" endLine="17" length="17" offset="495" repeat="17" startLine="17" starttimestamp="1700582044267" timestamp="2459329" timestamp2="2461221">
    <text><![CDATA[return expr.isNil]]></text>
  </DocumentChange>
  <Command __id="2431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:03 EST 2023" starttimestamp="1700582044267" timestamp="2459331" />
  <Command __id="2433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:03 EST 2023" starttimestamp="1700582044267" timestamp="2459432" />
  <Command __id="2435" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:03 EST 2023" starttimestamp="1700582044267" timestamp="2459575" />
  <Command __id="2437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:03 EST 2023" starttimestamp="1700582044267" timestamp="2459703" />
  <Command __id="2439" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460204" />
  <Command __id="2441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460282" />
  <Command __id="2443" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460367" />
  <Command __id="2445" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460455" />
  <Command __id="2447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460542" />
  <Command __id="2449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460624" />
  <Command __id="2451" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:04 EST 2023" starttimestamp="1700582044267" timestamp="2460707" />
  <Command __id="2453" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2460792" />
  <Command __id="2455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2460877" />
  <Command __id="2457" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2460953" />
  <Command __id="2459" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2461039" />
  <Command __id="2461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2461124" />
  <Command __id="2463" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2461223" />
  <DocumentChange __id="2464" _type="Insert" date="Tue Nov 21 11:35:05 EST 2023" docASTNodeCount="112" docActiveCodeLength="637" docExpressionCount="79" docLength="637" length="12" offset="495" repeat="11" starttimestamp="1700582044267" timestamp="2461600" timestamp2="2463757">
    <text><![CDATA[if(expr.isN)]]></text>
  </DocumentChange>
  <Command __id="2465" _type="InsertStringCommand" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2461601" timestamp2="2461601">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2467" _type="InsertStringCommand" date="Tue Nov 21 11:35:05 EST 2023" starttimestamp="1700582044267" timestamp="2461728" timestamp2="2461728">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2469" _type="InsertStringCommand" date="Tue Nov 21 11:35:06 EST 2023" starttimestamp="1700582044267" timestamp="2461822" timestamp2="2461822">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2471" _type="InsertStringCommand" date="Tue Nov 21 11:35:06 EST 2023" starttimestamp="1700582044267" timestamp="2462622" timestamp2="2462622">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2473" _type="InsertStringCommand" date="Tue Nov 21 11:35:07 EST 2023" starttimestamp="1700582044267" timestamp="2462833" timestamp2="2462833">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2475" _type="InsertStringCommand" date="Tue Nov 21 11:35:07 EST 2023" starttimestamp="1700582044267" timestamp="2462887" timestamp2="2462887">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2477" _type="InsertStringCommand" date="Tue Nov 21 11:35:07 EST 2023" starttimestamp="1700582044267" timestamp="2462993" timestamp2="2462993">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2479" _type="InsertStringCommand" date="Tue Nov 21 11:35:07 EST 2023" starttimestamp="1700582044267" timestamp="2463096" timestamp2="2463096">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2480" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:35:07 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2463104" />
  <Command __id="2484" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:35:08 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2464193" />
  <Command __id="2486" _type="InsertStringCommand" date="Tue Nov 21 11:35:08 EST 2023" starttimestamp="1700582044267" timestamp="2464201" timestamp2="2464201">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2485" _type="Replace" date="Tue Nov 21 11:35:08 EST 2023" docASTNodeCount="112" docActiveCodeLength="641" docExpressionCount="79" docLength="641" endLine="17" insertionLength="7" int_docASTNodeCount="111" int_docActiveCodeLength="634" int_docExpressionCount="78" int_docLength="634" length="3" offset="503" startLine="17" starttimestamp="1700582044267" timestamp="2464196">
    <deletedText><![CDATA[isN]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <Command __id="2487" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:35:10 EST 2023" starttimestamp="1700582044267" timestamp="2465751" />
  <Command __id="2489" _type="InsertStringCommand" date="Tue Nov 21 11:35:10 EST 2023" starttimestamp="1700582044267" timestamp="2466074" timestamp2="2466074">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2491" _type="InsertStringCommand" date="Tue Nov 21 11:35:10 EST 2023" starttimestamp="1700582044267" timestamp="2466265" timestamp2="2466265">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2493" _type="InsertStringCommand" date="Tue Nov 21 11:35:10 EST 2023" starttimestamp="1700582044267" timestamp="2466623" timestamp2="2466623">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2495" _type="InsertStringCommand" date="Tue Nov 21 11:35:10 EST 2023" starttimestamp="1700582044267" timestamp="2466708" timestamp2="2466708">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2497" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2466834" timestamp2="2466834">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2499" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2466907" timestamp2="2466907">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2501" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467032" timestamp2="2467032">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2503" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467097" timestamp2="2467097">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2505" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467221" timestamp2="2467221">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2507" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467322" timestamp2="2467322">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2509" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467392" timestamp2="2467392">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2511" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467483" timestamp2="2467483">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2513" _type="InsertStringCommand" date="Tue Nov 21 11:35:11 EST 2023" starttimestamp="1700582044267" timestamp="2467521" timestamp2="2467521">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2515" _type="InsertStringCommand" date="Tue Nov 21 11:35:12 EST 2023" starttimestamp="1700582044267" timestamp="2468665" timestamp2="2468665">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2517" _type="InsertStringCommand" date="Tue Nov 21 11:35:13 EST 2023" starttimestamp="1700582044267" timestamp="2469521" timestamp2="2469521">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2519" _type="InsertStringCommand" date="Tue Nov 21 11:35:13 EST 2023" starttimestamp="1700582044267" timestamp="2469629" timestamp2="2469629">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2521" _type="InsertStringCommand" date="Tue Nov 21 11:35:14 EST 2023" starttimestamp="1700582044267" timestamp="2469865" timestamp2="2469865">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2523" _type="InsertStringCommand" date="Tue Nov 21 11:35:14 EST 2023" starttimestamp="1700582044267" timestamp="2470209" timestamp2="2470209">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2525" _type="InsertStringCommand" date="Tue Nov 21 11:35:14 EST 2023" starttimestamp="1700582044267" timestamp="2470329" timestamp2="2470329">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2527" _type="InsertStringCommand" date="Tue Nov 21 11:35:14 EST 2023" starttimestamp="1700582044267" timestamp="2470422" timestamp2="2470422">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2529" _type="InsertStringCommand" date="Tue Nov 21 11:35:14 EST 2023" starttimestamp="1700582044267" timestamp="2470664" timestamp2="2470664">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2530" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:35:16 EST 2023" starttimestamp="1700582044267" timestamp="2471872" />
  <Command __id="2532" _type="InsertStringCommand" date="Tue Nov 21 11:35:16 EST 2023" starttimestamp="1700582044267" timestamp="2472085" timestamp2="2472085">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2533" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 11:35:16 EST 2023" starttimestamp="1700582044267" timestamp="2472650" />
  <Command __id="2534" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 11:35:17 EST 2023" starttimestamp="1700582044267" timestamp="2473693" />
  <Command __id="2536" _type="InsertStringCommand" date="Tue Nov 21 11:35:18 EST 2023" starttimestamp="1700582044267" timestamp="2474168" timestamp2="2474168">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2538" _type="InsertStringCommand" date="Tue Nov 21 11:35:18 EST 2023" starttimestamp="1700582044267" timestamp="2474272" timestamp2="2474272">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2540" _type="InsertStringCommand" date="Tue Nov 21 11:35:18 EST 2023" starttimestamp="1700582044267" timestamp="2474349" timestamp2="2474349">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2542" _type="InsertStringCommand" date="Tue Nov 21 11:35:18 EST 2023" starttimestamp="1700582044267" timestamp="2474460" timestamp2="2474460">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2544" _type="InsertStringCommand" date="Tue Nov 21 11:35:19 EST 2023" starttimestamp="1700582044267" timestamp="2475233" timestamp2="2475233">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2546" _type="InsertStringCommand" date="Tue Nov 21 11:35:19 EST 2023" starttimestamp="1700582044267" timestamp="2475431" timestamp2="2475431">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2548" _type="InsertStringCommand" date="Tue Nov 21 11:35:19 EST 2023" starttimestamp="1700582044267" timestamp="2475642" timestamp2="2475642">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2550" _type="InsertStringCommand" date="Tue Nov 21 11:35:19 EST 2023" starttimestamp="1700582044267" timestamp="2475700" timestamp2="2475700">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2552" _type="InsertStringCommand" date="Tue Nov 21 11:35:20 EST 2023" starttimestamp="1700582044267" timestamp="2475835" timestamp2="2475835">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2554" _type="InsertStringCommand" date="Tue Nov 21 11:35:20 EST 2023" starttimestamp="1700582044267" timestamp="2475876" timestamp2="2475876">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2556" _type="InsertStringCommand" date="Tue Nov 21 11:35:20 EST 2023" starttimestamp="1700582044267" timestamp="2476030" timestamp2="2476030">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2558" _type="InsertStringCommand" date="Tue Nov 21 11:35:20 EST 2023" starttimestamp="1700582044267" timestamp="2476056" timestamp2="2476056">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2560" _type="InsertStringCommand" date="Tue Nov 21 11:35:20 EST 2023" starttimestamp="1700582044267" timestamp="2476208" timestamp2="2476208">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2562" _type="InsertStringCommand" date="Tue Nov 21 11:35:21 EST 2023" starttimestamp="1700582044267" timestamp="2476740" timestamp2="2476740">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2564" _type="InsertStringCommand" date="Tue Nov 21 11:35:21 EST 2023" starttimestamp="1700582044267" timestamp="2476914" timestamp2="2476914">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2566" _type="InsertStringCommand" date="Tue Nov 21 11:35:21 EST 2023" starttimestamp="1700582044267" timestamp="2476994" timestamp2="2476994">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2568" _type="InsertStringCommand" date="Tue Nov 21 11:35:21 EST 2023" starttimestamp="1700582044267" timestamp="2477070" timestamp2="2477070">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2570" _type="InsertStringCommand" date="Tue Nov 21 11:35:21 EST 2023" starttimestamp="1700582044267" timestamp="2477179" timestamp2="2477179">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2571" _type="ShellCommand" date="Tue Nov 21 11:35:23 EST 2023" starttimestamp="1700582044267" timestamp="2479543" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2572" _type="ShellCommand" date="Tue Nov 21 11:35:23 EST 2023" starttimestamp="1700582044267" timestamp="2479623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2575" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:35:24 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2479941" />
  <Command __id="2576" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 11:35:24 EST 2023" docOffset="615" starttimestamp="1700582044267" timestamp="2480251" />
  <Command __id="2577" _type="MoveCaretCommand" caretOffset="361" date="Tue Nov 21 11:35:26 EST 2023" docOffset="530" starttimestamp="1700582044267" timestamp="2481912" />
  <Command __id="2578" _type="MoveCaretCommand" caretOffset="442" date="Tue Nov 21 11:35:26 EST 2023" docOffset="611" starttimestamp="1700582044267" timestamp="2482379" />
  <Command __id="2579" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 11:35:27 EST 2023" docOffset="615" starttimestamp="1700582044267" timestamp="2482817" />
  <DocumentChange __id="2488" _type="Insert" date="Tue Nov 21 11:35:10 EST 2023" docASTNodeCount="116" docActiveCodeLength="674" docExpressionCount="81" docLength="674" length="33" offset="511" repeat="22" starttimestamp="1700582044267" timestamp="2466072" timestamp2="2472081">
    <text><![CDATA[ {
				return new NilAtom();
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="2535" _type="Insert" date="Tue Nov 21 11:35:18 EST 2023" docASTNodeCount="119" docActiveCodeLength="702" docExpressionCount="82" docLength="702" length="28" offset="544" repeat="18" starttimestamp="1700582044267" timestamp="2474166" timestamp2="2477177">
    <text><![CDATA[else {
				return expr;
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="2573" _type="Insert" date="Tue Nov 21 11:35:23 EST 2023" docASTNodeCount="129" docActiveCodeLength="741" docExpressionCount="91" docLength="741" length="39" offset="142" repeat="2" starttimestamp="1700582044267" timestamp="2479626" timestamp2="2479626">
    <text><![CDATA[
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="2580" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 11:35:47 EST 2023" docOffset="615" starttimestamp="1700582044267" timestamp="2503007" />
  <DocumentChange __id="2581" _type="Insert" date="Tue Nov 21 11:35:48 EST 2023" docASTNodeCount="133" docActiveCodeLength="760" docExpressionCount="94" docLength="760" length="19" offset="615" repeat="16" starttimestamp="1700582044267" timestamp="2503823" timestamp2="2508888">
    <text><![CDATA[
		if(expr.getHead)]]></text>
  </DocumentChange>
  <Command __id="2582" _type="InsertStringCommand" date="Tue Nov 21 11:35:48 EST 2023" starttimestamp="1700582044267" timestamp="2503826" timestamp2="2503826">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2584" _type="InsertStringCommand" date="Tue Nov 21 11:35:48 EST 2023" starttimestamp="1700582044267" timestamp="2504333" timestamp2="2504333">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2586" _type="InsertStringCommand" date="Tue Nov 21 11:35:48 EST 2023" starttimestamp="1700582044267" timestamp="2504421" timestamp2="2504421">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2588" _type="InsertStringCommand" date="Tue Nov 21 11:35:48 EST 2023" starttimestamp="1700582044267" timestamp="2504562" timestamp2="2504562">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2590" _type="InsertStringCommand" date="Tue Nov 21 11:35:49 EST 2023" starttimestamp="1700582044267" timestamp="2505296" timestamp2="2505296">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2592" _type="InsertStringCommand" date="Tue Nov 21 11:35:49 EST 2023" starttimestamp="1700582044267" timestamp="2505493" timestamp2="2505493">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2594" _type="InsertStringCommand" date="Tue Nov 21 11:35:49 EST 2023" starttimestamp="1700582044267" timestamp="2505608" timestamp2="2505608">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2596" _type="InsertStringCommand" date="Tue Nov 21 11:35:49 EST 2023" starttimestamp="1700582044267" timestamp="2505685" timestamp2="2505685">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2598" _type="InsertStringCommand" date="Tue Nov 21 11:35:50 EST 2023" starttimestamp="1700582044267" timestamp="2505821" timestamp2="2505821">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2599" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:35:50 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2505828" />
  <Command __id="2607" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:35:53 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2509422" />
  <DocumentChange __id="2608" _type="Replace" date="Tue Nov 21 11:35:53 EST 2023" docASTNodeCount="133" docActiveCodeLength="762" docExpressionCount="94" docLength="762" endLine="24" insertionLength="9" int_docASTNodeCount="133" int_docActiveCodeLength="753" int_docExpressionCount="93" int_docLength="753" length="7" offset="626" startLine="24" starttimestamp="1700582044267" timestamp="2509424">
    <deletedText><![CDATA[getHead]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="2609" _type="InsertStringCommand" date="Tue Nov 21 11:35:53 EST 2023" starttimestamp="1700582044267" timestamp="2509427" timestamp2="2509427">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2610" _type="Insert" date="Tue Nov 21 11:35:54 EST 2023" docASTNodeCount="135" docActiveCodeLength="766" docExpressionCount="96" docLength="766" length="4" offset="635" repeat="4" starttimestamp="1700582044267" timestamp="2510127" timestamp2="2511233">
    <text><![CDATA[.isn]]></text>
  </DocumentChange>
  <Command __id="2611" _type="InsertStringCommand" date="Tue Nov 21 11:35:54 EST 2023" starttimestamp="1700582044267" timestamp="2510128" timestamp2="2510128">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2612" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:35:54 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2510134" />
  <Command __id="2616" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:35:55 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2511690" />
  <Command __id="2618" _type="InsertStringCommand" date="Tue Nov 21 11:35:55 EST 2023" starttimestamp="1700582044267" timestamp="2511693" timestamp2="2511693">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2619" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:35:57 EST 2023" starttimestamp="1700582044267" timestamp="2512787" />
  <Command __id="2621" _type="InsertStringCommand" date="Tue Nov 21 11:35:57 EST 2023" starttimestamp="1700582044267" timestamp="2513020" timestamp2="2513020">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2623" _type="InsertStringCommand" date="Tue Nov 21 11:35:57 EST 2023" starttimestamp="1700582044267" timestamp="2513185" timestamp2="2513185">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2625" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2513982" timestamp2="2513982">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2627" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2514006" timestamp2="2514006">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2629" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2514205" timestamp2="2514205">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2631" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2514214" timestamp2="2514214">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2633" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2514397" timestamp2="2514397">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2635" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2514426" timestamp2="2514426">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2637" _type="InsertStringCommand" date="Tue Nov 21 11:35:58 EST 2023" starttimestamp="1700582044267" timestamp="2514555" timestamp2="2514555">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2639" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2514746" timestamp2="2514746">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2641" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2514850" timestamp2="2514850">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2643" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2514912" timestamp2="2514912">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2645" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2515019" timestamp2="2515019">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2647" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2515254" timestamp2="2515254">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2649" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2515467" timestamp2="2515467">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2651" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2515545" timestamp2="2515545">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2653" _type="InsertStringCommand" date="Tue Nov 21 11:35:59 EST 2023" starttimestamp="1700582044267" timestamp="2515718" timestamp2="2515718">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2655" _type="InsertStringCommand" date="Tue Nov 21 11:36:00 EST 2023" starttimestamp="1700582044267" timestamp="2515945" timestamp2="2515945">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2657" _type="InsertStringCommand" date="Tue Nov 21 11:36:00 EST 2023" starttimestamp="1700582044267" timestamp="2515970" timestamp2="2515970">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2659" _type="InsertStringCommand" date="Tue Nov 21 11:36:00 EST 2023" starttimestamp="1700582044267" timestamp="2516080" timestamp2="2516080">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2661" _type="InsertStringCommand" date="Tue Nov 21 11:36:00 EST 2023" starttimestamp="1700582044267" timestamp="2516187" timestamp2="2516187">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2662" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:36:01 EST 2023" starttimestamp="1700582044267" timestamp="2517216" />
  <Command __id="2664" _type="InsertStringCommand" date="Tue Nov 21 11:36:01 EST 2023" starttimestamp="1700582044267" timestamp="2517427" timestamp2="2517427">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="2617" _type="Replace" date="Tue Nov 21 11:35:55 EST 2023" docASTNodeCount="135" docActiveCodeLength="770" docExpressionCount="96" docLength="770" endLine="24" insertionLength="7" int_docASTNodeCount="135" int_docActiveCodeLength="763" int_docExpressionCount="96" int_docLength="763" length="3" offset="636" startLine="24" starttimestamp="1700582044267" timestamp="2511691">
    <deletedText><![CDATA[isn]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2620" _type="Insert" date="Tue Nov 21 11:35:57 EST 2023" docASTNodeCount="140" docActiveCodeLength="801" docExpressionCount="98" docLength="801" length="31" offset="644" repeat="22" starttimestamp="1700582044267" timestamp="2513019" timestamp2="2517423">
    <text><![CDATA[ {
			return new NilAtom();
		}]]></text>
  </DocumentChange>
  <Command __id="2665" _type="MoveCaretCommand" caretOffset="506" date="Tue Nov 21 11:36:02 EST 2023" docOffset="675" starttimestamp="1700582044267" timestamp="2518523" />
  <DocumentChange __id="2666" _type="Insert" date="Tue Nov 21 11:36:04 EST 2023" docASTNodeCount="143" docActiveCodeLength="808" docExpressionCount="99" docLength="808" length="7" offset="675" repeat="6" starttimestamp="1700582044267" timestamp="2519964" timestamp2="2520471">
    <text><![CDATA[else {P]]></text>
  </DocumentChange>
  <Command __id="2667" _type="InsertStringCommand" date="Tue Nov 21 11:36:04 EST 2023" starttimestamp="1700582044267" timestamp="2519966" timestamp2="2519966">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2669" _type="InsertStringCommand" date="Tue Nov 21 11:36:04 EST 2023" starttimestamp="1700582044267" timestamp="2519995" timestamp2="2519995">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2671" _type="InsertStringCommand" date="Tue Nov 21 11:36:04 EST 2023" starttimestamp="1700582044267" timestamp="2520095" timestamp2="2520095">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2673" _type="InsertStringCommand" date="Tue Nov 21 11:36:04 EST 2023" starttimestamp="1700582044267" timestamp="2520191" timestamp2="2520191">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2675" _type="InsertStringCommand" date="Tue Nov 21 11:36:04 EST 2023" starttimestamp="1700582044267" timestamp="2520459" timestamp2="2520459">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2677" _type="InsertStringCommand" date="Tue Nov 21 11:36:04 EST 2023" starttimestamp="1700582044267" timestamp="2520473" timestamp2="2520473">
    <data><![CDATA[P]]></data>
  </Command>
  <DocumentChange __id="2678" _type="Delete" date="Tue Nov 21 11:36:05 EST 2023" docASTNodeCount="140" docActiveCodeLength="805" docExpressionCount="98" docLength="805" endLine="26" length="3" offset="679" repeat="3" startLine="26" starttimestamp="1700582044267" timestamp="2521114" timestamp2="2521784">
    <text><![CDATA[ {P]]></text>
  </DocumentChange>
  <Command __id="2679" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:05 EST 2023" starttimestamp="1700582044267" timestamp="2521117" />
  <Command __id="2681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:05 EST 2023" starttimestamp="1700582044267" timestamp="2521437" />
  <Command __id="2683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:06 EST 2023" starttimestamp="1700582044267" timestamp="2521786" />
  <DocumentChange __id="2684" _type="Insert" date="Tue Nov 21 11:36:06 EST 2023" docASTNodeCount="141" docActiveCodeLength="815" docExpressionCount="98" docLength="815" length="10" offset="679" repeat="2" starttimestamp="1700582044267" timestamp="2522605" timestamp2="2522784">
    <text><![CDATA[ {
			
		}]]></text>
  </DocumentChange>
  <Command __id="2685" _type="InsertStringCommand" date="Tue Nov 21 11:36:06 EST 2023" starttimestamp="1700582044267" timestamp="2522606" timestamp2="2522606">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2687" _type="InsertStringCommand" date="Tue Nov 21 11:36:07 EST 2023" starttimestamp="1700582044267" timestamp="2522785" timestamp2="2522785">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2688" _type="Insert" date="Tue Nov 21 11:36:11 EST 2023" docASTNodeCount="144" docActiveCodeLength="835" docExpressionCount="100" docLength="835" length="20" offset="685" repeat="19" starttimestamp="1700582044267" timestamp="2526782" timestamp2="2532579">
    <text><![CDATA[return evalHelpder()]]></text>
  </DocumentChange>
  <Command __id="2689" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2526783" timestamp2="2526783">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2691" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2526880" timestamp2="2526880">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2693" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2527019" timestamp2="2527019">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2695" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2527106" timestamp2="2527106">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2697" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2527222" timestamp2="2527222">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2699" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2527301" timestamp2="2527301">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2701" _type="InsertStringCommand" date="Tue Nov 21 11:36:11 EST 2023" starttimestamp="1700582044267" timestamp="2527448" timestamp2="2527448">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2703" _type="InsertStringCommand" date="Tue Nov 21 11:36:13 EST 2023" starttimestamp="1700582044267" timestamp="2528922" timestamp2="2528922">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2705" _type="InsertStringCommand" date="Tue Nov 21 11:36:13 EST 2023" starttimestamp="1700582044267" timestamp="2529132" timestamp2="2529132">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2707" _type="InsertStringCommand" date="Tue Nov 21 11:36:13 EST 2023" starttimestamp="1700582044267" timestamp="2529208" timestamp2="2529208">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2709" _type="InsertStringCommand" date="Tue Nov 21 11:36:13 EST 2023" starttimestamp="1700582044267" timestamp="2529295" timestamp2="2529295">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2711" _type="InsertStringCommand" date="Tue Nov 21 11:36:13 EST 2023" starttimestamp="1700582044267" timestamp="2529553" timestamp2="2529553">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="2713" _type="InsertStringCommand" date="Tue Nov 21 11:36:14 EST 2023" starttimestamp="1700582044267" timestamp="2529746" timestamp2="2529746">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2715" _type="InsertStringCommand" date="Tue Nov 21 11:36:14 EST 2023" starttimestamp="1700582044267" timestamp="2530387" timestamp2="2530387">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2717" _type="InsertStringCommand" date="Tue Nov 21 11:36:15 EST 2023" starttimestamp="1700582044267" timestamp="2530874" timestamp2="2530874">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2719" _type="InsertStringCommand" date="Tue Nov 21 11:36:15 EST 2023" starttimestamp="1700582044267" timestamp="2531369" timestamp2="2531369">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2721" _type="InsertStringCommand" date="Tue Nov 21 11:36:15 EST 2023" starttimestamp="1700582044267" timestamp="2531620" timestamp2="2531620">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2723" _type="InsertStringCommand" date="Tue Nov 21 11:36:16 EST 2023" starttimestamp="1700582044267" timestamp="2531782" timestamp2="2531782">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2725" _type="InsertStringCommand" date="Tue Nov 21 11:36:16 EST 2023" starttimestamp="1700582044267" timestamp="2532583" timestamp2="2532583">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="2726" _type="Delete" date="Tue Nov 21 11:36:17 EST 2023" docASTNodeCount="143" docActiveCodeLength="830" docExpressionCount="99" docLength="830" endLine="27" length="5" offset="700" repeat="5" startLine="27" starttimestamp="1700582044267" timestamp="2533539" timestamp2="2533926">
    <text><![CDATA[der()]]></text>
  </DocumentChange>
  <Command __id="2728" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:17 EST 2023" starttimestamp="1700582044267" timestamp="2533542" />
  <Command __id="2730" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:17 EST 2023" starttimestamp="1700582044267" timestamp="2533645" />
  <Command __id="2732" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:18 EST 2023" starttimestamp="1700582044267" timestamp="2533778" />
  <Command __id="2734" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:18 EST 2023" starttimestamp="1700582044267" timestamp="2533929" />
  <DocumentChange __id="2735" _type="Insert" date="Tue Nov 21 11:36:18 EST 2023" docASTNodeCount="145" docActiveCodeLength="839" docExpressionCount="101" docLength="839" length="9" offset="700" repeat="8" starttimestamp="1700582044267" timestamp="2534065" timestamp2="2536773">
    <text><![CDATA[er(exper)]]></text>
  </DocumentChange>
  <Command __id="2736" _type="InsertStringCommand" date="Tue Nov 21 11:36:18 EST 2023" starttimestamp="1700582044267" timestamp="2534067" timestamp2="2534067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2738" _type="InsertStringCommand" date="Tue Nov 21 11:36:18 EST 2023" starttimestamp="1700582044267" timestamp="2534141" timestamp2="2534141">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2740" _type="InsertStringCommand" date="Tue Nov 21 11:36:18 EST 2023" starttimestamp="1700582044267" timestamp="2534276" timestamp2="2534276">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2742" _type="InsertStringCommand" date="Tue Nov 21 11:36:20 EST 2023" starttimestamp="1700582044267" timestamp="2536155" timestamp2="2536155">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2744" _type="InsertStringCommand" date="Tue Nov 21 11:36:20 EST 2023" starttimestamp="1700582044267" timestamp="2536420" timestamp2="2536420">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2746" _type="InsertStringCommand" date="Tue Nov 21 11:36:20 EST 2023" starttimestamp="1700582044267" timestamp="2536572" timestamp2="2536572">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2748" _type="InsertStringCommand" date="Tue Nov 21 11:36:20 EST 2023" starttimestamp="1700582044267" timestamp="2536701" timestamp2="2536701">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2750" _type="InsertStringCommand" date="Tue Nov 21 11:36:21 EST 2023" starttimestamp="1700582044267" timestamp="2536773" timestamp2="2536773">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="2751" _type="Delete" date="Tue Nov 21 11:36:21 EST 2023" docASTNodeCount="145" docActiveCodeLength="837" docExpressionCount="101" docLength="837" endLine="27" length="2" offset="706" repeat="2" startLine="27" starttimestamp="1700582044267" timestamp="2537286" timestamp2="2537370">
    <text><![CDATA[er]]></text>
  </DocumentChange>
  <Command __id="2752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:21 EST 2023" starttimestamp="1700582044267" timestamp="2537289" />
  <Command __id="2754" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:21 EST 2023" starttimestamp="1700582044267" timestamp="2537371" />
  <DocumentChange __id="2755" _type="Insert" date="Tue Nov 21 11:36:21 EST 2023" docASTNodeCount="147" docActiveCodeLength="843" docExpressionCount="103" docLength="843" length="6" offset="706" repeat="6" starttimestamp="1700582044267" timestamp="2537485" timestamp2="2538516">
    <text><![CDATA[r.getT]]></text>
  </DocumentChange>
  <Command __id="2756" _type="InsertStringCommand" date="Tue Nov 21 11:36:21 EST 2023" starttimestamp="1700582044267" timestamp="2537485" timestamp2="2537485">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2758" _type="InsertStringCommand" date="Tue Nov 21 11:36:21 EST 2023" starttimestamp="1700582044267" timestamp="2537588" timestamp2="2537588">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2759" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:36:21 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2537594" />
  <Command __id="2764" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:36:23 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2538760" />
  <DocumentChange __id="2765" _type="Replace" date="Tue Nov 21 11:36:23 EST 2023" docASTNodeCount="147" docActiveCodeLength="848" docExpressionCount="103" docLength="848" endLine="27" insertionLength="9" int_docASTNodeCount="145" int_docActiveCodeLength="839" int_docExpressionCount="102" int_docLength="839" length="4" offset="708" startLine="27" starttimestamp="1700582044267" timestamp="2538763">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="2766" _type="InsertStringCommand" date="Tue Nov 21 11:36:23 EST 2023" starttimestamp="1700582044267" timestamp="2538770" timestamp2="2538770">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2767" _type="Insert" date="Tue Nov 21 11:36:23 EST 2023" docASTNodeCount="148" docActiveCodeLength="861" docExpressionCount="104" docLength="861" length="13" offset="717" repeat="13" starttimestamp="1700582044267" timestamp="2539181" timestamp2="2541611">
    <text><![CDATA[, environment]]></text>
  </DocumentChange>
  <Command __id="2768" _type="InsertStringCommand" date="Tue Nov 21 11:36:23 EST 2023" starttimestamp="1700582044267" timestamp="2539181" timestamp2="2539181">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2770" _type="InsertStringCommand" date="Tue Nov 21 11:36:23 EST 2023" starttimestamp="1700582044267" timestamp="2539421" timestamp2="2539421">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2772" _type="InsertStringCommand" date="Tue Nov 21 11:36:23 EST 2023" starttimestamp="1700582044267" timestamp="2539540" timestamp2="2539540">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2774" _type="InsertStringCommand" date="Tue Nov 21 11:36:23 EST 2023" starttimestamp="1700582044267" timestamp="2539661" timestamp2="2539661">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2776" _type="InsertStringCommand" date="Tue Nov 21 11:36:24 EST 2023" starttimestamp="1700582044267" timestamp="2540300" timestamp2="2540300">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2778" _type="InsertStringCommand" date="Tue Nov 21 11:36:24 EST 2023" starttimestamp="1700582044267" timestamp="2540425" timestamp2="2540425">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2780" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541075" timestamp2="2541075">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2782" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541148" timestamp2="2541148">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2784" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541265" timestamp2="2541265">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2786" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541400" timestamp2="2541400">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2788" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541473" timestamp2="2541473">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2790" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541551" timestamp2="2541551">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2792" _type="InsertStringCommand" date="Tue Nov 21 11:36:25 EST 2023" starttimestamp="1700582044267" timestamp="2541611" timestamp2="2541611">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2793" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:36:26 EST 2023" starttimestamp="1700582044267" timestamp="2542311" />
  <DocumentChange __id="2794" _type="Insert" date="Tue Nov 21 11:36:26 EST 2023" docASTNodeCount="148" docActiveCodeLength="862" docExpressionCount="104" docLength="862" length="1" offset="731" starttimestamp="1700582044267" timestamp="2542613">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="2795" _type="InsertStringCommand" date="Tue Nov 21 11:36:26 EST 2023" starttimestamp="1700582044267" timestamp="2542617" timestamp2="2542617">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2796" _type="ShellCommand" date="Tue Nov 21 11:36:27 EST 2023" starttimestamp="1700582044267" timestamp="2543417" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2797" _type="ShellCommand" date="Tue Nov 21 11:36:28 EST 2023" starttimestamp="1700582044267" timestamp="2543931" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2798" _type="MoveCaretCommand" caretOffset="581" date="Tue Nov 21 11:36:29 EST 2023" docOffset="750" starttimestamp="1700582044267" timestamp="2544789" />
  <Command __id="2800" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:36:29 EST 2023" starttimestamp="1700582044267" timestamp="2545553" />
  <Command __id="2802" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:36:30 EST 2023" starttimestamp="1700582044267" timestamp="2546537" />
  <Command __id="2803" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:36:31 EST 2023" starttimestamp="1700582044267" timestamp="2547013" />
  <Command __id="2804" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:36:31 EST 2023" starttimestamp="1700582044267" timestamp="2547114" />
  <Command __id="2805" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:36:31 EST 2023" starttimestamp="1700582044267" timestamp="2547122" />
  <Command __id="2806" _type="ShellCommand" date="Tue Nov 21 11:36:31 EST 2023" starttimestamp="1700582044267" timestamp="2547420" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2807" _type="ShellCommand" date="Tue Nov 21 11:36:33 EST 2023" starttimestamp="1700582044267" timestamp="2549316" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2808" _type="ShellCommand" date="Tue Nov 21 11:36:34 EST 2023" starttimestamp="1700582044267" timestamp="2550577" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2809" _type="ShellCommand" date="Tue Nov 21 11:36:35 EST 2023" starttimestamp="1700582044267" timestamp="2551276" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2810" _type="ShellCommand" date="Tue Nov 21 11:36:36 EST 2023" starttimestamp="1700582044267" timestamp="2552613" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2811" _type="ShellCommand" date="Tue Nov 21 11:36:38 EST 2023" starttimestamp="1700582044267" timestamp="2554055" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2812" _type="ShellCommand" date="Tue Nov 21 11:36:39 EST 2023" starttimestamp="1700582044267" timestamp="2555118" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2813" _type="ShellCommand" date="Tue Nov 21 11:36:40 EST 2023" starttimestamp="1700582044267" timestamp="2556316" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2814" _type="ShellCommand" date="Tue Nov 21 11:36:41 EST 2023" starttimestamp="1700582044267" timestamp="2557660" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2815" _type="ShellCommand" date="Tue Nov 21 11:36:42 EST 2023" starttimestamp="1700582044267" timestamp="2558286" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2816" _type="ShellCommand" date="Tue Nov 21 11:36:43 EST 2023" starttimestamp="1700582044267" timestamp="2559087" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2817" _type="ShellCommand" date="Tue Nov 21 11:36:44 EST 2023" starttimestamp="1700582044267" timestamp="2559833" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2818" _type="ShellCommand" date="Tue Nov 21 11:36:44 EST 2023" starttimestamp="1700582044267" timestamp="2560491" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2819" _type="ShellCommand" date="Tue Nov 21 11:36:45 EST 2023" starttimestamp="1700582044267" timestamp="2561118" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2820" _type="ShellCommand" date="Tue Nov 21 11:36:46 EST 2023" starttimestamp="1700582044267" timestamp="2561965" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2821" _type="ShellCommand" date="Tue Nov 21 11:36:46 EST 2023" starttimestamp="1700582044267" timestamp="2562710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2822" _type="ShellCommand" date="Tue Nov 21 11:36:47 EST 2023" starttimestamp="1700582044267" timestamp="2563469" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2823" _type="ShellCommand" date="Tue Nov 21 11:36:48 EST 2023" starttimestamp="1700582044267" timestamp="2564240" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2824" _type="ShellCommand" date="Tue Nov 21 11:36:49 EST 2023" starttimestamp="1700582044267" timestamp="2565018" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2825" _type="ShellCommand" date="Tue Nov 21 11:36:49 EST 2023" starttimestamp="1700582044267" timestamp="2565605" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2826" _type="ShellCommand" date="Tue Nov 21 11:36:51 EST 2023" starttimestamp="1700582044267" timestamp="2566854" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2827" _type="ShellCommand" date="Tue Nov 21 11:36:52 EST 2023" starttimestamp="1700582044267" timestamp="2567960" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2828" _type="MoveCaretCommand" caretOffset="477" date="Tue Nov 21 11:36:52 EST 2023" docOffset="646" starttimestamp="1700582044267" timestamp="2568688" />
  <Command __id="2829" _type="InsertStringCommand" date="Tue Nov 21 11:36:53 EST 2023" starttimestamp="1700582044267" timestamp="2569030" timestamp2="2569030">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2830" _type="ShellCommand" date="Tue Nov 21 11:36:58 EST 2023" starttimestamp="1700582044267" timestamp="2574257" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2831" _type="ShellCommand" date="Tue Nov 21 11:37:01 EST 2023" starttimestamp="1700582044267" timestamp="2577167" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2832" _type="ShellCommand" date="Tue Nov 21 11:37:01 EST 2023" starttimestamp="1700582044267" timestamp="2577330" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2833" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:37:01 EST 2023" starttimestamp="1700582044267" timestamp="2577609" />
  <Command __id="2834" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:37:01 EST 2023" starttimestamp="1700582044267" timestamp="2577611" />
  <Command __id="2835" _type="ShellCommand" date="Tue Nov 21 11:37:48 EST 2023" starttimestamp="1700582044267" timestamp="2624165" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2836" _type="MoveCaretCommand" caretOffset="502" date="Tue Nov 21 11:37:50 EST 2023" docOffset="671" starttimestamp="1700582044267" timestamp="2625838" />
  <Command __id="2837" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:37:50 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="2626294" />
  <Command __id="2838" _type="MoveCaretCommand" caretOffset="477" date="Tue Nov 21 11:37:50 EST 2023" docOffset="646" starttimestamp="1700582044267" timestamp="2626535" />
  <Command __id="2839" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:37:51 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="2626838" />
  <Command __id="2840" _type="MoveCaretCommand" caretOffset="502" date="Tue Nov 21 11:37:51 EST 2023" docOffset="671" starttimestamp="1700582044267" timestamp="2627110" />
  <Command __id="2841" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:37:51 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="2627339" />
  <Command __id="2842" _type="MoveCaretCommand" caretOffset="477" date="Tue Nov 21 11:37:51 EST 2023" docOffset="646" starttimestamp="1700582044267" timestamp="2627551" />
  <Command __id="2843" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:37:51 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="2627720" />
  <Command __id="2844" _type="ShellCommand" date="Tue Nov 21 11:37:55 EST 2023" starttimestamp="1700582044267" timestamp="2631156" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="2799" _type="Delete" date="Tue Nov 21 11:36:29 EST 2023" docASTNodeCount="132" docActiveCodeLength="746" docExpressionCount="89" docLength="746" endLine="30" length="116" offset="736" repeat="2" startLine="28" starttimestamp="1700582044267" timestamp="2545552" timestamp2="2546536">
    <text><![CDATA[
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
]]></text>
  </DocumentChange>
  <Command __id="2848" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:38:02 EST 2023" docASTNodeCount="52" docActiveCodeLength="285" docExpressionCount="35" docLength="319" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2637871">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="2850" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:38:03 EST 2023" docASTNodeCount="132" docActiveCodeLength="746" docExpressionCount="89" docLength="746" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2639019">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(INSERT,"import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		"), Diff(INSERT,"return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return new NilAtom();			}else {				return expr;			}		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}else {			return evalHelper(expr.getTail(), environment);		}			}"), Diff(EQUAL,"	"), Diff(DELETE,"}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}else {
			return evalHelper(expr.getTail(), environment);
		}		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="2845" _type="ShellCommand" date="Tue Nov 21 11:38:02 EST 2023" starttimestamp="1700582044267" timestamp="2637778" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2846" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:38:02 EST 2023" starttimestamp="1700582044267" timestamp="2637815" />
  <Command __id="2847" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:38:02 EST 2023" starttimestamp="1700582044267" timestamp="2637823" />
  <Command __id="2849" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:38:02 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2637936" />
  <Command __id="2851" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:38:03 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="2639068" />
  <Command __id="2853" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:38:09 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2644853" />
  <Command __id="2854" _type="SelectTextCommand" caretOffset="106" date="Tue Nov 21 11:38:10 EST 2023" end="234" start="106" starttimestamp="1700582044267" timestamp="2646392" />
  <Command __id="2858" _type="PasteCommand" date="Tue Nov 21 11:38:10 EST 2023" starttimestamp="1700582044267" timestamp="2646594" />
  <Command __id="2859" _type="MoveCaretCommand" caretOffset="130" date="Tue Nov 21 11:38:11 EST 2023" docOffset="250" starttimestamp="1700582044267" timestamp="2647654" />
  <Command __id="2860" _type="SelectTextCommand" caretOffset="136" date="Tue Nov 21 11:38:12 EST 2023" end="136" start="125" starttimestamp="1700582044267" timestamp="2647798" />
  <Command __id="2861" _type="MoveCaretCommand" caretOffset="138" date="Tue Nov 21 11:38:12 EST 2023" docOffset="258" starttimestamp="1700582044267" timestamp="2648006" />
  <Command __id="2862" _type="SelectTextCommand" caretOffset="141" date="Tue Nov 21 11:38:12 EST 2023" end="141" start="137" starttimestamp="1700582044267" timestamp="2648177" />
  <Command __id="2863" _type="MoveCaretCommand" caretOffset="146" date="Tue Nov 21 11:38:12 EST 2023" docOffset="266" starttimestamp="1700582044267" timestamp="2648513" />
  <Command __id="2864" _type="SelectTextCommand" caretOffset="153" date="Tue Nov 21 11:38:12 EST 2023" end="153" start="142" starttimestamp="1700582044267" timestamp="2648673" />
  <Command __id="2865" _type="MoveCaretCommand" caretOffset="160" date="Tue Nov 21 11:38:13 EST 2023" docOffset="280" starttimestamp="1700582044267" timestamp="2648961" />
  <Command __id="2866" _type="SelectTextCommand" caretOffset="171" date="Tue Nov 21 11:38:13 EST 2023" end="171" start="160" starttimestamp="1700582044267" timestamp="2649116" />
  <Command __id="2867" _type="MoveCaretCommand" caretOffset="405" date="Tue Nov 21 11:38:13 EST 2023" docOffset="525" starttimestamp="1700582044267" timestamp="2649436" />
  <Command __id="2868" _type="MoveCaretCommand" caretOffset="406" date="Tue Nov 21 11:38:13 EST 2023" docOffset="526" starttimestamp="1700582044267" timestamp="2649581" />
  <Command __id="2869" _type="MoveCaretCommand" caretOffset="382" date="Tue Nov 21 11:38:14 EST 2023" docOffset="502" starttimestamp="1700582044267" timestamp="2649862" />
  <Command __id="2870" _type="MoveCaretCommand" caretOffset="360" date="Tue Nov 21 11:38:14 EST 2023" docOffset="480" starttimestamp="1700582044267" timestamp="2650304" />
  <Command __id="2871" _type="MoveCaretCommand" caretOffset="382" date="Tue Nov 21 11:38:14 EST 2023" docOffset="502" starttimestamp="1700582044267" timestamp="2650567" />
  <Command __id="2872" _type="MoveCaretCommand" caretOffset="360" date="Tue Nov 21 11:38:15 EST 2023" docOffset="480" starttimestamp="1700582044267" timestamp="2650853" />
  <Command __id="2873" _type="MoveCaretCommand" caretOffset="382" date="Tue Nov 21 11:38:15 EST 2023" docOffset="502" starttimestamp="1700582044267" timestamp="2651073" />
  <Command __id="2874" _type="MoveCaretCommand" caretOffset="360" date="Tue Nov 21 11:38:15 EST 2023" docOffset="480" starttimestamp="1700582044267" timestamp="2651449" />
  <Command __id="2875" _type="MoveCaretCommand" caretOffset="105" date="Tue Nov 21 11:38:16 EST 2023" docOffset="225" starttimestamp="1700582044267" timestamp="2652121" />
  <Command __id="2876" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:38:16 EST 2023" starttimestamp="1700582044267" timestamp="2652493" />
  <Command __id="2877" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:38:16 EST 2023" starttimestamp="1700582044267" timestamp="2652593" />
  <Command __id="2878" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:38:16 EST 2023" starttimestamp="1700582044267" timestamp="2652601" />
  <Command __id="2879" _type="ShellCommand" date="Tue Nov 21 11:38:17 EST 2023" starttimestamp="1700582044267" timestamp="2652796" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2880" _type="ShellCommand" date="Tue Nov 21 11:38:17 EST 2023" starttimestamp="1700582044267" timestamp="2653323" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2881" _type="ShellCommand" date="Tue Nov 21 11:38:18 EST 2023" starttimestamp="1700582044267" timestamp="2654462" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2882" _type="ShellCommand" date="Tue Nov 21 11:38:24 EST 2023" starttimestamp="1700582044267" timestamp="2660068" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2883" _type="ShellCommand" date="Tue Nov 21 11:38:24 EST 2023" starttimestamp="1700582044267" timestamp="2660629" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2884" _type="ShellCommand" date="Tue Nov 21 11:38:26 EST 2023" starttimestamp="1700582044267" timestamp="2662160" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2885" _type="ShellCommand" date="Tue Nov 21 11:38:40 EST 2023" starttimestamp="1700582044267" timestamp="2676524" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2886" _type="ShellCommand" date="Tue Nov 21 11:38:43 EST 2023" starttimestamp="1700582044267" timestamp="2678902" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2887" _type="ShellCommand" date="Tue Nov 21 11:38:44 EST 2023" starttimestamp="1700582044267" timestamp="2680151" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2888" _type="ShellCommand" date="Tue Nov 21 11:38:45 EST 2023" starttimestamp="1700582044267" timestamp="2681481" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2889" _type="ShellCommand" date="Tue Nov 21 11:38:46 EST 2023" starttimestamp="1700582044267" timestamp="2682368" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2890" _type="ShellCommand" date="Tue Nov 21 11:38:48 EST 2023" starttimestamp="1700582044267" timestamp="2684619" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2891" _type="ShellCommand" date="Tue Nov 21 11:38:56 EST 2023" starttimestamp="1700582044267" timestamp="2692399" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2892" _type="ShellCommand" date="Tue Nov 21 11:38:56 EST 2023" starttimestamp="1700582044267" timestamp="2692623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2893" _type="MoveCaretCommand" caretOffset="470" date="Tue Nov 21 11:39:16 EST 2023" docOffset="590" starttimestamp="1700582044267" timestamp="2712083" />
  <Command __id="2894" _type="MoveCaretCommand" caretOffset="492" date="Tue Nov 21 11:39:16 EST 2023" docOffset="612" starttimestamp="1700582044267" timestamp="2712514" />
  <Command __id="2895" _type="SelectTextCommand" caretOffset="488" date="Tue Nov 21 11:39:17 EST 2023" end="488" start="487" starttimestamp="1700582044267" timestamp="2713500" />
  <Command __id="2852" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:38:09 EST 2023" docASTNodeCount="52" docActiveCodeLength="285" docExpressionCount="35" docLength="319" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2644804">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="2855" _type="Replace" date="Tue Nov 21 11:38:10 EST 2023" docASTNodeCount="112" docActiveCodeLength="656" docExpressionCount="71" docLength="656" endLine="12" insertionLength="465" int_docASTNodeCount="34" int_docActiveCodeLength="191" int_docExpressionCount="26" int_docLength="191" length="128" offset="187" startLine="8" starttimestamp="1700582044267" timestamp="2646547">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}else {
			return evalHelper(expr.getTail(), environment);
		}		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2856" _type="Insert" date="Tue Nov 21 11:38:10 EST 2023" docASTNodeCount="122" docActiveCodeLength="695" docExpressionCount="80" docLength="695" length="39" offset="93" repeat="2" starttimestamp="1700582044267" timestamp="2646576" timestamp2="2646576">
    <text><![CDATA[
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="2896" _type="SelectTextCommand" caretOffset="562" date="Tue Nov 21 11:39:19 EST 2023" end="562" start="522" starttimestamp="1700582044267" timestamp="2715075" />
  <DocumentChange __id="2897" _type="Delete" date="Tue Nov 21 11:39:20 EST 2023" docASTNodeCount="116" docActiveCodeLength="655" docExpressionCount="74" docLength="655" endLine="26" length="40" offset="642" startLine="26" starttimestamp="1700582044267" timestamp="2716177">
    <text><![CDATA[evalHelper(expr.getTail(), environment);]]></text>
  </DocumentChange>
  <Command __id="2898" _type="CutCommand" date="Tue Nov 21 11:39:20 EST 2023" starttimestamp="1700582044267" timestamp="2716185" />
  <Command __id="2899" _type="SelectTextCommand" caretOffset="487" date="Tue Nov 21 11:39:21 EST 2023" end="501" start="487" starttimestamp="1700582044267" timestamp="2716928" />
  <DocumentChange __id="2900" _type="Replace" date="Tue Nov 21 11:39:21 EST 2023" docASTNodeCount="119" docActiveCodeLength="681" docExpressionCount="78" docLength="681" endLine="24" insertionLength="40" int_docASTNodeCount="113" int_docActiveCodeLength="641" int_docExpressionCount="72" int_docLength="641" length="14" offset="607" startLine="24" starttimestamp="1700582044267" timestamp="2717063">
    <deletedText><![CDATA[new NilAtom();]]></deletedText>
    <insertedText><![CDATA[evalHelper(expr.getTail(), environment);]]></insertedText>
  </DocumentChange>
  <Command __id="2901" _type="PasteCommand" date="Tue Nov 21 11:39:21 EST 2023" starttimestamp="1700582044267" timestamp="2717067" />
  <Command __id="2902" _type="MoveCaretCommand" caretOffset="548" date="Tue Nov 21 11:39:21 EST 2023" docOffset="668" starttimestamp="1700582044267" timestamp="2717229" />
  <DocumentChange __id="2903" _type="Delete" date="Tue Nov 21 11:39:22 EST 2023" docASTNodeCount="118" docActiveCodeLength="674" docExpressionCount="78" docLength="674" endLine="26" length="7" offset="661" repeat="7" startLine="26" starttimestamp="1700582044267" timestamp="2718510" timestamp2="2719522">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <Command __id="2904" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:22 EST 2023" starttimestamp="1700582044267" timestamp="2718513" />
  <Command __id="2906" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:22 EST 2023" starttimestamp="1700582044267" timestamp="2718640" />
  <Command __id="2908" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:23 EST 2023" starttimestamp="1700582044267" timestamp="2718759" />
  <Command __id="2910" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:23 EST 2023" starttimestamp="1700582044267" timestamp="2718896" />
  <Command __id="2912" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:23 EST 2023" starttimestamp="1700582044267" timestamp="2719015" />
  <Command __id="2914" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:23 EST 2023" starttimestamp="1700582044267" timestamp="2719165" />
  <Command __id="2916" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:23 EST 2023" starttimestamp="1700582044267" timestamp="2719525" />
  <DocumentChange __id="2917" _type="Insert" date="Tue Nov 21 11:39:24 EST 2023" docASTNodeCount="122" docActiveCodeLength="683" docExpressionCount="81" docLength="683" length="9" offset="661" repeat="9" starttimestamp="1700582044267" timestamp="2720264" timestamp2="2721628">
    <text><![CDATA[expr.getH]]></text>
  </DocumentChange>
  <Command __id="2918" _type="InsertStringCommand" date="Tue Nov 21 11:39:24 EST 2023" starttimestamp="1700582044267" timestamp="2720265" timestamp2="2720265">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2920" _type="InsertStringCommand" date="Tue Nov 21 11:39:24 EST 2023" starttimestamp="1700582044267" timestamp="2720444" timestamp2="2720444">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2922" _type="InsertStringCommand" date="Tue Nov 21 11:39:24 EST 2023" starttimestamp="1700582044267" timestamp="2720565" timestamp2="2720565">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2924" _type="InsertStringCommand" date="Tue Nov 21 11:39:24 EST 2023" starttimestamp="1700582044267" timestamp="2720651" timestamp2="2720651">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2926" _type="InsertStringCommand" date="Tue Nov 21 11:39:25 EST 2023" starttimestamp="1700582044267" timestamp="2720756" timestamp2="2720756">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2927" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:39:25 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2720763" />
  <Command __id="2932" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:39:26 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2722010" />
  <DocumentChange __id="2933" _type="Replace" date="Tue Nov 21 11:39:26 EST 2023" docASTNodeCount="122" docActiveCodeLength="688" docExpressionCount="81" docLength="688" endLine="26" insertionLength="9" int_docASTNodeCount="120" int_docActiveCodeLength="679" int_docExpressionCount="79" int_docLength="679" length="4" offset="666" startLine="26" starttimestamp="1700582044267" timestamp="2722012">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="2934" _type="InsertStringCommand" date="Tue Nov 21 11:39:26 EST 2023" starttimestamp="1700582044267" timestamp="2722016" timestamp2="2722016">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2936" _type="InsertStringCommand" date="Tue Nov 21 11:39:26 EST 2023" starttimestamp="1700582044267" timestamp="2722210" timestamp2="2722210">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2937" _type="MoveCaretCommand" caretOffset="541" date="Tue Nov 21 11:39:27 EST 2023" docOffset="661" starttimestamp="1700582044267" timestamp="2723362" />
  <Command __id="2939" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2723933" timestamp2="2723933">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2941" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2723992" timestamp2="2723992">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2943" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2724134" timestamp2="2724134">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2945" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2724206" timestamp2="2724206">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2947" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2724302" timestamp2="2724302">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2949" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2724348" timestamp2="2724348">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2951" _type="InsertStringCommand" date="Tue Nov 21 11:39:28 EST 2023" starttimestamp="1700582044267" timestamp="2724453" timestamp2="2724453">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2952" _type="MoveCaretCommand" caretOffset="537" date="Tue Nov 21 11:39:29 EST 2023" docOffset="657" starttimestamp="1700582044267" timestamp="2725111" />
  <Command __id="2953" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:39:29 EST 2023" starttimestamp="1700582044267" timestamp="2725385" />
  <Command __id="2954" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:39:29 EST 2023" starttimestamp="1700582044267" timestamp="2725487" />
  <Command __id="2955" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:39:29 EST 2023" starttimestamp="1700582044267" timestamp="2725495" />
  <Command __id="2956" _type="ShellCommand" date="Tue Nov 21 11:39:34 EST 2023" starttimestamp="1700582044267" timestamp="2730523" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="2935" _type="Insert" date="Tue Nov 21 11:39:26 EST 2023" docASTNodeCount="122" docActiveCodeLength="689" docExpressionCount="81" docLength="689" length="1" offset="675" starttimestamp="1700582044267" timestamp="2722207">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2938" _type="Insert" date="Tue Nov 21 11:39:28 EST 2023" docASTNodeCount="122" docActiveCodeLength="696" docExpressionCount="81" docLength="696" length="7" offset="661" repeat="7" starttimestamp="1700582044267" timestamp="2723932" timestamp2="2724452">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <Command __id="2960" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:39:42 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2737855">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/NotEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class NotEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="2957" _type="ShellCommand" date="Tue Nov 21 11:39:42 EST 2023" starttimestamp="1700582044267" timestamp="2737767" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2958" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:39:42 EST 2023" starttimestamp="1700582044267" timestamp="2737820" />
  <Command __id="2959" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:39:42 EST 2023" starttimestamp="1700582044267" timestamp="2737826" />
  <Command __id="2961" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:39:42 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2737905" />
  <Command __id="2963" _type="MoveCaretCommand" caretOffset="537" date="Tue Nov 21 11:39:43 EST 2023" docOffset="657" starttimestamp="1700582044267" timestamp="2739154" />
  <Command __id="2964" _type="MoveCaretCommand" caretOffset="116" date="Tue Nov 21 11:39:44 EST 2023" docOffset="236" starttimestamp="1700582044267" timestamp="2740206" />
  <Command __id="2965" _type="MoveCaretCommand" caretOffset="572" date="Tue Nov 21 11:39:45 EST 2023" docOffset="692" starttimestamp="1700582044267" timestamp="2740886" />
  <Command __id="2966" _type="MoveCaretCommand" caretOffset="572" date="Tue Nov 21 11:39:46 EST 2023" docOffset="692" starttimestamp="1700582044267" timestamp="2741734" />
  <Command __id="2967" _type="SelectTextCommand" caretOffset="106" date="Tue Nov 21 11:39:47 EST 2023" end="572" start="106" starttimestamp="1700582044267" timestamp="2742919" />
  <Command __id="2968" _type="CopyCommand" date="Tue Nov 21 11:39:47 EST 2023" starttimestamp="1700582044267" timestamp="2743089" />
  <Command __id="2970" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:39:47 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="2743535" />
  <Command __id="2971" _type="SelectTextCommand" caretOffset="107" date="Tue Nov 21 11:39:48 EST 2023" end="235" start="107" starttimestamp="1700582044267" timestamp="2744696" />
  <Command __id="2975" _type="PasteCommand" date="Tue Nov 21 11:39:49 EST 2023" starttimestamp="1700582044267" timestamp="2744928" />
  <Command __id="2962" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:39:43 EST 2023" docASTNodeCount="122" docActiveCodeLength="696" docExpressionCount="81" docLength="696" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2739115">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(INSERT,"import main.lisp.parser.terms.NilAtom;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;"), Diff(DELETE,""), Diff(EQUAL,"public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1) {		// TODO Auto-generated method stub"), Diff(INSERT,"environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return new NilAtom();			}else {	"), Diff(EQUAL,"		"), Diff(INSERT,"	"), Diff(EQUAL,"return "), Diff(DELETE,"null;"), Diff(INSERT,"expr;			}		}		if(expr.getHead().isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead();		}		"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}

}
]]></snapshot>
  </Command>
  <Command __id="2969" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:39:47 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2743485">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/NotEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class NotEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="2972" _type="Replace" date="Tue Nov 21 11:39:49 EST 2023" docASTNodeCount="112" docActiveCodeLength="658" docExpressionCount="72" docLength="658" endLine="12" insertionLength="466" int_docASTNodeCount="34" int_docActiveCodeLength="192" int_docExpressionCount="26" int_docLength="192" length="128" offset="188" startLine="8" starttimestamp="1700582044267" timestamp="2744880">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2973" _type="Insert" date="Tue Nov 21 11:39:49 EST 2023" docASTNodeCount="122" docActiveCodeLength="697" docExpressionCount="81" docLength="697" length="39" offset="93" repeat="2" starttimestamp="1700582044267" timestamp="2744910" timestamp2="2744910">
    <text><![CDATA[
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="2976" _type="SelectTextCommand" caretOffset="257" date="Tue Nov 21 11:39:50 EST 2023" end="573" start="257" starttimestamp="1700582044267" timestamp="2746168" />
  <Command __id="2978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:51 EST 2023" starttimestamp="1700582044267" timestamp="2746912" />
  <Command __id="2980" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:52 EST 2023" starttimestamp="1700582044267" timestamp="2748012" />
  <Command __id="2982" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:39:52 EST 2023" starttimestamp="1700582044267" timestamp="2748370" />
  <Command __id="2983" _type="SelectTextCommand" caretOffset="190" date="Tue Nov 21 11:39:54 EST 2023" end="252" start="190" starttimestamp="1700582044267" timestamp="2750264" />
  <Command __id="2984" _type="MoveCaretCommand" caretOffset="229" date="Tue Nov 21 11:39:54 EST 2023" docOffset="349" starttimestamp="1700582044267" timestamp="2750509" />
  <DocumentChange __id="2977" _type="Delete" date="Tue Nov 21 11:39:51 EST 2023" docASTNodeCount="71" docActiveCodeLength="379" docExpressionCount="52" docLength="379" endLine="28" length="318" offset="375" repeat="3" startLine="13" starttimestamp="1700582044267" timestamp="2746909" timestamp2="2748367">
    <text><![CDATA[

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2986" _type="Replace" date="Tue Nov 21 11:39:56 EST 2023" docASTNodeCount="68" docActiveCodeLength="343" docExpressionCount="49" docLength="343" endLine="12" insertionLength="1" int_docASTNodeCount="66" int_docActiveCodeLength="342" int_docExpressionCount="48" int_docLength="342" length="37" offset="335" startLine="12" starttimestamp="1700582044267" timestamp="2752301">
    <deletedText><![CDATA[return evalHelper(expr, environment);]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="2985" _type="SelectTextCommand" caretOffset="215" date="Tue Nov 21 11:39:55 EST 2023" end="252" start="215" starttimestamp="1700582044267" timestamp="2751675" />
  <Command __id="2987" _type="InsertStringCommand" date="Tue Nov 21 11:39:56 EST 2023" starttimestamp="1700582044267" timestamp="2752306" timestamp2="2752306">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2989" _type="InsertStringCommand" date="Tue Nov 21 11:39:56 EST 2023" starttimestamp="1700582044267" timestamp="2752366" timestamp2="2752366">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2991" _type="InsertStringCommand" date="Tue Nov 21 11:39:56 EST 2023" starttimestamp="1700582044267" timestamp="2752509" timestamp2="2752509">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2993" _type="InsertStringCommand" date="Tue Nov 21 11:39:57 EST 2023" starttimestamp="1700582044267" timestamp="2753173" timestamp2="2753173">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2995" _type="InsertStringCommand" date="Tue Nov 21 11:39:57 EST 2023" starttimestamp="1700582044267" timestamp="2753380" timestamp2="2753380">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2997" _type="InsertStringCommand" date="Tue Nov 21 11:39:57 EST 2023" starttimestamp="1700582044267" timestamp="2753580" timestamp2="2753580">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2999" _type="InsertStringCommand" date="Tue Nov 21 11:39:57 EST 2023" starttimestamp="1700582044267" timestamp="2753635" timestamp2="2753635">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3001" _type="InsertStringCommand" date="Tue Nov 21 11:39:58 EST 2023" starttimestamp="1700582044267" timestamp="2753775" timestamp2="2753775">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3002" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:39:58 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2753781" />
  <Command __id="3005" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:40:00 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2756651" />
  <Command __id="3007" _type="InsertStringCommand" date="Tue Nov 21 11:40:00 EST 2023" starttimestamp="1700582044267" timestamp="2756659" timestamp2="2756659">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:40:03 EST 2023" starttimestamp="1700582044267" timestamp="2759424" />
  <Command __id="3010" _type="InsertStringCommand" date="Tue Nov 21 11:40:04 EST 2023" starttimestamp="1700582044267" timestamp="2759941" timestamp2="2759941">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3012" _type="InsertStringCommand" date="Tue Nov 21 11:40:04 EST 2023" starttimestamp="1700582044267" timestamp="2760163" timestamp2="2760163">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3013" _type="ShellCommand" date="Tue Nov 21 11:40:05 EST 2023" starttimestamp="1700582044267" timestamp="2760903" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3014" _type="ShellCommand" date="Tue Nov 21 11:40:06 EST 2023" starttimestamp="1700582044267" timestamp="2762252" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3016" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763009" timestamp2="2763009">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3018" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763104" timestamp2="2763104">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3020" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763226" timestamp2="2763226">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3022" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763315" timestamp2="2763315">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3024" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763402" timestamp2="2763402">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3026" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763480" timestamp2="2763480">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3028" _type="InsertStringCommand" date="Tue Nov 21 11:40:07 EST 2023" starttimestamp="1700582044267" timestamp="2763593" timestamp2="2763593">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3030" _type="InsertStringCommand" date="Tue Nov 21 11:40:08 EST 2023" starttimestamp="1700582044267" timestamp="2763778" timestamp2="2763778">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3032" _type="InsertStringCommand" date="Tue Nov 21 11:40:08 EST 2023" starttimestamp="1700582044267" timestamp="2764118" timestamp2="2764118">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3034" _type="InsertStringCommand" date="Tue Nov 21 11:40:08 EST 2023" starttimestamp="1700582044267" timestamp="2764404" timestamp2="2764404">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3036" _type="InsertStringCommand" date="Tue Nov 21 11:40:08 EST 2023" starttimestamp="1700582044267" timestamp="2764491" timestamp2="2764491">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3038" _type="InsertStringCommand" date="Tue Nov 21 11:40:08 EST 2023" starttimestamp="1700582044267" timestamp="2764582" timestamp2="2764582">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3040" _type="InsertStringCommand" date="Tue Nov 21 11:40:09 EST 2023" starttimestamp="1700582044267" timestamp="2764792" timestamp2="2764792">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3041" _type="InsertStringCommand" date="Tue Nov 21 11:40:09 EST 2023" starttimestamp="1700582044267" timestamp="2764797" timestamp2="2764797">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:09 EST 2023" starttimestamp="1700582044267" timestamp="2765241" />
  <Command __id="3045" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:09 EST 2023" starttimestamp="1700582044267" timestamp="2765390" />
  <Command __id="3047" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:09 EST 2023" starttimestamp="1700582044267" timestamp="2765511" />
  <Command __id="3049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:09 EST 2023" starttimestamp="1700582044267" timestamp="2765645" />
  <Command __id="3051" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2765766" />
  <Command __id="3053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2765915" />
  <Command __id="3055" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2766063" />
  <Command __id="3057" _type="InsertStringCommand" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2766266" timestamp2="2766266">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3059" _type="InsertStringCommand" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2766353" timestamp2="2766353">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3061" _type="InsertStringCommand" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2766410" timestamp2="2766410">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3063" _type="InsertStringCommand" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2766468" timestamp2="2766468">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3065" _type="InsertStringCommand" date="Tue Nov 21 11:40:10 EST 2023" starttimestamp="1700582044267" timestamp="2766679" timestamp2="2766679">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3067" _type="InsertStringCommand" date="Tue Nov 21 11:40:11 EST 2023" starttimestamp="1700582044267" timestamp="2766830" timestamp2="2766830">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3069" _type="InsertStringCommand" date="Tue Nov 21 11:40:11 EST 2023" starttimestamp="1700582044267" timestamp="2767176" timestamp2="2767176">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3071" _type="InsertStringCommand" date="Tue Nov 21 11:40:11 EST 2023" starttimestamp="1700582044267" timestamp="2767250" timestamp2="2767250">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3073" _type="InsertStringCommand" date="Tue Nov 21 11:40:11 EST 2023" starttimestamp="1700582044267" timestamp="2767311" timestamp2="2767311">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3075" _type="InsertStringCommand" date="Tue Nov 21 11:40:11 EST 2023" starttimestamp="1700582044267" timestamp="2767476" timestamp2="2767476">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3076" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:40:12 EST 2023" starttimestamp="1700582044267" timestamp="2768393" />
  <Command __id="3078" _type="InsertStringCommand" date="Tue Nov 21 11:40:12 EST 2023" starttimestamp="1700582044267" timestamp="2768608" timestamp2="2768608">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3080" _type="InsertStringCommand" date="Tue Nov 21 11:40:13 EST 2023" starttimestamp="1700582044267" timestamp="2768804" timestamp2="2768804">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3082" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:13 EST 2023" starttimestamp="1700582044267" timestamp="2769363" />
  <Command __id="3084" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:13 EST 2023" starttimestamp="1700582044267" timestamp="2769503" />
  <Command __id="3086" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:13 EST 2023" starttimestamp="1700582044267" timestamp="2769641" />
  <Command __id="3088" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:14 EST 2023" starttimestamp="1700582044267" timestamp="2769777" />
  <Command __id="3089" _type="ShellCommand" date="Tue Nov 21 11:40:16 EST 2023" starttimestamp="1700582044267" timestamp="2772207" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3090" _type="ShellCommand" date="Tue Nov 21 11:40:16 EST 2023" starttimestamp="1700582044267" timestamp="2772300" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3093" _type="MoveCaretCommand" caretOffset="260" date="Tue Nov 21 11:40:16 EST 2023" docOffset="417" starttimestamp="1700582044267" timestamp="2772673" />
  <Command __id="3095" _type="InsertStringCommand" date="Tue Nov 21 11:40:17 EST 2023" starttimestamp="1700582044267" timestamp="2773240" timestamp2="2773240">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3097" _type="InsertStringCommand" date="Tue Nov 21 11:40:17 EST 2023" starttimestamp="1700582044267" timestamp="2773343" timestamp2="2773343">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3099" _type="InsertStringCommand" date="Tue Nov 21 11:40:17 EST 2023" starttimestamp="1700582044267" timestamp="2773405" timestamp2="2773405">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3101" _type="InsertStringCommand" date="Tue Nov 21 11:40:17 EST 2023" starttimestamp="1700582044267" timestamp="2773532" timestamp2="2773532">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3103" _type="InsertStringCommand" date="Tue Nov 21 11:40:18 EST 2023" starttimestamp="1700582044267" timestamp="2774309" timestamp2="2774309">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3105" _type="InsertStringCommand" date="Tue Nov 21 11:40:18 EST 2023" starttimestamp="1700582044267" timestamp="2774489" timestamp2="2774489">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3107" _type="InsertStringCommand" date="Tue Nov 21 11:40:18 EST 2023" starttimestamp="1700582044267" timestamp="2774697" timestamp2="2774697">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3109" _type="InsertStringCommand" date="Tue Nov 21 11:40:19 EST 2023" starttimestamp="1700582044267" timestamp="2774755" timestamp2="2774755">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3111" _type="InsertStringCommand" date="Tue Nov 21 11:40:19 EST 2023" starttimestamp="1700582044267" timestamp="2774880" timestamp2="2774880">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3113" _type="InsertStringCommand" date="Tue Nov 21 11:40:19 EST 2023" starttimestamp="1700582044267" timestamp="2774952" timestamp2="2774952">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3115" _type="InsertStringCommand" date="Tue Nov 21 11:40:19 EST 2023" starttimestamp="1700582044267" timestamp="2775077" timestamp2="2775077">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3117" _type="InsertStringCommand" date="Tue Nov 21 11:40:19 EST 2023" starttimestamp="1700582044267" timestamp="2775120" timestamp2="2775120">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3119" _type="InsertStringCommand" date="Tue Nov 21 11:40:19 EST 2023" starttimestamp="1700582044267" timestamp="2775253" timestamp2="2775253">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3120" _type="ShellCommand" date="Tue Nov 21 11:40:20 EST 2023" starttimestamp="1700582044267" timestamp="2775858" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3121" _type="ShellCommand" date="Tue Nov 21 11:40:20 EST 2023" starttimestamp="1700582044267" timestamp="2776330" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3123" _type="InsertStringCommand" date="Tue Nov 21 11:40:20 EST 2023" starttimestamp="1700582044267" timestamp="2776460" timestamp2="2776460">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3125" _type="InsertStringCommand" date="Tue Nov 21 11:40:20 EST 2023" starttimestamp="1700582044267" timestamp="2776536" timestamp2="2776536">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3127" _type="InsertStringCommand" date="Tue Nov 21 11:40:20 EST 2023" starttimestamp="1700582044267" timestamp="2776613" timestamp2="2776613">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3129" _type="InsertStringCommand" date="Tue Nov 21 11:40:20 EST 2023" starttimestamp="1700582044267" timestamp="2776653" timestamp2="2776653">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3131" _type="InsertStringCommand" date="Tue Nov 21 11:40:21 EST 2023" starttimestamp="1700582044267" timestamp="2776841" timestamp2="2776841">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3133" _type="InsertStringCommand" date="Tue Nov 21 11:40:21 EST 2023" starttimestamp="1700582044267" timestamp="2777019" timestamp2="2777019">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3135" _type="InsertStringCommand" date="Tue Nov 21 11:40:21 EST 2023" starttimestamp="1700582044267" timestamp="2777102" timestamp2="2777102">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3137" _type="InsertStringCommand" date="Tue Nov 21 11:40:21 EST 2023" starttimestamp="1700582044267" timestamp="2777305" timestamp2="2777305">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:21 EST 2023" starttimestamp="1700582044267" timestamp="2777615" />
  <Command __id="3141" _type="InsertStringCommand" date="Tue Nov 21 11:40:22 EST 2023" starttimestamp="1700582044267" timestamp="2777740" timestamp2="2777740">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3143" _type="InsertStringCommand" date="Tue Nov 21 11:40:22 EST 2023" starttimestamp="1700582044267" timestamp="2778000" timestamp2="2778000">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3145" _type="InsertStringCommand" date="Tue Nov 21 11:40:22 EST 2023" starttimestamp="1700582044267" timestamp="2778026" timestamp2="2778026">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3147" _type="InsertStringCommand" date="Tue Nov 21 11:40:22 EST 2023" starttimestamp="1700582044267" timestamp="2778104" timestamp2="2778104">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3149" _type="InsertStringCommand" date="Tue Nov 21 11:40:22 EST 2023" starttimestamp="1700582044267" timestamp="2778241" timestamp2="2778241">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 11:40:23 EST 2023" starttimestamp="1700582044267" timestamp="2779012" />
  <Command __id="3152" _type="InsertStringCommand" date="Tue Nov 21 11:40:23 EST 2023" starttimestamp="1700582044267" timestamp="2779182" timestamp2="2779182">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3153" _type="MoveCaretCommand" caretOffset="256" date="Tue Nov 21 11:40:24 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="2780519" />
  <Command __id="3154" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 11:40:25 EST 2023" docOffset="390" starttimestamp="1700582044267" timestamp="2781264" />
  <Command __id="3155" _type="MoveCaretCommand" caretOffset="212" date="Tue Nov 21 11:40:25 EST 2023" docOffset="369" starttimestamp="1700582044267" timestamp="2781526" />
  <Command __id="3156" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 11:40:26 EST 2023" docOffset="390" starttimestamp="1700582044267" timestamp="2781759" />
  <Command __id="3157" _type="MoveCaretCommand" caretOffset="256" date="Tue Nov 21 11:40:26 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="2782015" />
  <Command __id="3158" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 11:40:26 EST 2023" docOffset="448" starttimestamp="1700582044267" timestamp="2782502" />
  <Command __id="3159" _type="MoveCaretCommand" caretOffset="295" date="Tue Nov 21 11:40:27 EST 2023" docOffset="452" starttimestamp="1700582044267" timestamp="2783017" />
  <Command __id="3160" _type="MoveCaretCommand" caretOffset="266" date="Tue Nov 21 11:40:27 EST 2023" docOffset="423" starttimestamp="1700582044267" timestamp="2783229" />
  <Command __id="3161" _type="MoveCaretCommand" caretOffset="256" date="Tue Nov 21 11:40:27 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="2783412" />
  <Command __id="3162" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 11:40:27 EST 2023" docOffset="390" starttimestamp="1700582044267" timestamp="2783700" />
  <Command __id="3163" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:40:28 EST 2023" starttimestamp="1700582044267" timestamp="2783885" />
  <Command __id="3164" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:40:28 EST 2023" starttimestamp="1700582044267" timestamp="2783985" />
  <Command __id="3165" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:40:28 EST 2023" starttimestamp="1700582044267" timestamp="2783994" />
  <DocumentChange __id="2988" _type="Insert" date="Tue Nov 21 11:39:56 EST 2023" docASTNodeCount="71" docActiveCodeLength="353" docExpressionCount="51" docLength="353" length="10" offset="336" repeat="9" starttimestamp="1700582044267" timestamp="2752365" timestamp2="2755337">
    <text><![CDATA[f(expr.is)]]></text>
  </DocumentChange>
  <DocumentChange __id="3006" _type="Replace" date="Tue Nov 21 11:40:00 EST 2023" docASTNodeCount="71" docActiveCodeLength="358" docExpressionCount="51" docLength="358" endLine="12" insertionLength="7" int_docASTNodeCount="69" int_docActiveCodeLength="351" int_docExpressionCount="49" int_docLength="351" length="2" offset="343" startLine="12" starttimestamp="1700582044267" timestamp="2756654">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3009" _type="Insert" date="Tue Nov 21 11:40:04 EST 2023" docASTNodeCount="71" docActiveCodeLength="368" docExpressionCount="51" docLength="368" length="10" offset="351" repeat="2" starttimestamp="1700582044267" timestamp="2759940" timestamp2="2760161">
    <text><![CDATA[ {
			
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="3015" _type="Insert" date="Tue Nov 21 11:40:07 EST 2023" docASTNodeCount="74" docActiveCodeLength="382" docExpressionCount="53" docLength="382" length="14" offset="357" repeat="13" starttimestamp="1700582044267" timestamp="2763007" timestamp2="2764791">
    <text><![CDATA[return TAtom()]]></text>
  </DocumentChange>
  <DocumentChange __id="3042" _type="Delete" date="Tue Nov 21 11:40:09 EST 2023" docASTNodeCount="72" docActiveCodeLength="375" docExpressionCount="51" docLength="375" endLine="13" length="7" offset="364" repeat="7" startLine="13" starttimestamp="1700582044267" timestamp="2765239" timestamp2="2766061">
    <text><![CDATA[TAtom()]]></text>
  </DocumentChange>
  <DocumentChange __id="3056" _type="Insert" date="Tue Nov 21 11:40:10 EST 2023" docASTNodeCount="75" docActiveCodeLength="391" docExpressionCount="53" docLength="391" length="16" offset="364" repeat="12" starttimestamp="1700582044267" timestamp="2766264" timestamp2="2768801">
    <text><![CDATA[new TAtom();
			]]></text>
  </DocumentChange>
  <DocumentChange __id="3081" _type="Delete" date="Tue Nov 21 11:40:13 EST 2023" docASTNodeCount="75" docActiveCodeLength="387" docExpressionCount="53" docLength="387" endLine="14" length="4" offset="376" repeat="4" startLine="13" starttimestamp="1700582044267" timestamp="2769362" timestamp2="2769774">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="3091" _type="Insert" date="Tue Nov 21 11:40:16 EST 2023" docASTNodeCount="85" docActiveCodeLength="424" docExpressionCount="62" docLength="424" length="37" offset="175" repeat="2" starttimestamp="1700582044267" timestamp="2772304" timestamp2="2772304">
    <text><![CDATA[
import main.lisp.parser.terms.TAtom;]]></text>
  </DocumentChange>
  <DocumentChange __id="3094" _type="Insert" date="Tue Nov 21 11:40:17 EST 2023" docASTNodeCount="90" docActiveCodeLength="453" docExpressionCount="64" docLength="453" length="29" offset="417" repeat="21" starttimestamp="1700582044267" timestamp="2773238" timestamp2="2777303">
    <text><![CDATA[else {
			return new NilT
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="3138" _type="Delete" date="Tue Nov 21 11:40:21 EST 2023" docASTNodeCount="90" docActiveCodeLength="452" docExpressionCount="64" docLength="452" endLine="16" length="1" offset="441" startLine="16" starttimestamp="1700582044267" timestamp="2777614">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="3140" _type="Insert" date="Tue Nov 21 11:40:22 EST 2023" docASTNodeCount="90" docActiveCodeLength="459" docExpressionCount="64" docLength="459" length="7" offset="441" repeat="6" starttimestamp="1700582044267" timestamp="2777738" timestamp2="2779178">
    <text><![CDATA[Atom();]]></text>
  </DocumentChange>
  <DocumentChange __id="3169" _type="Insert" date="Tue Nov 21 11:40:33 EST 2023" docASTNodeCount="90" docActiveCodeLength="460" docExpressionCount="64" docLength="460" length="1" offset="452" starttimestamp="1700582044267" timestamp="2789406">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="3166" _type="MoveCaretCommand" caretOffset="295" date="Tue Nov 21 11:40:32 EST 2023" docOffset="452" starttimestamp="1700582044267" timestamp="2787902" />
  <Command __id="3167" _type="ShellCommand" date="Tue Nov 21 11:40:32 EST 2023" starttimestamp="1700582044267" timestamp="2788215" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3168" _type="ShellCommand" date="Tue Nov 21 11:40:33 EST 2023" starttimestamp="1700582044267" timestamp="2788804" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3170" _type="InsertStringCommand" date="Tue Nov 21 11:40:33 EST 2023" starttimestamp="1700582044267" timestamp="2789407" timestamp2="2789407">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="3172" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:40:34 EST 2023" starttimestamp="1700582044267" timestamp="2790705" />
  <Command __id="3173" _type="ShellCommand" date="Tue Nov 21 11:40:35 EST 2023" starttimestamp="1700582044267" timestamp="2791292" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3174" _type="ShellCommand" date="Tue Nov 21 11:40:36 EST 2023" starttimestamp="1700582044267" timestamp="2791819" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3175" _type="MoveCaretCommand" caretOffset="266" date="Tue Nov 21 11:40:36 EST 2023" docOffset="423" starttimestamp="1700582044267" timestamp="2792116" />
  <Command __id="3176" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:40:36 EST 2023" starttimestamp="1700582044267" timestamp="2792249" />
  <Command __id="3177" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:40:36 EST 2023" starttimestamp="1700582044267" timestamp="2792350" />
  <Command __id="3178" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:40:36 EST 2023" starttimestamp="1700582044267" timestamp="2792358" />
  <Command __id="3179" _type="MoveCaretCommand" caretOffset="212" date="Tue Nov 21 11:40:39 EST 2023" docOffset="369" starttimestamp="1700582044267" timestamp="2795440" />
  <Command __id="3181" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:40:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2805657" type="Run" />
  <Command __id="3182" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:40:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2805657" type="Run" />
  <Command __id="3183" _type="ShellCommand" date="Tue Nov 21 11:40:50 EST 2023" starttimestamp="1700582044267" timestamp="2806015" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3184" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809685" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3185" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809687" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3186" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809693" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3187" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809693" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3188" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809694" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3189" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809695" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3190" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809712" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3191" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809713" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3192" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809713" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4"), Diff(INSERT,"(+ 1 2)"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3193" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809713" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"((+ "), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="3194" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809714" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3195" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809714" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3196" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3197" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3198" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3199" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3200" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="3201" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3202" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809715" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶")]]]></diff>
  </Command>
  <Command __id="3203" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809716" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶"), Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="3204" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809716" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3205" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809717" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'AND'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'AND'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3206" _type="ConsoleOutput" date="Tue Nov 21 11:40:53 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809718" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:39)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'AND'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:39)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3207" _type="ConsoleOutput" date="Tue Nov 21 11:40:54 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2809754" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.loadLogical.AbstractFunctionTestedLogicalChecker.test(AbstractFunctionTestedLogicalChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s."), Diff(DELETE,"BasicExpression.eval(BasicExpression"), Diff(INSERT,"model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluato"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunne"), Diff(EQUAL,"r.java:3"), Diff(DELETE,"9"), Diff(INSERT,"25"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evalu"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".BasicExpressionEvalu"), Diff(INSERT,"g.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".eval(BasicExpressionEvalu"), Diff(INSERT,"g.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(INSERT,"g.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(EQUAL,".java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"6"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s."), Diff(DELETE,"BasicExpression.eval(BasicExpression"), Diff(INSERT,"ParentRunner$2.evaluate(ParentRunner"), Diff(EQUAL,".java:26"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at gradingTools.comp524f19.assignment1.testcases."), Diff(DELETE,"AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"loadLogical.AbstractFunctionTestedLogicalChecker.test(AbstractFunctionTestedLogicalChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"231"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"er.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"11"), Diff(INSERT,"444"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3208" _type="ExceptionCommand" date="Tue Nov 21 11:40:54 EST 2023" starttimestamp="1700582044267" timestamp="2809761" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):38
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL

java.lang.IndexOutOfBoundsException: Index 18 out of bounds for length 18
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.loadLogical.AbstractFunctionTestedLogicalChecker.test(AbstractFunctionTestedLogicalChecker.java:49)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3209" _type="LocalChecksRawCommand" date="Tue Nov 21 11:40:54 EST 2023" starttimestamp="1700582044267" timestamp="2809766">
    <CSVRow><![CDATA[186,Tue Nov 21 11:40:54 EST 2023,40,-2,LispInterpreterLoadLogicalSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,103,0,true,AndTestedChecker AndTestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,AndTestedChecker-(0.0/10.0) AndTestedTwoResultsChecker-(0.0/10.0) NotTestedChecker-(0.0/10.0) NotTestedTwoResultsChecker-(0.0/10.0) OrTestedChecker-(0.0/10.0) OrTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3210" _type="LocalChecksRawCommand" date="Tue Nov 21 11:40:54 EST 2023" starttimestamp="1700582044267" timestamp="2809766">
    <CSVRow><![CDATA[186,Tue Nov 21 11:40:54 EST 2023,40,-2,LispInterpreterLoadLogicalSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,103,0,true,AndTestedChecker AndTestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,AndTestedChecker-(0.0/10.0) AndTestedTwoResultsChecker-(0.0/10.0) NotTestedChecker-(0.0/10.0) NotTestedTwoResultsChecker-(0.0/10.0) OrTestedChecker-(0.0/10.0) OrTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3211" _type="ShellCommand" date="Tue Nov 21 11:41:00 EST 2023" starttimestamp="1700582044267" timestamp="2816191" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3212" _type="ShellCommand" date="Tue Nov 21 11:41:27 EST 2023" starttimestamp="1700582044267" timestamp="2842741" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3216" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:41:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2846196" type="Run" />
  <Command __id="3217" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:41:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2846196" type="Run" />
  <Command __id="3218" _type="ShellCommand" date="Tue Nov 21 11:41:30 EST 2023" starttimestamp="1700582044267" timestamp="2846511" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3219" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853090" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.loadLogical.AbstractFunctionTestedLogicalChecker.test(AbstractFunctionTestedLogicalChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3220" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853091" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3221" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853096" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3222" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853097" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3223" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853097" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3224" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853098" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3225" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853114" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3226" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853115" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3227" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853115" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2"), Diff(INSERT,"(+ 3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="3228" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853116" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3229" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853116" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3230" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3231" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3232" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3233" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3234" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="3235" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3236" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3237" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853117" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3238" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853118" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="3239" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853118" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3240" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853118" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'AND'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'AND'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3241" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853119" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:39)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'AND'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:39)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3242" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853122" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at main.lisp."), Diff(DELETE,"evaluator"), Diff(INSERT,"parser.terms"), Diff(EQUAL,".BasicExpression"), Diff(DELETE,"Evaluator"), Diff(EQUAL,".eval(BasicExpression"), Diff(DELETE,"Evaluator"), Diff(EQUAL,".java:"), Diff(DELETE,"14"), Diff(INSERT,"26"), Diff(EQUAL,")¶	at main.lisp."), Diff(DELETE,"parser.terms.Basic"), Diff(INSERT,"interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,".eval(Basic"), Diff(INSERT,"Inputter.evaluate(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(INSERT,"Inputter"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"6"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newIn"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOut"), Diff(EQUAL,"put("), Diff(DELETE,"O"), Diff(INSERT,"A"), Diff(EQUAL,"bs"), Diff(DELETE,"ervableLispInterpret"), Diff(INSERT,"tractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"44"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"39"), Diff(INSERT,"111"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"16"), Diff(INSERT,"50"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3243" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853145" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:7"), Diff(DELETE,"9"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.t"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailT"), Diff(EQUAL,"est"), Diff(DELETE,"c"), Diff(INSERT,"C"), Diff(EQUAL,"ase"), Diff(DELETE,"s.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at gradingTools.comp524f19.assignment1.testcases."), Diff(DELETE,"AbstractLispExpress"), Diff(INSERT,"loadRelation.AbstractFunctionTestedRelat"), Diff(EQUAL,"ionChecker.test(Abstract"), Diff(DELETE,"LispExpress"), Diff(INSERT,"FunctionTestedRelat"), Diff(EQUAL,"ionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶"), Diff(INSERT,"	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶")]]]></diff>
  </Command>
  <Command __id="3244" _type="LocalChecksRawCommand" date="Tue Nov 21 11:41:37 EST 2023" starttimestamp="1700582044267" timestamp="2853146">
    <CSVRow><![CDATA[187,Tue Nov 21 11:41:37 EST 2023,40,0,LispInterpreterLoadRelationSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,104,0,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3245" _type="LocalChecksRawCommand" date="Tue Nov 21 11:41:37 EST 2023" starttimestamp="1700582044267" timestamp="2853146">
    <CSVRow><![CDATA[187,Tue Nov 21 11:41:37 EST 2023,40,0,LispInterpreterLoadRelationSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,104,0,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3246" _type="ConsoleOutput" date="Tue Nov 21 11:41:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2853178" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):34
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL

Test execution time (ms):36
Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:LessTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:GorETestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:LorETestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.model.ReflectiveCallable.run(Refl"), Diff(INSERT,"¶Test ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"veCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Na"), Diff(INSERT,"on time (ms):34¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL¶¶Test execution time (ms):36¶Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LessTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GorETestedChecker,100.0% complete,10.0,10.0,¶¶Test execution "), Diff(EQUAL,"ti"), Diff(DELETE,"v"), Diff(INSERT,"m"), Diff(EQUAL,"e "), Diff(DELETE,"Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)"), Diff(INSERT,"(ms):0¶Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LorETestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="3171" _type="Delete" date="Tue Nov 21 11:40:34 EST 2023" docASTNodeCount="90" docActiveCodeLength="459" docExpressionCount="64" docLength="459" endLine="17" length="1" offset="452" startLine="17" starttimestamp="1700582044267" timestamp="2790702">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="3248" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:41:49 EST 2023" docASTNodeCount="268" docActiveCodeLength="1755" docExpressionCount="129" docLength="2265" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2865612">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"LesserEqualEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="3247" _type="ShellCommand" date="Tue Nov 21 11:41:49 EST 2023" starttimestamp="1700582044267" timestamp="2865519" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3249" _type="MoveCaretCommand" caretOffset="929" date="Tue Nov 21 11:41:49 EST 2023" docOffset="1058" starttimestamp="1700582044267" timestamp="2865649" />
  <Command __id="3251" _type="SelectTextCommand" caretOffset="1075" date="Tue Nov 21 11:41:51 EST 2023" end="1075" start="1055" starttimestamp="1700582044267" timestamp="2867062" />
  <Command __id="3252" _type="MoveCaretCommand" caretOffset="1125" date="Tue Nov 21 11:41:53 EST 2023" docOffset="1186" starttimestamp="1700582044267" timestamp="2869543" />
  <Command __id="3253" _type="MoveCaretCommand" caretOffset="1125" date="Tue Nov 21 11:41:53 EST 2023" docOffset="1186" starttimestamp="1700582044267" timestamp="2869543" />
  <Command __id="3254" _type="SelectTextCommand" caretOffset="787" date="Tue Nov 21 11:41:57 EST 2023" end="787" start="696" starttimestamp="1700582044267" timestamp="2873557" />
  <Command __id="3255" _type="SelectTextCommand" caretOffset="787" date="Tue Nov 21 11:41:57 EST 2023" end="787" start="696" starttimestamp="1700582044267" timestamp="2873557" />
  <Command __id="3256" _type="CopyCommand" date="Tue Nov 21 11:41:58 EST 2023" starttimestamp="1700582044267" timestamp="2873750" />
  <Command __id="3257" _type="MoveCaretCommand" caretOffset="1125" date="Tue Nov 21 11:41:58 EST 2023" docOffset="1186" starttimestamp="1700582044267" timestamp="2874136" />
  <Command __id="3258" _type="MoveCaretCommand" caretOffset="1125" date="Tue Nov 21 11:41:58 EST 2023" docOffset="1186" starttimestamp="1700582044267" timestamp="2874136" />
  <Command __id="3260" _type="PasteCommand" date="Tue Nov 21 11:41:58 EST 2023" starttimestamp="1700582044267" timestamp="2874378" />
  <Command __id="3262" _type="InsertStringCommand" date="Tue Nov 21 11:41:59 EST 2023" starttimestamp="1700582044267" timestamp="2875120" timestamp2="2875120">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3263" _type="InsertStringCommand" date="Tue Nov 21 11:41:59 EST 2023" starttimestamp="1700582044267" timestamp="2875120" timestamp2="2875120">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3265" _type="PasteCommand" date="Tue Nov 21 11:41:59 EST 2023" starttimestamp="1700582044267" timestamp="2875257" />
  <Command __id="3267" _type="InsertStringCommand" date="Tue Nov 21 11:41:59 EST 2023" starttimestamp="1700582044267" timestamp="2875371" timestamp2="2875371">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3268" _type="InsertStringCommand" date="Tue Nov 21 11:41:59 EST 2023" starttimestamp="1700582044267" timestamp="2875371" timestamp2="2875371">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3270" _type="PasteCommand" date="Tue Nov 21 11:41:59 EST 2023" starttimestamp="1700582044267" timestamp="2875515" />
  <Command __id="3271" _type="SelectTextCommand" caretOffset="1189" date="Tue Nov 21 11:42:01 EST 2023" end="1189" start="1188" starttimestamp="1700582044267" timestamp="2877093" />
  <Command __id="3272" _type="SelectTextCommand" caretOffset="1189" date="Tue Nov 21 11:42:01 EST 2023" end="1189" start="1188" starttimestamp="1700582044267" timestamp="2877094" />
  <Command __id="3274" _type="InsertStringCommand" date="Tue Nov 21 11:42:01 EST 2023" starttimestamp="1700582044267" timestamp="2877531" timestamp2="2877531">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3275" _type="InsertStringCommand" date="Tue Nov 21 11:42:01 EST 2023" starttimestamp="1700582044267" timestamp="2877531" timestamp2="2877531">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3277" _type="InsertStringCommand" date="Tue Nov 21 11:42:01 EST 2023" starttimestamp="1700582044267" timestamp="2877566" timestamp2="2877566">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3278" _type="InsertStringCommand" date="Tue Nov 21 11:42:01 EST 2023" starttimestamp="1700582044267" timestamp="2877566" timestamp2="2877566">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3280" _type="InsertStringCommand" date="Tue Nov 21 11:42:01 EST 2023" starttimestamp="1700582044267" timestamp="2877705" timestamp2="2877705">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3281" _type="InsertStringCommand" date="Tue Nov 21 11:42:01 EST 2023" starttimestamp="1700582044267" timestamp="2877705" timestamp2="2877705">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3282" _type="MoveCaretCommand" caretOffset="1285" date="Tue Nov 21 11:42:02 EST 2023" docOffset="1346" starttimestamp="1700582044267" timestamp="2878545" />
  <Command __id="3283" _type="MoveCaretCommand" caretOffset="1285" date="Tue Nov 21 11:42:02 EST 2023" docOffset="1346" starttimestamp="1700582044267" timestamp="2878545" />
  <Command __id="3285" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:42:03 EST 2023" starttimestamp="1700582044267" timestamp="2879073" />
  <Command __id="3286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:42:03 EST 2023" starttimestamp="1700582044267" timestamp="2879073" />
  <Command __id="3288" _type="InsertStringCommand" date="Tue Nov 21 11:42:03 EST 2023" starttimestamp="1700582044267" timestamp="2879310" timestamp2="2879310">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3289" _type="InsertStringCommand" date="Tue Nov 21 11:42:03 EST 2023" starttimestamp="1700582044267" timestamp="2879310" timestamp2="2879310">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3291" _type="InsertStringCommand" date="Tue Nov 21 11:42:03 EST 2023" starttimestamp="1700582044267" timestamp="2879388" timestamp2="2879388">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3292" _type="InsertStringCommand" date="Tue Nov 21 11:42:03 EST 2023" starttimestamp="1700582044267" timestamp="2879388" timestamp2="2879388">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3293" _type="MoveCaretCommand" caretOffset="1380" date="Tue Nov 21 11:42:04 EST 2023" docOffset="1441" starttimestamp="1700582044267" timestamp="2880118" />
  <Command __id="3294" _type="MoveCaretCommand" caretOffset="1380" date="Tue Nov 21 11:42:04 EST 2023" docOffset="1441" starttimestamp="1700582044267" timestamp="2880118" />
  <Command __id="3296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:42:04 EST 2023" starttimestamp="1700582044267" timestamp="2880723" />
  <Command __id="3297" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:42:04 EST 2023" starttimestamp="1700582044267" timestamp="2880723" />
  <Command __id="3299" _type="InsertStringCommand" date="Tue Nov 21 11:42:05 EST 2023" starttimestamp="1700582044267" timestamp="2880984" timestamp2="2880984">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3300" _type="InsertStringCommand" date="Tue Nov 21 11:42:05 EST 2023" starttimestamp="1700582044267" timestamp="2880984" timestamp2="2880984">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3302" _type="InsertStringCommand" date="Tue Nov 21 11:42:05 EST 2023" starttimestamp="1700582044267" timestamp="2881047" timestamp2="2881047">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3303" _type="InsertStringCommand" date="Tue Nov 21 11:42:05 EST 2023" starttimestamp="1700582044267" timestamp="2881047" timestamp2="2881047">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3305" _type="InsertStringCommand" date="Tue Nov 21 11:42:05 EST 2023" starttimestamp="1700582044267" timestamp="2881122" timestamp2="2881122">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3306" _type="InsertStringCommand" date="Tue Nov 21 11:42:05 EST 2023" starttimestamp="1700582044267" timestamp="2881122" timestamp2="2881122">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3307" _type="SelectTextCommand" caretOffset="1198" date="Tue Nov 21 11:42:07 EST 2023" end="1205" start="1198" starttimestamp="1700582044267" timestamp="2882860" />
  <Command __id="3308" _type="SelectTextCommand" caretOffset="1198" date="Tue Nov 21 11:42:07 EST 2023" end="1205" start="1198" starttimestamp="1700582044267" timestamp="2882860" />
  <Command __id="3310" _type="InsertStringCommand" date="Tue Nov 21 11:42:07 EST 2023" starttimestamp="1700582044267" timestamp="2883134" timestamp2="2883134">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3311" _type="InsertStringCommand" date="Tue Nov 21 11:42:07 EST 2023" starttimestamp="1700582044267" timestamp="2883134" timestamp2="2883134">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3313" _type="InsertStringCommand" date="Tue Nov 21 11:42:07 EST 2023" starttimestamp="1700582044267" timestamp="2883386" timestamp2="2883386">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3314" _type="InsertStringCommand" date="Tue Nov 21 11:42:07 EST 2023" starttimestamp="1700582044267" timestamp="2883386" timestamp2="2883386">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3316" _type="InsertStringCommand" date="Tue Nov 21 11:42:07 EST 2023" starttimestamp="1700582044267" timestamp="2883538" timestamp2="2883538">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3317" _type="InsertStringCommand" date="Tue Nov 21 11:42:07 EST 2023" starttimestamp="1700582044267" timestamp="2883538" timestamp2="2883538">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3250" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:41:51 EST 2023" docASTNodeCount="148" docActiveCodeLength="1310" docExpressionCount="101" docLength="1310" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2867016">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {			}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3259" _type="Replace" date="Tue Nov 21 11:41:58 EST 2023" docASTNodeCount="158" docActiveCodeLength="1401" docExpressionCount="109" docLength="1401" endLine="23" insertionLength="93" int_docASTNodeCount="148" int_docActiveCodeLength="1308" int_docExpressionCount="101" int_docLength="1308" length="2" offset="1184" startLine="23" starttimestamp="1700582044267" timestamp="2874372">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3261" _type="Insert" date="Tue Nov 21 11:41:59 EST 2023" docASTNodeCount="158" docActiveCodeLength="1404" docExpressionCount="109" docLength="1404" length="3" offset="1277" starttimestamp="1700582044267" timestamp="2875116">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3264" _type="Replace" date="Tue Nov 21 11:41:59 EST 2023" docASTNodeCount="168" docActiveCodeLength="1495" docExpressionCount="117" docLength="1495" endLine="24" insertionLength="93" int_docASTNodeCount="158" int_docActiveCodeLength="1402" int_docExpressionCount="109" int_docLength="1402" length="2" offset="1278" startLine="24" starttimestamp="1700582044267" timestamp="2875252">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3266" _type="Insert" date="Tue Nov 21 11:41:59 EST 2023" docASTNodeCount="168" docActiveCodeLength="1498" docExpressionCount="117" docLength="1498" length="3" offset="1371" starttimestamp="1700582044267" timestamp="2875368">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3269" _type="Replace" date="Tue Nov 21 11:41:59 EST 2023" docASTNodeCount="178" docActiveCodeLength="1589" docExpressionCount="125" docLength="1589" endLine="25" insertionLength="93" int_docASTNodeCount="168" int_docActiveCodeLength="1496" int_docExpressionCount="117" int_docLength="1496" length="2" offset="1372" startLine="25" starttimestamp="1700582044267" timestamp="2875510">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3273" _type="Replace" date="Tue Nov 21 11:42:01 EST 2023" docASTNodeCount="178" docActiveCodeLength="1589" docExpressionCount="125" docLength="1589" endLine="23" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1588" int_docExpressionCount="125" int_docLength="1588" length="1" offset="1249" startLine="23" starttimestamp="1700582044267" timestamp="2877527">
    <deletedText><![CDATA[>]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3276" _type="Insert" date="Tue Nov 21 11:42:01 EST 2023" docASTNodeCount="178" docActiveCodeLength="1591" docExpressionCount="125" docLength="1591" length="2" offset="1250" repeat="2" starttimestamp="1700582044267" timestamp="2877563" timestamp2="2877703">
    <text><![CDATA[nd]]></text>
  </DocumentChange>
  <DocumentChange __id="3284" _type="Delete" date="Tue Nov 21 11:42:03 EST 2023" docASTNodeCount="178" docActiveCodeLength="1590" docExpressionCount="125" docLength="1590" endLine="24" length="1" offset="1345" startLine="24" starttimestamp="1700582044267" timestamp="2879069">
    <text><![CDATA[>]]></text>
  </DocumentChange>
  <DocumentChange __id="3287" _type="Insert" date="Tue Nov 21 11:42:03 EST 2023" docASTNodeCount="178" docActiveCodeLength="1592" docExpressionCount="125" docLength="1592" length="2" offset="1345" repeat="2" starttimestamp="1700582044267" timestamp="2879308" timestamp2="2879385">
    <text><![CDATA[or]]></text>
  </DocumentChange>
  <DocumentChange __id="3295" _type="Delete" date="Tue Nov 21 11:42:04 EST 2023" docASTNodeCount="178" docActiveCodeLength="1591" docExpressionCount="125" docLength="1591" endLine="25" length="1" offset="1440" startLine="25" starttimestamp="1700582044267" timestamp="2880720">
    <text><![CDATA[>]]></text>
  </DocumentChange>
  <DocumentChange __id="3298" _type="Insert" date="Tue Nov 21 11:42:05 EST 2023" docASTNodeCount="178" docActiveCodeLength="1594" docExpressionCount="125" docLength="1594" length="3" offset="1440" repeat="3" starttimestamp="1700582044267" timestamp="2880983" timestamp2="2881120">
    <text><![CDATA[not]]></text>
  </DocumentChange>
  <DocumentChange __id="3309" _type="Replace" date="Tue Nov 21 11:42:07 EST 2023" docASTNodeCount="178" docActiveCodeLength="1588" docExpressionCount="125" docLength="1588" endLine="23" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1587" int_docExpressionCount="125" int_docLength="1587" length="7" offset="1259" startLine="23" starttimestamp="1700582044267" timestamp="2883129">
    <deletedText><![CDATA[Greater]]></deletedText>
    <insertedText><![CDATA[A]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3312" _type="Insert" date="Tue Nov 21 11:42:07 EST 2023" docASTNodeCount="178" docActiveCodeLength="1590" docExpressionCount="125" docLength="1590" length="2" offset="1260" repeat="2" starttimestamp="1700582044267" timestamp="2883383" timestamp2="2883535">
    <text><![CDATA[nd]]></text>
  </DocumentChange>
  <DocumentChange __id="3320" _type="Replace" date="Tue Nov 21 11:42:09 EST 2023" docASTNodeCount="178" docActiveCodeLength="1584" docExpressionCount="125" docLength="1584" endLine="24" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1583" int_docExpressionCount="125" int_docLength="1583" length="7" offset="1350" startLine="24" starttimestamp="1700582044267" timestamp="2885187">
    <deletedText><![CDATA[Greater]]></deletedText>
    <insertedText><![CDATA[O]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3323" _type="Insert" date="Tue Nov 21 11:42:09 EST 2023" docASTNodeCount="178" docActiveCodeLength="1585" docExpressionCount="125" docLength="1585" length="1" offset="1351" starttimestamp="1700582044267" timestamp="2885216">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <Command __id="3318" _type="SelectTextCommand" caretOffset="1289" date="Tue Nov 21 11:42:08 EST 2023" end="1296" start="1289" starttimestamp="1700582044267" timestamp="2884621" />
  <Command __id="3319" _type="SelectTextCommand" caretOffset="1289" date="Tue Nov 21 11:42:08 EST 2023" end="1296" start="1289" starttimestamp="1700582044267" timestamp="2884622" />
  <Command __id="3321" _type="InsertStringCommand" date="Tue Nov 21 11:42:09 EST 2023" starttimestamp="1700582044267" timestamp="2885191" timestamp2="2885191">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3322" _type="InsertStringCommand" date="Tue Nov 21 11:42:09 EST 2023" starttimestamp="1700582044267" timestamp="2885191" timestamp2="2885191">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3324" _type="InsertStringCommand" date="Tue Nov 21 11:42:09 EST 2023" starttimestamp="1700582044267" timestamp="2885218" timestamp2="2885218">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3325" _type="InsertStringCommand" date="Tue Nov 21 11:42:09 EST 2023" starttimestamp="1700582044267" timestamp="2885218" timestamp2="2885218">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:42:10 EST 2023" starttimestamp="1700582044267" timestamp="2886719" />
  <Command __id="3328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 11:42:10 EST 2023" starttimestamp="1700582044267" timestamp="2886719" />
  <Command __id="3330" _type="InsertStringCommand" date="Tue Nov 21 11:42:11 EST 2023" starttimestamp="1700582044267" timestamp="2886833" timestamp2="2886833">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3331" _type="InsertStringCommand" date="Tue Nov 21 11:42:11 EST 2023" starttimestamp="1700582044267" timestamp="2886833" timestamp2="2886833">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3332" _type="SelectTextCommand" caretOffset="1380" date="Tue Nov 21 11:42:12 EST 2023" end="1387" start="1380" starttimestamp="1700582044267" timestamp="2888497" />
  <Command __id="3333" _type="SelectTextCommand" caretOffset="1380" date="Tue Nov 21 11:42:12 EST 2023" end="1387" start="1380" starttimestamp="1700582044267" timestamp="2888497" />
  <Command __id="3335" _type="InsertStringCommand" date="Tue Nov 21 11:42:13 EST 2023" starttimestamp="1700582044267" timestamp="2889061" timestamp2="2889061">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3336" _type="InsertStringCommand" date="Tue Nov 21 11:42:13 EST 2023" starttimestamp="1700582044267" timestamp="2889061" timestamp2="2889061">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3338" _type="InsertStringCommand" date="Tue Nov 21 11:42:13 EST 2023" starttimestamp="1700582044267" timestamp="2889218" timestamp2="2889218">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3339" _type="InsertStringCommand" date="Tue Nov 21 11:42:13 EST 2023" starttimestamp="1700582044267" timestamp="2889218" timestamp2="2889218">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3341" _type="InsertStringCommand" date="Tue Nov 21 11:42:13 EST 2023" starttimestamp="1700582044267" timestamp="2889312" timestamp2="2889312">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3342" _type="InsertStringCommand" date="Tue Nov 21 11:42:13 EST 2023" starttimestamp="1700582044267" timestamp="2889312" timestamp2="2889312">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3343" _type="MoveCaretCommand" caretOffset="1392" date="Tue Nov 21 11:42:14 EST 2023" docOffset="1453" starttimestamp="1700582044267" timestamp="2889926" />
  <Command __id="3344" _type="MoveCaretCommand" caretOffset="1392" date="Tue Nov 21 11:42:14 EST 2023" docOffset="1453" starttimestamp="1700582044267" timestamp="2889926" />
  <Command __id="3345" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:42:15 EST 2023" starttimestamp="1700582044267" timestamp="2890960" />
  <Command __id="3346" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:42:15 EST 2023" starttimestamp="1700582044267" timestamp="2891060" />
  <Command __id="3347" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:42:15 EST 2023" starttimestamp="1700582044267" timestamp="2891069" />
  <Command __id="3348" _type="MoveCaretCommand" caretOffset="1122" date="Tue Nov 21 11:42:16 EST 2023" docOffset="1183" starttimestamp="1700582044267" timestamp="2891877" />
  <Command __id="3349" _type="MoveCaretCommand" caretOffset="1122" date="Tue Nov 21 11:42:16 EST 2023" docOffset="1183" starttimestamp="1700582044267" timestamp="2891877" />
  <Command __id="3350" _type="MoveCaretCommand" caretOffset="1205" date="Tue Nov 21 11:42:16 EST 2023" docOffset="1266" starttimestamp="1700582044267" timestamp="2892176" />
  <Command __id="3351" _type="MoveCaretCommand" caretOffset="1205" date="Tue Nov 21 11:42:16 EST 2023" docOffset="1266" starttimestamp="1700582044267" timestamp="2892176" />
  <Command __id="3352" _type="SelectTextCommand" caretOffset="1210" date="Tue Nov 21 11:42:16 EST 2023" end="1210" start="1198" starttimestamp="1700582044267" timestamp="2892298" />
  <Command __id="3353" _type="SelectTextCommand" caretOffset="1210" date="Tue Nov 21 11:42:16 EST 2023" end="1210" start="1198" starttimestamp="1700582044267" timestamp="2892298" />
  <Command __id="3354" _type="CopyCommand" date="Tue Nov 21 11:42:16 EST 2023" starttimestamp="1700582044267" timestamp="2892398" />
  <Command __id="3356" _type="MoveCaretCommand" caretOffset="929" date="Tue Nov 21 11:42:17 EST 2023" docOffset="1058" starttimestamp="1700582044267" timestamp="2893048" />
  <Command __id="3357" _type="MoveCaretCommand" caretOffset="217" date="Tue Nov 21 11:42:23 EST 2023" docOffset="346" starttimestamp="1700582044267" timestamp="2899387" />
  <Command __id="3358" _type="SelectTextCommand" caretOffset="219" date="Tue Nov 21 11:42:23 EST 2023" end="219" start="215" starttimestamp="1700582044267" timestamp="2899524" />
  <Command __id="3360" _type="PasteCommand" date="Tue Nov 21 11:42:23 EST 2023" starttimestamp="1700582044267" timestamp="2899660" />
  <Command __id="3362" _type="InsertStringCommand" date="Tue Nov 21 11:42:24 EST 2023" starttimestamp="1700582044267" timestamp="2900480" timestamp2="2900480">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3363" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:42:24 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2900492" />
  <Command __id="3369" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:42:26 EST 2023" starttimestamp="1700582044267" timestamp="2902315" />
  <Command __id="3370" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:42:26 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2902344" />
  <Command __id="3371" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:42:26 EST 2023" starttimestamp="1700582044267" timestamp="2902414" />
  <Command __id="3372" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:42:26 EST 2023" starttimestamp="1700582044267" timestamp="2902423" />
  <Command __id="3374" _type="SelectTextCommand" caretOffset="1210" date="Tue Nov 21 11:42:26 EST 2023" end="1210" start="1198" starttimestamp="1700582044267" timestamp="2902619" />
  <Command __id="3375" _type="MoveCaretCommand" caretOffset="1293" date="Tue Nov 21 11:42:27 EST 2023" docOffset="1354" starttimestamp="1700582044267" timestamp="2903236" />
  <Command __id="3376" _type="MoveCaretCommand" caretOffset="1293" date="Tue Nov 21 11:42:27 EST 2023" docOffset="1354" starttimestamp="1700582044267" timestamp="2903236" />
  <Command __id="3377" _type="SelectTextCommand" caretOffset="1300" date="Tue Nov 21 11:42:27 EST 2023" end="1300" start="1289" starttimestamp="1700582044267" timestamp="2903358" />
  <Command __id="3378" _type="SelectTextCommand" caretOffset="1300" date="Tue Nov 21 11:42:27 EST 2023" end="1300" start="1289" starttimestamp="1700582044267" timestamp="2903358" />
  <Command __id="3379" _type="CopyCommand" date="Tue Nov 21 11:42:27 EST 2023" starttimestamp="1700582044267" timestamp="2903449" />
  <Command __id="3381" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 11:42:28 EST 2023" docOffset="362" starttimestamp="1700582044267" timestamp="2904177" />
  <Command __id="3382" _type="MoveCaretCommand" caretOffset="1841" date="Tue Nov 21 11:42:32 EST 2023" docOffset="1970" starttimestamp="1700582044267" timestamp="2908677" />
  <Command __id="3383" _type="SelectTextCommand" caretOffset="1842" date="Tue Nov 21 11:42:33 EST 2023" end="1842" start="1838" starttimestamp="1700582044267" timestamp="2908813" />
  <Command __id="3385" _type="PasteCommand" date="Tue Nov 21 11:42:33 EST 2023" starttimestamp="1700582044267" timestamp="2909206" />
  <Command __id="3387" _type="InsertStringCommand" date="Tue Nov 21 11:42:34 EST 2023" starttimestamp="1700582044267" timestamp="2909953" timestamp2="2909953">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3388" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:42:34 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="2909959" />
  <Command __id="3389" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:42:35 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="2910810" />
  <Command __id="3391" _type="InsertStringCommand" date="Tue Nov 21 11:42:35 EST 2023" starttimestamp="1700582044267" timestamp="2910816" timestamp2="2910816">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3392" _type="MoveCaretCommand" caretOffset="1718" date="Tue Nov 21 11:42:36 EST 2023" docOffset="1847" starttimestamp="1700582044267" timestamp="2911747" />
  <Command __id="3393" _type="SelectTextCommand" caretOffset="1721" date="Tue Nov 21 11:42:36 EST 2023" end="1721" start="1717" starttimestamp="1700582044267" timestamp="2911885" />
  <Command __id="3395" _type="PasteCommand" date="Tue Nov 21 11:42:36 EST 2023" starttimestamp="1700582044267" timestamp="2912156" />
  <Command __id="3396" _type="SelectTextCommand" caretOffset="1717" date="Tue Nov 21 11:42:37 EST 2023" end="1719" start="1717" starttimestamp="1700582044267" timestamp="2913071" />
  <Command __id="3398" _type="InsertStringCommand" date="Tue Nov 21 11:42:38 EST 2023" starttimestamp="1700582044267" timestamp="2913842" timestamp2="2913842">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3400" _type="InsertStringCommand" date="Tue Nov 21 11:42:38 EST 2023" starttimestamp="1700582044267" timestamp="2913977" timestamp2="2913977">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3402" _type="InsertStringCommand" date="Tue Nov 21 11:42:38 EST 2023" starttimestamp="1700582044267" timestamp="2914050" timestamp2="2914050">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="3326" _type="Delete" date="Tue Nov 21 11:42:10 EST 2023" docASTNodeCount="178" docActiveCodeLength="1584" docExpressionCount="125" docLength="1584" endLine="24" length="1" offset="1351" startLine="24" starttimestamp="1700582044267" timestamp="2886715">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <DocumentChange __id="3329" _type="Insert" date="Tue Nov 21 11:42:11 EST 2023" docASTNodeCount="178" docActiveCodeLength="1585" docExpressionCount="125" docLength="1585" length="1" offset="1351" starttimestamp="1700582044267" timestamp="2886830">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="3334" _type="Replace" date="Tue Nov 21 11:42:13 EST 2023" docASTNodeCount="178" docActiveCodeLength="1579" docExpressionCount="125" docLength="1579" endLine="25" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1578" int_docExpressionCount="125" int_docLength="1578" length="7" offset="1441" startLine="25" starttimestamp="1700582044267" timestamp="2889056">
    <deletedText><![CDATA[Greater]]></deletedText>
    <insertedText><![CDATA[N]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3337" _type="Insert" date="Tue Nov 21 11:42:13 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="2" offset="1442" repeat="2" starttimestamp="1700582044267" timestamp="2889216" timestamp2="2889309">
    <text><![CDATA[ot]]></text>
  </DocumentChange>
  <Command __id="3355" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:42:17 EST 2023" docASTNodeCount="268" docActiveCodeLength="1755" docExpressionCount="129" docLength="2265" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2893000">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3359" _type="Replace" date="Tue Nov 21 11:42:23 EST 2023" docASTNodeCount="268" docActiveCodeLength="1763" docExpressionCount="129" docLength="2273" endLine="12" insertionLength="12" int_docASTNodeCount="267" int_docActiveCodeLength="1751" int_docExpressionCount="128" int_docLength="2261" length="4" offset="344" startLine="12" starttimestamp="1700582044267" timestamp="2899657">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[AndEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3361" _type="Insert" date="Tue Nov 21 11:42:24 EST 2023" docASTNodeCount="270" docActiveCodeLength="1769" docExpressionCount="130" docLength="2279" length="6" offset="356" repeat="6" starttimestamp="1700582044267" timestamp="2900477" timestamp2="2900996">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="3373" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:42:26 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2902571">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		"), Diff(INSERT,"BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());"), Diff(EQUAL,"	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());
	}
	
	public static void registerLogic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
		registerArithmetic();
		registerLogic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3380" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:42:28 EST 2023" docASTNodeCount="270" docActiveCodeLength="1769" docExpressionCount="130" docLength="2279" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2904123">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"AndEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return AndEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3384" _type="Replace" date="Tue Nov 21 11:42:33 EST 2023" docASTNodeCount="270" docActiveCodeLength="1776" docExpressionCount="130" docLength="2286" endLine="84" insertionLength="11" int_docASTNodeCount="269" int_docActiveCodeLength="1765" int_docExpressionCount="129" int_docLength="2275" length="4" offset="1967" startLine="84" starttimestamp="1700582044267" timestamp="2909199">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[OrEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3386" _type="Insert" date="Tue Nov 21 11:42:34 EST 2023" docASTNodeCount="272" docActiveCodeLength="1782" docExpressionCount="131" docLength="2292" length="6" offset="1978" repeat="2" starttimestamp="1700582044267" timestamp="2909951" timestamp2="2910814">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <DocumentChange __id="3394" _type="Replace" date="Tue Nov 21 11:42:36 EST 2023" docASTNodeCount="272" docActiveCodeLength="1789" docExpressionCount="131" docLength="2299" endLine="78" insertionLength="11" int_docASTNodeCount="271" int_docActiveCodeLength="1778" int_docExpressionCount="130" int_docLength="2288" length="4" offset="1846" startLine="78" starttimestamp="1700582044267" timestamp="2912152">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[OrEvaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3397" _type="Replace" date="Tue Nov 21 11:42:38 EST 2023" docASTNodeCount="272" docActiveCodeLength="1788" docExpressionCount="131" docLength="2298" endLine="78" insertionLength="1" int_docASTNodeCount="272" int_docActiveCodeLength="1787" int_docExpressionCount="131" int_docLength="2297" length="2" offset="1846" startLine="78" starttimestamp="1700582044267" timestamp="2913837">
    <deletedText><![CDATA[Or]]></deletedText>
    <insertedText><![CDATA[N]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3399" _type="Insert" date="Tue Nov 21 11:42:38 EST 2023" docASTNodeCount="272" docActiveCodeLength="1790" docExpressionCount="131" docLength="2300" length="2" offset="1847" repeat="2" starttimestamp="1700582044267" timestamp="2913974" timestamp2="2914047">
    <text><![CDATA[ot]]></text>
  </DocumentChange>
  <DocumentChange __id="3404" _type="Insert" date="Tue Nov 21 11:42:40 EST 2023" docASTNodeCount="274" docActiveCodeLength="1797" docExpressionCount="133" docLength="2307" length="7" offset="1858" repeat="7" starttimestamp="1700582044267" timestamp="2916177" timestamp2="2916746">
    <text><![CDATA[.clkass]]></text>
  </DocumentChange>
  <DocumentChange __id="3417" _type="Delete" date="Tue Nov 21 11:42:41 EST 2023" docASTNodeCount="274" docActiveCodeLength="1793" docExpressionCount="133" docLength="2303" endLine="78" length="4" offset="1861" repeat="4" startLine="78" starttimestamp="1700582044267" timestamp="2917285" timestamp2="2917659">
    <text><![CDATA[kass]]></text>
  </DocumentChange>
  <DocumentChange __id="3425" _type="Insert" date="Tue Nov 21 11:42:42 EST 2023" docASTNodeCount="274" docActiveCodeLength="1796" docExpressionCount="132" docLength="2306" length="3" offset="1861" repeat="3" starttimestamp="1700582044267" timestamp="2917738" timestamp2="2917950">
    <text><![CDATA[ass]]></text>
  </DocumentChange>
  <Command __id="3435" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:42:44 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2920728">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3443" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:42:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2923510" type="Run" />
  <Command __id="3444" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:42:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2923510" type="Run" />
  <Command __id="3445" _type="ShellCommand" date="Tue Nov 21 11:42:48 EST 2023" starttimestamp="1700582044267" timestamp="2923821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3446" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926419" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"34¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL¶¶Test execution time (ms):36¶Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LessTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GorETestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LorETestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3447" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926421" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3448" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926427" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3449" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926427" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3450" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926430" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3451" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926445" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3452" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926446" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3453" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926447" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4"), Diff(INSERT,"(+ 1 2)"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3454" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926447" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"((+ "), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="3455" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926447" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3456" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926448" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3457" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926448" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3458" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926448" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3459" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926448" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3460" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926449" type="ConsoleOutput">
    <outputString><![CDATA[T
T
NIL
NIL
T
T
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"T¶T¶NIL¶NIL¶T¶T¶NIL¶NIL¶"), Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3461" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926450" type="ConsoleOutput">
    <outputString><![CDATA[NIL
1
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶T¶NIL¶NIL¶T¶T¶NIL¶"), Diff(EQUAL,"NIL"), Diff(INSERT,"¶1"), Diff(EQUAL,"¶NIL¶")]]]></diff>
  </Command>
  <Command __id="3462" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926450" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶1¶NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3463" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926450" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3464" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926450" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶")]]]></diff>
  </Command>
  <Command __id="3465" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926453" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶T"), Diff(INSERT,"Test execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3466" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926454" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3467" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926454" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3468" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926457" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"33"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3469" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926458" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:GreaterTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3470" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926458" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3471" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926460" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3472" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926460" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3473" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926462" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3474" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926462" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3475" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926464" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:GorETestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3476" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926465" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:GorETested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="3477" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926466" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3478" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926467" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3479" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926468" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3480" _type="ConsoleOutput" date="Tue Nov 21 11:42:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2926471" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3481" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930836" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:AndTestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedTwoResults"), Diff(INSERT,"execution time (ms):1¶Test Result:AndTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="3482" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930837" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test Result:AndTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3483" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930837" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of AND
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):3"), Diff(INSERT,"ng in test file two results of AND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3484" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930840" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:NotTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedTwoResults"), Diff(INSERT,"execution time (ms):1¶Test Result:NotTested"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Expecting in test file two results of AND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3485" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930842" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:NotTestedChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="3486" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930842" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of NOT
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of NOT"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3487" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930843" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of NOT"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3488" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930846" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:OrTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3489" _type="ConsoleOutput" date="Tue Nov 21 11:42:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2930847" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:OrTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3490" _type="ShellCommand" date="Tue Nov 21 11:43:03 EST 2023" starttimestamp="1700582044267" timestamp="2938963" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3491" _type="ShellCommand" date="Tue Nov 21 11:43:03 EST 2023" starttimestamp="1700582044267" timestamp="2939155" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3492" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:43:03 EST 2023" starttimestamp="1700582044267" timestamp="2939430" />
  <Command __id="3493" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:43:03 EST 2023" starttimestamp="1700582044267" timestamp="2939438" />
  <Command __id="3497" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:43:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2955943" type="Run" />
  <Command __id="3498" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:43:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2955943" type="Run" />
  <Command __id="3499" _type="ShellCommand" date="Tue Nov 21 11:43:20 EST 2023" starttimestamp="1700582044267" timestamp="2956252" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3500" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962002" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3501" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962003" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3502" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962008" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3503" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962009" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3504" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962010" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3505" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962010" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3506" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962028" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3507" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962029" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3508" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962029" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3509" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962030" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3510" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962030" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3511" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962030" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3512" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962031" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3513" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962031" type="ConsoleOutput">
    <outputString><![CDATA[T
T
NIL
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"T¶T¶"), Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3514" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962031" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶T¶"), Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3515" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962031" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3516" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962031" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="3517" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962031" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3518" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962032" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(DELETE,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3519" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962032" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3520" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962032" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3521" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962034" type="ConsoleOutput">
    <outputString><![CDATA[NIL
2
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL¶2¶NIL¶NIL¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3522" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962038" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶2¶NIL¶NIL¶T"), Diff(INSERT,"Test execution time (ms):34"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3523" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962038" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):34"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3524" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962039" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):36
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):36"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3525" _type="ConsoleOutput" date="Tue Nov 21 11:43:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="2962041" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of AND
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):36"), Diff(INSERT,"ng in test file two results of AND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3526" _type="ShellCommand" date="Tue Nov 21 11:43:34 EST 2023" starttimestamp="1700582044267" timestamp="2969906" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3527" _type="ShellCommand" date="Tue Nov 21 11:43:34 EST 2023" starttimestamp="1700582044267" timestamp="2970437" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3528" _type="ShellCommand" date="Tue Nov 21 11:43:37 EST 2023" starttimestamp="1700582044267" timestamp="2973097" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3529" _type="ShellCommand" date="Tue Nov 21 11:43:37 EST 2023" starttimestamp="1700582044267" timestamp="2973244" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3530" _type="ShellCommand" date="Tue Nov 21 11:43:40 EST 2023" starttimestamp="1700582044267" timestamp="2976102" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3531" _type="ShellCommand" date="Tue Nov 21 11:43:45 EST 2023" starttimestamp="1700582044267" timestamp="2980846" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3437" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:42:46 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2921800">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3532" _type="ShellCommand" date="Tue Nov 21 11:43:46 EST 2023" starttimestamp="1700582044267" timestamp="2982294" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3534" _type="SelectTextCommand" caretOffset="107" date="Tue Nov 21 11:43:48 EST 2023" end="572" start="107" starttimestamp="1700582044267" timestamp="2984470" />
  <Command __id="3535" _type="MoveCaretCommand" caretOffset="502" date="Tue Nov 21 11:43:49 EST 2023" docOffset="671" starttimestamp="1700582044267" timestamp="2985192" />
  <Command __id="3536" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:43:52 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2988645" />
  <Command __id="3537" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:53 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2989017" />
  <Command __id="3538" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:43:53 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2989219" />
  <Command __id="3539" _type="MoveCaretCommand" caretOffset="383" date="Tue Nov 21 11:43:54 EST 2023" docOffset="552" starttimestamp="1700582044267" timestamp="2989859" />
  <Command __id="3540" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:43:54 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2990071" />
  <Command __id="3541" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:54 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2990283" />
  <Command __id="3542" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:43:55 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2991024" />
  <Command __id="3543" _type="MoveCaretCommand" caretOffset="442" date="Tue Nov 21 11:43:55 EST 2023" docOffset="611" starttimestamp="1700582044267" timestamp="2991312" />
  <Command __id="3544" _type="SelectTextCommand" caretOffset="437" date="Tue Nov 21 11:43:56 EST 2023" end="442" start="437" starttimestamp="1700582044267" timestamp="2991995" />
  <Command __id="3545" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:56 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2992246" />
  <Command __id="3546" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:43:56 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2992666" />
  <Command __id="3547" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:57 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2992974" />
  <Command __id="3548" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:43:57 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2993267" />
  <Command __id="3549" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:58 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2994351" />
  <Command __id="3550" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:43:58 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2994618" />
  <Command __id="3551" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:59 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2994893" />
  <Command __id="3552" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:43:59 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2995150" />
  <Command __id="3553" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:43:59 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2995643" />
  <Command __id="3554" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:00 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2995864" />
  <Command __id="3555" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:00 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2996128" />
  <Command __id="3556" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:00 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2996373" />
  <Command __id="3557" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:00 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2996668" />
  <Command __id="3558" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:01 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2996869" />
  <Command __id="3559" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:01 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2997127" />
  <Command __id="3560" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:01 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2997361" />
  <Command __id="3561" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:02 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2997784" />
  <Command __id="3562" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:02 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2998027" />
  <Command __id="3563" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:02 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2998447" />
  <Command __id="3564" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:02 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2998719" />
  <Command __id="3565" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:03 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="2998984" />
  <Command __id="3566" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:03 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2999440" />
  <Command __id="3567" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:03 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="2999709" />
  <Command __id="3568" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:04 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="2999949" />
  <Command __id="3569" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:04 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3000136" />
  <Command __id="3570" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:04 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3000600" />
  <Command __id="3571" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:05 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="3000809" />
  <Command __id="3572" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:05 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3001070" />
  <Command __id="3573" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:05 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3001349" />
  <Command __id="3574" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:05 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3001393" />
  <Command __id="3575" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:06 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3001914" />
  <Command __id="3576" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:06 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="3002107" />
  <Command __id="3577" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:06 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3002354" />
  <Command __id="3578" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:06 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3002523" />
  <Command __id="3579" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:07 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3002850" />
  <Command __id="3580" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:07 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="3003121" />
  <Command __id="3581" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:07 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3003357" />
  <Command __id="3582" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:07 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3003545" />
  <Command __id="3583" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:08 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3004010" />
  <Command __id="3584" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:09 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3004880" />
  <Command __id="3585" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 11:44:09 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="3005087" />
  <Command __id="3586" _type="MoveCaretCommand" caretOffset="420" date="Tue Nov 21 11:44:09 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="3005302" />
  <Command __id="3587" _type="MoveCaretCommand" caretOffset="437" date="Tue Nov 21 11:44:09 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3005491" />
  <Command __id="3588" _type="MoveCaretCommand" caretOffset="497" date="Tue Nov 21 11:44:10 EST 2023" docOffset="666" starttimestamp="1700582044267" timestamp="3006149" />
  <Command __id="3589" _type="MoveCaretCommand" caretOffset="463" date="Tue Nov 21 11:44:10 EST 2023" docOffset="632" starttimestamp="1700582044267" timestamp="3006686" />
  <Command __id="3590" _type="ShellCommand" date="Tue Nov 21 11:44:12 EST 2023" starttimestamp="1700582044267" timestamp="3007815" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3591" _type="ShellCommand" date="Tue Nov 21 11:44:12 EST 2023" starttimestamp="1700582044267" timestamp="3008688" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3592" _type="ShellCommand" date="Tue Nov 21 11:44:23 EST 2023" starttimestamp="1700582044267" timestamp="3019006" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3593" _type="ShellCommand" date="Tue Nov 21 11:44:23 EST 2023" starttimestamp="1700582044267" timestamp="3019368" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3594" _type="MoveCaretCommand" caretOffset="548" date="Tue Nov 21 11:44:24 EST 2023" docOffset="717" starttimestamp="1700582044267" timestamp="3020435" />
  <Command __id="3596" _type="InsertStringCommand" date="Tue Nov 21 11:44:25 EST 2023" starttimestamp="1700582044267" timestamp="3021324" timestamp2="3021324">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3597" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:44:25 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="3021341" />
  <Command __id="3602" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:44:27 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="3022795" />
  <Command __id="3604" _type="InsertStringCommand" date="Tue Nov 21 11:44:27 EST 2023" starttimestamp="1700582044267" timestamp="3022802" timestamp2="3022802">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3605" _type="MoveCaretCommand" caretOffset="442" date="Tue Nov 21 11:44:27 EST 2023" docOffset="611" starttimestamp="1700582044267" timestamp="3023519" />
  <Command __id="3606" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:44:27 EST 2023" starttimestamp="1700582044267" timestamp="3023730" />
  <Command __id="3607" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:44:28 EST 2023" starttimestamp="1700582044267" timestamp="3023833" />
  <Command __id="3608" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:44:28 EST 2023" starttimestamp="1700582044267" timestamp="3023841" />
  <Command __id="3609" _type="ShellCommand" date="Tue Nov 21 11:44:28 EST 2023" starttimestamp="1700582044267" timestamp="3024503" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3610" _type="ShellCommand" date="Tue Nov 21 11:44:29 EST 2023" starttimestamp="1700582044267" timestamp="3024781" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3611" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:29 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3024781" type="Run" />
  <Command __id="3612" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:29 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3024781" type="Run" />
  <Command __id="3613" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:29 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3025629" type="Run" />
  <Command __id="3614" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:29 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3025629" type="Run" />
  <Command __id="3615" _type="ShellCommand" date="Tue Nov 21 11:44:30 EST 2023" starttimestamp="1700582044267" timestamp="3025949" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3616" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032587" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of AND"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3617" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032588" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3618" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032594" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3619" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032595" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3620" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032595" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3621" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032597" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3622" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032612" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3623" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032613" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3624" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032614" type="ConsoleOutput">
    <outputString><![CDATA[(LIST 3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶"), Diff(EQUAL,"(LIST "), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3625" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032614" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"LIST 3 4"), Diff(INSERT,"(+ 1 2)"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3626" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032614" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"((+ "), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="3627" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032614" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3628" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032615" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3629" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032615" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3630" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032616" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3631" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032616" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3632" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032616" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3633" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032616" type="ConsoleOutput">
    <outputString><![CDATA[T
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶"), Diff(INSERT,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3634" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032616" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶"), Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶")]]]></diff>
  </Command>
  <Command __id="3635" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032617" type="ConsoleOutput">
    <outputString><![CDATA[T
NIL
2
4
NIL
1
NIL
2
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"T¶"), Diff(EQUAL,"NIL¶"), Diff(DELETE,"T"), Diff(INSERT,"2¶4¶NIL¶1¶NIL¶2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3636" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032618" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶"), Diff(EQUAL,"NIL¶"), Diff(DELETE,"2¶4¶NIL¶1¶NIL¶2"), Diff(INSERT,"NIL¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3637" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032621" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶T"), Diff(INSERT,"Test execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3638" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032622" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3639" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032622" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3640" _type="ConsoleOutput" date="Tue Nov 21 11:44:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3032624" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):33"), Diff(INSERT,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3641" _type="ConsoleOutput" date="Tue Nov 21 11:44:38 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3034266" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:AndTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="3642" _type="ShellCommand" date="Tue Nov 21 11:44:43 EST 2023" starttimestamp="1700582044267" timestamp="3039470" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3643" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:43 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3039477" type="Run" />
  <Command __id="3644" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:43 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3039477" type="Run" />
  <Command __id="3533" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:43:48 EST 2023" docASTNodeCount="132" docActiveCodeLength="746" docExpressionCount="89" docLength="746" projectName="Assignment5" starttimestamp="1700582044267" timestamp="2984412">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return new NilAtom();			}else {				return expr;			}		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}else {			return evalHelper(expr.getTail(), environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3595" _type="Insert" date="Tue Nov 21 11:44:25 EST 2023" docASTNodeCount="134" docActiveCodeLength="751" docExpressionCount="91" docLength="751" length="5" offset="717" repeat="5" starttimestamp="1700582044267" timestamp="3021321" timestamp2="3022071">
    <text><![CDATA[.geth]]></text>
  </DocumentChange>
  <DocumentChange __id="3603" _type="Replace" date="Tue Nov 21 11:44:27 EST 2023" docASTNodeCount="134" docActiveCodeLength="756" docExpressionCount="91" docLength="756" endLine="27" insertionLength="9" int_docASTNodeCount="133" int_docActiveCodeLength="747" int_docExpressionCount="90" int_docLength="747" length="4" offset="718" startLine="27" starttimestamp="1700582044267" timestamp="3022797">
    <deletedText><![CDATA[geth]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="3645" _type="MoveCaretCommand" caretOffset="579" date="Tue Nov 21 11:44:45 EST 2023" docOffset="748" starttimestamp="1700582044267" timestamp="3041020" />
  <Command __id="3654" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3046528" type="Run" />
  <Command __id="3655" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:44:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3046528" type="Run" />
  <Command __id="3656" _type="ShellCommand" date="Tue Nov 21 11:44:51 EST 2023" starttimestamp="1700582044267" timestamp="3046828" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3657" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052414" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2¶Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3658" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052417" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3659" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052421" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3660" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052421" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3661" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052424" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3662" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052439" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3663" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052441" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3664" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052441" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3665" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052442" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3666" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052442" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3667" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052442" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3668" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052443" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3669" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052443" type="ConsoleOutput">
    <outputString><![CDATA[T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3670" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052443" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3671" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052444" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
T
NIL
2
4
NIL
1
NIL
2
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶T¶NIL¶2¶4¶NIL¶1¶NIL¶2¶NIL¶NIL¶T¶")]]]></diff>
  </Command>
  <Command __id="3672" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052447" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶T¶T¶NIL¶2¶4¶NIL¶1¶NIL¶2¶NIL¶NIL¶T"), Diff(INSERT,"Test execution time (ms):30"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3673" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052448" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):30"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3674" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052448" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3675" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052449" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3676" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052450" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3677" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052451" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3678" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052452" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3679" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052453" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3680" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052453" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3681" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052454" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3682" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052455" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3683" _type="LocalChecksRawCommand" date="Tue Nov 21 11:44:56 EST 2023" starttimestamp="1700582044267" timestamp="3052456">
    <CSVRow><![CDATA[192,Tue Nov 21 11:44:38 EST 2023,50,1,AndTestedTwoResultsChecker,AndTestedChecker AndTestedTwoResultsChecker+ BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,107,1,false, , , ,AndTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3684" _type="LocalChecksRawCommand" date="Tue Nov 21 11:44:56 EST 2023" starttimestamp="1700582044267" timestamp="3052456">
    <CSVRow><![CDATA[192,Tue Nov 21 11:44:38 EST 2023,50,1,AndTestedTwoResultsChecker,AndTestedChecker AndTestedTwoResultsChecker+ BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,107,1,false, , , ,AndTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3685" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052456" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3686" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052458" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3687" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052458" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3688" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052459" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3689" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052460" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3690" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052460" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3691" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052461" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3692" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052465" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:AndTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorE"), Diff(INSERT,"execution time (ms):1¶Test Result:AndTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:And"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3693" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052466" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1¶Test Result:AndTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:AndTestedTwoResults"), Diff(INSERT,"Result:NotTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3694" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052467" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3695" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052467" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of NOT
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):2"), Diff(INSERT,"ng in test file two results of NOT"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3696" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052468" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of NOT"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3697" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052469" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3698" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052469" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3699" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052470" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3700" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052470" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3701" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052473" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3702" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052473" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="3703" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052473" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3704" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052474" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3705" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052474" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3706" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052475" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3707" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052476" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3708" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052476" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3709" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052477" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3710" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052479" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3711" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052479" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3712" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052480" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3713" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052480" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3714" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052481" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3715" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052481" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3716" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052482" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3717" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052484" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"(5 . 2)¶(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3718" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052484" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)¶(5 . 2)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3719" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052486" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3720" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052486" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3721" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052486" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3722" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052487" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3723" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052489" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3724" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052489" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):1"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3725" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052491" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3726" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052492" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"¶Test execution time (ms):2¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="3727" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052494" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):2¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="3728" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052494" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3729" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052494" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3730" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052496" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3731" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052497" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3732" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052497" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string "), Diff(EQUAL,"(LIST "), Diff(INSERT,". ("), Diff(EQUAL,""a""), Diff(INSERT," ."), Diff(EQUAL," "), Diff(INSERT,"("), Diff(EQUAL,"(1 . 2)"), Diff(INSERT," ."), Diff(EQUAL," (("), Diff(INSERT,"("), Diff(EQUAL,"LIST "), Diff(DELETE,"1 (AND T T))))¶¶Test execution time (ms):2"), Diff(INSERT,". (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3733" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052498" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3734" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052498" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):3"), Diff(INSERT,"Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3735" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052498" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3736" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052499" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages


Test execution time (ms):1
Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):0"), Diff(INSERT,"Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3737" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052500" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3738" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052500" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3739" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052500" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3740" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052500" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3741" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052501" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3742" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052502" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3743" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052502" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3744" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052502" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3745" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052503" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3746" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052503" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3747" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052503" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3748" _type="ConsoleOutput" date="Tue Nov 21 11:44:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3052504" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3749" _type="ShellCommand" date="Tue Nov 21 11:45:00 EST 2023" starttimestamp="1700582044267" timestamp="3055816" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3751" _type="MoveCaretCommand" caretOffset="212" date="Tue Nov 21 11:45:00 EST 2023" docOffset="369" starttimestamp="1700582044267" timestamp="3055914" />
  <Command __id="3752" _type="ShellCommand" date="Tue Nov 21 11:45:01 EST 2023" starttimestamp="1700582044267" timestamp="3057173" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3755" _type="ShellCommand" date="Tue Nov 21 11:45:07 EST 2023" starttimestamp="1700582044267" timestamp="3063055" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3756" _type="MoveCaretCommand" caretOffset="211" date="Tue Nov 21 11:45:09 EST 2023" docOffset="368" starttimestamp="1700582044267" timestamp="3065631" />
  <Command __id="3758" _type="InsertStringCommand" date="Tue Nov 21 11:45:10 EST 2023" starttimestamp="1700582044267" timestamp="3066325" timestamp2="3066325">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3759" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:45:10 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="3066340" />
  <Command __id="3764" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:45:11 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="3066913" />
  <Command __id="3766" _type="InsertStringCommand" date="Tue Nov 21 11:45:11 EST 2023" starttimestamp="1700582044267" timestamp="3066920" timestamp2="3066920">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3767" _type="MoveCaretCommand" caretOffset="243" date="Tue Nov 21 11:45:11 EST 2023" docOffset="400" starttimestamp="1700582044267" timestamp="3067654" />
  <Command __id="3768" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:45:12 EST 2023" starttimestamp="1700582044267" timestamp="3067792" />
  <Command __id="3769" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:45:12 EST 2023" starttimestamp="1700582044267" timestamp="3067890" />
  <Command __id="3770" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:45:12 EST 2023" starttimestamp="1700582044267" timestamp="3067897" />
  <Command __id="3777" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:45:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3072704" type="Run" />
  <Command __id="3778" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:45:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3072704" type="Run" />
  <Command __id="3779" _type="ShellCommand" date="Tue Nov 21 11:45:17 EST 2023" starttimestamp="1700582044267" timestamp="3073013" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3780" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076782" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3781" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076783" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3782" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076788" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3783" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076789" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3784" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076790" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3785" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076790" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3786" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076807" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3787" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076809" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3788" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076809" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2"), Diff(INSERT,"(+ 3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="3789" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076809" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3790" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076810" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3791" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076810" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3792" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076810" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3793" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076810" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶T¶")]]]></diff>
  </Command>
  <Command __id="3794" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076811" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(DELETE,"T¶T¶")]]]></diff>
  </Command>
  <Command __id="3795" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076811" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶")]]]></diff>
  </Command>
  <Command __id="3796" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076811" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶"), Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="3797" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076811" type="ConsoleOutput">
    <outputString><![CDATA[NIL
2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL¶2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3798" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076812" type="ConsoleOutput">
    <outputString><![CDATA[4
NIL
1
NIL
2
NIL
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶2"), Diff(INSERT,"4¶NIL¶1¶NIL¶2¶NIL¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3799" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076815" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"4¶NIL¶1¶NIL¶2¶NIL¶T¶T"), Diff(INSERT,"Test execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3800" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076816" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3801" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076816" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3802" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076818" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):33"), Diff(INSERT,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3803" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076818" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3804" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076820" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3805" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076820" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3806" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076821" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3807" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076821" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3808" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076823" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3809" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076824" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3810" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076825" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3811" _type="ConsoleOutput" date="Tue Nov 21 11:45:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3076826" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:OrTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="3812" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081870" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"Or"), Diff(INSERT,"Cons"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3813" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081872" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3814" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081873" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3815" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081877" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3816" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081878" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Cond"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3817" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081879" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3818" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081880" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3819" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081880" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3820" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081882" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3821" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081884" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3822" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081884" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3823" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081886" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3824" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081888" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3825" _type="ConsoleOutput" date="Tue Nov 21 11:45:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3081890" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3826" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084527" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
Test execution time (ms):4
Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:Cond"), Diff(INSERT,"(5 . 2)¶(5 . 2)¶Test execution time (ms):4¶"), Diff(EQUAL,"Test"), Diff(DELETE,"ed"), Diff(INSERT," "), Diff(EQUAL,"Result"), Diff(DELETE,"s"), Diff(INSERT,":BaseCaseSExpressionToString"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"Expecting in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3827" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084530" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(5"), Diff(DELETE," . 2"), Diff(INSERT,")¶(5"), Diff(EQUAL,")¶(5"), Diff(DELETE," . 2"), Diff(EQUAL,")¶Test execution time (ms):"), Diff(DELETE,"4¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3828" _type="LocalChecksRawCommand" date="Tue Nov 21 11:45:28 EST 2023" starttimestamp="1700582044267" timestamp="3084530">
    <CSVRow><![CDATA[195,Tue Nov 21 11:45:26 EST 2023,52,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,1,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3829" _type="LocalChecksRawCommand" date="Tue Nov 21 11:45:28 EST 2023" starttimestamp="1700582044267" timestamp="3084530">
    <CSVRow><![CDATA[195,Tue Nov 21 11:45:26 EST 2023,52,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,1,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3830" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084531" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)¶Test execution time (ms):2"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3831" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084534" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3832" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084535" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3833" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084536" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3834" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084538" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3835" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084538" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3836" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084539" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(DELETE,"¶Test execution time (ms):2¶")]]]></diff>
  </Command>
  <Command __id="3837" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084542" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3838" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084543" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3839" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084545" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3840" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084545" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3841" _type="ConsoleOutput" date="Tue Nov 21 11:45:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3084546" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3842" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089703" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,"), Diff(INSERT,"execution time (ms):1¶Test Result:GreaterTestedChecker,10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"5"), Diff(INSERT,"10"), Diff(EQUAL,".0,"), Diff(DELETE,"Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"¶¶Test execution time (ms):1¶Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3843" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"GreaterTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:GreaterTestedTwoResults"), Diff(INSERT,"LessTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="3844" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3845" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089707" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3846" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089709" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3847" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3848" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089709" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3849" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089711" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3850" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089711" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3851" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089713" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3852" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089713" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3853" _type="ConsoleOutput" date="Tue Nov 21 11:45:33 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3089715" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3854" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097341" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
Test Result:ComparatorEvaluatorCodeReuse,0.0% complete,0.0,10.0,Preceding test CondTestedResultsChecker failed:

Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):1
Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LorETestedTwoResultsChecker,10"), Diff(INSERT,"¶Test execution time (ms):2¶Test Result:ComparatorEvaluatorCodeReuse,0.0% complete,0.0,10.0,Preceding test CondTestedResultsChecker failed:¶¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶Test Result:MainCallsOperationRegisterer,"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"10"), Diff(INSERT,"2"), Diff(EQUAL,".0,"), Diff(INSERT,"No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3855" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097343" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"ComparatorEvaluatorCodeReuse,0.0% complete,0.0,10.0,Preceding test CondTestedResultsChecker failed:¶¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶Test Result:MainCallsOperationRegisterer"), Diff(INSERT,"LoadCallsInterpreterModelSingleton"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶")]]]></diff>
  </Command>
  <Command __id="3856" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097343" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):1¶"), Diff(DELETE,"Test Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶")]]]></diff>
  </Command>
  <Command __id="3857" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097344" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3858" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097345" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3859" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097346" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3860" _type="LocalChecksRawCommand" date="Tue Nov 21 11:45:41 EST 2023" starttimestamp="1700582044267" timestamp="3097346">
    <CSVRow><![CDATA[197,Tue Nov 21 11:45:33 EST 2023,52,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,3,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3861" _type="LocalChecksRawCommand" date="Tue Nov 21 11:45:41 EST 2023" starttimestamp="1700582044267" timestamp="3097346">
    <CSVRow><![CDATA[197,Tue Nov 21 11:45:33 EST 2023,52,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,3,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3862" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097346" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3863" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097348" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainCallsSkeletonMain,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:MainCallsSkeletonMain,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3864" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097348" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsReadAllLines,0.0% complete,0.0,0.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Main"), Diff(INSERT,"Load"), Diff(EQUAL,"Calls"), Diff(DELETE,"SkeletonMain"), Diff(INSERT,"ReadAllLines"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶"), Diff(DELETE,"¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3865" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097349" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsReadAllLines,0.0% complete,0.0,0.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3866" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097350" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3867" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097350" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3868" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097351" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3869" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097351" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3870" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097352" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3871" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097353" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3872" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097354" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3873" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097355" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Not"), Diff(INSERT,"LTE"), Diff(EQUAL,"Calls"), Diff(DELETE,"Nil"), Diff(INSERT,"T"), Diff(EQUAL,"AtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="3874" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097355" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3875" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097355" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3876" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097355" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3877" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097356" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3878" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097356" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3879" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097356" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3880" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097357" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3881" _type="ConsoleOutput" date="Tue Nov 21 11:45:41 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3097357" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3882" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101488" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):1
Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ToStringAsListHelperIsRecursive"), Diff(INSERT,"execution time (ms):1¶Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5Encapsulation"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3883" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101489" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1¶Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5Encapsulation"), Diff(INSERT,"Result:A5NoHiddenFields"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3884" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101490" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:A5No"), Diff(DELETE,"HiddenFields"), Diff(INSERT,"nPublicAccessModifiersMatched"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(DELETE,"¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="3885" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101490" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3886" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101491" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3887" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101492" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3888" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101493" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):0"), Diff(INSERT,"Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3889" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101494" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3890" _type="ConsoleOutput" date="Tue Nov 21 11:45:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3101494" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3891" _type="ShellCommand" date="Tue Nov 21 11:46:13 EST 2023" starttimestamp="1700582044267" timestamp="3129414" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3892" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:46:13 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3129428" type="Run" />
  <Command __id="3893" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:46:13 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3129428" type="Run" />
  <Command __id="3894" _type="ShellCommand" date="Tue Nov 21 11:46:36 EST 2023" starttimestamp="1700582044267" timestamp="3151746" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3895" _type="ShellCommand" date="Tue Nov 21 11:46:48 EST 2023" starttimestamp="1700582044267" timestamp="3164338" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3896" _type="ShellCommand" date="Tue Nov 21 11:48:44 EST 2023" starttimestamp="1700582044267" timestamp="3280577" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3897" _type="ShellCommand" date="Tue Nov 21 11:49:00 EST 2023" starttimestamp="1700582044267" timestamp="3296162" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3898" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 11:49:00 EST 2023" docOffset="469" starttimestamp="1700582044267" timestamp="3296219" />
  <Command __id="3899" _type="ShellCommand" date="Tue Nov 21 11:49:03 EST 2023" starttimestamp="1700582044267" timestamp="3299112" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="3646" _type="Delete" date="Tue Nov 21 11:44:47 EST 2023" docASTNodeCount="134" docActiveCodeLength="754" docExpressionCount="91" docLength="754" endLine="28" length="2" offset="746" repeat="2" startLine="28" starttimestamp="1700582044267" timestamp="3042841" timestamp2="3042935">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <Command __id="3750" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:45:00 EST 2023" docASTNodeCount="90" docActiveCodeLength="459" docExpressionCount="64" docLength="459" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3055877">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/NotEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms."), Diff(DELETE,"SExpression"), Diff(INSERT,"NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom"), Diff(EQUAL,";public class NotEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1) {		// TODO Auto-generated method stub		return null;"), Diff(INSERT,"environment) {		expr = expr.getTail();		if(expr.isNIL()) {			return new TAtom();		}else {			return new NilAtom();		}"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtom;

public class NotEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		if(expr.isNIL()) {
			return new TAtom();
		}else {
			return new NilAtom();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3757" _type="Insert" date="Tue Nov 21 11:45:10 EST 2023" docASTNodeCount="92" docActiveCodeLength="464" docExpressionCount="66" docLength="464" length="5" offset="368" repeat="5" starttimestamp="1700582044267" timestamp="3066323" timestamp2="3066763">
    <text><![CDATA[.geth]]></text>
  </DocumentChange>
  <DocumentChange __id="3765" _type="Replace" date="Tue Nov 21 11:45:11 EST 2023" docASTNodeCount="92" docActiveCodeLength="469" docExpressionCount="66" docLength="469" endLine="12" insertionLength="9" int_docASTNodeCount="92" int_docActiveCodeLength="460" int_docExpressionCount="66" int_docLength="460" length="4" offset="369" startLine="12" starttimestamp="1700582044267" timestamp="3066915">
    <deletedText><![CDATA[geth]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="3901" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:07 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3303504">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3903" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:08 EST 2023" docASTNodeCount="134" docActiveCodeLength="754" docExpressionCount="91" docLength="754" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3304428">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return new NilAtom();			}else {				return expr;			}		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}else {			return evalHelper(expr.getTail()"), Diff(INSERT,".getHead()"), Diff(EQUAL,", environment);		}"), Diff(DELETE,"		"), Diff(EQUAL,"	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}else {
			return evalHelper(expr.getTail().getHead(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="3905" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:09 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3305302">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3907" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:09 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3305608">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3909" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:11 EST 2023" docASTNodeCount="134" docActiveCodeLength="754" docExpressionCount="91" docLength="754" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3307069">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return new NilAtom();			}else {				return expr;			}		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}else {			return evalHelper(expr.getTail().getHead(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3915" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:12 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3308416">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3900" _type="ShellCommand" date="Tue Nov 21 11:49:06 EST 2023" starttimestamp="1700582044267" timestamp="3302585" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3902" _type="SelectTextCommand" caretOffset="1300" date="Tue Nov 21 11:49:07 EST 2023" end="1300" start="1289" starttimestamp="1700582044267" timestamp="3303550" />
  <Command __id="3904" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:49:08 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="3304481" />
  <Command __id="3906" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:49:09 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="3305359" />
  <Command __id="3908" _type="SelectTextCommand" caretOffset="1300" date="Tue Nov 21 11:49:09 EST 2023" end="1300" start="1289" starttimestamp="1700582044267" timestamp="3305659" />
  <Command __id="3910" _type="LocalChecksRawCommand" date="Tue Nov 21 11:49:11 EST 2023" starttimestamp="1700582044267" timestamp="3307076">
    <CSVRow><![CDATA[199,Tue Nov 21 11:45:45 EST 2023,52,0,A5GeneralStyle,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,5,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3911" _type="LocalChecksRawCommand" date="Tue Nov 21 11:49:11 EST 2023" starttimestamp="1700582044267" timestamp="3307076">
    <CSVRow><![CDATA[199,Tue Nov 21 11:45:45 EST 2023,52,0,A5GeneralStyle,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,5,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3912" _type="LocalChecksRawCommand" date="Tue Nov 21 11:49:11 EST 2023" starttimestamp="1700582044267" timestamp="3307076">
    <CSVRow><![CDATA[200,Tue Nov 21 11:45:51 EST 2023,52,0,A5AssignmentSpecificSourceChecks,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,6,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3913" _type="LocalChecksRawCommand" date="Tue Nov 21 11:49:11 EST 2023" starttimestamp="1700582044267" timestamp="3307076">
    <CSVRow><![CDATA[200,Tue Nov 21 11:45:51 EST 2023,52,0,A5AssignmentSpecificSourceChecks,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,109,6,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3914" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 11:49:11 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="3307116" />
  <Command __id="3916" _type="SelectTextCommand" caretOffset="1300" date="Tue Nov 21 11:49:12 EST 2023" end="1300" start="1289" starttimestamp="1700582044267" timestamp="3308493" />
  <Command __id="3918" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:49:14 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3310079" />
  <Command __id="3919" _type="MoveCaretCommand" caretOffset="520" date="Tue Nov 21 11:49:16 EST 2023" docOffset="649" starttimestamp="1700582044267" timestamp="3312278" />
  <Command __id="3920" _type="SelectTextCommand" caretOffset="519" date="Tue Nov 21 11:49:16 EST 2023" end="519" start="465" starttimestamp="1700582044267" timestamp="3312424" />
  <Command __id="3921" _type="MoveCaretCommand" caretOffset="517" date="Tue Nov 21 11:49:17 EST 2023" docOffset="646" starttimestamp="1700582044267" timestamp="3312965" />
  <Command __id="3922" _type="MoveCaretCommand" caretOffset="449" date="Tue Nov 21 11:49:17 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="3313611" />
  <Command __id="3923" _type="SelectTextCommand" caretOffset="461" date="Tue Nov 21 11:49:18 EST 2023" end="461" start="433" starttimestamp="1700582044267" timestamp="3313776" />
  <Command __id="3917" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:14 EST 2023" docASTNodeCount="274" docActiveCodeLength="1796" docExpressionCount="132" docLength="2306" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3310017">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"NotEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"OrEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return AndEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return NotEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return OrEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="3924" _type="MoveCaretCommand" caretOffset="502" date="Tue Nov 21 11:49:27 EST 2023" docOffset="631" starttimestamp="1700582044267" timestamp="3322795" />
  <Command __id="3925" _type="MoveCaretCommand" caretOffset="427" date="Tue Nov 21 11:49:27 EST 2023" docOffset="556" starttimestamp="1700582044267" timestamp="3323485" />
  <Command __id="3926" _type="SelectTextCommand" caretOffset="431" date="Tue Nov 21 11:49:27 EST 2023" end="431" start="412" starttimestamp="1700582044267" timestamp="3323653" />
  <Command __id="3928" _type="SelectTextCommand" caretOffset="1300" date="Tue Nov 21 11:49:30 EST 2023" end="1300" start="1289" starttimestamp="1700582044267" timestamp="3325839" />
  <Command __id="3929" _type="MoveCaretCommand" caretOffset="92" date="Tue Nov 21 11:49:32 EST 2023" docOffset="153" starttimestamp="1700582044267" timestamp="3327930" />
  <Command __id="3930" _type="MoveCaretCommand" caretOffset="92" date="Tue Nov 21 11:49:32 EST 2023" docOffset="153" starttimestamp="1700582044267" timestamp="3327930" />
  <Command __id="3931" _type="SelectTextCommand" caretOffset="101" date="Tue Nov 21 11:49:32 EST 2023" end="101" start="78" starttimestamp="1700582044267" timestamp="3328081" />
  <Command __id="3932" _type="SelectTextCommand" caretOffset="101" date="Tue Nov 21 11:49:32 EST 2023" end="101" start="78" starttimestamp="1700582044267" timestamp="3328082" />
  <Command __id="3933" _type="CopyCommand" date="Tue Nov 21 11:49:32 EST 2023" starttimestamp="1700582044267" timestamp="3328301" />
  <Command __id="3935" _type="SelectTextCommand" caretOffset="431" date="Tue Nov 21 11:49:32 EST 2023" end="431" start="412" starttimestamp="1700582044267" timestamp="3328597" />
  <Command __id="3936" _type="MoveCaretCommand" caretOffset="515" date="Tue Nov 21 11:49:33 EST 2023" docOffset="644" starttimestamp="1700582044267" timestamp="3329462" />
  <Command __id="3937" _type="SelectTextCommand" caretOffset="516" date="Tue Nov 21 11:49:33 EST 2023" end="516" start="512" starttimestamp="1700582044267" timestamp="3329586" />
  <Command __id="3939" _type="PasteCommand" date="Tue Nov 21 11:49:34 EST 2023" starttimestamp="1700582044267" timestamp="3329794" />
  <Command __id="3941" _type="InsertStringCommand" date="Tue Nov 21 11:49:34 EST 2023" starttimestamp="1700582044267" timestamp="3330596" timestamp2="3330596">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3942" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 11:49:34 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="3330603" />
  <Command __id="3948" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 11:49:36 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="3331750" />
  <Command __id="3949" _type="MoveCaretCommand" caretOffset="372" date="Tue Nov 21 11:49:36 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="3331810" />
  <Command __id="3950" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:49:36 EST 2023" starttimestamp="1700582044267" timestamp="3331999" />
  <Command __id="3951" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:36 EST 2023" starttimestamp="1700582044267" timestamp="3332102" />
  <Command __id="3952" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:36 EST 2023" starttimestamp="1700582044267" timestamp="3332116" />
  <Command __id="3954" _type="SelectTextCommand" caretOffset="101" date="Tue Nov 21 11:49:37 EST 2023" end="101" start="78" starttimestamp="1700582044267" timestamp="3332793" />
  <Command __id="3927" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:30 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3325789">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3934" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:32 EST 2023" docASTNodeCount="274" docActiveCodeLength="1796" docExpressionCount="132" docLength="2306" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3328555">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3938" _type="Replace" date="Tue Nov 21 11:49:34 EST 2023" docASTNodeCount="274" docActiveCodeLength="1815" docExpressionCount="132" docLength="2325" endLine="24" insertionLength="23" int_docASTNodeCount="273" int_docActiveCodeLength="1792" int_docExpressionCount="131" int_docLength="2302" length="4" offset="641" startLine="24" starttimestamp="1700582044267" timestamp="3329787">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[OperationRegistererImpl]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3940" _type="Insert" date="Tue Nov 21 11:49:34 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" length="6" offset="664" repeat="6" starttimestamp="1700582044267" timestamp="3330593" timestamp2="3331167">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="3953" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:37 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3332738">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3957" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:40 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3336669">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3955" _type="MoveCaretCommand" caretOffset="498" date="Tue Nov 21 11:49:40 EST 2023" docOffset="559" starttimestamp="1700582044267" timestamp="3335765" />
  <Command __id="3956" _type="InsertStringCommand" date="Tue Nov 21 11:49:40 EST 2023" starttimestamp="1700582044267" timestamp="3336306" timestamp2="3336306">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3958" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:49:40 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="3336728" />
  <Command __id="3960" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:49:43 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3339499" />
  <Command __id="3959" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:43 EST 2023" docASTNodeCount="227" docActiveCodeLength="1379" docExpressionCount="167" docLength="1559" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3339448">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3963" _type="Delete" date="Tue Nov 21 11:49:46 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" endLine="16" length="78" offset="403" repeat="3" startLine="13" starttimestamp="1700582044267" timestamp="3342679" timestamp2="3342989">
    <text><![CDATA[import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;
]]></text>
  </DocumentChange>
  <Command __id="3973" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:48 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3343842">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3961" _type="MoveCaretCommand" caretOffset="457" date="Tue Nov 21 11:49:45 EST 2023" docOffset="457" starttimestamp="1700582044267" timestamp="3341419" />
  <Command __id="3962" _type="MoveCaretCommand" caretOffset="430" date="Tue Nov 21 11:49:46 EST 2023" docOffset="430" starttimestamp="1700582044267" timestamp="3341765" />
  <Command __id="3964" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:49:46 EST 2023" starttimestamp="1700582044267" timestamp="3342684" />
  <Command __id="3966" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:49:47 EST 2023" starttimestamp="1700582044267" timestamp="3342844" />
  <Command __id="3968" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:49:47 EST 2023" starttimestamp="1700582044267" timestamp="3342990" />
  <Command __id="3969" _type="MoveCaretCommand" caretOffset="316" date="Tue Nov 21 11:49:47 EST 2023" docOffset="316" starttimestamp="1700582044267" timestamp="3343260" />
  <Command __id="3970" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:49:47 EST 2023" starttimestamp="1700582044267" timestamp="3343378" />
  <Command __id="3971" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:48 EST 2023" starttimestamp="1700582044267" timestamp="3343784" />
  <Command __id="3972" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:48 EST 2023" starttimestamp="1700582044267" timestamp="3343803" />
  <Command __id="3974" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:49:48 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="3343889" />
  <Command __id="3976" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:49:49 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3345510" />
  <Command __id="3977" _type="MoveCaretCommand" caretOffset="115" date="Tue Nov 21 11:49:51 EST 2023" docOffset="115" starttimestamp="1700582044267" timestamp="3346862" />
  <Command __id="3979" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:49:51 EST 2023" starttimestamp="1700582044267" timestamp="3347179" />
  <Command __id="3980" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:49:51 EST 2023" starttimestamp="1700582044267" timestamp="3347472" />
  <Command __id="3982" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:49:52 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="3347999" />
  <Command __id="3983" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:52 EST 2023" starttimestamp="1700582044267" timestamp="3348281" />
  <Command __id="3984" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:52 EST 2023" starttimestamp="1700582044267" timestamp="3348291" />
  <Command __id="3986" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:49:53 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3348800" />
  <Command __id="3975" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:49 EST 2023" docASTNodeCount="69" docActiveCodeLength="377" docExpressionCount="51" docLength="377" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3345455">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().getHead().eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3978" _type="Delete" date="Tue Nov 21 11:49:51 EST 2023" docASTNodeCount="59" docActiveCodeLength="328" docExpressionCount="42" docLength="328" endLine="5" length="49" offset="94" startLine="4" starttimestamp="1700582044267" timestamp="3347177">
    <text><![CDATA[import main.lisp.parser.terms.ExpressionFactory;
]]></text>
  </DocumentChange>
  <Command __id="3981" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3347944">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3985" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:53 EST 2023" docASTNodeCount="134" docActiveCodeLength="754" docExpressionCount="91" docLength="754" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3348751">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return new NilAtom();			}else {				return expr;			}		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}else {			return evalHelper(expr.getTail().getHead(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3988" _type="Delete" date="Tue Nov 21 11:49:54 EST 2023" docASTNodeCount="124" docActiveCodeLength="705" docExpressionCount="82" docLength="705" endLine="5" length="49" offset="94" startLine="4" starttimestamp="1700582044267" timestamp="3350260">
    <text><![CDATA[import main.lisp.parser.terms.ExpressionFactory;
]]></text>
  </DocumentChange>
  <Command __id="3991" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:55 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3350984">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3987" _type="MoveCaretCommand" caretOffset="120" date="Tue Nov 21 11:49:54 EST 2023" docOffset="120" starttimestamp="1700582044267" timestamp="3350032" />
  <Command __id="3989" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 11:49:54 EST 2023" starttimestamp="1700582044267" timestamp="3350262" />
  <Command __id="3990" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 11:49:54 EST 2023" starttimestamp="1700582044267" timestamp="3350547" />
  <Command __id="3992" _type="MoveCaretCommand" caretOffset="202" date="Tue Nov 21 11:49:55 EST 2023" docOffset="319" starttimestamp="1700582044267" timestamp="3351042" />
  <Command __id="3993" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:55 EST 2023" starttimestamp="1700582044267" timestamp="3351365" />
  <Command __id="3994" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:49:55 EST 2023" starttimestamp="1700582044267" timestamp="3351380" />
  <Command __id="3996" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:49:57 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3353036" />
  <Command __id="3997" _type="MoveCaretCommand" caretOffset="567" date="Tue Nov 21 11:49:58 EST 2023" docOffset="914" starttimestamp="1700582044267" timestamp="3354383" />
  <Command __id="3995" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:49:57 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3352983">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;"), Diff(DELETE,"import java.nio.file.Files;import java.nio.file.Path;import java.util.List;"), Diff(EQUAL,"public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <DocumentChange __id="4000" _type="Delete" date="Tue Nov 21 11:50:02 EST 2023" docASTNodeCount="205" docActiveCodeLength="1287" docExpressionCount="148" docLength="1467" endLine="29" length="14" offset="968" startLine="27" starttimestamp="1700582044267" timestamp="3357853">
    <text><![CDATA[

            ]]></text>
  </DocumentChange>
  <DocumentChange __id="4001" _type="Delete" date="Tue Nov 21 11:50:02 EST 2023" docASTNodeCount="198" docActiveCodeLength="1237" docExpressionCount="143" docLength="1417" endLine="27" length="50" offset="917" repeat="2" startLine="27" starttimestamp="1700582044267" timestamp="3357856" timestamp2="3357857">
    <text><![CDATA[ = new BufferedReader(new FileReader("test.lisp"))]]></text>
  </DocumentChange>
  <DocumentChange __id="4003" _type="Delete" date="Tue Nov 21 11:50:02 EST 2023" docASTNodeCount="193" docActiveCodeLength="1205" docExpressionCount="141" docLength="1344" endLine="27" length="73" offset="845" startLine="26" starttimestamp="1700582044267" timestamp="3357857">
    <text><![CDATA[// Read all lines from the specified file
        	BufferedReader reader;]]></text>
  </DocumentChange>
  <DocumentChange __id="4004" _type="Insert" date="Tue Nov 21 11:50:02 EST 2023" docASTNodeCount="193" docActiveCodeLength="1282" docExpressionCount="141" docLength="1462" length="118" offset="830" repeat="5" starttimestamp="1700582044267" timestamp="3357858" timestamp2="3357863">
    <text><![CDATA[ (// Read all lines from the specified file
		BufferedReader reader = new BufferedReader(new FileReader("test.lisp")))]]></text>
  </DocumentChange>
  <Command __id="3998" _type="ShellCommand" date="Tue Nov 21 11:50:02 EST 2023" starttimestamp="1700582044267" timestamp="3357753" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3999" _type="ShellCommand" date="Tue Nov 21 11:50:02 EST 2023" starttimestamp="1700582044267" timestamp="3357845" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4018" _type="UndoCommand" date="Tue Nov 21 11:50:04 EST 2023" starttimestamp="1700582044267" timestamp="3360455" />
  <DocumentChange __id="4009" _type="Delete" date="Tue Nov 21 11:50:04 EST 2023" docASTNodeCount="193" docActiveCodeLength="1205" docExpressionCount="141" docLength="1344" endLine="26" length="118" offset="830" repeat="5" startLine="25" starttimestamp="1700582044267" timestamp="3360436" timestamp2="3360442">
    <text><![CDATA[ (// Read all lines from the specified file
		BufferedReader reader = new BufferedReader(new FileReader("test.lisp")))]]></text>
  </DocumentChange>
  <DocumentChange __id="4014" _type="Insert" date="Tue Nov 21 11:50:04 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" length="137" offset="845" repeat="4" starttimestamp="1700582044267" timestamp="3360443" timestamp2="3360451">
    <text><![CDATA[// Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            ]]></text>
  </DocumentChange>
  <DocumentChange __id="4021" _type="Delete" date="Tue Nov 21 11:50:08 EST 2023" docASTNodeCount="205" docActiveCodeLength="1287" docExpressionCount="148" docLength="1467" endLine="29" length="14" offset="968" startLine="27" starttimestamp="1700582044267" timestamp="3364267">
    <text><![CDATA[

            ]]></text>
  </DocumentChange>
  <DocumentChange __id="4022" _type="Delete" date="Tue Nov 21 11:50:08 EST 2023" docASTNodeCount="198" docActiveCodeLength="1237" docExpressionCount="143" docLength="1417" endLine="27" length="50" offset="917" repeat="2" startLine="27" starttimestamp="1700582044267" timestamp="3364269" timestamp2="3364269">
    <text><![CDATA[ = new BufferedReader(new FileReader("test.lisp"))]]></text>
  </DocumentChange>
  <DocumentChange __id="4024" _type="Delete" date="Tue Nov 21 11:50:08 EST 2023" docASTNodeCount="193" docActiveCodeLength="1205" docExpressionCount="141" docLength="1344" endLine="27" length="73" offset="845" startLine="26" starttimestamp="1700582044267" timestamp="3364269">
    <text><![CDATA[// Read all lines from the specified file
        	BufferedReader reader;]]></text>
  </DocumentChange>
  <DocumentChange __id="4025" _type="Insert" date="Tue Nov 21 11:50:08 EST 2023" docASTNodeCount="193" docActiveCodeLength="1282" docExpressionCount="141" docLength="1462" length="118" offset="830" repeat="5" starttimestamp="1700582044267" timestamp="3364270" timestamp2="3364273">
    <text><![CDATA[ (// Read all lines from the specified file
		BufferedReader reader = new BufferedReader(new FileReader("test.lisp")))]]></text>
  </DocumentChange>
  <Command __id="4019" _type="ShellCommand" date="Tue Nov 21 11:50:08 EST 2023" starttimestamp="1700582044267" timestamp="3364179" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4020" _type="ShellCommand" date="Tue Nov 21 11:50:08 EST 2023" starttimestamp="1700582044267" timestamp="3364259" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4039" _type="UndoCommand" date="Tue Nov 21 11:50:13 EST 2023" starttimestamp="1700582044267" timestamp="3368975" />
  <DocumentChange __id="4030" _type="Delete" date="Tue Nov 21 11:50:13 EST 2023" docASTNodeCount="193" docActiveCodeLength="1205" docExpressionCount="141" docLength="1344" endLine="26" length="118" offset="830" repeat="5" startLine="25" starttimestamp="1700582044267" timestamp="3368962" timestamp2="3368968">
    <text><![CDATA[ (// Read all lines from the specified file
		BufferedReader reader = new BufferedReader(new FileReader("test.lisp")))]]></text>
  </DocumentChange>
  <DocumentChange __id="4035" _type="Insert" date="Tue Nov 21 11:50:13 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" length="137" offset="845" repeat="4" starttimestamp="1700582044267" timestamp="3368969" timestamp2="3368972">
    <text><![CDATA[// Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            ]]></text>
  </DocumentChange>
  <DocumentChange __id="4042" _type="Delete" date="Tue Nov 21 11:50:15 EST 2023" docASTNodeCount="205" docActiveCodeLength="1287" docExpressionCount="148" docLength="1467" endLine="29" length="14" offset="968" startLine="27" starttimestamp="1700582044267" timestamp="3371622">
    <text><![CDATA[

            ]]></text>
  </DocumentChange>
  <DocumentChange __id="4043" _type="Delete" date="Tue Nov 21 11:50:15 EST 2023" docASTNodeCount="198" docActiveCodeLength="1237" docExpressionCount="143" docLength="1417" endLine="27" length="50" offset="917" repeat="2" startLine="27" starttimestamp="1700582044267" timestamp="3371624" timestamp2="3371624">
    <text><![CDATA[ = new BufferedReader(new FileReader("test.lisp"))]]></text>
  </DocumentChange>
  <DocumentChange __id="4045" _type="Delete" date="Tue Nov 21 11:50:15 EST 2023" docASTNodeCount="193" docActiveCodeLength="1205" docExpressionCount="141" docLength="1344" endLine="27" length="73" offset="845" startLine="26" starttimestamp="1700582044267" timestamp="3371625">
    <text><![CDATA[// Read all lines from the specified file
        	BufferedReader reader;]]></text>
  </DocumentChange>
  <DocumentChange __id="4046" _type="Insert" date="Tue Nov 21 11:50:15 EST 2023" docASTNodeCount="193" docActiveCodeLength="1282" docExpressionCount="141" docLength="1462" length="118" offset="830" repeat="5" starttimestamp="1700582044267" timestamp="3371625" timestamp2="3371628">
    <text><![CDATA[ (// Read all lines from the specified file
		BufferedReader reader = new BufferedReader(new FileReader("test.lisp")))]]></text>
  </DocumentChange>
  <DocumentChange __id="4052" _type="Delete" date="Tue Nov 21 11:50:18 EST 2023" docASTNodeCount="193" docActiveCodeLength="1205" docExpressionCount="141" docLength="1344" endLine="26" length="118" offset="830" repeat="5" startLine="25" starttimestamp="1700582044267" timestamp="3374031" timestamp2="3374039">
    <text><![CDATA[ (// Read all lines from the specified file
		BufferedReader reader = new BufferedReader(new FileReader("test.lisp")))]]></text>
  </DocumentChange>
  <DocumentChange __id="4057" _type="Insert" date="Tue Nov 21 11:50:18 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" length="137" offset="845" repeat="4" starttimestamp="1700582044267" timestamp="3374040" timestamp2="3374043">
    <text><![CDATA[// Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            ]]></text>
  </DocumentChange>
  <Command __id="4066" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:50:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3378277" type="Run" />
  <Command __id="4067" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:50:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3378277" type="Run" />
  <Command __id="4068" _type="ShellCommand" date="Tue Nov 21 11:50:22 EST 2023" starttimestamp="1700582044267" timestamp="3378649" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4069" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382310" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4070" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382311" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4071" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382313" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4072" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382313" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):9"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4073" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382330" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4074" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382334" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):30"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4075" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382337" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):30"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4076" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382338" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4077" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382339" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4078" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382341" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4079" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382341" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4080" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382344" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4081" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382345" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4082" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382346" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4083" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382347" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4084" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382349" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4085" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382351" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4086" _type="ConsoleOutput" date="Tue Nov 21 11:50:26 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3382355" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))

Test execution time (ms):2
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:ListToStringDeepChecker"), Diff(DELETE,"Basic,10"), Diff(INSERT,"Advanced,"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,5.0,"), Diff(INSERT,"Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4087" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383611" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):2¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4088" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383612" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4089" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383612" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4090" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383613" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4091" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383613" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(2 . 3)
(2 . 3)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(2 . 3)¶(2 . 3)¶(2 . 3)¶"), Diff(DELETE,"(2 . 3)¶")]]]></diff>
  </Command>
  <Command __id="4092" _type="LocalChecksRawCommand" date="Tue Nov 21 11:50:27 EST 2023" starttimestamp="1700582044267" timestamp="3383614">
    <CSVRow><![CDATA[201,Tue Nov 21 11:50:26 EST 2023,52,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,110,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4093" _type="LocalChecksRawCommand" date="Tue Nov 21 11:50:27 EST 2023" starttimestamp="1700582044267" timestamp="3383614">
    <CSVRow><![CDATA[201,Tue Nov 21 11:50:26 EST 2023,52,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,110,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4094" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383615" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
(5)
(5)
(5)
(5)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(2 . 3)¶(2 . 3"), Diff(INSERT,"5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4)"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4095" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383615" type="ConsoleOutput">
    <outputString><![CDATA[2
2
2
2
2
2
2
3
3
3
3
3
3
3
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ "), Diff(INSERT,"2¶2¶2¶2¶2¶2¶2¶3¶3¶3¶3¶3¶3¶3¶("), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶("), Diff(DELETE,"(+ "), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶("), Diff(DELETE,"(+ "), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶("), Diff(DELETE,"(+ "), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶("), Diff(DELETE,"(+ "), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶("), Diff(DELETE,"(+ "), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶("), Diff(DELETE,"(+ "), Diff(EQUAL,"3 4)"), Diff(DELETE,")"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4096" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383615" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶2¶2¶2¶2¶2¶2¶3¶3¶3¶3¶3¶3¶3¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)"), Diff(INSERT,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶T¶T¶T¶T¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4097" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383616" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
T
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(INSERT,"T¶T¶T¶T¶T¶T¶T¶T"), Diff(EQUAL,"¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶"), Diff(DELETE,"T¶T¶T¶T¶T¶T¶")]]]></diff>
  </Command>
  <Command __id="4098" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383616" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶T¶T¶T¶T¶T¶T¶T"), Diff(INSERT,"NIL¶NIL"), Diff(EQUAL,"¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4099" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383616" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(INSERT,"T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4100" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383616" type="ConsoleOutput">
    <outputString><![CDATA[T
T
NIL
NIL
NIL
NIL
NIL
NIL
NIL
2
2
2
2
2
2
2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶T¶"), Diff(DELETE,"T¶T¶T¶T¶T¶T"), Diff(INSERT,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶2"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"2¶2"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4101" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383616" type="ConsoleOutput">
    <outputString><![CDATA[4
4
4
4
4
4
4
NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"4¶4¶4¶4¶4¶4"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"4"), Diff(EQUAL,"¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶"), Diff(DELETE,"2¶2¶2¶2¶2¶2¶2¶")]]]></diff>
  </Command>
  <Command __id="4102" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383617" type="ConsoleOutput">
    <outputString><![CDATA[1
1
1
1
1
1
1
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"4¶4¶4"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"NIL¶NIL"), Diff(INSERT,"1¶1"), Diff(EQUAL,"¶NIL¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4103" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383617" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
2
2
2
2
2
2
2
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL¶NIL"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4104" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383617" type="ConsoleOutput">
    <outputString><![CDATA[
NIL
NIL
NIL
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶NIL¶"), Diff(EQUAL,"NIL¶NIL¶"), Diff(DELETE,"2¶2¶2"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"2¶NIL¶NIL¶NIL¶NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4105" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383617" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶NIL¶NIL¶NIL¶T¶"), Diff(EQUAL,"T¶T¶T¶T¶")]]]></diff>
  </Command>
  <Command __id="4106" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383617" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶T¶T¶T¶"), Diff(INSERT,"T¶")]]]></diff>
  </Command>
  <Command __id="4107" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383617" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T¶T¶T¶T"), Diff(INSERT,"est execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4108" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383618" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4109" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383618" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4110" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383619" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):9"), Diff(INSERT,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4111" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383620" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4112" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383621" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4113" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383622" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"GreaterTestedTwoResults"), Diff(INSERT,"LessTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4114" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383622" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4115" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383623" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4116" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383624" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4117" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383625" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4118" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383625" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4119" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383626" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4120" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383626" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4121" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383627" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4122" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383628" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4123" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383628" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4124" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383629" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4125" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383629" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4126" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383630" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4127" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383630" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4128" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383631" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4129" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383632" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4130" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383632" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4131" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383633" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4132" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383633" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4133" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383635" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:OrTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4134" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383636" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:OrTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4135" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383636" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4136" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383637" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4137" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383637" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4138" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383638" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4139" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383639" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4140" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383639" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4141" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383640" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4142" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383641" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4143" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383641" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4144" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383642" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4145" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383642" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4146" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383643" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4147" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383644" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4148" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383645" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4149" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383645" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4150" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383646" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4151" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383646" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4152" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383647" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4153" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383648" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4154" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383649" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases


Test execution time (ms):1
Test Result:ComparatorEvaluatorCodeReuse,0.0% complete,0.0,10.0,Preceding test CondTestedResultsChecker failed:

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):0"), Diff(INSERT,"Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases¶¶¶Test execution time (ms):1¶Test Result:ComparatorEvaluatorCodeReuse,0.0% complete,0.0,10.0,Preceding test CondTestedResultsChecker failed:¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4155" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383650" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases¶¶¶Test execution time (ms):1¶Test Result:ComparatorEvaluatorCodeReuse,0.0% complete,0.0,10.0,Preceding test CondTestedResultsChecker failed:¶"), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4156" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383651" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):0"), Diff(INSERT,"Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4157" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383651" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4158" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383651" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4159" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383652" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4160" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383653" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4161" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383653" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4162" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383653" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4163" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383654" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4164" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383655" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainCallsSkeletonMain,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:MainCallsSkeletonMain,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4165" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383656" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:LoadCallsReadAllLines,0.0% complete,0.0,0.0,No checkstyle output, check console error messages


Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Main"), Diff(INSERT,"Load"), Diff(EQUAL,"Calls"), Diff(DELETE,"SkeletonMain"), Diff(INSERT,"ReadAllLines"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4166" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383657" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:LoadCalls"), Diff(DELETE,"ReadAllLines"), Diff(INSERT,"TAtomFactory"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4167" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383657" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LoadCalls"), Diff(DELETE,"T"), Diff(INSERT,"Nil"), Diff(EQUAL,"AtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4168" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383657" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4169" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383658" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4170" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383658" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4171" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383658" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4172" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383659" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4173" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383659" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4174" _type="ConsoleOutput" date="Tue Nov 21 11:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3383664" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:LTECalls"), Diff(DELETE,"T"), Diff(INSERT,"Nil"), Diff(EQUAL,"AtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶¶Test execution time (ms):0¶Test Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶")]]]></diff>
  </Command>
  <Command __id="4175" _type="ShellCommand" date="Tue Nov 21 11:50:44 EST 2023" starttimestamp="1700582044267" timestamp="3400133" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4176" _type="ShellCommand" date="Tue Nov 21 11:50:45 EST 2023" starttimestamp="1700582044267" timestamp="3401320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4177" _type="ShellCommand" date="Tue Nov 21 11:51:05 EST 2023" starttimestamp="1700582044267" timestamp="3421432" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4179" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:51:21 EST 2023" starttimestamp="1700582044267" timestamp="3437327" />
  <Command __id="4180" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:51:21 EST 2023" starttimestamp="1700582044267" timestamp="3437328" />
  <Command __id="4181" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:22 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3438276" type="Run" />
  <Command __id="4182" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:22 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3438276" type="Run" />
  <Command __id="4183" _type="ShellCommand" date="Tue Nov 21 11:51:22 EST 2023" starttimestamp="1700582044267" timestamp="3438278" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4184" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3439103" type="Run" />
  <Command __id="4185" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3439103" type="Run" />
  <Command __id="4186" _type="ShellCommand" date="Tue Nov 21 11:51:23 EST 2023" starttimestamp="1700582044267" timestamp="3439425" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4187" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443209" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4188" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443209" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4189" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443214" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4190" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443215" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4191" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443215" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4192" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443216" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4193" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443232" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4194" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443233" type="ConsoleOutput">
    <outputString><![CDATA[;
(2 . 3)
;
(5)
;
(LIST 1 2)
;
(LIST 3 4)
;
((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,";¶(2 . 3)¶;¶(5)¶;¶(LIST 1 2)¶;¶(LIST 3 4)¶;¶((+ 1 2))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4195" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443233" type="ConsoleOutput">
    <outputString><![CDATA[;
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶("), Diff(DELETE,"2 . 3)¶;¶(5)¶;¶(LIST 1 2)¶;¶(LIST 3 4)¶;¶((+ 1 2"), Diff(INSERT,"(+ 3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="4196" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443234" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,";¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4197" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443234" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4198" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443235" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4199" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443235" type="ConsoleOutput">
    <outputString><![CDATA[NIL
;
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL¶;¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4200" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443235" type="ConsoleOutput">
    <outputString><![CDATA[;
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶;¶NIL"), Diff(INSERT,";¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4201" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443235" type="ConsoleOutput">
    <outputString><![CDATA[;
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶T¶")]]]></diff>
  </Command>
  <Command __id="4202" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443235" type="ConsoleOutput">
    <outputString><![CDATA[;
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4203" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443235" type="ConsoleOutput">
    <outputString><![CDATA[;
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4204" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4205" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶T¶")]]]></diff>
  </Command>
  <Command __id="4206" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4207" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4208" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4209" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"4"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4210" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4211" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443236" type="ConsoleOutput">
    <outputString><![CDATA[;
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,";¶"), Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4212" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443237" type="ConsoleOutput">
    <outputString><![CDATA[;
2
;
NIL
;
T
T
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,";¶2¶"), Diff(EQUAL,";¶NIL¶"), Diff(INSERT,";¶T¶T¶")]]]></diff>
  </Command>
  <Command __id="4213" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443241" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,";¶2¶;¶NIL¶;¶T¶T"), Diff(INSERT,"Test execution time (ms):30"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4214" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443241" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):30"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4215" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443243" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4216" _type="ConsoleOutput" date="Tue Nov 21 11:51:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3443244" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):32"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4219" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:44 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3460026" type="Run" />
  <Command __id="4220" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:44 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3460026" type="Run" />
  <Command __id="4221" _type="ShellCommand" date="Tue Nov 21 11:51:44 EST 2023" starttimestamp="1700582044267" timestamp="3460055" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4222" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:51:44 EST 2023" starttimestamp="1700582044267" timestamp="3460652" />
  <Command __id="4223" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:51:44 EST 2023" starttimestamp="1700582044267" timestamp="3460652" />
  <Command __id="4224" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3460810" type="Run" />
  <Command __id="4225" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:51:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3460810" type="Run" />
  <Command __id="4226" _type="ShellCommand" date="Tue Nov 21 11:51:45 EST 2023" starttimestamp="1700582044267" timestamp="3461107" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4227" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465289" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4228" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465290" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4229" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465297" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):5¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="4230" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465298" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):5¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="4231" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465313" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4232" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465315" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4233" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465316" type="ConsoleOutput">
    <outputString><![CDATA[2
3
(3 4)
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2¶3¶(3 4)¶NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4234" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465317" type="ConsoleOutput">
    <outputString><![CDATA[T
T
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶3¶(3 4)¶NIL"), Diff(INSERT,"T¶T"), Diff(EQUAL,"¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4235" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465317" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶T¶"), Diff(DELETE,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4236" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465317" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶"), Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="4237" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465317" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4238" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465317" type="ConsoleOutput">
    <outputString><![CDATA[2
4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2¶4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4239" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465318" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶4"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4240" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465318" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4241" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465318" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4242" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465318" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4243" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465318" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4244" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465318" type="ConsoleOutput">
    <outputString><![CDATA[T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4245" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465322" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T"), Diff(INSERT,"est execution time (ms):31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4246" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465322" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):31"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4247" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465324" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4248" _type="ConsoleOutput" date="Tue Nov 21 11:51:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3465325" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):33"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4249" _type="ShellCommand" date="Tue Nov 21 11:51:52 EST 2023" starttimestamp="1700582044267" timestamp="3467815" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4250" _type="ShellCommand" date="Tue Nov 21 11:52:00 EST 2023" starttimestamp="1700582044267" timestamp="3475748" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4251" _type="ShellCommand" date="Tue Nov 21 11:52:01 EST 2023" starttimestamp="1700582044267" timestamp="3477600" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4252" _type="ShellCommand" date="Tue Nov 21 11:52:02 EST 2023" starttimestamp="1700582044267" timestamp="3478127" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4253" _type="ShellCommand" date="Tue Nov 21 11:52:04 EST 2023" starttimestamp="1700582044267" timestamp="3480506" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4254" _type="ShellCommand" date="Tue Nov 21 11:52:05 EST 2023" starttimestamp="1700582044267" timestamp="3481210" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4255" _type="ShellCommand" date="Tue Nov 21 11:52:06 EST 2023" starttimestamp="1700582044267" timestamp="3482010" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4256" _type="ShellCommand" date="Tue Nov 21 11:52:08 EST 2023" starttimestamp="1700582044267" timestamp="3483819" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4257" _type="ConsoleOutput" date="Tue Nov 21 11:52:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3515350" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:Con"), Diff(DELETE,"d"), Diff(INSERT,"s"), Diff(EQUAL,"Tested"), Diff(DELETE,"Results"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"Expecting in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4262" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:53:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3541058" type="Run" />
  <Command __id="4263" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:53:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3541058" type="Run" />
  <Command __id="4264" _type="ShellCommand" date="Tue Nov 21 11:53:05 EST 2023" starttimestamp="1700582044267" timestamp="3541364" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4265" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544114" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="4266" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544116" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4267" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544120" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4268" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544121" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4269" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544121" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4270" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544124" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4271" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544137" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4272" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544139" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4273" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544139" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4274" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544140" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4275" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544140" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4276" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544140" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4277" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544140" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4278" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4279" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="4280" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4281" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4282" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4283" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="4284" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4285" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4286" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544141" type="ConsoleOutput">
    <outputString><![CDATA[4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4287" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544142" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"4"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4288" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544142" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4289" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544142" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4290" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544142" type="ConsoleOutput">
    <outputString><![CDATA[2
NIL
T
T
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"2¶"), Diff(EQUAL,"NIL¶"), Diff(INSERT,"T¶T¶")]]]></diff>
  </Command>
  <Command __id="4291" _type="LocalChecksRawCommand" date="Tue Nov 21 11:53:08 EST 2023" starttimestamp="1700582044267" timestamp="3544144">
    <CSVRow><![CDATA[205,Tue Nov 21 11:52:39 EST 2023,52,0,ConsTestedChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,112,1,false, , , ,ConsTestedChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4292" _type="LocalChecksRawCommand" date="Tue Nov 21 11:53:08 EST 2023" starttimestamp="1700582044267" timestamp="3544144">
    <CSVRow><![CDATA[205,Tue Nov 21 11:52:39 EST 2023,52,0,ConsTestedChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,112,1,false, , , ,ConsTestedChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4293" _type="LocalChecksRawCommand" date="Tue Nov 21 11:53:08 EST 2023" starttimestamp="1700582044267" timestamp="3544144">
    <CSVRow><![CDATA[206,Tue Nov 21 11:52:41 EST 2023,52,0,ConsTestedTwoResultsChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,112,2,false, , , ,ConsTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4294" _type="LocalChecksRawCommand" date="Tue Nov 21 11:53:08 EST 2023" starttimestamp="1700582044267" timestamp="3544144">
    <CSVRow><![CDATA[206,Tue Nov 21 11:52:41 EST 2023,52,0,ConsTestedTwoResultsChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,112,2,false, , , ,ConsTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4295" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544146" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶NIL¶T¶T"), Diff(INSERT,"Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4296" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544147" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4297" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544147" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4298" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544149" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4299" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544149" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4300" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544151" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4301" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544152" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4302" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544152" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4303" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544153" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4304" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544154" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4305" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544155" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4306" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544156" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4307" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544158" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4308" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544159" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4309" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544159" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4310" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544160" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4311" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544161" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4312" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544162" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4313" _type="ConsoleOutput" date="Tue Nov 21 11:53:08 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3544166" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Cond"), Diff(EQUAL,"Tested"), Diff(DELETE,"Two"), Diff(EQUAL,"ResultsChecker,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"0.0,"), Diff(INSERT,"Expecting in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4314" _type="ShellCommand" date="Tue Nov 21 11:53:12 EST 2023" starttimestamp="1700582044267" timestamp="3548436" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4315" _type="ShellCommand" date="Tue Nov 21 11:53:48 EST 2023" starttimestamp="1700582044267" timestamp="3583995" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4316" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:53:48 EST 2023" starttimestamp="1700582044267" timestamp="3584285" />
  <Command __id="4317" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:53:48 EST 2023" starttimestamp="1700582044267" timestamp="3584291" />
  <Command __id="4318" _type="ShellCommand" date="Tue Nov 21 11:53:52 EST 2023" starttimestamp="1700582044267" timestamp="3588538" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4319" _type="ShellCommand" date="Tue Nov 21 11:54:00 EST 2023" starttimestamp="1700582044267" timestamp="3596350" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4320" _type="ShellCommand" date="Tue Nov 21 11:54:01 EST 2023" starttimestamp="1700582044267" timestamp="3597563" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4321" _type="BalloonCommand" date="Tue Nov 21 11:54:04 EST 2023" message="*******************************************
Worked 51 minutes(fixed)/60 minutes(context based) from
Tue Nov 21 10:54:04 EST 2023 to Tue Nov 21 11:54:01 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 12 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LesserEqualEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEqualEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/NotEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LesserEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java
Number of insert: 2926
Number of delete: 3080
" starttimestamp="1700582044267" timestamp="3600052">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[2926]]></insert>
    <startTime><![CDATA[1700582044309]]></startTime>
    <endTime><![CDATA[1700585641830]]></endTime>
    <workTime><![CDATA[51]]></workTime>
    <delete><![CDATA[3080]]></delete>
  </Command>
  <Command __id="4323" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:54:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3630226" type="Run" />
  <Command __id="4324" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:54:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3630226" type="Run" />
  <Command __id="4325" _type="ShellCommand" date="Tue Nov 21 11:54:35 EST 2023" starttimestamp="1700582044267" timestamp="3630885" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4326" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:54:35 EST 2023" starttimestamp="1700582044267" timestamp="3631562" />
  <Command __id="4327" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:54:35 EST 2023" starttimestamp="1700582044267" timestamp="3631564" />
  <Command __id="4328" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:54:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3631892" type="Run" />
  <Command __id="4329" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:54:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3631892" type="Run" />
  <Command __id="4330" _type="ShellCommand" date="Tue Nov 21 11:54:36 EST 2023" starttimestamp="1700582044267" timestamp="3632204" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4331" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635005" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2¶Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4332" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635007" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4333" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635013" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="4334" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635014" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4335" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635030" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4336" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635032" type="ConsoleOutput">
    <outputString><![CDATA[3
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"3¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4337" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635033" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3¶T"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4338" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635034" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4339" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635036" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4340" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635036" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to CONS
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file a call to CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4341" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635036" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to CONS"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4342" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635037" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to QUOTE

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to QUOTE¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4343" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635037" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to QUOTE¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4344" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635038" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ListTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4345" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635038" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to LIST"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4346" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635039" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to EVAL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4347" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635039" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to EVAL"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4348" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635041" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4349" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635041" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4350" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635042" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4351" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635043" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of CONS"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4352" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635043" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4353" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635044" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of QUOTE"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4354" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635045" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4355" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635045" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of LIST"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4356" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635046" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4357" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635046" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of EVAL"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4358" _type="ConsoleOutput" date="Tue Nov 21 11:54:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3635049" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4359" _type="ShellCommand" date="Tue Nov 21 11:54:43 EST 2023" starttimestamp="1700582044267" timestamp="3639046" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4364" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:55:00 EST 2023" starttimestamp="1700582044267" timestamp="3656364" />
  <Command __id="4365" _type="EclipseCommand" commandID="" date="Tue Nov 21 11:55:00 EST 2023" starttimestamp="1700582044267" timestamp="3656365" />
  <Command __id="4366" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:55:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3656637" type="Run" />
  <Command __id="4367" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:55:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3656637" type="Run" />
  <Command __id="4368" _type="ShellCommand" date="Tue Nov 21 11:55:01 EST 2023" starttimestamp="1700582044267" timestamp="3656958" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4369" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660835" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4370" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660836" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4371" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660841" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4372" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660842" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4373" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660842" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4374" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660843" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4375" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660860" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4376" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660861" type="ConsoleOutput">
    <outputString><![CDATA[2
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"2¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4377" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660863" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶T"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4378" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660864" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4379" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660866" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4380" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660866" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to CONS
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file a call to CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4381" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660868" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to QUOTE


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to "), Diff(DELETE,"CONS"), Diff(INSERT,"QUOTE¶¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4382" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660869" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to "), Diff(DELETE,"QUOTE¶¶¶Test execution time (ms):0"), Diff(INSERT,"LIST¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4383" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660869" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to LIST¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4384" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660870" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to EVAL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4385" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660871" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to EVAL"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4386" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660872" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4387" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660872" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4388" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660875" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS


Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4389" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660876" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of "), Diff(DELETE,"CONS¶¶¶Test execution time (ms):1"), Diff(INSERT,"QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4390" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660876" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of QUOTE"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4391" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660877" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4392" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660877" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of LIST"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4393" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660878" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4394" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660879" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of EVAL"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4395" _type="ConsoleOutput" date="Tue Nov 21 11:55:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3660880" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4396" _type="ShellCommand" date="Tue Nov 21 11:55:06 EST 2023" starttimestamp="1700582044267" timestamp="3662674" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4401" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:55:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3701674" type="Run" />
  <Command __id="4402" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:55:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3701674" type="Run" />
  <Command __id="4403" _type="ShellCommand" date="Tue Nov 21 11:55:46 EST 2023" starttimestamp="1700582044267" timestamp="3701990" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4404" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704672" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4405" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704673" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4406" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704678" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4407" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704679" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4408" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704681" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4409" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704695" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4410" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704697" type="ConsoleOutput">
    <outputString><![CDATA[3
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"3¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4411" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704699" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3¶T"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4412" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704699" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4413" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704702" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to CONS

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Loa"), Diff(INSERT,"ConsTeste"), Diff(EQUAL,"dChecker,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"Expecting in test file a call to CONS¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4414" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704703" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to QUOTE


Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to "), Diff(DELETE,"CONS¶"), Diff(INSERT,"QUOTE¶¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4415" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704704" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to "), Diff(DELETE,"QUOTE¶¶¶Test execution time (ms):1"), Diff(INSERT,"LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4416" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704704" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to LIST"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4417" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704705" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to EVAL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4418" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to EVAL"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4419" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704706" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4420" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704707" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4421" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS


Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶¶¶Test execution time (ms):0¶Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE¶¶"), Diff(EQUAL,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4422" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶¶¶Test execution time (ms):0¶Test Result:Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of "), Diff(DELETE,"QUOTE¶¶¶Test execution time (ms):0"), Diff(INSERT,"LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4423" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704710" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of LIST"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4424" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704710" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4425" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704711" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of EVAL"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4426" _type="ConsoleOutput" date="Tue Nov 21 11:55:48 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3704711" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4427" _type="ShellCommand" date="Tue Nov 21 11:55:50 EST 2023" starttimestamp="1700582044267" timestamp="3706253" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4428" _type="LocalChecksRawCommand" date="Tue Nov 21 11:55:50 EST 2023" starttimestamp="1700582044267" timestamp="3706255">
    <CSVRow><![CDATA[210,Tue Nov 21 11:55:48 EST 2023,38,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,116,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4429" _type="LocalChecksRawCommand" date="Tue Nov 21 11:55:50 EST 2023" starttimestamp="1700582044267" timestamp="3706255">
    <CSVRow><![CDATA[210,Tue Nov 21 11:55:48 EST 2023,38,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,116,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4434" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:56:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3727195" type="Run" />
  <Command __id="4435" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:56:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3727195" type="Run" />
  <Command __id="4436" _type="ShellCommand" date="Tue Nov 21 11:56:11 EST 2023" starttimestamp="1700582044267" timestamp="3727518" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4437" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729701" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4438" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729702" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4439" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729707" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4440" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):5
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):5¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4441" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729725" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):5¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4442" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729726" type="ConsoleOutput">
    <outputString><![CDATA[2
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"2¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4443" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729729" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
Test Result:LoadChecker,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶T"), Diff(INSERT,"Test execution time (ms):25¶Test Result:LoadChecker,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4444" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729730" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"25¶Test Result:LoadChecker,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4445" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729731" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to CONS

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file a call to CONS¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4446" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729732" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to CONS¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4447" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729732" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to QUOTE

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to QUOTE¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4448" _type="ConsoleOutput" date="Tue Nov 21 11:56:13 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729732" type="ConsoleOutput">
    <outputString><![CDATA[

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to QUOTE¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4449" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729733" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ListTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4450" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729733" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to LIST"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4451" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729734" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to EVAL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4452" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729734" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to EVAL"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4453" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729737" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,


Test execution time (ms):0
Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):0¶Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4454" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729737" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:CondTestedChecker,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):0¶Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶"), Diff(INSERT,"¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4455" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729738" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4456" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729738" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of QUOTE"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4457" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729739" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4458" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729739" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of LIST"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4459" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729740" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4460" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729741" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of EVAL"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4461" _type="ConsoleOutput" date="Tue Nov 21 11:56:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3729741" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4462" _type="ShellCommand" date="Tue Nov 21 11:56:15 EST 2023" starttimestamp="1700582044267" timestamp="3730950" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4467" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:56:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3768676" type="Run" />
  <Command __id="4468" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:56:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3768676" type="Run" />
  <Command __id="4469" _type="ShellCommand" date="Tue Nov 21 11:56:53 EST 2023" starttimestamp="1700582044267" timestamp="3768995" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4470" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771369" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4471" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771369" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4472" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771376" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶¶"), Diff(INSERT,"Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="4473" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771378" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="4474" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771394" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4475" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771396" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
(LIST 3 4)
((+ 1 2))
((+ 3 4))
2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4476" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771397" type="ConsoleOutput">
    <outputString><![CDATA[3
1
NIL
NIL
T
T
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(LIST 1 2)¶(LIST 3 4)¶((+ 1 2))¶((+ 3 4))¶2"), Diff(INSERT,"3¶1¶NIL¶NIL¶T¶T¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4477" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771398" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
T
NIL
2
4
NIL
1
NIL
2
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3¶1"), Diff(INSERT,"NIL¶T¶T"), Diff(EQUAL,"¶NIL¶"), Diff(INSERT,"2¶4¶"), Diff(EQUAL,"NIL¶"), Diff(DELETE,"T"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"NIL¶2"), Diff(EQUAL,"¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4478" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771398" type="ConsoleOutput">
    <outputString><![CDATA[T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶"), Diff(EQUAL,"T¶T¶"), Diff(DELETE,"NIL¶2¶4¶NIL¶1¶NIL¶2¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4479" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771401" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T"), Diff(INSERT,"est execution time (ms):31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4480" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771402" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):31"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4481" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771404" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4482" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771404" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4483" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771404" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4484" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771405" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4485" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771406" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4486" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771407" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4487" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771407" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4488" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771408" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4489" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771409" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4490" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771411" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:CondTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4491" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771412" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:Con"), Diff(DELETE,"d"), Diff(INSERT,"s"), Diff(EQUAL,"Tested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4492" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771412" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4493" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771414" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4494" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771414" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4495" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771415" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4496" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771416" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4497" _type="ConsoleOutput" date="Tue Nov 21 11:56:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3771423" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4498" _type="ShellCommand" date="Tue Nov 21 11:57:00 EST 2023" starttimestamp="1700582044267" timestamp="3775964" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4506" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:57:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3782179" type="Run" />
  <Command __id="4507" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:57:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3782179" type="Run" />
  <Command __id="4508" _type="ShellCommand" date="Tue Nov 21 11:57:06 EST 2023" starttimestamp="1700582044267" timestamp="3782474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4509" _type="ConsoleOutput" date="Tue Nov 21 11:57:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3786486" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(INSERT,"execution time (ms):13"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4510" _type="ConsoleOutput" date="Tue Nov 21 11:57:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3786488" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):13"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4511" _type="ConsoleOutput" date="Tue Nov 21 11:57:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3786488" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4512" _type="ConsoleOutput" date="Tue Nov 21 11:57:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3786489" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4513" _type="ConsoleOutput" date="Tue Nov 21 11:57:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3788687" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClass"), Diff(INSERT,"execution time (ms):1¶Test Result:TestLispFile"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4514" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790516" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4515" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790519" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4516" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790522" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4517" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790523" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4518" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790523" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4519" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790524" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4520" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790527" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4521" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790528" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4522" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790529" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4523" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790531" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4524" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790532" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4525" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790533" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4526" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790536" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4527" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790537" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4528" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790539" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4529" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790539" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4530" _type="ConsoleOutput" date="Tue Nov 21 11:57:14 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3790540" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4531" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794601" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(5)
(5)
(5)
(5)
(5)
(5)
(5)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 1 2)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
(LIST 3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL)))"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 1 2)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4)¶(LIST 3 4"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4532" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794603" type="ConsoleOutput">
    <outputString><![CDATA[
(LIST 3 4)
(LIST 3 4)
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
2
2
2
2
2
2
2
3
3
3
3
3
3
3
1
1
1
1
1
1
1
NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(LIST"), Diff(INSERT,"¶(LIST 3 4)¶(LIST 3 4)¶((+ 1 2))¶((+ 1 2))¶((+"), Diff(EQUAL," 1 2)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 1 2)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 1 2)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 1 2)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 1 2)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST 1 2)¶(LIST 1 2)¶(LIST"), Diff(INSERT,"(+ 3 4))¶((+ 3 4))¶((+"), Diff(EQUAL," 3 4)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 3 4)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 3 4)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 3 4)"), Diff(INSERT,")"), Diff(EQUAL,"¶("), Diff(DELETE,"LIST"), Diff(INSERT,"(+"), Diff(EQUAL," 3 4)"), Diff(INSERT,")¶2¶2¶2¶2¶2¶2¶2¶3¶3¶3¶3¶3¶3¶3¶1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4533" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794603" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
T
T
T
T
T
T
T
T
T
T
T
T
T
T
NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶(LIST 3 4)¶(LIST 3 4)¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶2¶2¶2¶2¶2¶2¶2"), Diff(INSERT,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4534" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794603" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶T¶"), Diff(DELETE,"T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="4535" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794604" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(INSERT,"T¶T¶T¶T¶T"), Diff(EQUAL,"¶T¶")]]]></diff>
  </Command>
  <Command __id="4536" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794606" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
NIL
NIL
NIL
NIL
NIL
NIL
NIL
2
2
2
2
2
2
2
4
4
4
4
4
4
4
NIL
NIL
NIL
NIL
NIL
NIL
NIL
1
1
1
1
1
1
1
NIL
NIL
NIL
NIL
NIL
NIL
NIL
2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶T¶T¶T¶T¶T¶"), Diff(INSERT,"T¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶2¶2¶2¶2¶2¶2¶4¶4¶4¶4¶4¶4¶4¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶")]]]></diff>
  </Command>
  <Command __id="4537" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794606" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T¶T¶T¶T¶T¶T¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶2¶2¶2¶2¶2¶2¶4¶4¶4¶4¶4¶4¶4¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2"), Diff(INSERT,"est execution time (ms):11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4538" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794607" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):11"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4539" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794607" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4540" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794610" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4541" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794610" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4542" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794612" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4543" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794613" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4544" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794613" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4545" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794615" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4546" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794615" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4547" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794616" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4548" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794617" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4549" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794621" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4550" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794622" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1"), Diff(INSERT,"EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4551" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794622" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4552" _type="ConsoleOutput" date="Tue Nov 21 11:57:18 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3794623" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4553" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795848" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:AndTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:Cond"), Diff(INSERT,"execution time (ms):1¶"), Diff(EQUAL,"Test"), Diff(DELETE,"ed"), Diff(INSERT," "), Diff(EQUAL,"Result"), Diff(DELETE,"s"), Diff(INSERT,":AndTested"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4554" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795849" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:AndTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4555" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795850" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"And"), Diff(INSERT,"Not"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4556" _type="LocalChecksRawCommand" date="Tue Nov 21 11:57:20 EST 2023" starttimestamp="1700582044267" timestamp="3795850">
    <CSVRow><![CDATA[214,Tue Nov 21 11:57:12 EST 2023,54,0,TestLispFileProvided,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,119,1,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4557" _type="LocalChecksRawCommand" date="Tue Nov 21 11:57:20 EST 2023" starttimestamp="1700582044267" timestamp="3795850">
    <CSVRow><![CDATA[214,Tue Nov 21 11:57:12 EST 2023,54,0,TestLispFileProvided,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,119,1,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4558" _type="LocalChecksRawCommand" date="Tue Nov 21 11:57:20 EST 2023" starttimestamp="1700582044267" timestamp="3795850">
    <CSVRow><![CDATA[215,Tue Nov 21 11:57:14 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,119,2,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4559" _type="LocalChecksRawCommand" date="Tue Nov 21 11:57:20 EST 2023" starttimestamp="1700582044267" timestamp="3795850">
    <CSVRow><![CDATA[215,Tue Nov 21 11:57:14 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,119,2,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4560" _type="LocalChecksRawCommand" date="Tue Nov 21 11:57:20 EST 2023" starttimestamp="1700582044267" timestamp="3795850">
    <CSVRow><![CDATA[216,Tue Nov 21 11:57:18 EST 2023,54,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,119,3,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(20.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4561" _type="LocalChecksRawCommand" date="Tue Nov 21 11:57:20 EST 2023" starttimestamp="1700582044267" timestamp="3795850">
    <CSVRow><![CDATA[216,Tue Nov 21 11:57:18 EST 2023,54,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,119,3,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(20.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4562" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795851" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4563" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795852" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4564" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795852" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4565" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795855" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:OrTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4566" _type="ConsoleOutput" date="Tue Nov 21 11:57:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3795856" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:OrTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4567" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796901" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"OrTestedTwoResults"), Diff(INSERT,"GreaterTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4568" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796902" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:GreaterTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4569" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796902" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4570" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796904" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LessTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4571" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796905" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LessTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4572" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796905" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4573" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796906" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4574" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796907" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4575" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796908" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4576" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796908" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4577" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796910" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LorETestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4578" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796911" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LorETested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4579" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796911" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4580" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796912" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project "), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4581" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796913" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4582" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796913" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4583" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796914" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4584" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796914" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4585" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796915" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4586" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796918" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4587" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796918" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4588" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796918" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4589" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796919" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4590" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796920" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4591" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796920" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4592" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796921" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4593" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796921" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4594" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796922" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4595" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796922" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4596" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796923" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4597" _type="ConsoleOutput" date="Tue Nov 21 11:57:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="3796924" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4064" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:50:20 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3376263">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4503" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:57:02 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3778478">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4598" _type="ShellCommand" date="Tue Nov 21 11:57:37 EST 2023" starttimestamp="1700582044267" timestamp="3813096" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4599" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:57:37 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3813106" type="Run" />
  <Command __id="4600" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 11:57:37 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3813106" type="Run" />
  <Command __id="4601" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 11:57:38 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="3813971" />
  <Command __id="4602" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 11:57:38 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="3813971" />
  <Command __id="4603" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:57:51 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3827065">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4604" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:57:51 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3827130" />
  <Command __id="4605" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:57:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3828392">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4606" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 11:57:52 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="3828449" />
  <Command __id="4608" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 11:57:53 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="3829262" />
  <Command __id="4609" _type="MoveCaretCommand" caretOffset="1557" date="Tue Nov 21 11:57:58 EST 2023" docOffset="1686" starttimestamp="1700582044267" timestamp="3834114" />
  <Command __id="4610" _type="MoveCaretCommand" caretOffset="2149" date="Tue Nov 21 11:58:00 EST 2023" docOffset="2278" starttimestamp="1700582044267" timestamp="3836086" />
  <Command __id="4612" _type="SelectTextCommand" caretOffset="100" date="Tue Nov 21 11:58:00 EST 2023" end="100" start="81" starttimestamp="1700582044267" timestamp="3836617" />
  <Command __id="4613" _type="MoveCaretCommand" caretOffset="408" date="Tue Nov 21 11:58:02 EST 2023" docOffset="534" starttimestamp="1700582044267" timestamp="3838662" />
  <Command __id="4614" _type="MoveCaretCommand" caretOffset="441" date="Tue Nov 21 11:58:03 EST 2023" docOffset="567" starttimestamp="1700582044267" timestamp="3839361" />
  <Command __id="4615" _type="MoveCaretCommand" caretOffset="441" date="Tue Nov 21 11:58:04 EST 2023" docOffset="567" starttimestamp="1700582044267" timestamp="3840026" />
  <Command __id="4616" _type="MoveCaretCommand" caretOffset="480" date="Tue Nov 21 11:58:04 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="3840298" />
  <Command __id="4617" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 11:58:04 EST 2023" docOffset="545" starttimestamp="1700582044267" timestamp="3840635" />
  <Command __id="4618" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 11:58:05 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="3841532" />
  <Command __id="4619" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 11:58:11 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="3847255" />
  <Command __id="4620" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 11:58:13 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="3849020" />
  <Command __id="4621" _type="MoveCaretCommand" caretOffset="624" date="Tue Nov 21 11:58:13 EST 2023" docOffset="750" starttimestamp="1700582044267" timestamp="3849431" />
  <Command __id="4622" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 11:58:14 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="3849922" />
  <Command __id="4623" _type="MoveCaretCommand" caretOffset="665" date="Tue Nov 21 11:58:14 EST 2023" docOffset="791" starttimestamp="1700582044267" timestamp="3850340" />
  <Command __id="4624" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 11:58:15 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="3850736" />
  <Command __id="4625" _type="ShellCommand" date="Tue Nov 21 11:58:18 EST 2023" starttimestamp="1700582044267" timestamp="3854399" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4626" _type="ShellCommand" date="Tue Nov 21 11:58:37 EST 2023" starttimestamp="1700582044267" timestamp="3872855" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4627" _type="ShellCommand" date="Tue Nov 21 12:03:10 EST 2023" starttimestamp="1700582044267" timestamp="4146548" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4628" _type="ShellCommand" date="Tue Nov 21 12:03:48 EST 2023" starttimestamp="1700582044267" timestamp="4183921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4629" _type="ShellCommand" date="Tue Nov 21 12:04:35 EST 2023" starttimestamp="1700582044267" timestamp="4231382" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4630" _type="ShellCommand" date="Tue Nov 21 12:08:08 EST 2023" starttimestamp="1700582044267" timestamp="4444590" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4631" _type="MoveCaretCommand" caretOffset="441" date="Tue Nov 21 12:08:37 EST 2023" docOffset="567" starttimestamp="1700582044267" timestamp="4473403" />
  <Command __id="4632" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 12:08:37 EST 2023" docOffset="545" starttimestamp="1700582044267" timestamp="4473694" />
  <Command __id="4633" _type="MoveCaretCommand" caretOffset="407" date="Tue Nov 21 12:08:39 EST 2023" docOffset="533" starttimestamp="1700582044267" timestamp="4474970" />
  <Command __id="4634" _type="SelectTextCommand" caretOffset="415" date="Tue Nov 21 12:08:39 EST 2023" end="415" start="390" starttimestamp="1700582044267" timestamp="4475084" />
  <Command __id="4635" _type="SelectTextCommand" caretOffset="420" date="Tue Nov 21 12:08:39 EST 2023" end="420" start="375" starttimestamp="1700582044267" timestamp="4475243" />
  <Command __id="4636" _type="MoveCaretCommand" caretOffset="406" date="Tue Nov 21 12:08:40 EST 2023" docOffset="532" starttimestamp="1700582044267" timestamp="4475767" />
  <Command __id="4637" _type="SelectTextCommand" caretOffset="415" date="Tue Nov 21 12:08:40 EST 2023" end="415" start="390" starttimestamp="1700582044267" timestamp="4475874" />
  <Command __id="4638" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 12:08:41 EST 2023" docOffset="545" starttimestamp="1700582044267" timestamp="4477378" />
  <Command __id="4639" _type="MoveCaretCommand" caretOffset="665" date="Tue Nov 21 12:08:45 EST 2023" docOffset="791" starttimestamp="1700582044267" timestamp="4481511" />
  <Command __id="4640" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:46 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4481956" />
  <Command __id="4641" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:08:46 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="4482478" />
  <Command __id="4642" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:08:47 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4483496" />
  <Command __id="4643" _type="MoveCaretCommand" caretOffset="991" date="Tue Nov 21 12:08:48 EST 2023" docOffset="1117" starttimestamp="1700582044267" timestamp="4484331" />
  <Command __id="4644" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:08:48 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="4484566" />
  <Command __id="4645" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:49 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4484938" />
  <Command __id="4646" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 12:08:49 EST 2023" docOffset="1008" starttimestamp="1700582044267" timestamp="4485636" />
  <Command __id="4647" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:50 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4485846" />
  <Command __id="4648" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:50 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4486078" />
  <Command __id="4649" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:50 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4486288" />
  <Command __id="4650" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:50 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4486479" />
  <Command __id="4651" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:50 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4486672" />
  <Command __id="4652" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:51 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4486850" />
  <Command __id="4653" _type="MoveCaretCommand" caretOffset="768" date="Tue Nov 21 12:08:51 EST 2023" docOffset="894" starttimestamp="1700582044267" timestamp="4487048" />
  <Command __id="4654" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:51 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4487247" />
  <Command __id="4655" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:51 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4487435" />
  <Command __id="4656" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:51 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4487641" />
  <Command __id="4657" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:52 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4487833" />
  <Command __id="4658" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:52 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4488048" />
  <Command __id="4659" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:52 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4488253" />
  <Command __id="4660" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:52 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4488477" />
  <Command __id="4661" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:53 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4488843" />
  <Command __id="4662" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:53 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4489023" />
  <Command __id="4663" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:53 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4489210" />
  <Command __id="4664" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:53 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4489404" />
  <Command __id="4665" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:53 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4489714" />
  <Command __id="4666" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:54 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4489899" />
  <Command __id="4667" _type="MoveCaretCommand" caretOffset="768" date="Tue Nov 21 12:08:54 EST 2023" docOffset="894" starttimestamp="1700582044267" timestamp="4490098" />
  <Command __id="4668" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:54 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4490406" />
  <Command __id="4669" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:54 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4490699" />
  <Command __id="4670" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 12:08:55 EST 2023" docOffset="1008" starttimestamp="1700582044267" timestamp="4490944" />
  <Command __id="4671" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:55 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4491144" />
  <Command __id="4672" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:55 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4491310" />
  <Command __id="4673" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:55 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4491550" />
  <Command __id="4674" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:56 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4491742" />
  <Command __id="4675" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:56 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4491956" />
  <Command __id="4676" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:56 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4492144" />
  <Command __id="4677" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:57 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4493234" />
  <Command __id="4678" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:57 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4493708" />
  <Command __id="4679" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:58 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4493938" />
  <Command __id="4680" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:58 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4494503" />
  <Command __id="4681" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:08:59 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4495362" />
  <Command __id="4682" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:08:59 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4495682" />
  <Command __id="4683" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:00 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4495889" />
  <Command __id="4684" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 12:09:00 EST 2023" docOffset="1008" starttimestamp="1700582044267" timestamp="4496088" />
  <Command __id="4685" _type="MoveCaretCommand" caretOffset="835" date="Tue Nov 21 12:09:00 EST 2023" docOffset="961" starttimestamp="1700582044267" timestamp="4496470" />
  <Command __id="4686" _type="ShellCommand" date="Tue Nov 21 12:09:01 EST 2023" starttimestamp="1700582044267" timestamp="4497042" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4687" _type="ShellCommand" date="Tue Nov 21 12:09:28 EST 2023" starttimestamp="1700582044267" timestamp="4524125" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4688" _type="ShellCommand" date="Tue Nov 21 12:09:29 EST 2023" starttimestamp="1700582044267" timestamp="4525089" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4689" _type="ShellCommand" date="Tue Nov 21 12:09:29 EST 2023" starttimestamp="1700582044267" timestamp="4525655" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4690" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:32 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4528244" />
  <Command __id="4691" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:32 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4528662" />
  <Command __id="4692" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:33 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4529122" />
  <Command __id="4693" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:33 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4529510" />
  <Command __id="4694" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:34 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4529789" />
  <Command __id="4695" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:34 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4530054" />
  <Command __id="4696" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:34 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4530324" />
  <Command __id="4697" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:34 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4530568" />
  <Command __id="4698" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:35 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4530899" />
  <Command __id="4699" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:35 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4531135" />
  <Command __id="4700" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:35 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4531407" />
  <Command __id="4701" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:35 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4531596" />
  <Command __id="4702" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:36 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4531865" />
  <Command __id="4703" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:36 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4532420" />
  <Command __id="4704" _type="MoveCaretCommand" caretOffset="837" date="Tue Nov 21 12:09:37 EST 2023" docOffset="963" starttimestamp="1700582044267" timestamp="4532794" />
  <Command __id="4705" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:37 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4532985" />
  <Command __id="4706" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:37 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4533221" />
  <Command __id="4707" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:37 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4533419" />
  <Command __id="4708" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:37 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4533652" />
  <Command __id="4709" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:38 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4534175" />
  <Command __id="4710" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:38 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4534396" />
  <Command __id="4711" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:38 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4534590" />
  <Command __id="4712" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:39 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4534782" />
  <Command __id="4713" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:39 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4534980" />
  <Command __id="4714" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:39 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4535199" />
  <Command __id="4715" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:39 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4535371" />
  <Command __id="4716" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:39 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4535583" />
  <Command __id="4717" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:40 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4535858" />
  <Command __id="4718" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:09:40 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4536058" />
  <Command __id="4719" _type="MoveCaretCommand" caretOffset="937" date="Tue Nov 21 12:09:40 EST 2023" docOffset="1063" starttimestamp="1700582044267" timestamp="4536491" />
  <Command __id="4720" _type="MoveCaretCommand" caretOffset="946" date="Tue Nov 21 12:09:41 EST 2023" docOffset="1072" starttimestamp="1700582044267" timestamp="4536738" />
  <Command __id="4721" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:09:41 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4537276" />
  <Command __id="4722" _type="MoveCaretCommand" caretOffset="938" date="Tue Nov 21 12:09:41 EST 2023" docOffset="1064" starttimestamp="1700582044267" timestamp="4537665" />
  <Command __id="4723" _type="MoveCaretCommand" caretOffset="933" date="Tue Nov 21 12:09:42 EST 2023" docOffset="1059" starttimestamp="1700582044267" timestamp="4537951" />
  <Command __id="4724" _type="MoveCaretCommand" caretOffset="941" date="Tue Nov 21 12:09:42 EST 2023" docOffset="1067" starttimestamp="1700582044267" timestamp="4538225" />
  <Command __id="4725" _type="MoveCaretCommand" caretOffset="931" date="Tue Nov 21 12:09:42 EST 2023" docOffset="1057" starttimestamp="1700582044267" timestamp="4538442" />
  <Command __id="4726" _type="MoveCaretCommand" caretOffset="930" date="Tue Nov 21 12:09:43 EST 2023" docOffset="1056" starttimestamp="1700582044267" timestamp="4538811" />
  <Command __id="4727" _type="MoveCaretCommand" caretOffset="942" date="Tue Nov 21 12:09:43 EST 2023" docOffset="1068" starttimestamp="1700582044267" timestamp="4539211" />
  <Command __id="4728" _type="MoveCaretCommand" caretOffset="937" date="Tue Nov 21 12:09:45 EST 2023" docOffset="1063" starttimestamp="1700582044267" timestamp="4541120" />
  <Command __id="4729" _type="MoveCaretCommand" caretOffset="943" date="Tue Nov 21 12:09:45 EST 2023" docOffset="1069" starttimestamp="1700582044267" timestamp="4541465" />
  <Command __id="4730" _type="MoveCaretCommand" caretOffset="855" date="Tue Nov 21 12:09:48 EST 2023" docOffset="981" starttimestamp="1700582044267" timestamp="4543747" />
  <Command __id="4731" _type="MoveCaretCommand" caretOffset="863" date="Tue Nov 21 12:09:49 EST 2023" docOffset="989" starttimestamp="1700582044267" timestamp="4544820" />
  <Command __id="4732" _type="SelectTextCommand" caretOffset="870" date="Tue Nov 21 12:09:49 EST 2023" end="870" start="844" starttimestamp="1700582044267" timestamp="4544973" />
  <Command __id="4733" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:49 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4545503" />
  <Command __id="4734" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:50 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4545878" />
  <Command __id="4735" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:09:50 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4546319" />
  <Command __id="4736" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:50 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4546570" />
  <Command __id="4737" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:09:51 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4546775" />
  <Command __id="4738" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:54 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4550089" />
  <Command __id="4739" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:54 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4550574" />
  <Command __id="4740" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:55 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4550794" />
  <Command __id="4741" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:55 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4551022" />
  <Command __id="4742" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:55 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4551458" />
  <Command __id="4743" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:55 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4551717" />
  <Command __id="4744" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:56 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4552566" />
  <Command __id="4745" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:57 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4552882" />
  <Command __id="4746" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:58 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4554101" />
  <Command __id="4747" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:58 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4554145" />
  <Command __id="4748" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:59 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4554853" />
  <Command __id="4749" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:59 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4555073" />
  <Command __id="4750" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:09:59 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4555518" />
  <Command __id="4751" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:09:59 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4555723" />
  <Command __id="4752" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:00 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4556007" />
  <Command __id="4753" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:10:00 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4556240" />
  <Command __id="4754" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:00 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4556567" />
  <Command __id="4755" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:10:01 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4556830" />
  <Command __id="4756" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:01 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4557007" />
  <Command __id="4757" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:01 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4557306" />
  <Command __id="4758" _type="ShellCommand" date="Tue Nov 21 12:10:02 EST 2023" starttimestamp="1700582044267" timestamp="4557785" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4759" _type="ShellCommand" date="Tue Nov 21 12:10:02 EST 2023" starttimestamp="1700582044267" timestamp="4558005" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4760" _type="ShellCommand" date="Tue Nov 21 12:10:02 EST 2023" starttimestamp="1700582044267" timestamp="4558494" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4761" _type="ShellCommand" date="Tue Nov 21 12:10:03 EST 2023" starttimestamp="1700582044267" timestamp="4559022" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4762" _type="ShellCommand" date="Tue Nov 21 12:10:08 EST 2023" starttimestamp="1700582044267" timestamp="4564203" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4763" _type="ShellCommand" date="Tue Nov 21 12:10:23 EST 2023" starttimestamp="1700582044267" timestamp="4578828" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4764" _type="ShellCommand" date="Tue Nov 21 12:10:24 EST 2023" starttimestamp="1700582044267" timestamp="4579993" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4765" _type="ShellCommand" date="Tue Nov 21 12:10:46 EST 2023" starttimestamp="1700582044267" timestamp="4602277" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4766" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:10:47 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4603096" />
  <Command __id="4767" _type="ShellCommand" date="Tue Nov 21 12:10:52 EST 2023" starttimestamp="1700582044267" timestamp="4608435" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4768" _type="ShellCommand" date="Tue Nov 21 12:10:54 EST 2023" starttimestamp="1700582044267" timestamp="4609873" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4769" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:55 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4611089" />
  <Command __id="4770" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:10:55 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4611407" />
  <Command __id="4771" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:55 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4611589" />
  <Command __id="4772" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:56 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4612332" />
  <Command __id="4773" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:10:56 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4612713" />
  <Command __id="4774" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:10:57 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4613184" />
  <Command __id="4775" _type="MoveCaretCommand" caretOffset="939" date="Tue Nov 21 12:10:58 EST 2023" docOffset="1065" starttimestamp="1700582044267" timestamp="4614076" />
  <Command __id="4776" _type="MoveCaretCommand" caretOffset="945" date="Tue Nov 21 12:10:58 EST 2023" docOffset="1071" starttimestamp="1700582044267" timestamp="4614352" />
  <Command __id="4777" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 12:11:08 EST 2023" docOffset="545" starttimestamp="1700582044267" timestamp="4623956" />
  <Command __id="4778" _type="ShellCommand" date="Tue Nov 21 12:11:53 EST 2023" starttimestamp="1700582044267" timestamp="4669327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4779" _type="ShellCommand" date="Tue Nov 21 12:11:54 EST 2023" starttimestamp="1700582044267" timestamp="4670617" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4780" _type="ShellCommand" date="Tue Nov 21 12:12:37 EST 2023" starttimestamp="1700582044267" timestamp="4713549" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4781" _type="ShellCommand" date="Tue Nov 21 12:13:26 EST 2023" starttimestamp="1700582044267" timestamp="4762430" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4782" _type="MoveCaretCommand" caretOffset="1234" date="Tue Nov 21 12:13:26 EST 2023" docOffset="1360" starttimestamp="1700582044267" timestamp="4762502" />
  <Command __id="4783" _type="MoveCaretCommand" caretOffset="1234" date="Tue Nov 21 12:13:27 EST 2023" docOffset="1360" starttimestamp="1700582044267" timestamp="4762988" />
  <Command __id="4784" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:13:27 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4763316" />
  <Command __id="4785" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:13:28 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="4764716" />
  <Command __id="4786" _type="SelectTextCommand" caretOffset="990" date="Tue Nov 21 12:13:29 EST 2023" end="990" start="910" starttimestamp="1700582044267" timestamp="4764769" />
  <Command __id="4787" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:13:29 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="4765339" />
  <Command __id="4788" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:13:29 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4765714" />
  <Command __id="4789" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 12:13:30 EST 2023" docOffset="1008" starttimestamp="1700582044267" timestamp="4766314" />
  <Command __id="4790" _type="MoveCaretCommand" caretOffset="944" date="Tue Nov 21 12:13:30 EST 2023" docOffset="1070" starttimestamp="1700582044267" timestamp="4766676" />
  <Command __id="4791" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:13:31 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="4766994" />
  <Command __id="4792" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:13:31 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4767457" />
  <Command __id="4793" _type="MoveCaretCommand" caretOffset="665" date="Tue Nov 21 12:13:32 EST 2023" docOffset="791" starttimestamp="1700582044267" timestamp="4768013" />
  <Command __id="4794" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 12:13:33 EST 2023" docOffset="545" starttimestamp="1700582044267" timestamp="4769338" />
  <Command __id="4795" _type="ShellCommand" date="Tue Nov 21 12:13:34 EST 2023" starttimestamp="1700582044267" timestamp="4770021" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4796" _type="ShellCommand" date="Tue Nov 21 12:13:42 EST 2023" starttimestamp="1700582044267" timestamp="4778062" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4797" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:13:43 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4779020" />
  <Command __id="4798" _type="ShellCommand" date="Tue Nov 21 12:13:47 EST 2023" starttimestamp="1700582044267" timestamp="4783140" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4799" _type="ShellCommand" date="Tue Nov 21 12:13:48 EST 2023" starttimestamp="1700582044267" timestamp="4784647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4800" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:13:55 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4790750" />
  <Command __id="4801" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:13:55 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="4791277" />
  <Command __id="4802" _type="MoveCaretCommand" caretOffset="991" date="Tue Nov 21 12:13:55 EST 2023" docOffset="1117" starttimestamp="1700582044267" timestamp="4791572" />
  <Command __id="4803" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:13:56 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4792045" />
  <Command __id="4804" _type="MoveCaretCommand" caretOffset="880" date="Tue Nov 21 12:13:56 EST 2023" docOffset="1006" starttimestamp="1700582044267" timestamp="4792363" />
  <Command __id="4805" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:13:56 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="4792614" />
  <Command __id="4806" _type="MoveCaretCommand" caretOffset="665" date="Tue Nov 21 12:13:57 EST 2023" docOffset="791" starttimestamp="1700582044267" timestamp="4792943" />
  <Command __id="4607" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:57:53 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3829205">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"OperationRegistererImpl.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return AndEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return OperationRegistererImpl.class;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return NotEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return OrEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="4611" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 11:58:00 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="3836566">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4807" _type="ShellCommand" date="Tue Nov 21 12:14:07 EST 2023" starttimestamp="1700582044267" timestamp="4803422" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4808" _type="ShellCommand" date="Tue Nov 21 12:14:08 EST 2023" starttimestamp="1700582044267" timestamp="4804128" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4810" _type="MoveCaretCommand" caretOffset="2177" date="Tue Nov 21 12:14:09 EST 2023" docOffset="2306" starttimestamp="1700582044267" timestamp="4805374" />
  <Command __id="4809" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:14:09 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4805330">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4811" _type="MoveCaretCommand" caretOffset="2195" date="Tue Nov 21 12:14:11 EST 2023" docOffset="2324" starttimestamp="1700582044267" timestamp="4806854" />
  <Command __id="4812" _type="MoveCaretCommand" caretOffset="2122" date="Tue Nov 21 12:14:11 EST 2023" docOffset="2251" starttimestamp="1700582044267" timestamp="4807254" />
  <Command __id="4813" _type="MoveCaretCommand" caretOffset="1967" date="Tue Nov 21 12:14:11 EST 2023" docOffset="2096" starttimestamp="1700582044267" timestamp="4807646" />
  <Command __id="4814" _type="MoveCaretCommand" caretOffset="1867" date="Tue Nov 21 12:14:12 EST 2023" docOffset="1996" starttimestamp="1700582044267" timestamp="4808126" />
  <Command __id="4815" _type="MoveCaretCommand" caretOffset="1776" date="Tue Nov 21 12:14:12 EST 2023" docOffset="1905" starttimestamp="1700582044267" timestamp="4808310" />
  <Command __id="4816" _type="MoveCaretCommand" caretOffset="1695" date="Tue Nov 21 12:14:12 EST 2023" docOffset="1824" starttimestamp="1700582044267" timestamp="4808622" />
  <Command __id="4817" _type="MoveCaretCommand" caretOffset="1695" date="Tue Nov 21 12:14:13 EST 2023" docOffset="1824" starttimestamp="1700582044267" timestamp="4808819" />
  <Command __id="4818" _type="SelectTextCommand" caretOffset="1603" date="Tue Nov 21 12:14:13 EST 2023" end="1625" start="1603" starttimestamp="1700582044267" timestamp="4809125" />
  <Command __id="4819" _type="MoveCaretCommand" caretOffset="1537" date="Tue Nov 21 12:14:13 EST 2023" docOffset="1666" starttimestamp="1700582044267" timestamp="4809342" />
  <Command __id="4820" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:14:13 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="4809659" />
  <Command __id="4822" _type="MoveCaretCommand" caretOffset="665" date="Tue Nov 21 12:14:15 EST 2023" docOffset="791" starttimestamp="1700582044267" timestamp="4810964" />
  <Command __id="4821" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:14:15 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4810922">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4823" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:14:16 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4812662" />
  <Command __id="4824" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:14:18 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4814091">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4825" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:14:18 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="4814132" />
  <Command __id="4826" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:14:19 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4815638">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4827" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 12:14:19 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="4815683" />
  <Command __id="4828" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:14:21 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4816756">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4829" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:14:21 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="4816798" />
  <Command __id="4831" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:14:21 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4817132" />
  <Command __id="4832" _type="MoveCaretCommand" caretOffset="1234" date="Tue Nov 21 12:14:23 EST 2023" docOffset="1360" starttimestamp="1700582044267" timestamp="4818824" />
  <Command __id="4833" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:14:23 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4819344" />
  <Command __id="4834" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:14:25 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4820774" />
  <Command __id="4835" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:14:25 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4821542" />
  <Command __id="4836" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:14:26 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4821954" />
  <Command __id="4837" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:14:27 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4823517" />
  <Command __id="4838" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:14:28 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4823858" />
  <Command __id="4839" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:14:28 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4824171" />
  <Command __id="4840" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:14:29 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4825464" />
  <Command __id="4841" _type="MoveCaretCommand" caretOffset="170" date="Tue Nov 21 12:14:32 EST 2023" docOffset="296" starttimestamp="1700582044267" timestamp="4828714" />
  <Command __id="4842" _type="MoveCaretCommand" caretOffset="165" date="Tue Nov 21 12:14:33 EST 2023" docOffset="291" starttimestamp="1700582044267" timestamp="4829417" />
  <Command __id="4843" _type="MoveCaretCommand" caretOffset="214" date="Tue Nov 21 12:14:34 EST 2023" docOffset="340" starttimestamp="1700582044267" timestamp="4829839" />
  <Command __id="4844" _type="MoveCaretCommand" caretOffset="245" date="Tue Nov 21 12:14:35 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="4831018" />
  <Command __id="4845" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:14:37 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4833080" />
  <Command __id="4846" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 12:14:38 EST 2023" starttimestamp="1700582044267" timestamp="4833757" />
  <Command __id="4830" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:14:21 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4817089">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="4848" _type="Insert" date="Tue Nov 21 12:14:39 EST 2023" docASTNodeCount="221" docActiveCodeLength="1371" docExpressionCount="159" docLength="1371" length="4" offset="1165" repeat="2" starttimestamp="1700582044267" timestamp="4835610" timestamp2="4835857">
    <text><![CDATA[
		t]]></text>
  </DocumentChange>
  <DocumentChange __id="4851" _type="Replace" date="Tue Nov 21 12:14:40 EST 2023" docASTNodeCount="188" docActiveCodeLength="1373" docExpressionCount="133" docLength="1373" endLine="44" insertionLength="3" int_docASTNodeCount="219" int_docActiveCodeLength="1370" int_docExpressionCount="158" int_docLength="1370" length="1" offset="1168" startLine="44" starttimestamp="1700582044267" timestamp="4835961">
    <deletedText><![CDATA[t]]></deletedText>
    <insertedText><![CDATA[t'h]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4852" _type="Replace" date="Tue Nov 21 12:14:40 EST 2023" docASTNodeCount="221" docActiveCodeLength="1373" docExpressionCount="159" docLength="1373" endLine="44" insertionLength="3" int_docASTNodeCount="219" int_docActiveCodeLength="1370" int_docExpressionCount="158" int_docLength="1370" length="3" offset="1168" startLine="44" starttimestamp="1700582044267" timestamp="4836040">
    <deletedText><![CDATA[t'h]]></deletedText>
    <insertedText><![CDATA[thi]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4853" _type="Replace" date="Tue Nov 21 12:14:40 EST 2023" docASTNodeCount="223" docActiveCodeLength="1374" docExpressionCount="161" docLength="1374" endLine="44" insertionLength="4" int_docASTNodeCount="219" int_docActiveCodeLength="1370" int_docExpressionCount="158" int_docLength="1370" length="3" offset="1168" startLine="44" starttimestamp="1700582044267" timestamp="4836092">
    <deletedText><![CDATA[thi]]></deletedText>
    <insertedText><![CDATA[this]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4854" _type="Replace" date="Tue Nov 21 12:14:40 EST 2023" docASTNodeCount="219" docActiveCodeLength="1376" docExpressionCount="158" docLength="1376" endLine="44" insertionLength="6" int_docASTNodeCount="219" int_docActiveCodeLength="1370" int_docExpressionCount="158" int_docLength="1370" length="4" offset="1168" startLine="44" starttimestamp="1700582044267" timestamp="4836232">
    <deletedText><![CDATA[this]]></deletedText>
    <insertedText><![CDATA[t'h'is]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4855" _type="Delete" date="Tue Nov 21 12:14:40 EST 2023" docASTNodeCount="219" docActiveCodeLength="1370" docExpressionCount="158" docLength="1370" endLine="44" length="6" offset="1168" startLine="44" starttimestamp="1700582044267" timestamp="4836655">
    <text><![CDATA[t'h'is]]></text>
  </DocumentChange>
  <DocumentChange __id="4856" _type="Insert" date="Tue Nov 21 12:14:41 EST 2023" docASTNodeCount="225" docActiveCodeLength="1379" docExpressionCount="163" docLength="1379" length="9" offset="1168" repeat="9" starttimestamp="1700582044267" timestamp="4837280" timestamp2="4839160">
    <text><![CDATA[this.eval]]></text>
  </DocumentChange>
  <Command __id="4847" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:14:39 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4835035" />
  <Command __id="4849" _type="InsertStringCommand" date="Tue Nov 21 12:14:39 EST 2023" starttimestamp="1700582044267" timestamp="4835614" timestamp2="4835614">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4857" _type="InsertStringCommand" date="Tue Nov 21 12:14:41 EST 2023" starttimestamp="1700582044267" timestamp="4837282" timestamp2="4837282">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4859" _type="InsertStringCommand" date="Tue Nov 21 12:14:41 EST 2023" starttimestamp="1700582044267" timestamp="4837371" timestamp2="4837371">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4861" _type="InsertStringCommand" date="Tue Nov 21 12:14:41 EST 2023" starttimestamp="1700582044267" timestamp="4837448" timestamp2="4837448">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4863" _type="InsertStringCommand" date="Tue Nov 21 12:14:41 EST 2023" starttimestamp="1700582044267" timestamp="4837521" timestamp2="4837521">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4865" _type="InsertStringCommand" date="Tue Nov 21 12:14:41 EST 2023" starttimestamp="1700582044267" timestamp="4837614" timestamp2="4837614">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4866" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:14:41 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="4837622" />
  <Command __id="4883" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:14:48 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="4844524" />
  <Command __id="4884" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 12:14:48 EST 2023" docOffset="1074" starttimestamp="1700582044267" timestamp="4844602" />
  <Command __id="4885" _type="MoveCaretCommand" caretOffset="286" date="Tue Nov 21 12:14:50 EST 2023" docOffset="412" starttimestamp="1700582044267" timestamp="4846298" />
  <Command __id="4886" _type="MoveCaretCommand" caretOffset="170" date="Tue Nov 21 12:14:51 EST 2023" docOffset="296" starttimestamp="1700582044267" timestamp="4846850" />
  <DocumentChange __id="4871" _type="Delete" date="Tue Nov 21 12:14:45 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" endLine="44" length="12" offset="1165" repeat="12" startLine="43" starttimestamp="1700582044267" timestamp="4841374" timestamp2="4843454">
    <text><![CDATA[
		this.eval]]></text>
  </DocumentChange>
  <Command __id="4887" _type="MoveCaretCommand" caretOffset="1039" date="Tue Nov 21 12:14:52 EST 2023" docOffset="1165" starttimestamp="1700582044267" timestamp="4848723" />
  <DocumentChange __id="4888" _type="Insert" date="Tue Nov 21 12:14:53 EST 2023" docASTNodeCount="223" docActiveCodeLength="1376" docExpressionCount="161" docLength="1376" length="9" offset="1165" repeat="7" starttimestamp="1700582044267" timestamp="4849434" timestamp2="4851200">
    <text><![CDATA[
		head.e]]></text>
  </DocumentChange>
  <Command __id="4889" _type="InsertStringCommand" date="Tue Nov 21 12:14:53 EST 2023" starttimestamp="1700582044267" timestamp="4849438" timestamp2="4849438">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4891" _type="InsertStringCommand" date="Tue Nov 21 12:14:54 EST 2023" starttimestamp="1700582044267" timestamp="4849749" timestamp2="4849749">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4893" _type="InsertStringCommand" date="Tue Nov 21 12:14:54 EST 2023" starttimestamp="1700582044267" timestamp="4849795" timestamp2="4849795">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4895" _type="InsertStringCommand" date="Tue Nov 21 12:14:54 EST 2023" starttimestamp="1700582044267" timestamp="4849896" timestamp2="4849896">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4897" _type="InsertStringCommand" date="Tue Nov 21 12:14:54 EST 2023" starttimestamp="1700582044267" timestamp="4850018" timestamp2="4850018">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4899" _type="InsertStringCommand" date="Tue Nov 21 12:14:54 EST 2023" starttimestamp="1700582044267" timestamp="4850120" timestamp2="4850120">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4900" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:14:54 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="4850128" />
  <Command __id="4901" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:14:54 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="4850133" />
  <Command __id="4903" _type="InsertStringCommand" date="Tue Nov 21 12:14:55 EST 2023" starttimestamp="1700582044267" timestamp="4851202" timestamp2="4851202">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="4904" _type="Delete" date="Tue Nov 21 12:14:56 EST 2023" docASTNodeCount="219" docActiveCodeLength="1370" docExpressionCount="158" docLength="1370" endLine="44" length="6" offset="1168" repeat="6" startLine="44" starttimestamp="1700582044267" timestamp="4852505" timestamp2="4853325">
    <text><![CDATA[head.e]]></text>
  </DocumentChange>
  <Command __id="4905" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:56 EST 2023" starttimestamp="1700582044267" timestamp="4852508" />
  <Command __id="4907" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:56 EST 2023" starttimestamp="1700582044267" timestamp="4852642" />
  <Command __id="4909" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:57 EST 2023" starttimestamp="1700582044267" timestamp="4852776" />
  <Command __id="4911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:57 EST 2023" starttimestamp="1700582044267" timestamp="4852910" />
  <Command __id="4913" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:57 EST 2023" starttimestamp="1700582044267" timestamp="4853043" />
  <Command __id="4915" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:57 EST 2023" starttimestamp="1700582044267" timestamp="4853327" />
  <DocumentChange __id="4916" _type="Insert" date="Tue Nov 21 12:14:57 EST 2023" docASTNodeCount="223" docActiveCodeLength="1378" docExpressionCount="161" docLength="1378" length="8" offset="1168" repeat="8" starttimestamp="1700582044267" timestamp="4853602" timestamp2="4854213">
    <text><![CDATA[thils.he]]></text>
  </DocumentChange>
  <Command __id="4917" _type="InsertStringCommand" date="Tue Nov 21 12:14:57 EST 2023" starttimestamp="1700582044267" timestamp="4853604" timestamp2="4853604">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4919" _type="InsertStringCommand" date="Tue Nov 21 12:14:57 EST 2023" starttimestamp="1700582044267" timestamp="4853666" timestamp2="4853666">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4921" _type="InsertStringCommand" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4853737" timestamp2="4853737">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4923" _type="InsertStringCommand" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4853830" timestamp2="4853830">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4925" _type="InsertStringCommand" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4853844" timestamp2="4853844">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4927" _type="InsertStringCommand" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4853975" timestamp2="4853975">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4928" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:14:58 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="4853982" />
  <Command __id="4929" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:14:58 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="4853995" />
  <Command __id="4931" _type="InsertStringCommand" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4854155" timestamp2="4854155">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4933" _type="InsertStringCommand" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4854215" timestamp2="4854215">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="4934" _type="Delete" date="Tue Nov 21 12:14:58 EST 2023" docASTNodeCount="221" docActiveCodeLength="1373" docExpressionCount="159" docLength="1373" endLine="44" length="5" offset="1171" repeat="5" startLine="44" starttimestamp="1700582044267" timestamp="4854409" timestamp2="4854935">
    <text><![CDATA[ls.he]]></text>
  </DocumentChange>
  <Command __id="4935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4854411" />
  <Command __id="4937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4854518" />
  <Command __id="4939" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:58 EST 2023" starttimestamp="1700582044267" timestamp="4854650" />
  <Command __id="4941" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:59 EST 2023" starttimestamp="1700582044267" timestamp="4854800" />
  <Command __id="4943" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:14:59 EST 2023" starttimestamp="1700582044267" timestamp="4854937" />
  <DocumentChange __id="4944" _type="Insert" date="Tue Nov 21 12:14:59 EST 2023" docASTNodeCount="225" docActiveCodeLength="1379" docExpressionCount="163" docLength="1379" length="6" offset="1171" repeat="6" starttimestamp="1700582044267" timestamp="4855088" timestamp2="4856433">
    <text><![CDATA[s.head]]></text>
  </DocumentChange>
  <Command __id="4945" _type="InsertStringCommand" date="Tue Nov 21 12:14:59 EST 2023" starttimestamp="1700582044267" timestamp="4855090" timestamp2="4855090">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4947" _type="InsertStringCommand" date="Tue Nov 21 12:14:59 EST 2023" starttimestamp="1700582044267" timestamp="4855190" timestamp2="4855190">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4948" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:14:59 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="4855194" />
  <Command __id="4953" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:15:01 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="4856916" />
  <DocumentChange __id="4954" _type="Replace" date="Tue Nov 21 12:15:01 EST 2023" docASTNodeCount="223" docActiveCodeLength="1384" docExpressionCount="161" docLength="1384" endLine="44" insertionLength="9" int_docASTNodeCount="219" int_docActiveCodeLength="1375" int_docExpressionCount="158" int_docLength="1375" length="4" offset="1173" startLine="44" starttimestamp="1700582044267" timestamp="4856919">
    <deletedText><![CDATA[head]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="4955" _type="InsertStringCommand" date="Tue Nov 21 12:15:01 EST 2023" starttimestamp="1700582044267" timestamp="4856923" timestamp2="4856923">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4956" _type="Insert" date="Tue Nov 21 12:15:01 EST 2023" docASTNodeCount="227" docActiveCodeLength="1386" docExpressionCount="165" docLength="1386" length="2" offset="1182" repeat="2" starttimestamp="1700582044267" timestamp="4857169" timestamp2="4857916">
    <text><![CDATA[.e]]></text>
  </DocumentChange>
  <Command __id="4957" _type="InsertStringCommand" date="Tue Nov 21 12:15:01 EST 2023" starttimestamp="1700582044267" timestamp="4857172" timestamp2="4857172">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4958" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:15:01 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="4857180" />
  <DocumentChange __id="4960" _type="Insert" date="Tue Nov 21 12:15:05 EST 2023" docASTNodeCount="227" docActiveCodeLength="1389" docExpressionCount="165" docLength="1389" length="3" offset="1184" repeat="3" starttimestamp="1700582044267" timestamp="4861132" timestamp2="4861445">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <Command __id="4963" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:15:06 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="4862072" />
  <DocumentChange __id="4964" _type="Replace" date="Tue Nov 21 12:15:06 EST 2023" docASTNodeCount="226" docActiveCodeLength="1395" docExpressionCount="164" docLength="1395" endLine="44" insertionLength="10" int_docASTNodeCount="223" int_docActiveCodeLength="1385" int_docExpressionCount="161" int_docLength="1385" length="4" offset="1183" startLine="44" starttimestamp="1700582044267" timestamp="4862073">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(null)]]></insertedText>
  </DocumentChange>
  <Command __id="4965" _type="InsertStringCommand" date="Tue Nov 21 12:15:06 EST 2023" starttimestamp="1700582044267" timestamp="4862085" timestamp2="4862085">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4967" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:08 EST 2023" starttimestamp="1700582044267" timestamp="4863866" />
  <Command __id="4969" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:08 EST 2023" starttimestamp="1700582044267" timestamp="4864365" />
  <Command __id="4971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:08 EST 2023" starttimestamp="1700582044267" timestamp="4864437" />
  <Command __id="4973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:08 EST 2023" starttimestamp="1700582044267" timestamp="4864522" />
  <Command __id="4975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:08 EST 2023" starttimestamp="1700582044267" timestamp="4864616" />
  <Command __id="4977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:08 EST 2023" starttimestamp="1700582044267" timestamp="4864696" />
  <Command __id="4979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4864780" />
  <Command __id="4981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4864862" />
  <Command __id="4983" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4864949" />
  <Command __id="4985" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865028" />
  <Command __id="4987" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865112" />
  <Command __id="4989" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865196" />
  <Command __id="4991" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865279" />
  <Command __id="4993" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865362" />
  <Command __id="4995" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865445" />
  <Command __id="4997" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865530" />
  <Command __id="4999" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865616" />
  <Command __id="5001" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:09 EST 2023" starttimestamp="1700582044267" timestamp="4865697" />
  <Command __id="5003" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:10 EST 2023" starttimestamp="1700582044267" timestamp="4865780" />
  <Command __id="5005" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:10 EST 2023" starttimestamp="1700582044267" timestamp="4865917" />
  <Command __id="5007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:10 EST 2023" starttimestamp="1700582044267" timestamp="4866080" />
  <Command __id="5008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 12:15:11 EST 2023" starttimestamp="1700582044267" timestamp="4867309" />
  <Command __id="5010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:11 EST 2023" starttimestamp="1700582044267" timestamp="4867407" />
  <Command __id="5012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:11 EST 2023" starttimestamp="1700582044267" timestamp="4867564" />
  <Command __id="5014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:11 EST 2023" starttimestamp="1700582044267" timestamp="4867701" />
  <Command __id="5016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:15:12 EST 2023" starttimestamp="1700582044267" timestamp="4867870" />
  <Command __id="5017" _type="MoveCaretCommand" caretOffset="726" date="Tue Nov 21 12:15:13 EST 2023" docOffset="852" starttimestamp="1700582044267" timestamp="4868916" />
  <Command __id="5018" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 12:15:13 EST 2023" starttimestamp="1700582044267" timestamp="4869372" />
  <Command __id="5019" _type="EclipseCommand" commandID="" date="Tue Nov 21 12:15:13 EST 2023" starttimestamp="1700582044267" timestamp="4869475" />
  <Command __id="5020" _type="EclipseCommand" commandID="" date="Tue Nov 21 12:15:13 EST 2023" starttimestamp="1700582044267" timestamp="4869483" />
  <Command __id="5021" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:15:16 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4871878" />
  <Command __id="5022" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:15:16 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4872486" />
  <Command __id="5023" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:15:17 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4873034" />
  <Command __id="5024" _type="MoveCaretCommand" caretOffset="1070" date="Tue Nov 21 12:15:17 EST 2023" docOffset="1196" starttimestamp="1700582044267" timestamp="4873620" />
  <Command __id="5025" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:15:18 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4873961" />
  <Command __id="5026" _type="MoveCaretCommand" caretOffset="1165" date="Tue Nov 21 12:15:18 EST 2023" docOffset="1291" starttimestamp="1700582044267" timestamp="4874138" />
  <Command __id="5027" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:15:18 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4874610" />
  <Command __id="5028" _type="MoveCaretCommand" caretOffset="1117" date="Tue Nov 21 12:15:19 EST 2023" docOffset="1243" starttimestamp="1700582044267" timestamp="4875309" />
  <Command __id="5029" _type="ShellCommand" date="Tue Nov 21 12:15:31 EST 2023" starttimestamp="1700582044267" timestamp="4887273" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="4966" _type="Delete" date="Tue Nov 21 12:15:08 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" endLine="44" length="28" offset="1165" repeat="25" startLine="43" starttimestamp="1700582044267" timestamp="4863862" timestamp2="4867866">
    <text><![CDATA[
		this.getHead().eval(null)]]></text>
  </DocumentChange>
  <Command __id="5030" _type="ShellCommand" date="Tue Nov 21 12:15:37 EST 2023" starttimestamp="1700582044267" timestamp="4893582" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5032" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 12:15:46 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="4902262" />
  <Command __id="5031" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:15:46 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4902204">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5033" _type="MoveCaretCommand" caretOffset="1439" date="Tue Nov 21 12:15:48 EST 2023" docOffset="1500" starttimestamp="1700582044267" timestamp="4903888" />
  <Command __id="5035" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:15:49 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4905435" />
  <Command __id="5036" _type="ShellCommand" date="Tue Nov 21 12:15:50 EST 2023" starttimestamp="1700582044267" timestamp="4905844" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5034" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:15:49 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4905378">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5037" _type="ShellCommand" date="Tue Nov 21 12:15:51 EST 2023" starttimestamp="1700582044267" timestamp="4906892" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5039" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 12:15:54 EST 2023" docOffset="1233" starttimestamp="1700582044267" timestamp="4910332" />
  <Command __id="5040" _type="ShellCommand" date="Tue Nov 21 12:15:55 EST 2023" starttimestamp="1700582044267" timestamp="4911079" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5041" _type="ShellCommand" date="Tue Nov 21 12:16:53 EST 2023" starttimestamp="1700582044267" timestamp="4969721" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5044" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:17:01 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4977511" type="Run" />
  <Command __id="5045" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:17:01 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4977512" type="Run" />
  <Command __id="5046" _type="ShellCommand" date="Tue Nov 21 12:17:02 EST 2023" starttimestamp="1700582044267" timestamp="4977843" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5047" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982156" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5048" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982156" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5049" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982157" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5050" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982158" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5051" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982175" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5052" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982178" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5053" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982180" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5054" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982181" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5055" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982184" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5056" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982185" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5057" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982185" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5058" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982186" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5059" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982188" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5060" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982190" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"Test execution time (ms):3¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="5061" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982192" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):3¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="5062" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982192" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶"), Diff(DELETE,"(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5063" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982193" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):3"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5064" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982195" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5065" _type="ConsoleOutput" date="Tue Nov 21 12:17:06 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="4982197" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "), Diff(INSERT,"Test execution time (ms):1¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("), Diff(EQUAL,""a" "), Diff(INSERT,". ("), Diff(EQUAL,"(1 . 2) "), Diff(DELETE,"((LIST 1 (AND T T))))¶"), Diff(INSERT,". ((1 . (T . NIL)) . NIL)))actual string "), Diff(EQUAL,"(LIST "), Diff(INSERT,". ("), Diff(EQUAL,""a" "), Diff(INSERT,". ("), Diff(EQUAL,"(1 . 2) "), Diff(INSERT,". "), Diff(EQUAL,"(("), Diff(DELETE,"LIST 1 (AND T T))))¶"), Diff(EQUAL,"(LIST "), Diff(DELETE,""a""), Diff(INSERT,"."), Diff(EQUAL," (1 . "), Diff(DELETE,"2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T"), Diff(INSERT,"((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL"), Diff(EQUAL,"))))¶")]]]></diff>
  </Command>
  <Command __id="5066" _type="ShellCommand" date="Tue Nov 21 12:17:36 EST 2023" starttimestamp="1700582044267" timestamp="5012652" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5038" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:15:54 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="4910287">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5069" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:17:38 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5014668">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5071" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:17:39 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5015224">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5067" _type="MoveCaretCommand" caretOffset="245" date="Tue Nov 21 12:17:38 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="5013851" />
  <Command __id="5068" _type="MoveCaretCommand" caretOffset="245" date="Tue Nov 21 12:17:38 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="5013851" />
  <Command __id="5070" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:17:38 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="5014715" />
  <Command __id="5072" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 12:17:39 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="5015267" />
  <Command __id="5074" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 12:17:43 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="5018999" />
  <Command __id="5075" _type="MoveCaretCommand" caretOffset="241" date="Tue Nov 21 12:17:44 EST 2023" docOffset="302" starttimestamp="1700582044267" timestamp="5019980" />
  <Command __id="5076" _type="SelectTextCommand" caretOffset="244" date="Tue Nov 21 12:17:44 EST 2023" end="244" start="239" starttimestamp="1700582044267" timestamp="5020117" />
  <Command __id="5110" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:17:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5028259" type="Run" />
  <Command __id="5111" _type="ShellCommand" date="Tue Nov 21 12:17:52 EST 2023" starttimestamp="1700582044267" timestamp="5028282" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5112" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:17:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5029035" type="Run" />
  <Command __id="5113" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:17:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5029035" type="Run" />
  <Command __id="5114" _type="ShellCommand" date="Tue Nov 21 12:17:53 EST 2023" starttimestamp="1700582044267" timestamp="5029331" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5115" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032603" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))¶")]]]></diff>
  </Command>
  <Command __id="5116" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032605" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5117" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032610" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5118" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032611" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5119" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032612" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5120" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032614" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5121" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032629" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5122" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032630" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(LIST 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(LIST 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5123" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032630" type="ConsoleOutput">
    <outputString><![CDATA[(LIST 3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶"), Diff(EQUAL,"(LIST "), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5124" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032630" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"LIST 3 4"), Diff(INSERT,"(+ 1 2)"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5125" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032630" type="ConsoleOutput">
    <outputString><![CDATA[((+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"((+ "), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="5126" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032631" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 3 4))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5127" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032632" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5128" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032632" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5129" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032632" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5130" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032632" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="5131" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032632" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5132" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032632" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="5133" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032633" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5134" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032633" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5135" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032633" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="5136" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032633" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5137" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032634" type="ConsoleOutput">
    <outputString><![CDATA[2
4
NIL
1
NIL
2
NIL
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2¶4¶NIL¶1¶NIL¶2¶NIL¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5138" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032637" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶4¶NIL¶1¶NIL¶2¶NIL¶T¶T"), Diff(INSERT,"Test execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5139" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032638" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5140" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032638" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5141" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032639" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):33"), Diff(INSERT,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5142" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032640" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:AndTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5143" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032642" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5144" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032643" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"And"), Diff(INSERT,"Not"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5145" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032643" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5146" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032645" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5147" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032645" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5148" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032647" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5149" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032647" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5150" _type="ConsoleOutput" date="Tue Nov 21 12:17:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5032648" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5151" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034360" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedTwoResults"), Diff(INSERT,"execution time (ms):1¶Test Result:ConsTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5152" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034361" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5153" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034362" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5154" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034365" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5155" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034366" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5156" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034367" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5157" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034368" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5158" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034369" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5159" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034372" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5160" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034373" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5161" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034373" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5162" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034374" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5163" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034375" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5164" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034376" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5165" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034378" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5166" _type="ConsoleOutput" date="Tue Nov 21 12:17:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5034378" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5167" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037724" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:Cond"), Diff(INSERT,"execution time (ms):1¶"), Diff(EQUAL,"Test"), Diff(DELETE,"ed"), Diff(INSERT," "), Diff(EQUAL,"Result"), Diff(DELETE,"s"), Diff(INSERT,":GreaterTested"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5168" _type="LocalChecksRawCommand" date="Tue Nov 21 12:18:01 EST 2023" starttimestamp="1700582044267" timestamp="5037726">
    <CSVRow><![CDATA[221,Tue Nov 21 12:17:58 EST 2023,54,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,121,1,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(20.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5169" _type="LocalChecksRawCommand" date="Tue Nov 21 12:18:01 EST 2023" starttimestamp="1700582044267" timestamp="5037726">
    <CSVRow><![CDATA[221,Tue Nov 21 12:17:58 EST 2023,54,0,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,121,1,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(20.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5170" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037726" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:GreaterTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5171" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037726" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"GreaterTestedTwoResults"), Diff(INSERT,"LessTested"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5172" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037727" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5173" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037728" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5174" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037729" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5175" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037730" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5176" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037732" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5177" _type="ConsoleOutput" date="Tue Nov 21 12:18:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037732" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5178" _type="ConsoleOutput" date="Tue Nov 21 12:18:02 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037733" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5179" _type="ConsoleOutput" date="Tue Nov 21 12:18:02 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037734" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5180" _type="ConsoleOutput" date="Tue Nov 21 12:18:02 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037734" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5181" _type="ConsoleOutput" date="Tue Nov 21 12:18:02 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5037736" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5182" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041138" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 . 2)¶(5 . 2)¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5183" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041140" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)¶(5 . 2)¶Test execution time (ms):4"), Diff(INSERT,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5184" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041143" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶(5)¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5185" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041144" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)¶Test execution time (ms):2"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5186" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041146" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5187" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041149" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5188" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041149" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5189" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041151" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5190" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041151" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5191" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041154" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="5192" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041154" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5193" _type="ConsoleOutput" date="Tue Nov 21 12:18:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5041158" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))

Test execution time (ms):1
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):1¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5194" _type="ShellCommand" date="Tue Nov 21 12:18:11 EST 2023" starttimestamp="1700582044267" timestamp="5047235" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5195" _type="LocalChecksRawCommand" date="Tue Nov 21 12:18:11 EST 2023" starttimestamp="1700582044267" timestamp="5047238">
    <CSVRow><![CDATA[222,Tue Nov 21 12:18:02 EST 2023,54,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,121,2,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5196" _type="LocalChecksRawCommand" date="Tue Nov 21 12:18:11 EST 2023" starttimestamp="1700582044267" timestamp="5047238">
    <CSVRow><![CDATA[222,Tue Nov 21 12:18:02 EST 2023,54,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,121,2,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5197" _type="LocalChecksRawCommand" date="Tue Nov 21 12:18:11 EST 2023" starttimestamp="1700582044267" timestamp="5047238">
    <CSVRow><![CDATA[223,Tue Nov 21 12:18:05 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,121,3,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5198" _type="LocalChecksRawCommand" date="Tue Nov 21 12:18:11 EST 2023" starttimestamp="1700582044267" timestamp="5047238">
    <CSVRow><![CDATA[223,Tue Nov 21 12:18:05 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,121,3,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5199" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:18:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5047247" type="Run" />
  <Command __id="5200" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:18:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5047247" type="Run" />
  <Command __id="5201" _type="MoveCaretCommand" caretOffset="325" date="Tue Nov 21 12:18:12 EST 2023" docOffset="386" starttimestamp="1700582044267" timestamp="5048283" />
  <Command __id="5202" _type="MoveCaretCommand" caretOffset="431" date="Tue Nov 21 12:18:13 EST 2023" docOffset="492" starttimestamp="1700582044267" timestamp="5048765" />
  <Command __id="5203" _type="SelectTextCommand" caretOffset="433" date="Tue Nov 21 12:18:13 EST 2023" end="433" start="429" starttimestamp="1700582044267" timestamp="5048896" />
  <Command __id="5205" _type="InsertStringCommand" date="Tue Nov 21 12:18:13 EST 2023" starttimestamp="1700582044267" timestamp="5049558" timestamp2="5049558">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5207" _type="InsertStringCommand" date="Tue Nov 21 12:18:13 EST 2023" starttimestamp="1700582044267" timestamp="5049673" timestamp2="5049673">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="5209" _type="InsertStringCommand" date="Tue Nov 21 12:18:14 EST 2023" starttimestamp="1700582044267" timestamp="5049735" timestamp2="5049735">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5211" _type="InsertStringCommand" date="Tue Nov 21 12:18:14 EST 2023" starttimestamp="1700582044267" timestamp="5049913" timestamp2="5049913">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="5212" _type="MoveCaretCommand" caretOffset="525" date="Tue Nov 21 12:18:14 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="5050641" />
  <Command __id="5213" _type="SelectTextCommand" caretOffset="527" date="Tue Nov 21 12:18:15 EST 2023" end="527" start="523" starttimestamp="1700582044267" timestamp="5050785" />
  <Command __id="5215" _type="InsertStringCommand" date="Tue Nov 21 12:18:15 EST 2023" starttimestamp="1700582044267" timestamp="5050989" timestamp2="5050989">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5217" _type="InsertStringCommand" date="Tue Nov 21 12:18:15 EST 2023" starttimestamp="1700582044267" timestamp="5051185" timestamp2="5051185">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="5219" _type="InsertStringCommand" date="Tue Nov 21 12:18:15 EST 2023" starttimestamp="1700582044267" timestamp="5051365" timestamp2="5051365">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5221" _type="InsertStringCommand" date="Tue Nov 21 12:18:15 EST 2023" starttimestamp="1700582044267" timestamp="5051486" timestamp2="5051486">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5222" _type="MoveCaretCommand" caretOffset="620" date="Tue Nov 21 12:18:16 EST 2023" docOffset="681" starttimestamp="1700582044267" timestamp="5052431" />
  <Command __id="5223" _type="SelectTextCommand" caretOffset="621" date="Tue Nov 21 12:18:16 EST 2023" end="621" start="617" starttimestamp="1700582044267" timestamp="5052573" />
  <Command __id="5225" _type="InsertStringCommand" date="Tue Nov 21 12:18:17 EST 2023" starttimestamp="1700582044267" timestamp="5053032" timestamp2="5053032">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="5227" _type="InsertStringCommand" date="Tue Nov 21 12:18:17 EST 2023" starttimestamp="1700582044267" timestamp="5053147" timestamp2="5053147">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="5229" _type="InsertStringCommand" date="Tue Nov 21 12:18:17 EST 2023" starttimestamp="1700582044267" timestamp="5053220" timestamp2="5053220">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="5231" _type="InsertStringCommand" date="Tue Nov 21 12:18:17 EST 2023" starttimestamp="1700582044267" timestamp="5053277" timestamp2="5053277">
    <data><![CDATA[D]]></data>
  </Command>
  <Command __id="5258" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:18:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5060618" type="Run" />
  <Command __id="5259" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:18:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5060619" type="Run" />
  <Command __id="5260" _type="ShellCommand" date="Tue Nov 21 12:18:25 EST 2023" starttimestamp="1700582044267" timestamp="5060917" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5261" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063813" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):1¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5262" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063815" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5263" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063816" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="5264" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063831" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5265" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063834" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5266" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063836" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5267" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063837" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5268" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063837" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5269" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063838" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5270" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063841" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5271" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063841" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5272" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063843" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5273" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063844" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5274" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063844" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶")]]]></diff>
  </Command>
  <Command __id="5275" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063844" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5276" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063845" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5277" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063847" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="5278" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063848" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5279" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063849" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5280" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063851" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5281" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063851" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5282" _type="ConsoleOutput" date="Tue Nov 21 12:18:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5063852" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5288" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:18:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5070468" type="Run" />
  <Command __id="5289" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 12:18:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5070468" type="Run" />
  <Command __id="5290" _type="ShellCommand" date="Tue Nov 21 12:18:35 EST 2023" starttimestamp="1700582044267" timestamp="5070767" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5291" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074907" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5292" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074908" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5293" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074909" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5294" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074910" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5295" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074927" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5296" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074931" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5297" _type="ConsoleOutput" date="Tue Nov 21 12:18:39 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="5074932" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5073" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:17:43 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5018938">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("cond", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("and", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("or", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("not", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5081" _type="Replace" date="Tue Nov 21 12:17:47 EST 2023" docASTNodeCount="178" docActiveCodeLength="1577" docExpressionCount="125" docLength="1577" endLine="8" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1576" int_docExpressionCount="125" int_docLength="1576" length="5" offset="300" startLine="8" starttimestamp="1700582044267" timestamp="5023173">
    <deletedText><![CDATA[quote]]></deletedText>
    <insertedText><![CDATA[Q]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5083" _type="Insert" date="Tue Nov 21 12:17:47 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="4" offset="301" repeat="4" starttimestamp="1700582044267" timestamp="5023277" timestamp2="5023497">
    <text><![CDATA[UOTE]]></text>
  </DocumentChange>
  <DocumentChange __id="5096" _type="Replace" date="Tue Nov 21 12:17:50 EST 2023" docASTNodeCount="178" docActiveCodeLength="1578" docExpressionCount="125" docLength="1578" endLine="9" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1577" int_docExpressionCount="125" int_docLength="1577" length="4" offset="396" startLine="9" starttimestamp="1700582044267" timestamp="5026330">
    <deletedText><![CDATA[list]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5098" _type="Insert" date="Tue Nov 21 12:17:50 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="3" offset="397" repeat="3" starttimestamp="1700582044267" timestamp="5026397" timestamp2="5026562">
    <text><![CDATA[IST]]></text>
  </DocumentChange>
  <DocumentChange __id="5204" _type="Replace" date="Tue Nov 21 12:18:13 EST 2023" docASTNodeCount="178" docActiveCodeLength="1578" docExpressionCount="125" docLength="1578" endLine="10" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1577" int_docExpressionCount="125" int_docLength="1577" length="4" offset="490" startLine="10" starttimestamp="1700582044267" timestamp="5049551">
    <deletedText><![CDATA[load]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5206" _type="Insert" date="Tue Nov 21 12:18:13 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="3" offset="491" repeat="3" starttimestamp="1700582044267" timestamp="5049672" timestamp2="5049911">
    <text><![CDATA[OAD]]></text>
  </DocumentChange>
  <DocumentChange __id="5214" _type="Replace" date="Tue Nov 21 12:18:15 EST 2023" docASTNodeCount="178" docActiveCodeLength="1578" docExpressionCount="125" docLength="1578" endLine="11" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1577" int_docExpressionCount="125" int_docLength="1577" length="4" offset="584" startLine="11" starttimestamp="1700582044267" timestamp="5050985">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[E]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5216" _type="Insert" date="Tue Nov 21 12:18:15 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="3" offset="585" repeat="3" starttimestamp="1700582044267" timestamp="5051182" timestamp2="5051483">
    <text><![CDATA[VAL]]></text>
  </DocumentChange>
  <DocumentChange __id="5224" _type="Replace" date="Tue Nov 21 12:18:17 EST 2023" docASTNodeCount="178" docActiveCodeLength="1578" docExpressionCount="125" docLength="1578" endLine="12" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1577" int_docExpressionCount="125" int_docLength="1577" length="4" offset="678" startLine="12" starttimestamp="1700582044267" timestamp="5053028">
    <deletedText><![CDATA[cond]]></deletedText>
    <insertedText><![CDATA[C]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5226" _type="Insert" date="Tue Nov 21 12:18:17 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="3" offset="679" repeat="3" starttimestamp="1700582044267" timestamp="5053144" timestamp2="5053275">
    <text><![CDATA[OND]]></text>
  </DocumentChange>
  <DocumentChange __id="5234" _type="Replace" date="Tue Nov 21 12:18:19 EST 2023" docASTNodeCount="178" docActiveCodeLength="1579" docExpressionCount="125" docLength="1579" endLine="23" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1578" int_docExpressionCount="125" int_docLength="1578" length="3" offset="1249" startLine="23" starttimestamp="1700582044267" timestamp="5055127">
    <deletedText><![CDATA[and]]></deletedText>
    <insertedText><![CDATA[A]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5236" _type="Insert" date="Tue Nov 21 12:18:19 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="2" offset="1250" repeat="2" starttimestamp="1700582044267" timestamp="5055242" timestamp2="5055335">
    <text><![CDATA[ND]]></text>
  </DocumentChange>
  <DocumentChange __id="5242" _type="Replace" date="Tue Nov 21 12:18:21 EST 2023" docASTNodeCount="178" docActiveCodeLength="1580" docExpressionCount="125" docLength="1580" endLine="24" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1579" int_docExpressionCount="125" int_docLength="1579" length="2" offset="1341" startLine="24" starttimestamp="1700582044267" timestamp="5056808">
    <deletedText><![CDATA[or]]></deletedText>
    <insertedText><![CDATA[O]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5244" _type="Insert" date="Tue Nov 21 12:18:21 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="1" offset="1342" starttimestamp="1700582044267" timestamp="5056894">
    <text><![CDATA[R]]></text>
  </DocumentChange>
  <DocumentChange __id="5248" _type="Replace" date="Tue Nov 21 12:18:22 EST 2023" docASTNodeCount="178" docActiveCodeLength="1579" docExpressionCount="125" docLength="1579" endLine="25" insertionLength="1" int_docASTNodeCount="178" int_docActiveCodeLength="1578" int_docExpressionCount="125" int_docLength="1578" length="3" offset="1431" startLine="25" starttimestamp="1700582044267" timestamp="5058277">
    <deletedText><![CDATA[not]]></deletedText>
    <insertedText><![CDATA[N]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5250" _type="Insert" date="Tue Nov 21 12:18:22 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" length="2" offset="1432" repeat="2" starttimestamp="1700582044267" timestamp="5058328" timestamp2="5058448">
    <text><![CDATA[OT]]></text>
  </DocumentChange>
  <Command __id="5302" _type="LocalChecksRawCommand" date="Tue Nov 21 12:19:25 EST 2023" starttimestamp="1700582044267" timestamp="5121434">
    <CSVRow><![CDATA[225,Tue Nov 21 12:18:39 EST 2023,54,0,ListToStringCheckerAdvanced,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,123,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5303" _type="LocalChecksRawCommand" date="Tue Nov 21 12:19:25 EST 2023" starttimestamp="1700582044267" timestamp="5121434">
    <CSVRow><![CDATA[225,Tue Nov 21 12:18:39 EST 2023,54,0,ListToStringCheckerAdvanced,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,123,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5304" _type="MoveCaretCommand" caretOffset="245" date="Tue Nov 21 12:19:25 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="5121471" />
  <Command __id="5305" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:19:30 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="5126314" />
  <Command __id="5306" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 12:19:30 EST 2023" docOffset="1036" starttimestamp="1700582044267" timestamp="5126314" />
  <Command __id="5307" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:19:31 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="5126733" />
  <Command __id="5308" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:19:31 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="5126733" />
  <Command __id="5309" _type="ShellCommand" date="Tue Nov 21 12:19:31 EST 2023" starttimestamp="1700582044267" timestamp="5127262" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5310" _type="ShellCommand" date="Tue Nov 21 12:21:40 EST 2023" starttimestamp="1700582044267" timestamp="5256204" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5311" _type="ShellCommand" date="Tue Nov 21 12:21:41 EST 2023" starttimestamp="1700582044267" timestamp="5257062" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5312" _type="ShellCommand" date="Tue Nov 21 12:21:45 EST 2023" starttimestamp="1700582044267" timestamp="5261108" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5313" _type="ShellCommand" date="Tue Nov 21 12:21:46 EST 2023" starttimestamp="1700582044267" timestamp="5262624" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5301" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:19:25 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5121432">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5314" _type="ShellCommand" date="Tue Nov 21 12:21:59 EST 2023" starttimestamp="1700582044267" timestamp="5275135" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5316" _type="MoveCaretCommand" caretOffset="1084" date="Tue Nov 21 12:22:00 EST 2023" docOffset="1145" starttimestamp="1700582044267" timestamp="5276298" />
  <Command __id="5317" _type="ShellCommand" date="Tue Nov 21 12:22:02 EST 2023" starttimestamp="1700582044267" timestamp="5278600" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5318" _type="ShellCommand" date="Tue Nov 21 12:22:04 EST 2023" starttimestamp="1700582044267" timestamp="5279904" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5319" _type="ShellCommand" date="Tue Nov 21 12:22:09 EST 2023" starttimestamp="1700582044267" timestamp="5284881" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5320" _type="ShellCommand" date="Tue Nov 21 12:22:10 EST 2023" starttimestamp="1700582044267" timestamp="5285921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5322" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 12:22:10 EST 2023" docOffset="928" starttimestamp="1700582044267" timestamp="5286640" />
  <Command __id="5315" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:22:00 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5276254">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"quote"), Diff(INSERT,"QUOTE"), Diff(EQUAL,"", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"list"), Diff(INSERT,"LIST"), Diff(EQUAL,"", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"load"), Diff(INSERT,"LOAD"), Diff(EQUAL,"", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"eval"), Diff(INSERT,"EVAL"), Diff(EQUAL,"", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"cond"), Diff(INSERT,"COND"), Diff(EQUAL,"", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"and"), Diff(INSERT,"AND"), Diff(EQUAL,"", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"or"), Diff(INSERT,"OR"), Diff(EQUAL,"", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"not"), Diff(INSERT,"NOT"), Diff(EQUAL,"", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());
	}
	
	public static void registerLogic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
		registerArithmetic();
		registerLogic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="5321" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:22:10 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5286596">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5323" _type="MoveCaretCommand" caretOffset="946" date="Tue Nov 21 12:22:13 EST 2023" docOffset="1072" starttimestamp="1700582044267" timestamp="5288735" />
  <Command __id="5324" _type="MoveCaretCommand" caretOffset="946" date="Tue Nov 21 12:22:13 EST 2023" docOffset="1072" starttimestamp="1700582044267" timestamp="5288735" />
  <Command __id="5325" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:22:14 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5289775">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5326" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:22:14 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="5289819" />
  <Command __id="5328" _type="MoveCaretCommand" caretOffset="946" date="Tue Nov 21 12:22:14 EST 2023" docOffset="1072" starttimestamp="1700582044267" timestamp="5290175" />
  <Command __id="5329" _type="ShellCommand" date="Tue Nov 21 12:22:14 EST 2023" starttimestamp="1700582044267" timestamp="5290557" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5330" _type="ShellCommand" date="Tue Nov 21 12:22:17 EST 2023" starttimestamp="1700582044267" timestamp="5293194" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5331" _type="ShellCommand" date="Tue Nov 21 12:22:18 EST 2023" starttimestamp="1700582044267" timestamp="5293762" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5332" _type="ShellCommand" date="Tue Nov 21 12:22:46 EST 2023" starttimestamp="1700582044267" timestamp="5322549" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5333" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 12:22:51 EST 2023" docOffset="1074" starttimestamp="1700582044267" timestamp="5327512" />
  <Command __id="5334" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 12:22:51 EST 2023" docOffset="1074" starttimestamp="1700582044267" timestamp="5327512" />
  <Command __id="5335" _type="MoveCaretCommand" caretOffset="950" date="Tue Nov 21 12:22:52 EST 2023" docOffset="1076" starttimestamp="1700582044267" timestamp="5328427" />
  <Command __id="5336" _type="MoveCaretCommand" caretOffset="950" date="Tue Nov 21 12:22:52 EST 2023" docOffset="1076" starttimestamp="1700582044267" timestamp="5328427" />
  <Command __id="5337" _type="SelectTextCommand" caretOffset="954" date="Tue Nov 21 12:22:52 EST 2023" end="954" start="940" starttimestamp="1700582044267" timestamp="5328552" />
  <Command __id="5338" _type="SelectTextCommand" caretOffset="954" date="Tue Nov 21 12:22:52 EST 2023" end="954" start="940" starttimestamp="1700582044267" timestamp="5328552" />
  <Command __id="5339" _type="MoveCaretCommand" caretOffset="970" date="Tue Nov 21 12:22:53 EST 2023" docOffset="1096" starttimestamp="1700582044267" timestamp="5329007" />
  <Command __id="5340" _type="MoveCaretCommand" caretOffset="970" date="Tue Nov 21 12:22:53 EST 2023" docOffset="1096" starttimestamp="1700582044267" timestamp="5329007" />
  <Command __id="5341" _type="SelectTextCommand" caretOffset="985" date="Tue Nov 21 12:22:53 EST 2023" end="985" start="964" starttimestamp="1700582044267" timestamp="5329143" />
  <Command __id="5342" _type="SelectTextCommand" caretOffset="985" date="Tue Nov 21 12:22:53 EST 2023" end="985" start="964" starttimestamp="1700582044267" timestamp="5329143" />
  <Command __id="5343" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 12:22:53 EST 2023" docOffset="1074" starttimestamp="1700582044267" timestamp="5329580" />
  <Command __id="5344" _type="MoveCaretCommand" caretOffset="948" date="Tue Nov 21 12:22:53 EST 2023" docOffset="1074" starttimestamp="1700582044267" timestamp="5329580" />
  <Command __id="5345" _type="SelectTextCommand" caretOffset="954" date="Tue Nov 21 12:22:53 EST 2023" end="954" start="940" starttimestamp="1700582044267" timestamp="5329713" />
  <Command __id="5346" _type="SelectTextCommand" caretOffset="954" date="Tue Nov 21 12:22:53 EST 2023" end="954" start="940" starttimestamp="1700582044267" timestamp="5329713" />
  <Command __id="5347" _type="MoveCaretCommand" caretOffset="653" date="Tue Nov 21 12:22:54 EST 2023" docOffset="779" starttimestamp="1700582044267" timestamp="5330613" />
  <Command __id="5348" _type="MoveCaretCommand" caretOffset="653" date="Tue Nov 21 12:22:54 EST 2023" docOffset="779" starttimestamp="1700582044267" timestamp="5330613" />
  <Command __id="5349" _type="SelectTextCommand" caretOffset="661" date="Tue Nov 21 12:22:55 EST 2023" end="661" start="640" starttimestamp="1700582044267" timestamp="5330768" />
  <Command __id="5350" _type="SelectTextCommand" caretOffset="661" date="Tue Nov 21 12:22:55 EST 2023" end="661" start="640" starttimestamp="1700582044267" timestamp="5330768" />
  <Command __id="5351" _type="MoveCaretCommand" caretOffset="795" date="Tue Nov 21 12:22:55 EST 2023" docOffset="921" starttimestamp="1700582044267" timestamp="5331367" />
  <Command __id="5352" _type="MoveCaretCommand" caretOffset="795" date="Tue Nov 21 12:22:55 EST 2023" docOffset="921" starttimestamp="1700582044267" timestamp="5331367" />
  <Command __id="5353" _type="SelectTextCommand" caretOffset="798" date="Tue Nov 21 12:22:55 EST 2023" end="798" start="784" starttimestamp="1700582044267" timestamp="5331540" />
  <Command __id="5354" _type="SelectTextCommand" caretOffset="798" date="Tue Nov 21 12:22:55 EST 2023" end="798" start="784" starttimestamp="1700582044267" timestamp="5331540" />
  <Command __id="5355" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 12:22:56 EST 2023" docOffset="1008" starttimestamp="1700582044267" timestamp="5332213" />
  <Command __id="5356" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 12:22:56 EST 2023" docOffset="1008" starttimestamp="1700582044267" timestamp="5332213" />
  <Command __id="5357" _type="ShellCommand" date="Tue Nov 21 12:23:00 EST 2023" starttimestamp="1700582044267" timestamp="5336084" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5358" _type="ShellCommand" date="Tue Nov 21 12:23:13 EST 2023" starttimestamp="1700582044267" timestamp="5349280" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5359" _type="ShellCommand" date="Tue Nov 21 12:23:17 EST 2023" starttimestamp="1700582044267" timestamp="5353149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5360" _type="ShellCommand" date="Tue Nov 21 12:23:18 EST 2023" starttimestamp="1700582044267" timestamp="5354643" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5327" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:22:14 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5290117">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5361" _type="MoveCaretCommand" caretOffset="192" date="Tue Nov 21 12:23:23 EST 2023" docOffset="192" starttimestamp="1700582044267" timestamp="5359126" />
  <Command __id="5362" _type="MoveCaretCommand" caretOffset="192" date="Tue Nov 21 12:23:23 EST 2023" docOffset="192" starttimestamp="1700582044267" timestamp="5359126" />
  <Command __id="5364" _type="InsertStringCommand" date="Tue Nov 21 12:23:24 EST 2023" starttimestamp="1700582044267" timestamp="5360146" timestamp2="5360146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5365" _type="InsertStringCommand" date="Tue Nov 21 12:23:24 EST 2023" starttimestamp="1700582044267" timestamp="5360146" timestamp2="5360146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5366" _type="SelectTextCommand" caretOffset="67" date="Tue Nov 21 12:23:25 EST 2023" end="149" start="67" starttimestamp="1700582044267" timestamp="5361639" />
  <Command __id="5367" _type="SelectTextCommand" caretOffset="67" date="Tue Nov 21 12:23:25 EST 2023" end="149" start="67" starttimestamp="1700582044267" timestamp="5361639" />
  <Command __id="5368" _type="MoveCaretCommand" caretOffset="189" date="Tue Nov 21 12:23:26 EST 2023" docOffset="189" starttimestamp="1700582044267" timestamp="5362192" />
  <Command __id="5369" _type="MoveCaretCommand" caretOffset="189" date="Tue Nov 21 12:23:26 EST 2023" docOffset="189" starttimestamp="1700582044267" timestamp="5362192" />
  <Command __id="5370" _type="SelectTextCommand" caretOffset="103" date="Tue Nov 21 12:23:27 EST 2023" end="149" start="103" starttimestamp="1700582044267" timestamp="5363075" />
  <Command __id="5371" _type="SelectTextCommand" caretOffset="103" date="Tue Nov 21 12:23:27 EST 2023" end="149" start="103" starttimestamp="1700582044267" timestamp="5363075" />
  <Command __id="5372" _type="CopyCommand" date="Tue Nov 21 12:23:27 EST 2023" starttimestamp="1700582044267" timestamp="5363247" />
  <Command __id="5373" _type="MoveCaretCommand" caretOffset="193" date="Tue Nov 21 12:23:27 EST 2023" docOffset="193" starttimestamp="1700582044267" timestamp="5363471" />
  <Command __id="5374" _type="MoveCaretCommand" caretOffset="193" date="Tue Nov 21 12:23:27 EST 2023" docOffset="193" starttimestamp="1700582044267" timestamp="5363471" />
  <Command __id="5376" _type="PasteCommand" date="Tue Nov 21 12:23:27 EST 2023" starttimestamp="1700582044267" timestamp="5363615" />
  <Command __id="5377" _type="ShellCommand" date="Tue Nov 21 12:23:28 EST 2023" starttimestamp="1700582044267" timestamp="5363964" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5378" _type="ShellCommand" date="Tue Nov 21 12:23:31 EST 2023" starttimestamp="1700582044267" timestamp="5367543" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5379" _type="MoveCaretCommand" caretOffset="230" date="Tue Nov 21 12:23:32 EST 2023" docOffset="230" starttimestamp="1700582044267" timestamp="5368157" />
  <Command __id="5380" _type="MoveCaretCommand" caretOffset="230" date="Tue Nov 21 12:23:32 EST 2023" docOffset="230" starttimestamp="1700582044267" timestamp="5368157" />
  <Command __id="5381" _type="SelectTextCommand" caretOffset="238" date="Tue Nov 21 12:23:32 EST 2023" end="238" start="223" starttimestamp="1700582044267" timestamp="5368313" />
  <Command __id="5382" _type="SelectTextCommand" caretOffset="238" date="Tue Nov 21 12:23:32 EST 2023" end="238" start="223" starttimestamp="1700582044267" timestamp="5368313" />
  <Command __id="5384" _type="PasteCommand" date="Tue Nov 21 12:23:32 EST 2023" starttimestamp="1700582044267" timestamp="5368431" />
  <Command __id="5385" _type="MoveCaretCommand" caretOffset="252" date="Tue Nov 21 12:23:32 EST 2023" docOffset="252" starttimestamp="1700582044267" timestamp="5368712" />
  <Command __id="5386" _type="MoveCaretCommand" caretOffset="252" date="Tue Nov 21 12:23:32 EST 2023" docOffset="252" starttimestamp="1700582044267" timestamp="5368712" />
  <Command __id="5387" _type="MoveCaretCommand" caretOffset="223" date="Tue Nov 21 12:23:36 EST 2023" docOffset="223" starttimestamp="1700582044267" timestamp="5372450" />
  <Command __id="5388" _type="MoveCaretCommand" caretOffset="223" date="Tue Nov 21 12:23:36 EST 2023" docOffset="223" starttimestamp="1700582044267" timestamp="5372451" />
  <Command __id="5389" _type="SelectTextCommand" caretOffset="193" date="Tue Nov 21 12:23:37 EST 2023" end="223" start="193" starttimestamp="1700582044267" timestamp="5373678" />
  <Command __id="5390" _type="SelectTextCommand" caretOffset="193" date="Tue Nov 21 12:23:37 EST 2023" end="223" start="193" starttimestamp="1700582044267" timestamp="5373678" />
  <Command __id="5392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:38 EST 2023" starttimestamp="1700582044267" timestamp="5374349" />
  <Command __id="5393" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:38 EST 2023" starttimestamp="1700582044267" timestamp="5374349" />
  <Command __id="5394" _type="MoveCaretCommand" caretOffset="219" date="Tue Nov 21 12:23:41 EST 2023" docOffset="219" starttimestamp="1700582044267" timestamp="5376802" />
  <Command __id="5395" _type="MoveCaretCommand" caretOffset="219" date="Tue Nov 21 12:23:41 EST 2023" docOffset="219" starttimestamp="1700582044267" timestamp="5376802" />
  <Command __id="5396" _type="SelectTextCommand" caretOffset="223" date="Tue Nov 21 12:23:41 EST 2023" end="223" start="193" starttimestamp="1700582044267" timestamp="5376929" />
  <Command __id="5397" _type="SelectTextCommand" caretOffset="223" date="Tue Nov 21 12:23:41 EST 2023" end="223" start="193" starttimestamp="1700582044267" timestamp="5376929" />
  <Command __id="5398" _type="CopyCommand" date="Tue Nov 21 12:23:41 EST 2023" starttimestamp="1700582044267" timestamp="5377566" />
  <Command __id="5399" _type="MoveCaretCommand" caretOffset="645" date="Tue Nov 21 12:23:42 EST 2023" docOffset="645" starttimestamp="1700582044267" timestamp="5378198" />
  <Command __id="5400" _type="MoveCaretCommand" caretOffset="645" date="Tue Nov 21 12:23:42 EST 2023" docOffset="645" starttimestamp="1700582044267" timestamp="5378199" />
  <Command __id="5402" _type="PasteCommand" date="Tue Nov 21 12:23:43 EST 2023" starttimestamp="1700582044267" timestamp="5378749" />
  <Command __id="5404" _type="InsertStringCommand" date="Tue Nov 21 12:23:43 EST 2023" starttimestamp="1700582044267" timestamp="5379594" timestamp2="5379594">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5405" _type="InsertStringCommand" date="Tue Nov 21 12:23:43 EST 2023" starttimestamp="1700582044267" timestamp="5379594" timestamp2="5379594">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5407" _type="InsertStringCommand" date="Tue Nov 21 12:23:44 EST 2023" starttimestamp="1700582044267" timestamp="5380438" timestamp2="5380438">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5408" _type="InsertStringCommand" date="Tue Nov 21 12:23:44 EST 2023" starttimestamp="1700582044267" timestamp="5380438" timestamp2="5380438">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5410" _type="InsertStringCommand" date="Tue Nov 21 12:23:44 EST 2023" starttimestamp="1700582044267" timestamp="5380629" timestamp2="5380629">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5411" _type="InsertStringCommand" date="Tue Nov 21 12:23:44 EST 2023" starttimestamp="1700582044267" timestamp="5380629" timestamp2="5380629">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5413" _type="InsertStringCommand" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5380747" timestamp2="5380747">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5414" _type="InsertStringCommand" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5380747" timestamp2="5380747">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5416" _type="InsertStringCommand" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5380759" timestamp2="5380759">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5417" _type="InsertStringCommand" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5380759" timestamp2="5380759">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5419" _type="InsertStringCommand" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5380849" timestamp2="5380849">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5420" _type="InsertStringCommand" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5380850" timestamp2="5380850">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5422" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5381246" />
  <Command __id="5423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5381246" />
  <Command __id="5425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5381365" />
  <Command __id="5426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5381365" />
  <Command __id="5428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5381512" />
  <Command __id="5429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:23:45 EST 2023" starttimestamp="1700582044267" timestamp="5381513" />
  <Command __id="5431" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382122" timestamp2="5382122">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5432" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382122" timestamp2="5382122">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5434" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382248" timestamp2="5382248">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5435" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382248" timestamp2="5382248">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5437" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382476" timestamp2="5382476">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5438" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382476" timestamp2="5382476">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5440" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382611" timestamp2="5382611">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5441" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382611" timestamp2="5382611">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5443" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382653" timestamp2="5382653">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="5444" _type="InsertStringCommand" date="Tue Nov 21 12:23:46 EST 2023" starttimestamp="1700582044267" timestamp="5382653" timestamp2="5382653">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="5446" _type="InsertStringCommand" date="Tue Nov 21 12:23:47 EST 2023" starttimestamp="1700582044267" timestamp="5382772" timestamp2="5382772">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5447" _type="InsertStringCommand" date="Tue Nov 21 12:23:47 EST 2023" starttimestamp="1700582044267" timestamp="5382772" timestamp2="5382772">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5449" _type="PasteCommand" date="Tue Nov 21 12:23:47 EST 2023" starttimestamp="1700582044267" timestamp="5383337" />
  <Command __id="5451" _type="InsertStringCommand" date="Tue Nov 21 12:23:47 EST 2023" starttimestamp="1700582044267" timestamp="5383575" timestamp2="5383575">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5452" _type="InsertStringCommand" date="Tue Nov 21 12:23:47 EST 2023" starttimestamp="1700582044267" timestamp="5383575" timestamp2="5383575">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5453" _type="MoveCaretCommand" caretOffset="224" date="Tue Nov 21 12:23:51 EST 2023" docOffset="224" starttimestamp="1700582044267" timestamp="5386944" />
  <Command __id="5454" _type="MoveCaretCommand" caretOffset="224" date="Tue Nov 21 12:23:51 EST 2023" docOffset="224" starttimestamp="1700582044267" timestamp="5386945" />
  <Command __id="5456" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 12:23:51 EST 2023" starttimestamp="1700582044267" timestamp="5387178" />
  <Command __id="5457" _type="MoveCaretCommand" caretOffset="610" date="Tue Nov 21 12:23:54 EST 2023" docOffset="610" starttimestamp="1700582044267" timestamp="5390175" />
  <Command __id="5458" _type="MoveCaretCommand" caretOffset="610" date="Tue Nov 21 12:23:54 EST 2023" docOffset="610" starttimestamp="1700582044267" timestamp="5390175" />
  <Command __id="5459" _type="ShellCommand" date="Tue Nov 21 12:23:54 EST 2023" starttimestamp="1700582044267" timestamp="5390361" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="5363" _type="Insert" date="Tue Nov 21 12:23:24 EST 2023" docASTNodeCount="219" docActiveCodeLength="1368" docExpressionCount="158" docLength="1368" length="1" offset="192" starttimestamp="1700582044267" timestamp="5360143">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="5375" _type="Insert" date="Tue Nov 21 12:23:27 EST 2023" docASTNodeCount="229" docActiveCodeLength="1414" docExpressionCount="167" docLength="1414" length="46" offset="193" starttimestamp="1700582044267" timestamp="5363612">
    <text><![CDATA[import main.lisp.parser.terms.BasicExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="5383" _type="Replace" date="Tue Nov 21 12:23:32 EST 2023" docASTNodeCount="229" docActiveCodeLength="1429" docExpressionCount="167" docLength="1429" endLine="6" insertionLength="30" int_docASTNodeCount="219" int_docActiveCodeLength="1399" int_docExpressionCount="158" int_docLength="1399" length="15" offset="223" startLine="6" starttimestamp="1700582044267" timestamp="5368429">
    <deletedText><![CDATA[BasicExpression]]></deletedText>
    <insertedText><![CDATA[BasicOperationManagerSingleton]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5391" _type="Delete" date="Tue Nov 21 12:23:38 EST 2023" docASTNodeCount="219" docActiveCodeLength="1399" docExpressionCount="158" docLength="1399" endLine="6" length="30" offset="193" startLine="6" starttimestamp="1700582044267" timestamp="5374345">
    <text><![CDATA[import main.lisp.parser.terms.]]></text>
  </DocumentChange>
  <DocumentChange __id="5401" _type="Replace" date="Tue Nov 21 12:23:43 EST 2023" docASTNodeCount="221" docActiveCodeLength="1429" docExpressionCount="159" docLength="1429" endLine="26" insertionLength="32" int_docASTNodeCount="219" int_docActiveCodeLength="1397" int_docExpressionCount="158" int_docLength="1397" length="2" offset="643" startLine="26" starttimestamp="1700582044267" timestamp="5378747">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BasicOperationManagerSingleton]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5403" _type="Insert" date="Tue Nov 21 12:23:43 EST 2023" docASTNodeCount="224" docActiveCodeLength="1435" docExpressionCount="160" docLength="1435" length="6" offset="675" repeat="6" starttimestamp="1700582044267" timestamp="5379592" timestamp2="5380848">
    <text><![CDATA[ a -= ]]></text>
  </DocumentChange>
  <DocumentChange __id="5421" _type="Delete" date="Tue Nov 21 12:23:45 EST 2023" docASTNodeCount="224" docActiveCodeLength="1432" docExpressionCount="160" docLength="1432" endLine="26" length="3" offset="678" repeat="3" startLine="26" starttimestamp="1700582044267" timestamp="5381244" timestamp2="5381510">
    <text><![CDATA[-= ]]></text>
  </DocumentChange>
  <DocumentChange __id="5430" _type="Insert" date="Tue Nov 21 12:23:46 EST 2023" docASTNodeCount="227" docActiveCodeLength="1470" docExpressionCount="162" docLength="1470" length="38" offset="678" repeat="8" starttimestamp="1700582044267" timestamp="5382121" timestamp2="5383571">
    <text><![CDATA[= new BasicOperationManagerSingleton()]]></text>
  </DocumentChange>
  <DocumentChange __id="5455" _type="Delete" date="Tue Nov 21 12:23:51 EST 2023" docASTNodeCount="227" docActiveCodeLength="1438" docExpressionCount="162" docLength="1438" endLine="7" length="32" offset="193" startLine="6" starttimestamp="1700582044267" timestamp="5387176">
    <text><![CDATA[BasicOperationManagerSingleton;
]]></text>
  </DocumentChange>
  <Command __id="5460" _type="ShellCommand" date="Tue Nov 21 12:23:56 EST 2023" starttimestamp="1700582044267" timestamp="5391819" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5462" _type="MoveCaretCommand" caretOffset="1084" date="Tue Nov 21 12:23:57 EST 2023" docOffset="1145" starttimestamp="1700582044267" timestamp="5393362" />
  <Command __id="5463" _type="MoveCaretCommand" caretOffset="203" date="Tue Nov 21 12:23:58 EST 2023" docOffset="264" starttimestamp="1700582044267" timestamp="5394227" />
  <Command __id="5464" _type="SelectTextCommand" caretOffset="208" date="Tue Nov 21 12:23:58 EST 2023" end="208" start="176" starttimestamp="1700582044267" timestamp="5394390" />
  <Command __id="5465" _type="MoveCaretCommand" caretOffset="16" date="Tue Nov 21 12:23:59 EST 2023" docOffset="16" starttimestamp="1700582044267" timestamp="5395630" />
  <Command __id="5466" _type="MoveCaretCommand" caretOffset="112" date="Tue Nov 21 12:24:00 EST 2023" docOffset="112" starttimestamp="1700582044267" timestamp="5396506" />
  <Command __id="5467" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:24:01 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5397484" />
  <Command __id="5468" _type="CopyCommand" date="Tue Nov 21 12:24:01 EST 2023" starttimestamp="1700582044267" timestamp="5397623" />
  <Command __id="5470" _type="MoveCaretCommand" caretOffset="610" date="Tue Nov 21 12:24:02 EST 2023" docOffset="610" starttimestamp="1700582044267" timestamp="5398050" />
  <Command __id="5471" _type="MoveCaretCommand" caretOffset="192" date="Tue Nov 21 12:24:03 EST 2023" docOffset="192" starttimestamp="1700582044267" timestamp="5398803" />
  <Command __id="5472" _type="MoveCaretCommand" caretOffset="192" date="Tue Nov 21 12:24:03 EST 2023" docOffset="192" starttimestamp="1700582044267" timestamp="5398803" />
  <Command __id="5474" _type="InsertStringCommand" date="Tue Nov 21 12:24:03 EST 2023" starttimestamp="1700582044267" timestamp="5399338" timestamp2="5399338">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5475" _type="InsertStringCommand" date="Tue Nov 21 12:24:03 EST 2023" starttimestamp="1700582044267" timestamp="5399338" timestamp2="5399338">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5477" _type="PasteCommand" date="Tue Nov 21 12:24:03 EST 2023" starttimestamp="1700582044267" timestamp="5399563" />
  <Command __id="5478" _type="MoveCaretCommand" caretOffset="254" date="Tue Nov 21 12:24:04 EST 2023" docOffset="254" starttimestamp="1700582044267" timestamp="5400259" />
  <Command __id="5479" _type="MoveCaretCommand" caretOffset="254" date="Tue Nov 21 12:24:04 EST 2023" docOffset="254" starttimestamp="1700582044267" timestamp="5400259" />
  <Command __id="5480" _type="MoveCaretCommand" caretOffset="701" date="Tue Nov 21 12:24:05 EST 2023" docOffset="701" starttimestamp="1700582044267" timestamp="5400921" />
  <Command __id="5481" _type="MoveCaretCommand" caretOffset="701" date="Tue Nov 21 12:24:05 EST 2023" docOffset="701" starttimestamp="1700582044267" timestamp="5400921" />
  <Command __id="5461" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:23:57 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5393313">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5469" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:24:02 EST 2023" docASTNodeCount="227" docActiveCodeLength="1438" docExpressionCount="162" docLength="1438" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5397998">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		"), Diff(INSERT,"BasicOperationManagerSingleton a = new BasicOperationManagerSingleton()"), Diff(EQUAL,"		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		BasicOperationManagerSingleton a = new BasicOperationManagerSingleton()
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5473" _type="Insert" date="Tue Nov 21 12:24:03 EST 2023" docASTNodeCount="235" docActiveCodeLength="1499" docExpressionCount="169" docLength="1499" length="61" offset="192" repeat="2" starttimestamp="1700582044267" timestamp="5399336" timestamp2="5399560">
    <text><![CDATA[
import main.lisp.evaluator.BuiltinOperationManagerSingleton;]]></text>
  </DocumentChange>
  <Command __id="5482" _type="MoveCaretCommand" caretOffset="745" date="Tue Nov 21 12:24:06 EST 2023" docOffset="745" starttimestamp="1700582044267" timestamp="5402244" />
  <Command __id="5483" _type="MoveCaretCommand" caretOffset="745" date="Tue Nov 21 12:24:06 EST 2023" docOffset="745" starttimestamp="1700582044267" timestamp="5402245" />
  <Command __id="5484" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:24:08 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5403733">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5485" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:24:08 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5403776" />
  <Command __id="5487" _type="MoveCaretCommand" caretOffset="745" date="Tue Nov 21 12:24:09 EST 2023" docOffset="745" starttimestamp="1700582044267" timestamp="5405423" />
  <Command __id="5486" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:24:09 EST 2023" docASTNodeCount="235" docActiveCodeLength="1499" docExpressionCount="169" docLength="1499" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5405369">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;"), Diff(INSERT,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		BasicOperationManagerSingleton a = new BasicOperationManagerSingleton()		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		BasicOperationManagerSingleton a = new BasicOperationManagerSingleton()
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5490" _type="Delete" date="Tue Nov 21 12:24:12 EST 2023" docASTNodeCount="229" docActiveCodeLength="1458" docExpressionCount="166" docLength="1458" endLine="26" length="41" offset="704" repeat="2" startLine="26" starttimestamp="1700582044267" timestamp="5407946" timestamp2="5408075">
    <text><![CDATA[ a = new BasicOperationManagerSingleton()]]></text>
  </DocumentChange>
  <DocumentChange __id="5496" _type="Insert" date="Tue Nov 21 12:24:13 EST 2023" docASTNodeCount="231" docActiveCodeLength="1464" docExpressionCount="168" docLength="1464" length="6" offset="704" repeat="5" starttimestamp="1700582044267" timestamp="5409051" timestamp2="5411343">
    <text><![CDATA[.get()]]></text>
  </DocumentChange>
  <Command __id="5513" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:24:17 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5413725">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5488" _type="SelectTextCommand" caretOffset="705" date="Tue Nov 21 12:24:11 EST 2023" end="745" start="705" starttimestamp="1700582044267" timestamp="5407382" />
  <Command __id="5489" _type="SelectTextCommand" caretOffset="705" date="Tue Nov 21 12:24:11 EST 2023" end="745" start="705" starttimestamp="1700582044267" timestamp="5407382" />
  <Command __id="5491" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:12 EST 2023" starttimestamp="1700582044267" timestamp="5407951" />
  <Command __id="5492" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:12 EST 2023" starttimestamp="1700582044267" timestamp="5407951" />
  <Command __id="5494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:12 EST 2023" starttimestamp="1700582044267" timestamp="5408077" />
  <Command __id="5495" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:12 EST 2023" starttimestamp="1700582044267" timestamp="5408078" />
  <Command __id="5497" _type="InsertStringCommand" date="Tue Nov 21 12:24:13 EST 2023" starttimestamp="1700582044267" timestamp="5409053" timestamp2="5409053">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5498" _type="InsertStringCommand" date="Tue Nov 21 12:24:13 EST 2023" starttimestamp="1700582044267" timestamp="5409053" timestamp2="5409053">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5499" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:24:13 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5409059" />
  <Command __id="5500" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:24:13 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5409077" />
  <Command __id="5502" _type="InsertStringCommand" date="Tue Nov 21 12:24:14 EST 2023" starttimestamp="1700582044267" timestamp="5410495" timestamp2="5410495">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5503" _type="InsertStringCommand" date="Tue Nov 21 12:24:14 EST 2023" starttimestamp="1700582044267" timestamp="5410495" timestamp2="5410495">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5505" _type="InsertStringCommand" date="Tue Nov 21 12:24:14 EST 2023" starttimestamp="1700582044267" timestamp="5410590" timestamp2="5410590">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5506" _type="InsertStringCommand" date="Tue Nov 21 12:24:14 EST 2023" starttimestamp="1700582044267" timestamp="5410590" timestamp2="5410590">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5508" _type="InsertStringCommand" date="Tue Nov 21 12:24:14 EST 2023" starttimestamp="1700582044267" timestamp="5410717" timestamp2="5410717">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5509" _type="InsertStringCommand" date="Tue Nov 21 12:24:14 EST 2023" starttimestamp="1700582044267" timestamp="5410718" timestamp2="5410718">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5511" _type="InsertStringCommand" date="Tue Nov 21 12:24:15 EST 2023" starttimestamp="1700582044267" timestamp="5411346" timestamp2="5411346">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5512" _type="InsertStringCommand" date="Tue Nov 21 12:24:15 EST 2023" starttimestamp="1700582044267" timestamp="5411346" timestamp2="5411346">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5514" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:24:18 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5413770" />
  <Command __id="5516" _type="MoveCaretCommand" caretOffset="709" date="Tue Nov 21 12:24:19 EST 2023" docOffset="709" starttimestamp="1700582044267" timestamp="5415356" />
  <Command __id="5517" _type="MoveCaretCommand" caretOffset="710" date="Tue Nov 21 12:24:20 EST 2023" docOffset="710" starttimestamp="1700582044267" timestamp="5416001" />
  <Command __id="5518" _type="MoveCaretCommand" caretOffset="710" date="Tue Nov 21 12:24:20 EST 2023" docOffset="710" starttimestamp="1700582044267" timestamp="5416001" />
  <Command __id="5519" _type="SelectTextCommand" caretOffset="674" date="Tue Nov 21 12:24:21 EST 2023" end="710" start="674" starttimestamp="1700582044267" timestamp="5416912" />
  <Command __id="5520" _type="SelectTextCommand" caretOffset="674" date="Tue Nov 21 12:24:21 EST 2023" end="710" start="674" starttimestamp="1700582044267" timestamp="5416913" />
  <Command __id="5522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:21 EST 2023" starttimestamp="1700582044267" timestamp="5417563" />
  <Command __id="5523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:21 EST 2023" starttimestamp="1700582044267" timestamp="5417564" />
  <Command __id="5515" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:24:19 EST 2023" docASTNodeCount="231" docActiveCodeLength="1464" docExpressionCount="168" docLength="1464" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5415309">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		BasicOperationManagerSingleton"), Diff(DELETE," a = new BasicOperationManagerSingleton"), Diff(INSERT,".get"), Diff(EQUAL,"()		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		BasicOperationManagerSingleton.get()
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5521" _type="Delete" date="Tue Nov 21 12:24:21 EST 2023" docASTNodeCount="227" docActiveCodeLength="1428" docExpressionCount="165" docLength="1428" endLine="26" length="36" offset="674" startLine="26" starttimestamp="1700582044267" timestamp="5417561">
    <text><![CDATA[BasicOperationManagerSingleton.get()]]></text>
  </DocumentChange>
  <DocumentChange __id="5531" _type="Replace" date="Tue Nov 21 12:24:25 EST 2023" docASTNodeCount="229" docActiveCodeLength="1460" docExpressionCount="166" docLength="1460" endLine="26" insertionLength="34" int_docASTNodeCount="227" int_docActiveCodeLength="1426" int_docExpressionCount="165" int_docLength="1426" length="2" offset="672" startLine="26" starttimestamp="1700582044267" timestamp="5421439">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton]]></insertedText>
  </DocumentChange>
  <Command __id="5524" _type="MoveCaretCommand" caretOffset="231" date="Tue Nov 21 12:24:24 EST 2023" docOffset="231" starttimestamp="1700582044267" timestamp="5420303" />
  <Command __id="5525" _type="MoveCaretCommand" caretOffset="231" date="Tue Nov 21 12:24:24 EST 2023" docOffset="231" starttimestamp="1700582044267" timestamp="5420304" />
  <Command __id="5526" _type="SelectTextCommand" caretOffset="252" date="Tue Nov 21 12:24:24 EST 2023" end="252" start="220" starttimestamp="1700582044267" timestamp="5420449" />
  <Command __id="5527" _type="SelectTextCommand" caretOffset="252" date="Tue Nov 21 12:24:24 EST 2023" end="252" start="220" starttimestamp="1700582044267" timestamp="5420449" />
  <Command __id="5528" _type="CopyCommand" date="Tue Nov 21 12:24:24 EST 2023" starttimestamp="1700582044267" timestamp="5420561" />
  <Command __id="5529" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 12:24:25 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="5421334" />
  <Command __id="5530" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 12:24:25 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="5421334" />
  <Command __id="5532" _type="PasteCommand" date="Tue Nov 21 12:24:25 EST 2023" starttimestamp="1700582044267" timestamp="5421442" />
  <Command __id="5534" _type="InsertStringCommand" date="Tue Nov 21 12:24:26 EST 2023" starttimestamp="1700582044267" timestamp="5422614" timestamp2="5422614">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5535" _type="InsertStringCommand" date="Tue Nov 21 12:24:26 EST 2023" starttimestamp="1700582044267" timestamp="5422615" timestamp2="5422615">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5536" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:24:26 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5422623" />
  <Command __id="5539" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:24:28 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5424396" />
  <Command __id="5541" _type="InsertStringCommand" date="Tue Nov 21 12:24:28 EST 2023" starttimestamp="1700582044267" timestamp="5424404" timestamp2="5424404">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5542" _type="InsertStringCommand" date="Tue Nov 21 12:24:28 EST 2023" starttimestamp="1700582044267" timestamp="5424404" timestamp2="5424404">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5544" _type="InsertStringCommand" date="Tue Nov 21 12:24:29 EST 2023" starttimestamp="1700582044267" timestamp="5425271" timestamp2="5425271">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5545" _type="InsertStringCommand" date="Tue Nov 21 12:24:29 EST 2023" starttimestamp="1700582044267" timestamp="5425271" timestamp2="5425271">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5546" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:24:29 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5425279" />
  <Command __id="5547" _type="ShellCommand" date="Tue Nov 21 12:24:31 EST 2023" starttimestamp="1700582044267" timestamp="5427155" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5548" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:24:31 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5427186" />
  <Command __id="5549" _type="ShellCommand" date="Tue Nov 21 12:24:32 EST 2023" starttimestamp="1700582044267" timestamp="5428437" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5551" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:33 EST 2023" starttimestamp="1700582044267" timestamp="5429275" />
  <Command __id="5552" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:24:33 EST 2023" starttimestamp="1700582044267" timestamp="5429275" />
  <Command __id="5554" _type="InsertStringCommand" date="Tue Nov 21 12:24:33 EST 2023" starttimestamp="1700582044267" timestamp="5429500" timestamp2="5429500">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5555" _type="InsertStringCommand" date="Tue Nov 21 12:24:33 EST 2023" starttimestamp="1700582044267" timestamp="5429500" timestamp2="5429500">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5556" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:24:33 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5429507" />
  <Command __id="5561" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:24:35 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5431407" />
  <Command __id="5563" _type="InsertStringCommand" date="Tue Nov 21 12:24:35 EST 2023" starttimestamp="1700582044267" timestamp="5431427" timestamp2="5431427">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5564" _type="InsertStringCommand" date="Tue Nov 21 12:24:35 EST 2023" starttimestamp="1700582044267" timestamp="5431427" timestamp2="5431427">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5565" _type="ShellCommand" date="Tue Nov 21 12:24:37 EST 2023" starttimestamp="1700582044267" timestamp="5433579" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5566" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:24:37 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5433595" />
  <Command __id="5567" _type="ShellCommand" date="Tue Nov 21 12:24:41 EST 2023" starttimestamp="1700582044267" timestamp="5437541" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5568" _type="ShellCommand" date="Tue Nov 21 12:24:42 EST 2023" starttimestamp="1700582044267" timestamp="5438728" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5569" _type="ShellCommand" date="Tue Nov 21 12:24:46 EST 2023" starttimestamp="1700582044267" timestamp="5441802" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5570" _type="ShellCommand" date="Tue Nov 21 12:24:54 EST 2023" starttimestamp="1700582044267" timestamp="5449877" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="5533" _type="Insert" date="Tue Nov 21 12:24:26 EST 2023" docASTNodeCount="231" docActiveCodeLength="1463" docExpressionCount="168" docLength="1463" length="3" offset="706" repeat="3" starttimestamp="1700582044267" timestamp="5422612" timestamp2="5423997">
    <text><![CDATA[.et]]></text>
  </DocumentChange>
  <DocumentChange __id="5540" _type="Replace" date="Tue Nov 21 12:24:28 EST 2023" docASTNodeCount="231" docActiveCodeLength="1466" docExpressionCount="168" docLength="1466" endLine="26" insertionLength="5" int_docASTNodeCount="229" int_docActiveCodeLength="1461" int_docExpressionCount="166" int_docLength="1461" length="2" offset="707" startLine="26" starttimestamp="1700582044267" timestamp="5424399">
    <deletedText><![CDATA[et]]></deletedText>
    <insertedText><![CDATA[get()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5543" _type="Insert" date="Tue Nov 21 12:24:29 EST 2023" docASTNodeCount="231" docActiveCodeLength="1467" docExpressionCount="168" docLength="1467" length="1" offset="712" starttimestamp="1700582044267" timestamp="5425268">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="5550" _type="Delete" date="Tue Nov 21 12:24:33 EST 2023" docASTNodeCount="231" docActiveCodeLength="1466" docExpressionCount="168" docLength="1466" endLine="26" length="1" offset="712" startLine="26" starttimestamp="1700582044267" timestamp="5429272">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="5553" _type="Insert" date="Tue Nov 21 12:24:33 EST 2023" docASTNodeCount="235" docActiveCodeLength="1471" docExpressionCount="172" docLength="1471" length="5" offset="712" repeat="5" starttimestamp="1700582044267" timestamp="5429497" timestamp2="5430214">
    <text><![CDATA[.getE]]></text>
  </DocumentChange>
  <DocumentChange __id="5562" _type="Replace" date="Tue Nov 21 12:24:35 EST 2023" docASTNodeCount="234" docActiveCodeLength="1485" docExpressionCount="171" docLength="1485" endLine="26" insertionLength="18" int_docASTNodeCount="231" int_docActiveCodeLength="1467" int_docExpressionCount="168" int_docLength="1467" length="4" offset="713" startLine="26" starttimestamp="1700582044267" timestamp="5431410">
    <deletedText><![CDATA[getE]]></deletedText>
    <insertedText><![CDATA[getEvaluator(null)]]></insertedText>
  </DocumentChange>
  <Command __id="5571" _type="ShellCommand" date="Tue Nov 21 12:25:18 EST 2023" starttimestamp="1700582044267" timestamp="5474153" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="5572" _type="Delete" date="Tue Nov 21 12:25:20 EST 2023" docASTNodeCount="233" docActiveCodeLength="1481" docExpressionCount="170" docLength="1481" endLine="26" length="4" offset="726" startLine="26" starttimestamp="1700582044267" timestamp="5476072">
    <text><![CDATA[null]]></text>
  </DocumentChange>
  <Command __id="5573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:20 EST 2023" starttimestamp="1700582044267" timestamp="5476077" />
  <Command __id="5574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:20 EST 2023" starttimestamp="1700582044267" timestamp="5476077" />
  <DocumentChange __id="5575" _type="Insert" date="Tue Nov 21 12:25:21 EST 2023" docASTNodeCount="234" docActiveCodeLength="1485" docExpressionCount="171" docLength="1485" length="4" offset="726" repeat="4" starttimestamp="1700582044267" timestamp="5477152" timestamp2="5477787">
    <text><![CDATA[getH]]></text>
  </DocumentChange>
  <Command __id="5576" _type="InsertStringCommand" date="Tue Nov 21 12:25:21 EST 2023" starttimestamp="1700582044267" timestamp="5477154" timestamp2="5477154">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5577" _type="InsertStringCommand" date="Tue Nov 21 12:25:21 EST 2023" starttimestamp="1700582044267" timestamp="5477154" timestamp2="5477154">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5579" _type="InsertStringCommand" date="Tue Nov 21 12:25:21 EST 2023" starttimestamp="1700582044267" timestamp="5477289" timestamp2="5477289">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5580" _type="InsertStringCommand" date="Tue Nov 21 12:25:21 EST 2023" starttimestamp="1700582044267" timestamp="5477290" timestamp2="5477290">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5582" _type="InsertStringCommand" date="Tue Nov 21 12:25:21 EST 2023" starttimestamp="1700582044267" timestamp="5477423" timestamp2="5477423">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5583" _type="InsertStringCommand" date="Tue Nov 21 12:25:21 EST 2023" starttimestamp="1700582044267" timestamp="5477423" timestamp2="5477423">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5585" _type="InsertStringCommand" date="Tue Nov 21 12:25:22 EST 2023" starttimestamp="1700582044267" timestamp="5477789" timestamp2="5477789">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="5586" _type="InsertStringCommand" date="Tue Nov 21 12:25:22 EST 2023" starttimestamp="1700582044267" timestamp="5477789" timestamp2="5477789">
    <data><![CDATA[H]]></data>
  </Command>
  <DocumentChange __id="5587" _type="Delete" date="Tue Nov 21 12:25:23 EST 2023" docASTNodeCount="233" docActiveCodeLength="1481" docExpressionCount="170" docLength="1481" endLine="26" length="4" offset="726" repeat="4" startLine="26" starttimestamp="1700582044267" timestamp="5479176" timestamp2="5479599">
    <text><![CDATA[getH]]></text>
  </DocumentChange>
  <Command __id="5588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479178" />
  <Command __id="5589" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479179" />
  <Command __id="5591" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479311" />
  <Command __id="5592" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479311" />
  <Command __id="5594" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479450" />
  <Command __id="5595" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479450" />
  <Command __id="5597" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479602" />
  <Command __id="5598" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:23 EST 2023" starttimestamp="1700582044267" timestamp="5479602" />
  <DocumentChange __id="5599" _type="Insert" date="Tue Nov 21 12:25:24 EST 2023" docASTNodeCount="236" docActiveCodeLength="1489" docExpressionCount="173" docLength="1489" length="8" offset="726" repeat="8" starttimestamp="1700582044267" timestamp="5479931" timestamp2="5480597">
    <text><![CDATA[this.gea]]></text>
  </DocumentChange>
  <Command __id="5600" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5479933" timestamp2="5479933">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5601" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5479933" timestamp2="5479933">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5603" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480032" timestamp2="5480032">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5604" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480032" timestamp2="5480032">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5606" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480094" timestamp2="5480094">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5607" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480094" timestamp2="5480094">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5609" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480169" timestamp2="5480169">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5610" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480169" timestamp2="5480169">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5612" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480256" timestamp2="5480256">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5613" _type="InsertStringCommand" date="Tue Nov 21 12:25:24 EST 2023" starttimestamp="1700582044267" timestamp="5480256" timestamp2="5480256">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5614" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:25:24 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5480263" />
  <Command __id="5618" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:25:24 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5480609" />
  <DocumentChange __id="5619" _type="Delete" date="Tue Nov 21 12:25:25 EST 2023" docASTNodeCount="236" docActiveCodeLength="1488" docExpressionCount="173" docLength="1488" endLine="26" length="1" offset="733" startLine="26" starttimestamp="1700582044267" timestamp="5481141">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="5620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:25 EST 2023" starttimestamp="1700582044267" timestamp="5481142" />
  <Command __id="5621" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:25 EST 2023" starttimestamp="1700582044267" timestamp="5481143" />
  <DocumentChange __id="5622" _type="Insert" date="Tue Nov 21 12:25:25 EST 2023" docASTNodeCount="236" docActiveCodeLength="1490" docExpressionCount="173" docLength="1490" length="2" offset="733" repeat="2" starttimestamp="1700582044267" timestamp="5481400" timestamp2="5481905">
    <text><![CDATA[tH]]></text>
  </DocumentChange>
  <Command __id="5623" _type="InsertStringCommand" date="Tue Nov 21 12:25:25 EST 2023" starttimestamp="1700582044267" timestamp="5481402" timestamp2="5481402">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5624" _type="InsertStringCommand" date="Tue Nov 21 12:25:25 EST 2023" starttimestamp="1700582044267" timestamp="5481402" timestamp2="5481402">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="5626" _type="Replace" date="Tue Nov 21 12:25:26 EST 2023" docASTNodeCount="236" docActiveCodeLength="1491" docExpressionCount="173" docLength="1491" endLine="26" insertionLength="2" int_docASTNodeCount="236" int_docActiveCodeLength="1489" int_docExpressionCount="173" int_docLength="1489" length="1" offset="734" startLine="26" starttimestamp="1700582044267" timestamp="5482330">
    <deletedText><![CDATA[H]]></deletedText>
    <insertedText><![CDATA[He]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5627" _type="Replace" date="Tue Nov 21 12:25:26 EST 2023" docASTNodeCount="236" docActiveCodeLength="1492" docExpressionCount="173" docLength="1492" endLine="26" insertionLength="3" int_docASTNodeCount="236" int_docActiveCodeLength="1489" int_docExpressionCount="173" int_docLength="1489" length="2" offset="734" startLine="26" starttimestamp="1700582044267" timestamp="5482405">
    <deletedText><![CDATA[He]]></deletedText>
    <insertedText><![CDATA[Hea]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5628" _type="Replace" date="Tue Nov 21 12:25:26 EST 2023" docASTNodeCount="236" docActiveCodeLength="1493" docExpressionCount="173" docLength="1493" endLine="26" insertionLength="4" int_docASTNodeCount="236" int_docActiveCodeLength="1489" int_docExpressionCount="173" int_docLength="1489" length="3" offset="734" startLine="26" starttimestamp="1700582044267" timestamp="5482552">
    <deletedText><![CDATA[Hea]]></deletedText>
    <insertedText><![CDATA[Head]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5629" _type="Delete" date="Tue Nov 21 12:25:27 EST 2023" docASTNodeCount="236" docActiveCodeLength="1489" docExpressionCount="173" docLength="1489" endLine="26" length="4" offset="734" startLine="26" starttimestamp="1700582044267" timestamp="5482867">
    <text><![CDATA[Head]]></text>
  </DocumentChange>
  <DocumentChange __id="5630" _type="Insert" date="Tue Nov 21 12:25:27 EST 2023" docASTNodeCount="236" docActiveCodeLength="1491" docExpressionCount="173" docLength="1491" length="2" offset="734" starttimestamp="1700582044267" timestamp="5483066">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="5631" _type="InsertStringCommand" date="Tue Nov 21 12:25:27 EST 2023" starttimestamp="1700582044267" timestamp="5483070" timestamp2="5483070">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5632" _type="InsertStringCommand" date="Tue Nov 21 12:25:27 EST 2023" starttimestamp="1700582044267" timestamp="5483070" timestamp2="5483070">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="5633" _type="Delete" date="Tue Nov 21 12:25:27 EST 2023" docASTNodeCount="236" docActiveCodeLength="1489" docExpressionCount="173" docLength="1489" endLine="26" length="2" offset="734" repeat="2" startLine="26" starttimestamp="1700582044267" timestamp="5483480" timestamp2="5483484">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="5635" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:27 EST 2023" starttimestamp="1700582044267" timestamp="5483486" />
  <Command __id="5636" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:25:27 EST 2023" starttimestamp="1700582044267" timestamp="5483486" />
  <DocumentChange __id="5637" _type="Insert" date="Tue Nov 21 12:25:28 EST 2023" docASTNodeCount="236" docActiveCodeLength="1496" docExpressionCount="173" docLength="1496" length="7" offset="734" repeat="6" starttimestamp="1700582044267" timestamp="5484047" timestamp2="5485074">
    <text><![CDATA[Head(.)]]></text>
  </DocumentChange>
  <Command __id="5638" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484049" timestamp2="5484049">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="5639" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484049" timestamp2="5484049">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="5641" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484307" timestamp2="5484307">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5642" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484307" timestamp2="5484307">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5644" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484418" timestamp2="5484418">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5645" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484418" timestamp2="5484418">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5647" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484539" timestamp2="5484539">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5648" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484539" timestamp2="5484539">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5650" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484701" timestamp2="5484701">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5651" _type="InsertStringCommand" date="Tue Nov 21 12:25:28 EST 2023" starttimestamp="1700582044267" timestamp="5484701" timestamp2="5484701">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5653" _type="InsertStringCommand" date="Tue Nov 21 12:25:29 EST 2023" starttimestamp="1700582044267" timestamp="5485076" timestamp2="5485076">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5654" _type="InsertStringCommand" date="Tue Nov 21 12:25:29 EST 2023" starttimestamp="1700582044267" timestamp="5485076" timestamp2="5485076">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5655" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:25:29 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5485083" />
  <DocumentChange __id="5656" _type="Delete" date="Tue Nov 21 12:25:29 EST 2023" docASTNodeCount="236" docActiveCodeLength="1495" docExpressionCount="173" docLength="1495" endLine="26" length="1" offset="739" startLine="26" starttimestamp="1700582044267" timestamp="5485508">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="5657" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:25:31 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5487077" />
  <Command __id="5658" _type="InsertStringCommand" date="Tue Nov 21 12:25:31 EST 2023" starttimestamp="1700582044267" timestamp="5487080" timestamp2="5487080">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5659" _type="InsertStringCommand" date="Tue Nov 21 12:25:31 EST 2023" starttimestamp="1700582044267" timestamp="5487080" timestamp2="5487080">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5660" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:25:31 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5487092" />
  <DocumentChange __id="5661" _type="Insert" date="Tue Nov 21 12:25:32 EST 2023" docASTNodeCount="238" docActiveCodeLength="1498" docExpressionCount="175" docLength="1498" length="3" offset="740" repeat="3" starttimestamp="1700582044267" timestamp="5488523" timestamp2="5489189">
    <text><![CDATA[.to]]></text>
  </DocumentChange>
  <Command __id="5662" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:25:32 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5488545" />
  <Command __id="5663" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:25:32 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5488546" />
  <Command __id="5666" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:25:33 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5489424" />
  <Command __id="5668" _type="InsertStringCommand" date="Tue Nov 21 12:25:33 EST 2023" starttimestamp="1700582044267" timestamp="5489432" timestamp2="5489432">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5669" _type="InsertStringCommand" date="Tue Nov 21 12:25:33 EST 2023" starttimestamp="1700582044267" timestamp="5489432" timestamp2="5489432">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5670" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 12:25:35 EST 2023" starttimestamp="1700582044267" timestamp="5490878" />
  <Command __id="5671" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 12:25:35 EST 2023" starttimestamp="1700582044267" timestamp="5490878" />
  <DocumentChange __id="5667" _type="Replace" date="Tue Nov 21 12:25:33 EST 2023" docASTNodeCount="238" docActiveCodeLength="1506" docExpressionCount="175" docLength="1506" endLine="26" insertionLength="10" int_docASTNodeCount="234" int_docActiveCodeLength="1496" int_docExpressionCount="172" int_docLength="1496" length="2" offset="741" startLine="26" starttimestamp="1700582044267" timestamp="5489428">
    <deletedText><![CDATA[to]]></deletedText>
    <insertedText><![CDATA[toString()]]></insertedText>
  </DocumentChange>
  <Command __id="5672" _type="MoveCaretCommand" caretOffset="752" date="Tue Nov 21 12:25:36 EST 2023" docOffset="752" starttimestamp="1700582044267" timestamp="5492326" />
  <Command __id="5673" _type="MoveCaretCommand" caretOffset="752" date="Tue Nov 21 12:25:36 EST 2023" docOffset="752" starttimestamp="1700582044267" timestamp="5492326" />
  <DocumentChange __id="5674" _type="Insert" date="Tue Nov 21 12:25:37 EST 2023" docASTNodeCount="242" docActiveCodeLength="1508" docExpressionCount="179" docLength="1508" length="2" offset="752" repeat="2" starttimestamp="1700582044267" timestamp="5493368" timestamp2="5494135">
    <text><![CDATA[.e]]></text>
  </DocumentChange>
  <Command __id="5675" _type="InsertStringCommand" date="Tue Nov 21 12:25:37 EST 2023" starttimestamp="1700582044267" timestamp="5493371" timestamp2="5493371">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5676" _type="InsertStringCommand" date="Tue Nov 21 12:25:37 EST 2023" starttimestamp="1700582044267" timestamp="5493371" timestamp2="5493371">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5677" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 12:25:37 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="5493378" />
  <DocumentChange __id="5679" _type="Insert" date="Tue Nov 21 12:25:41 EST 2023" docASTNodeCount="242" docActiveCodeLength="1511" docExpressionCount="179" docLength="1511" length="3" offset="754" repeat="3" starttimestamp="1700582044267" timestamp="5497030" timestamp2="5497158">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <Command __id="5682" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:25:46 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5502026" />
  <Command __id="5684" _type="InsertStringCommand" date="Tue Nov 21 12:25:46 EST 2023" starttimestamp="1700582044267" timestamp="5502060" timestamp2="5502060">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5685" _type="InsertStringCommand" date="Tue Nov 21 12:25:46 EST 2023" starttimestamp="1700582044267" timestamp="5502060" timestamp2="5502060">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5686" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 12:25:50 EST 2023" starttimestamp="1700582044267" timestamp="5505863" />
  <Command __id="5687" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 12:25:50 EST 2023" starttimestamp="1700582044267" timestamp="5505863" />
  <Command __id="5689" _type="InsertStringCommand" date="Tue Nov 21 12:25:50 EST 2023" starttimestamp="1700582044267" timestamp="5506458" timestamp2="5506458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5690" _type="InsertStringCommand" date="Tue Nov 21 12:25:50 EST 2023" starttimestamp="1700582044267" timestamp="5506458" timestamp2="5506458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5691" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 12:25:52 EST 2023" starttimestamp="1700582044267" timestamp="5508162" />
  <Command __id="5692" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 12:25:52 EST 2023" starttimestamp="1700582044267" timestamp="5508162" />
  <Command __id="5693" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 12:25:53 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="5509618" />
  <Command __id="5694" _type="MoveCaretCommand" caretOffset="774" date="Tue Nov 21 12:25:53 EST 2023" docOffset="774" starttimestamp="1700582044267" timestamp="5509711" />
  <Command __id="5695" _type="MoveCaretCommand" caretOffset="774" date="Tue Nov 21 12:25:53 EST 2023" docOffset="774" starttimestamp="1700582044267" timestamp="5509711" />
  <Command __id="5697" _type="InsertStringCommand" date="Tue Nov 21 12:25:54 EST 2023" starttimestamp="1700582044267" timestamp="5510681" timestamp2="5510681">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5698" _type="InsertStringCommand" date="Tue Nov 21 12:25:54 EST 2023" starttimestamp="1700582044267" timestamp="5510681" timestamp2="5510681">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5699" _type="MoveCaretCommand" caretOffset="853" date="Tue Nov 21 12:25:55 EST 2023" docOffset="853" starttimestamp="1700582044267" timestamp="5510984" />
  <Command __id="5700" _type="MoveCaretCommand" caretOffset="853" date="Tue Nov 21 12:25:55 EST 2023" docOffset="853" starttimestamp="1700582044267" timestamp="5510984" />
  <Command __id="5701" _type="ShellCommand" date="Tue Nov 21 12:25:58 EST 2023" starttimestamp="1700582044267" timestamp="5513821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5702" _type="ShellCommand" date="Tue Nov 21 12:26:05 EST 2023" starttimestamp="1700582044267" timestamp="5521315" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5703" _type="ShellCommand" date="Tue Nov 21 12:26:08 EST 2023" starttimestamp="1700582044267" timestamp="5524169" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5704" _type="ShellCommand" date="Tue Nov 21 12:26:09 EST 2023" starttimestamp="1700582044267" timestamp="5525501" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5705" _type="MoveCaretCommand" caretOffset="599" date="Tue Nov 21 12:26:10 EST 2023" docOffset="599" starttimestamp="1700582044267" timestamp="5526543" />
  <Command __id="5706" _type="MoveCaretCommand" caretOffset="599" date="Tue Nov 21 12:26:10 EST 2023" docOffset="599" starttimestamp="1700582044267" timestamp="5526544" />
  <Command __id="5707" _type="MoveCaretCommand" caretOffset="720" date="Tue Nov 21 12:26:12 EST 2023" docOffset="720" starttimestamp="1700582044267" timestamp="5527861" />
  <Command __id="5708" _type="MoveCaretCommand" caretOffset="720" date="Tue Nov 21 12:26:12 EST 2023" docOffset="720" starttimestamp="1700582044267" timestamp="5527861" />
  <Command __id="5709" _type="MoveCaretCommand" caretOffset="774" date="Tue Nov 21 12:26:12 EST 2023" docOffset="774" starttimestamp="1700582044267" timestamp="5528383" />
  <Command __id="5710" _type="MoveCaretCommand" caretOffset="774" date="Tue Nov 21 12:26:12 EST 2023" docOffset="774" starttimestamp="1700582044267" timestamp="5528383" />
  <DocumentChange __id="5683" _type="Replace" date="Tue Nov 21 12:25:46 EST 2023" docASTNodeCount="243" docActiveCodeLength="1528" docExpressionCount="180" docLength="1528" endLine="26" insertionLength="21" int_docASTNodeCount="238" int_docActiveCodeLength="1507" int_docExpressionCount="175" int_docLength="1507" length="4" offset="753" startLine="26" starttimestamp="1700582044267" timestamp="5502029">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(getHead(), null)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5688" _type="Replace" date="Tue Nov 21 12:25:50 EST 2023" docASTNodeCount="243" docActiveCodeLength="1528" docExpressionCount="180" docLength="1528" endLine="26" insertionLength="9" int_docASTNodeCount="241" int_docActiveCodeLength="1519" int_docExpressionCount="178" int_docLength="1519" length="9" offset="758" startLine="26" starttimestamp="1700582044267" timestamp="5506450">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5696" _type="Insert" date="Tue Nov 21 12:25:54 EST 2023" docASTNodeCount="243" docActiveCodeLength="1529" docExpressionCount="180" docLength="1529" length="1" offset="774" starttimestamp="1700582044267" timestamp="5510677">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="5711" _type="SelectTextCommand" caretOffset="674" date="Tue Nov 21 12:26:14 EST 2023" end="775" start="674" starttimestamp="1700582044267" timestamp="5530044" />
  <Command __id="5712" _type="SelectTextCommand" caretOffset="674" date="Tue Nov 21 12:26:14 EST 2023" end="775" start="674" starttimestamp="1700582044267" timestamp="5530044" />
  <DocumentChange __id="5713" _type="Delete" date="Tue Nov 21 12:26:23 EST 2023" docASTNodeCount="227" docActiveCodeLength="1428" docExpressionCount="165" docLength="1428" endLine="26" length="101" offset="674" startLine="26" starttimestamp="1700582044267" timestamp="5539238">
    <text><![CDATA[BuiltinOperationManagerSingleton.get().getEvaluator(this.getHead().toString()).eval(getTail(), null);]]></text>
  </DocumentChange>
  <Command __id="5714" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:26:23 EST 2023" starttimestamp="1700582044267" timestamp="5539242" />
  <Command __id="5715" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:26:23 EST 2023" starttimestamp="1700582044267" timestamp="5539242" />
  <Command __id="5716" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:24 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5540456">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5717" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:26:24 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5540509" />
  <Command __id="5718" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:26 EST 2023" docASTNodeCount="227" docActiveCodeLength="1428" docExpressionCount="165" docLength="1428" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5541838">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		"), Diff(DELETE,"BasicOperationManagerSingleton.get()"), Diff(EQUAL,"		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="5719" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 12:26:26 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="5541905" />
  <Command __id="5720" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:26 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5542094">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5721" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:26:26 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="5542134" />
  <Command __id="5722" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:29 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5544875">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5723" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 12:26:29 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="5544932" />
  <Command __id="5724" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:30 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5545898">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5725" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:26:30 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="5545950" />
  <Command __id="5726" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:30 EST 2023" docASTNodeCount="227" docActiveCodeLength="1428" docExpressionCount="165" docLength="1428" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5546177">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5727" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 12:26:30 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="5546221" />
  <Command __id="5728" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:42 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5558638">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5729" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 12:26:42 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="5558690" />
  <Command __id="5730" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:44 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5559969">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5731" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 12:26:44 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="5560013" />
  <Command __id="5733" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 12:26:45 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="5561636" />
  <Command __id="5734" _type="MoveCaretCommand" caretOffset="121" date="Tue Nov 21 12:26:46 EST 2023" docOffset="468" starttimestamp="1700582044267" timestamp="5562229" />
  <Command __id="5735" _type="MoveCaretCommand" caretOffset="174" date="Tue Nov 21 12:26:46 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="5562607" />
  <Command __id="5736" _type="ShellCommand" date="Tue Nov 21 12:26:47 EST 2023" starttimestamp="1700582044267" timestamp="5563708" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5737" _type="ShellCommand" date="Tue Nov 21 12:26:49 EST 2023" starttimestamp="1700582044267" timestamp="5565513" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5738" _type="ShellCommand" date="Tue Nov 21 12:26:50 EST 2023" starttimestamp="1700582044267" timestamp="5565922" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5732" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:26:45 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5561574">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5739" _type="ShellCommand" date="Tue Nov 21 12:31:56 EST 2023" starttimestamp="1700582044267" timestamp="5871768" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5740" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:31:58 EST 2023" docASTNodeCount="227" docActiveCodeLength="1428" docExpressionCount="165" docLength="1428" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5873816">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5741" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 12:31:58 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="5873870" />
  <Command __id="5743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:32:00 EST 2023" starttimestamp="1700582044267" timestamp="5876372" />
  <Command __id="5744" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:32:00 EST 2023" starttimestamp="1700582044267" timestamp="5876372" />
  <Command __id="5746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:32:00 EST 2023" starttimestamp="1700582044267" timestamp="5876513" />
  <Command __id="5747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:32:00 EST 2023" starttimestamp="1700582044267" timestamp="5876513" />
  <Command __id="5749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:32:01 EST 2023" starttimestamp="1700582044267" timestamp="5876860" />
  <Command __id="5750" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 12:32:01 EST 2023" starttimestamp="1700582044267" timestamp="5876860" />
  <Command __id="5751" _type="MoveCaretCommand" caretOffset="606" date="Tue Nov 21 12:32:01 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="5877708" />
  <Command __id="5752" _type="MoveCaretCommand" caretOffset="606" date="Tue Nov 21 12:32:01 EST 2023" docOffset="606" starttimestamp="1700582044267" timestamp="5877708" />
  <Command __id="5753" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 12:32:02 EST 2023" starttimestamp="1700582044267" timestamp="5877909" />
  <Command __id="5754" _type="EclipseCommand" commandID="" date="Tue Nov 21 12:32:02 EST 2023" starttimestamp="1700582044267" timestamp="5878024" />
  <Command __id="5755" _type="EclipseCommand" commandID="" date="Tue Nov 21 12:32:02 EST 2023" starttimestamp="1700582044267" timestamp="5878037" />
  <Command __id="5756" _type="MoveCaretCommand" caretOffset="667" date="Tue Nov 21 12:32:03 EST 2023" docOffset="667" starttimestamp="1700582044267" timestamp="5878877" />
  <Command __id="5757" _type="MoveCaretCommand" caretOffset="667" date="Tue Nov 21 12:32:03 EST 2023" docOffset="667" starttimestamp="1700582044267" timestamp="5878877" />
  <Command __id="5758" _type="MoveCaretCommand" caretOffset="253" date="Tue Nov 21 12:32:04 EST 2023" docOffset="253" starttimestamp="1700582044267" timestamp="5880261" />
  <Command __id="5759" _type="MoveCaretCommand" caretOffset="253" date="Tue Nov 21 12:32:04 EST 2023" docOffset="253" starttimestamp="1700582044267" timestamp="5880261" />
  <Command __id="5760" _type="MoveCaretCommand" caretOffset="242" date="Tue Nov 21 12:32:07 EST 2023" docOffset="242" starttimestamp="1700582044267" timestamp="5882988" />
  <Command __id="5761" _type="MoveCaretCommand" caretOffset="242" date="Tue Nov 21 12:32:07 EST 2023" docOffset="242" starttimestamp="1700582044267" timestamp="5882988" />
  <Command __id="5762" _type="SelectTextCommand" caretOffset="252" date="Tue Nov 21 12:32:07 EST 2023" end="252" start="220" starttimestamp="1700582044267" timestamp="5883136" />
  <Command __id="5763" _type="SelectTextCommand" caretOffset="252" date="Tue Nov 21 12:32:07 EST 2023" end="252" start="220" starttimestamp="1700582044267" timestamp="5883136" />
  <Command __id="5764" _type="MoveCaretCommand" caretOffset="671" date="Tue Nov 21 12:32:08 EST 2023" docOffset="671" starttimestamp="1700582044267" timestamp="5884345" />
  <Command __id="5765" _type="MoveCaretCommand" caretOffset="671" date="Tue Nov 21 12:32:08 EST 2023" docOffset="671" starttimestamp="1700582044267" timestamp="5884345" />
  <Command __id="5766" _type="ShellCommand" date="Tue Nov 21 12:32:13 EST 2023" starttimestamp="1700582044267" timestamp="5888895" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5767" _type="ShellCommand" date="Tue Nov 21 12:32:13 EST 2023" starttimestamp="1700582044267" timestamp="5889599" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5768" _type="ShellCommand" date="Tue Nov 21 12:32:14 EST 2023" starttimestamp="1700582044267" timestamp="5890131" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5769" _type="ShellCommand" date="Tue Nov 21 12:32:14 EST 2023" starttimestamp="1700582044267" timestamp="5890635" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5770" _type="ShellCommand" date="Tue Nov 21 12:32:15 EST 2023" starttimestamp="1700582044267" timestamp="5891229" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5771" _type="ShellCommand" date="Tue Nov 21 12:32:15 EST 2023" starttimestamp="1700582044267" timestamp="5891730" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5772" _type="ShellCommand" date="Tue Nov 21 12:32:17 EST 2023" starttimestamp="1700582044267" timestamp="5893048" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5773" _type="ShellCommand" date="Tue Nov 21 12:32:21 EST 2023" starttimestamp="1700582044267" timestamp="5897542" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5774" _type="MoveCaretCommand" caretOffset="950" date="Tue Nov 21 12:32:23 EST 2023" docOffset="950" starttimestamp="1700582044267" timestamp="5899230" />
  <Command __id="5775" _type="MoveCaretCommand" caretOffset="950" date="Tue Nov 21 12:32:23 EST 2023" docOffset="950" starttimestamp="1700582044267" timestamp="5899230" />
  <Command __id="5776" _type="MoveCaretCommand" caretOffset="885" date="Tue Nov 21 12:32:23 EST 2023" docOffset="885" starttimestamp="1700582044267" timestamp="5899708" />
  <Command __id="5777" _type="MoveCaretCommand" caretOffset="885" date="Tue Nov 21 12:32:23 EST 2023" docOffset="885" starttimestamp="1700582044267" timestamp="5899708" />
  <Command __id="5778" _type="MoveCaretCommand" caretOffset="875" date="Tue Nov 21 12:32:24 EST 2023" docOffset="875" starttimestamp="1700582044267" timestamp="5900200" />
  <Command __id="5779" _type="MoveCaretCommand" caretOffset="875" date="Tue Nov 21 12:32:24 EST 2023" docOffset="875" starttimestamp="1700582044267" timestamp="5900200" />
  <Command __id="5780" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:32:29 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5905675" />
  <Command __id="5781" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:32:29 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5905675" />
  <Command __id="5782" _type="MoveCaretCommand" caretOffset="1114" date="Tue Nov 21 12:32:30 EST 2023" docOffset="1114" starttimestamp="1700582044267" timestamp="5906307" />
  <Command __id="5783" _type="MoveCaretCommand" caretOffset="1114" date="Tue Nov 21 12:32:30 EST 2023" docOffset="1114" starttimestamp="1700582044267" timestamp="5906307" />
  <Command __id="5784" _type="MoveCaretCommand" caretOffset="1158" date="Tue Nov 21 12:32:30 EST 2023" docOffset="1158" starttimestamp="1700582044267" timestamp="5906690" />
  <Command __id="5785" _type="MoveCaretCommand" caretOffset="1158" date="Tue Nov 21 12:32:30 EST 2023" docOffset="1158" starttimestamp="1700582044267" timestamp="5906690" />
  <DocumentChange __id="5742" _type="Delete" date="Tue Nov 21 12:32:00 EST 2023" docASTNodeCount="227" docActiveCodeLength="1425" docExpressionCount="165" docLength="1425" endLine="26" length="3" offset="671" repeat="3" startLine="25" starttimestamp="1700582044267" timestamp="5876368" timestamp2="5876856">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="5786" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:32:50 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5926153" />
  <Command __id="5787" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:32:50 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5926153" />
  <Command __id="5788" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:00 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5936086">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5789" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:33:00 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5936126" />
  <Command __id="5790" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:03 EST 2023" docASTNodeCount="227" docActiveCodeLength="1425" docExpressionCount="165" docLength="1425" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5938939">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		"), Diff(DELETE,"		"), Diff(EQUAL,"return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="5791" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:33:03 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5939052" />
  <Command __id="5792" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:06 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5942370">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5793" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:33:06 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5942467" />
  <Command __id="5794" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:08 EST 2023" docASTNodeCount="227" docActiveCodeLength="1425" docExpressionCount="165" docLength="1425" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5944444">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5795" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:33:08 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5944495" />
  <Command __id="5796" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:09 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5944873">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5797" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:33:09 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5944916" />
  <Command __id="5798" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:09 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5945639">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5799" _type="MoveCaretCommand" caretOffset="174" date="Tue Nov 21 12:33:09 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="5945696" />
  <Command __id="5800" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:12 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5948290">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5801" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:33:12 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5948336" />
  <Command __id="5802" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:13 EST 2023" docASTNodeCount="227" docActiveCodeLength="1425" docExpressionCount="165" docLength="1425" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5948923">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5803" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:33:13 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5948974" />
  <Command __id="5804" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:15 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5951407">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5805" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 12:33:15 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="5951458" />
  <Command __id="5807" _type="MoveCaretCommand" caretOffset="1094" date="Tue Nov 21 12:33:23 EST 2023" docOffset="1094" starttimestamp="1700582044267" timestamp="5959211" />
  <Command __id="5808" _type="ShellCommand" date="Tue Nov 21 12:33:27 EST 2023" starttimestamp="1700582044267" timestamp="5963234" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5809" _type="ShellCommand" date="Tue Nov 21 12:33:30 EST 2023" starttimestamp="1700582044267" timestamp="5966339" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5810" _type="ShellCommand" date="Tue Nov 21 12:33:36 EST 2023" starttimestamp="1700582044267" timestamp="5971740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5811" _type="ShellCommand" date="Tue Nov 21 12:33:44 EST 2023" starttimestamp="1700582044267" timestamp="5980149" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5812" _type="MoveCaretCommand" caretOffset="1175" date="Tue Nov 21 12:33:44 EST 2023" docOffset="1175" starttimestamp="1700582044267" timestamp="5980202" />
  <Command __id="5813" _type="MoveCaretCommand" caretOffset="1175" date="Tue Nov 21 12:33:44 EST 2023" docOffset="1175" starttimestamp="1700582044267" timestamp="5980202" />
  <Command __id="5814" _type="ShellCommand" date="Tue Nov 21 12:33:45 EST 2023" starttimestamp="1700582044267" timestamp="5980786" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5815" _type="ShellCommand" date="Tue Nov 21 12:33:48 EST 2023" starttimestamp="1700582044267" timestamp="5984655" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5816" _type="ShellCommand" date="Tue Nov 21 12:33:49 EST 2023" starttimestamp="1700582044267" timestamp="5985152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5806" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:33:23 EST 2023" docASTNodeCount="227" docActiveCodeLength="1425" docExpressionCount="165" docLength="1425" projectName="Assignment5" starttimestamp="1700582044267" timestamp="5959177">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5817" _type="ShellCommand" date="Tue Nov 21 12:34:25 EST 2023" starttimestamp="1700582044267" timestamp="6020904" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5818" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:34:26 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="6022556">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5819" _type="MoveCaretCommand" caretOffset="174" date="Tue Nov 21 12:34:26 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="6022640" />
  <Command __id="5820" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:34:28 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="6023803">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5821" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 12:34:28 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="6023856" />
  <Command __id="5823" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 12:34:28 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="6024280" />
  <Command __id="5824" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 12:34:30 EST 2023" starttimestamp="1700582044267" timestamp="6026148" />
  <Command __id="5825" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 12:34:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="6026269" type="Run" />
  <Command __id="5826" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 12:34:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="6026269" type="Run" />
  <Command __id="5827" _type="ShellCommand" date="Tue Nov 21 12:34:32 EST 2023" starttimestamp="1700582044267" timestamp="6028425" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5828" _type="ShellCommand" date="Tue Nov 21 12:34:33 EST 2023" starttimestamp="1700582044267" timestamp="6028927" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5829" _type="ShellCommand" date="Tue Nov 21 12:34:34 EST 2023" starttimestamp="1700582044267" timestamp="6029968" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5830" _type="ShellCommand" date="Tue Nov 21 12:34:34 EST 2023" starttimestamp="1700582044267" timestamp="6030639" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5831" _type="ShellCommand" date="Tue Nov 21 12:34:35 EST 2023" starttimestamp="1700582044267" timestamp="6031143" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5832" _type="ShellCommand" date="Tue Nov 21 12:34:38 EST 2023" starttimestamp="1700582044267" timestamp="6033887" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5833" _type="PasteCommand" date="Tue Nov 21 12:34:38 EST 2023" starttimestamp="1700582044267" timestamp="6034220" />
  <Command __id="5834" _type="ConsoleOutput" date="Tue Nov 21 12:34:38 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="6034696" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T)))"), Diff(INSERT,"(5"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5835" _type="ShellCommand" date="Tue Nov 21 12:34:39 EST 2023" starttimestamp="1700582044267" timestamp="6035353" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5836" _type="ShellCommand" date="Tue Nov 21 12:34:45 EST 2023" starttimestamp="1700582044267" timestamp="6041441" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5837" _type="PasteCommand" date="Tue Nov 21 12:34:46 EST 2023" starttimestamp="1700582044267" timestamp="6041775" />
  <Command __id="5838" _type="ConsoleOutput" date="Tue Nov 21 12:34:46 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="6042100" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5839" _type="ShellCommand" date="Tue Nov 21 12:34:46 EST 2023" starttimestamp="1700582044267" timestamp="6042657" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5840" _type="ShellCommand" date="Tue Nov 21 12:34:55 EST 2023" starttimestamp="1700582044267" timestamp="6051551" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5841" _type="PasteCommand" date="Tue Nov 21 12:34:56 EST 2023" starttimestamp="1700582044267" timestamp="6051907" />
  <Command __id="5842" _type="ConsoleOutput" date="Tue Nov 21 12:34:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="6052128" type="ConsoleOutput">
    <outputString><![CDATA[(6.2 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"(6.2 5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5843" _type="ShellCommand" date="Tue Nov 21 12:34:57 EST 2023" starttimestamp="1700582044267" timestamp="6052750" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5844" _type="ShellCommand" date="Tue Nov 21 12:37:13 EST 2023" starttimestamp="1700582044267" timestamp="6189526" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5845" _type="ShellCommand" date="Tue Nov 21 12:37:17 EST 2023" starttimestamp="1700582044267" timestamp="6192844" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5846" _type="ShellCommand" date="Tue Nov 21 12:37:18 EST 2023" starttimestamp="1700582044267" timestamp="6194556" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5847" _type="ConsoleInput" date="Tue Nov 21 12:37:24 EST 2023" starttimestamp="1700582044267" timestamp="6200232" type="Exception">
    <outputString><![CDATA[(cons 5 nil)(car (cons 5 nil))(cdr (cons (cons "A" (cons 4 nil)) (cons 6.2 (cons 5 nil))))(list 1 2)
]]></outputString>
  </Command>
  <Command __id="5848" _type="ConsoleOutput" date="Tue Nov 21 12:37:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="6200236" type="ConsoleOutput">
    <outputString><![CDATA[(LIST 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"6.2 5"), Diff(INSERT,"LIST 1 2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5849" _type="ShellCommand" date="Tue Nov 21 12:37:25 EST 2023" starttimestamp="1700582044267" timestamp="6201180" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5850" _type="ShellCommand" date="Tue Nov 21 12:37:39 EST 2023" starttimestamp="1700582044267" timestamp="6215101" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5851" _type="ConsoleInput" date="Tue Nov 21 12:37:44 EST 2023" starttimestamp="1700582044267" timestamp="6220405" type="Exception">
    <outputString><![CDATA[(+ 1 2)
]]></outputString>
  </Command>
  <Command __id="5852" _type="ConsoleOutput" date="Tue Nov 21 12:37:44 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="6220411" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST 1 2)"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5853" _type="MoveCaretCommand" caretOffset="308" date="Tue Nov 21 12:37:49 EST 2023" docOffset="357" starttimestamp="1700582044267" timestamp="6225341" />
  <Command __id="5854" _type="ShellCommand" date="Tue Nov 21 11:54:04 EST 2023" starttimestamp="1700582044267" timestamp="6394365" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5855" _type="BalloonCommand" date="Tue Nov 21 12:54:04 EST 2023" message="*******************************************
Worked 18 minutes(fixed)/46 minutes(context based) from
Tue Nov 21 11:54:04 EST 2023 to Tue Nov 21 12:40:38 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 2 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java
Number of insert: 261
Number of delete: 320
" starttimestamp="1700582044267" timestamp="7200048">
    <fineGrainedWorkTime><![CDATA[46]]></fineGrainedWorkTime>
    <insert><![CDATA[261]]></insert>
    <startTime><![CDATA[1700585644319]]></startTime>
    <endTime><![CDATA[1700588438632]]></endTime>
    <workTime><![CDATA[18]]></workTime>
    <delete><![CDATA[320]]></delete>
  </Command>
  <Command __id="5822" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 12:34:28 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="6024220">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class index {

	public static void main(String[] args) {
		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();
		operationRegistererImpl.registerOperations();
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="5858" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:19:31 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12327564" type="Run" />
  <Command __id="5859" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:19:31 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12327564" type="Run" />
  <Command __id="5861" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 14:19:32 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="12328672" />
  <Command __id="5862" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:19:35 EST 2023" starttimestamp="1700582044267" timestamp="12330839" />
  <Command __id="5863" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:19:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12331018" type="Run" />
  <Command __id="5864" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:19:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12331018" type="Run" />
  <Command __id="5865" _type="ShellCommand" date="Tue Nov 21 14:19:35 EST 2023" starttimestamp="1700582044267" timestamp="12331334" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5866" _type="ConsoleOutput" date="Tue Nov 21 14:19:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12335805" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5867" _type="ConsoleOutput" date="Tue Nov 21 14:19:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12335806" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5868" _type="ConsoleOutput" date="Tue Nov 21 14:19:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12335808" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="5869" _type="ConsoleOutput" date="Tue Nov 21 14:19:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12335824" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5870" _type="ConsoleOutput" date="Tue Nov 21 14:19:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12335831" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):27
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):27¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶")]]]></diff>
  </Command>
  <Command __id="5871" _type="ShellCommand" date="Tue Nov 21 14:19:49 EST 2023" starttimestamp="1700582044267" timestamp="12345261" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5872" _type="LocalChecksRawCommand" date="Tue Nov 21 14:19:49 EST 2023" starttimestamp="1700582044267" timestamp="12345269">
    <CSVRow><![CDATA[226,Tue Nov 21 14:19:40 EST 2023,54,0,ListToStringCheckerAdvanced,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,124,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5873" _type="LocalChecksRawCommand" date="Tue Nov 21 14:19:49 EST 2023" starttimestamp="1700582044267" timestamp="12345269">
    <CSVRow><![CDATA[226,Tue Nov 21 14:19:40 EST 2023,54,0,ListToStringCheckerAdvanced,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,124,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5874" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:19:49 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12345275" type="Run" />
  <Command __id="5875" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:19:49 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12345275" type="Run" />
  <Command __id="5876" _type="MoveCaretCommand" caretOffset="15" date="Tue Nov 21 14:19:51 EST 2023" docOffset="15" starttimestamp="1700582044267" timestamp="12347656" />
  <Command __id="5877" _type="MoveCaretCommand" caretOffset="15" date="Tue Nov 21 14:19:51 EST 2023" docOffset="15" starttimestamp="1700582044267" timestamp="12347656" />
  <Command __id="5879" _type="MoveCaretCommand" caretOffset="308" date="Tue Nov 21 14:19:52 EST 2023" docOffset="357" starttimestamp="1700582044267" timestamp="12348632" />
  <Command __id="5880" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:19:54 EST 2023" starttimestamp="1700582044267" timestamp="12350660" />
  <Command __id="5881" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:19:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12350795" type="Run" />
  <Command __id="5882" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:19:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12350795" type="Run" />
  <Command __id="5883" _type="ConsoleInput" date="Tue Nov 21 14:20:02 EST 2023" starttimestamp="1700582044267" timestamp="12358388" type="Exception">
    <outputString><![CDATA[(and) 1 2
]]></outputString>
  </Command>
  <Command __id="5884" _type="ConsoleOutput" date="Tue Nov 21 14:20:02 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12358401" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):27¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5885" _type="ConsoleInput" date="Tue Nov 21 14:20:07 EST 2023" starttimestamp="1700582044267" timestamp="12363096" type="Exception">
    <outputString><![CDATA[(and T T)
]]></outputString>
  </Command>
  <Command __id="5886" _type="ConsoleOutput" date="Tue Nov 21 14:20:07 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12363101" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5860" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:19:32 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12328577">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5878" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:19:52 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12348565">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5887" _type="MoveCaretCommand" caretOffset="241" date="Tue Nov 21 14:20:08 EST 2023" docOffset="290" starttimestamp="1700582044267" timestamp="12364299" />
  <Command __id="5889" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 14:20:12 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="12368397" />
  <Command __id="5890" _type="MoveCaretCommand" caretOffset="453" date="Tue Nov 21 14:20:15 EST 2023" docOffset="583" starttimestamp="1700582044267" timestamp="12371256" />
  <Command __id="5891" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:16 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12372508" />
  <Command __id="5892" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 14:20:17 EST 2023" docOffset="467" starttimestamp="1700582044267" timestamp="12372970" />
  <Command __id="5893" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:17 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12373413" />
  <Command __id="5894" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:18 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12373844" />
  <Command __id="5895" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 14:20:18 EST 2023" docOffset="467" starttimestamp="1700582044267" timestamp="12374345" />
  <Command __id="5896" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:19 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12374794" />
  <Command __id="5897" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:19 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12375273" />
  <Command __id="5898" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 14:20:20 EST 2023" docOffset="467" starttimestamp="1700582044267" timestamp="12375738" />
  <Command __id="5899" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:20 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12376668" />
  <Command __id="5900" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:21 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12377156" />
  <Command __id="5901" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 14:20:21 EST 2023" docOffset="467" starttimestamp="1700582044267" timestamp="12377642" />
  <Command __id="5902" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:22 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12378123" />
  <Command __id="5903" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:22 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12378614" />
  <Command __id="5904" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:23 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12379080" />
  <Command __id="5905" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:23 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12379529" />
  <Command __id="5906" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:24 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12380033" />
  <Command __id="5907" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 14:20:24 EST 2023" docOffset="467" starttimestamp="1700582044267" timestamp="12380498" />
  <Command __id="5908" _type="MoveCaretCommand" caretOffset="371" date="Tue Nov 21 14:20:25 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="12381536" />
  <Command __id="5909" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 14:20:26 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="12382043" />
  <Command __id="5910" _type="MoveCaretCommand" caretOffset="404" date="Tue Nov 21 14:20:28 EST 2023" docOffset="534" starttimestamp="1700582044267" timestamp="12384420" />
  <Command __id="5911" _type="MoveCaretCommand" caretOffset="497" date="Tue Nov 21 14:20:29 EST 2023" docOffset="627" starttimestamp="1700582044267" timestamp="12384936" />
  <Command __id="5912" _type="MoveCaretCommand" caretOffset="496" date="Tue Nov 21 14:20:30 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="12386147" />
  <Command __id="5913" _type="MoveCaretCommand" caretOffset="497" date="Tue Nov 21 14:20:31 EST 2023" docOffset="627" starttimestamp="1700582044267" timestamp="12386798" />
  <Command __id="5914" _type="MoveCaretCommand" caretOffset="496" date="Tue Nov 21 14:20:31 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="12387273" />
  <Command __id="5915" _type="MoveCaretCommand" caretOffset="404" date="Tue Nov 21 14:20:34 EST 2023" docOffset="534" starttimestamp="1700582044267" timestamp="12390731" />
  <Command __id="5916" _type="MoveCaretCommand" caretOffset="398" date="Tue Nov 21 14:20:35 EST 2023" docOffset="528" starttimestamp="1700582044267" timestamp="12391245" />
  <Command __id="5917" _type="MoveCaretCommand" caretOffset="405" date="Tue Nov 21 14:20:36 EST 2023" docOffset="535" starttimestamp="1700582044267" timestamp="12391756" />
  <Command __id="5918" _type="MoveCaretCommand" caretOffset="500" date="Tue Nov 21 14:20:36 EST 2023" docOffset="630" starttimestamp="1700582044267" timestamp="12392501" />
  <Command __id="5919" _type="MoveCaretCommand" caretOffset="497" date="Tue Nov 21 14:20:38 EST 2023" docOffset="627" starttimestamp="1700582044267" timestamp="12393903" />
  <Command __id="5920" _type="MoveCaretCommand" caretOffset="496" date="Tue Nov 21 14:20:39 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="12394947" />
  <Command __id="5921" _type="MoveCaretCommand" caretOffset="203" date="Tue Nov 21 14:20:44 EST 2023" docOffset="333" starttimestamp="1700582044267" timestamp="12400359" />
  <Command __id="5922" _type="MoveCaretCommand" caretOffset="210" date="Tue Nov 21 14:20:45 EST 2023" docOffset="340" starttimestamp="1700582044267" timestamp="12400832" />
  <Command __id="5923" _type="MoveCaretCommand" caretOffset="216" date="Tue Nov 21 14:20:45 EST 2023" docOffset="346" starttimestamp="1700582044267" timestamp="12401340" />
  <Command __id="5924" _type="MoveCaretCommand" caretOffset="211" date="Tue Nov 21 14:20:46 EST 2023" docOffset="341" starttimestamp="1700582044267" timestamp="12402310" />
  <Command __id="5925" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 14:20:48 EST 2023" docOffset="467" starttimestamp="1700582044267" timestamp="12404091" />
  <Command __id="5926" _type="MoveCaretCommand" caretOffset="493" date="Tue Nov 21 14:20:48 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="12404651" />
  <Command __id="5927" _type="MoveCaretCommand" caretOffset="414" date="Tue Nov 21 14:20:49 EST 2023" docOffset="544" starttimestamp="1700582044267" timestamp="12405152" />
  <Command __id="5928" _type="MoveCaretCommand" caretOffset="422" date="Tue Nov 21 14:20:49 EST 2023" docOffset="552" starttimestamp="1700582044267" timestamp="12405635" />
  <Command __id="5929" _type="ShellCommand" date="Tue Nov 21 14:20:50 EST 2023" starttimestamp="1700582044267" timestamp="12406354" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5930" _type="ShellCommand" date="Tue Nov 21 14:20:51 EST 2023" starttimestamp="1700582044267" timestamp="12407522" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5931" _type="MoveCaretCommand" caretOffset="500" date="Tue Nov 21 14:20:51 EST 2023" docOffset="630" starttimestamp="1700582044267" timestamp="12407598" />
  <Command __id="5932" _type="MoveCaretCommand" caretOffset="423" date="Tue Nov 21 14:20:52 EST 2023" docOffset="553" starttimestamp="1700582044267" timestamp="12408687" />
  <Command __id="5933" _type="MoveCaretCommand" caretOffset="499" date="Tue Nov 21 14:20:53 EST 2023" docOffset="629" starttimestamp="1700582044267" timestamp="12409210" />
  <Command __id="5934" _type="MoveCaretCommand" caretOffset="452" date="Tue Nov 21 14:21:00 EST 2023" docOffset="582" starttimestamp="1700582044267" timestamp="12416394" />
  <Command __id="5935" _type="MoveCaretCommand" caretOffset="499" date="Tue Nov 21 14:21:02 EST 2023" docOffset="629" starttimestamp="1700582044267" timestamp="12418618" />
  <Command __id="5936" _type="MoveCaretCommand" caretOffset="408" date="Tue Nov 21 14:21:20 EST 2023" docOffset="538" starttimestamp="1700582044267" timestamp="12436532" />
  <Command __id="5937" _type="MoveCaretCommand" caretOffset="418" date="Tue Nov 21 14:21:21 EST 2023" docOffset="548" starttimestamp="1700582044267" timestamp="12437251" />
  <Command __id="5938" _type="MoveCaretCommand" caretOffset="424" date="Tue Nov 21 14:21:22 EST 2023" docOffset="554" starttimestamp="1700582044267" timestamp="12437761" />
  <Command __id="5939" _type="MoveCaretCommand" caretOffset="433" date="Tue Nov 21 14:21:23 EST 2023" docOffset="563" starttimestamp="1700582044267" timestamp="12439507" />
  <Command __id="5940" _type="MoveCaretCommand" caretOffset="496" date="Tue Nov 21 14:21:26 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="12442298" />
  <Command __id="5941" _type="MoveCaretCommand" caretOffset="429" date="Tue Nov 21 14:21:27 EST 2023" docOffset="559" starttimestamp="1700582044267" timestamp="12443346" />
  <Command __id="5942" _type="MoveCaretCommand" caretOffset="433" date="Tue Nov 21 14:21:28 EST 2023" docOffset="563" starttimestamp="1700582044267" timestamp="12444102" />
  <Command __id="5943" _type="MoveCaretCommand" caretOffset="496" date="Tue Nov 21 14:21:30 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="12446171" />
  <Command __id="5944" _type="MoveCaretCommand" caretOffset="493" date="Tue Nov 21 14:21:31 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="12447236" />
  <Command __id="5945" _type="MoveCaretCommand" caretOffset="409" date="Tue Nov 21 14:21:38 EST 2023" docOffset="539" starttimestamp="1700582044267" timestamp="12453780" />
  <Command __id="5946" _type="MoveCaretCommand" caretOffset="418" date="Tue Nov 21 14:21:38 EST 2023" docOffset="548" starttimestamp="1700582044267" timestamp="12454344" />
  <Command __id="5947" _type="MoveCaretCommand" caretOffset="422" date="Tue Nov 21 14:21:39 EST 2023" docOffset="552" starttimestamp="1700582044267" timestamp="12454904" />
  <Command __id="5888" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:20:12 EST 2023" docASTNodeCount="106" docActiveCodeLength="630" docExpressionCount="75" docLength="630" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12368323">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5948" _type="MoveCaretCommand" caretOffset="227" date="Tue Nov 21 14:21:45 EST 2023" docOffset="357" starttimestamp="1700582044267" timestamp="12460931" />
  <Command __id="5949" _type="MoveCaretCommand" caretOffset="187" date="Tue Nov 21 14:21:45 EST 2023" docOffset="317" starttimestamp="1700582044267" timestamp="12461465" />
  <DocumentChange __id="5950" _type="Insert" date="Tue Nov 21 14:21:47 EST 2023" docASTNodeCount="108" docActiveCodeLength="639" docExpressionCount="76" docLength="639" length="9" offset="317" repeat="7" starttimestamp="1700582044267" timestamp="12462788" timestamp2="12463996">
    <text><![CDATA[
		expre-]]></text>
  </DocumentChange>
  <Command __id="5951" _type="InsertStringCommand" date="Tue Nov 21 14:21:47 EST 2023" starttimestamp="1700582044267" timestamp="12462792" timestamp2="12462792">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5953" _type="InsertStringCommand" date="Tue Nov 21 14:21:47 EST 2023" starttimestamp="1700582044267" timestamp="12463122" timestamp2="12463122">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5955" _type="InsertStringCommand" date="Tue Nov 21 14:21:47 EST 2023" starttimestamp="1700582044267" timestamp="12463407" timestamp2="12463407">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5957" _type="InsertStringCommand" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12463740" timestamp2="12463740">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5959" _type="InsertStringCommand" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12463842" timestamp2="12463842">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5961" _type="InsertStringCommand" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12463849" timestamp2="12463849">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5963" _type="InsertStringCommand" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12463998" timestamp2="12463998">
    <data><![CDATA[-]]></data>
  </Command>
  <DocumentChange __id="5964" _type="Delete" date="Tue Nov 21 14:21:48 EST 2023" docASTNodeCount="108" docActiveCodeLength="637" docExpressionCount="76" docLength="637" endLine="11" length="2" offset="324" repeat="2" startLine="11" starttimestamp="1700582044267" timestamp="12464239" timestamp2="12464363">
    <text><![CDATA[e-]]></text>
  </DocumentChange>
  <Command __id="5965" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12464240" />
  <Command __id="5967" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12464365" />
  <DocumentChange __id="5968" _type="Insert" date="Tue Nov 21 14:21:48 EST 2023" docASTNodeCount="108" docActiveCodeLength="640" docExpressionCount="76" docLength="640" length="3" offset="324" repeat="3" starttimestamp="1700582044267" timestamp="12464684" timestamp2="12464880">
    <text><![CDATA[ - ]]></text>
  </DocumentChange>
  <Command __id="5969" _type="InsertStringCommand" date="Tue Nov 21 14:21:48 EST 2023" starttimestamp="1700582044267" timestamp="12464686" timestamp2="12464686">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5971" _type="InsertStringCommand" date="Tue Nov 21 14:21:49 EST 2023" starttimestamp="1700582044267" timestamp="12464777" timestamp2="12464777">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5973" _type="InsertStringCommand" date="Tue Nov 21 14:21:49 EST 2023" starttimestamp="1700582044267" timestamp="12464882" timestamp2="12464882">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="5974" _type="Delete" date="Tue Nov 21 14:21:49 EST 2023" docASTNodeCount="108" docActiveCodeLength="638" docExpressionCount="76" docLength="638" endLine="11" length="2" offset="325" repeat="2" startLine="11" starttimestamp="1700582044267" timestamp="12465376" timestamp2="12465486">
    <text><![CDATA[- ]]></text>
  </DocumentChange>
  <Command __id="5975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:21:49 EST 2023" starttimestamp="1700582044267" timestamp="12465378" />
  <Command __id="5977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:21:49 EST 2023" starttimestamp="1700582044267" timestamp="12465489" />
  <DocumentChange __id="5978" _type="Insert" date="Tue Nov 21 14:21:50 EST 2023" docASTNodeCount="112" docActiveCodeLength="649" docExpressionCount="80" docLength="649" length="11" offset="325" repeat="11" starttimestamp="1700582044267" timestamp="12465953" timestamp2="12468816">
    <text><![CDATA[= expr.geTT]]></text>
  </DocumentChange>
  <Command __id="5979" _type="InsertStringCommand" date="Tue Nov 21 14:21:50 EST 2023" starttimestamp="1700582044267" timestamp="12465955" timestamp2="12465955">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5981" _type="InsertStringCommand" date="Tue Nov 21 14:21:50 EST 2023" starttimestamp="1700582044267" timestamp="12466080" timestamp2="12466080">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5983" _type="InsertStringCommand" date="Tue Nov 21 14:21:50 EST 2023" starttimestamp="1700582044267" timestamp="12466202" timestamp2="12466202">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5985" _type="InsertStringCommand" date="Tue Nov 21 14:21:50 EST 2023" starttimestamp="1700582044267" timestamp="12466444" timestamp2="12466444">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5987" _type="InsertStringCommand" date="Tue Nov 21 14:21:50 EST 2023" starttimestamp="1700582044267" timestamp="12466550" timestamp2="12466550">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5989" _type="InsertStringCommand" date="Tue Nov 21 14:21:51 EST 2023" starttimestamp="1700582044267" timestamp="12466800" timestamp2="12466800">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5991" _type="InsertStringCommand" date="Tue Nov 21 14:21:51 EST 2023" starttimestamp="1700582044267" timestamp="12467364" timestamp2="12467364">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5992" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:21:51 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="12467369" />
  <Command __id="5997" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:21:53 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="12469227" />
  <DocumentChange __id="5998" _type="Replace" date="Tue Nov 21 14:21:53 EST 2023" docASTNodeCount="112" docActiveCodeLength="654" docExpressionCount="80" docLength="654" endLine="11" insertionLength="9" int_docASTNodeCount="109" int_docActiveCodeLength="645" int_docExpressionCount="78" int_docLength="645" length="4" offset="332" startLine="11" starttimestamp="1700582044267" timestamp="12469230">
    <deletedText><![CDATA[geTT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="5999" _type="InsertStringCommand" date="Tue Nov 21 14:21:53 EST 2023" starttimestamp="1700582044267" timestamp="12469235" timestamp2="12469235">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="6000" _type="Insert" date="Tue Nov 21 14:21:53 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" length="1" offset="341" starttimestamp="1700582044267" timestamp="12469460">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="6007" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:22:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12479888" type="Run" />
  <Command __id="6008" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:22:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12479889" type="Run" />
  <Command __id="6010" _type="MoveCaretCommand" caretOffset="15" date="Tue Nov 21 14:22:05 EST 2023" docOffset="15" starttimestamp="1700582044267" timestamp="12481014" />
  <Command __id="6011" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:22:07 EST 2023" starttimestamp="1700582044267" timestamp="12482909" />
  <Command __id="6012" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:22:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12483051" type="Run" />
  <Command __id="6013" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:22:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12483051" type="Run" />
  <Command __id="6014" _type="ShellCommand" date="Tue Nov 21 14:22:07 EST 2023" starttimestamp="1700582044267" timestamp="12483357" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6015" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486454" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(INSERT,"est execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6016" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486455" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6017" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486456" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6018" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486456" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6019" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486472" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6020" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486475" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6021" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486477" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6022" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486478" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6023" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486479" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6024" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486482" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6025" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486482" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6026" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486482" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6027" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486483" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6028" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486486" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6029" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486486" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6030" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486487" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6031" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486489" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="6032" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486490" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6033" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486491" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6034" _type="ConsoleOutput" date="Tue Nov 21 14:22:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12486494" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))

Test execution time (ms):2
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL)))
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:ListToStringDeepChecker"), Diff(DELETE,"Basic,10"), Diff(INSERT,"Advanced,"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,5.0,"), Diff(INSERT,"Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL)))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6009" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:22:05 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12480946">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6035" _type="ShellCommand" date="Tue Nov 21 14:22:23 EST 2023" starttimestamp="1700582044267" timestamp="12499139" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6036" _type="LocalChecksRawCommand" date="Tue Nov 21 14:22:23 EST 2023" starttimestamp="1700582044267" timestamp="12499145">
    <CSVRow><![CDATA[227,Tue Nov 21 14:22:10 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,125,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6037" _type="LocalChecksRawCommand" date="Tue Nov 21 14:22:23 EST 2023" starttimestamp="1700582044267" timestamp="12499146">
    <CSVRow><![CDATA[227,Tue Nov 21 14:22:10 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,125,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6038" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 14:22:23 EST 2023" docOffset="368" starttimestamp="1700582044267" timestamp="12499220" />
  <Command __id="6039" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 14:22:23 EST 2023" docOffset="368" starttimestamp="1700582044267" timestamp="12499220" />
  <Command __id="6040" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:22:25 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12500996">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(INSERT,"expr = expr.getTail();		"), Diff(EQUAL,"return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="6041" _type="MoveCaretCommand" caretOffset="212" date="Tue Nov 21 14:22:25 EST 2023" docOffset="342" starttimestamp="1700582044267" timestamp="12501061" />
  <Command __id="6043" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Nov 21 14:22:27 EST 2023" starttimestamp="1700582044267" timestamp="12503130" />
  <Command __id="6044" _type="MoveCaretCommand" caretOffset="154" date="Tue Nov 21 14:22:27 EST 2023" docOffset="284" starttimestamp="1700582044267" timestamp="12503576" />
  <Command __id="6045" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:22:27 EST 2023" starttimestamp="1700582044267" timestamp="12503666" />
  <Command __id="6046" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:22:28 EST 2023" starttimestamp="1700582044267" timestamp="12503765" />
  <Command __id="6047" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:22:28 EST 2023" starttimestamp="1700582044267" timestamp="12503771" />
  <Command __id="6052" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:22:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12507622" type="Run" />
  <Command __id="6053" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:22:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12507622" type="Run" />
  <Command __id="6054" _type="ShellCommand" date="Tue Nov 21 14:22:32 EST 2023" starttimestamp="1700582044267" timestamp="12507914" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6055" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511095" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):2¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL)))"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6056" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511096" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6057" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511097" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6058" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511098" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6059" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511113" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6060" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511117" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6061" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511118" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6062" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511121" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6063" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511122" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):2"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6064" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511124" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6065" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511124" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6066" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511125" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6067" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511128" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6068" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511129" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"¶Test execution time (ms):3¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶")]]]></diff>
  </Command>
  <Command __id="6069" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511132" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):3¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="6070" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511132" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6071" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511133" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6072" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511135" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6073" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511135" type="ConsoleOutput">
    <outputString><![CDATA[(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶")]]]></diff>
  </Command>
  <Command __id="6074" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511135" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6075" _type="ConsoleOutput" date="Tue Nov 21 14:22:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12511138" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6076" _type="ShellCommand" date="Tue Nov 21 14:22:41 EST 2023" starttimestamp="1700582044267" timestamp="12517729" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6077" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:22:41 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12517730" type="Run" />
  <Command __id="6078" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:22:41 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12517730" type="Run" />
  <Command __id="6079" _type="LocalChecksRawCommand" date="Tue Nov 21 14:22:41 EST 2023" starttimestamp="1700582044267" timestamp="12517732">
    <CSVRow><![CDATA[228,Tue Nov 21 14:22:35 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,126,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6080" _type="LocalChecksRawCommand" date="Tue Nov 21 14:22:41 EST 2023" starttimestamp="1700582044267" timestamp="12517732">
    <CSVRow><![CDATA[228,Tue Nov 21 14:22:35 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,126,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6081" _type="MoveCaretCommand" caretOffset="259" date="Tue Nov 21 14:22:42 EST 2023" docOffset="389" starttimestamp="1700582044267" timestamp="12518104" />
  <Command __id="6082" _type="MoveCaretCommand" caretOffset="155" date="Tue Nov 21 14:22:44 EST 2023" docOffset="285" starttimestamp="1700582044267" timestamp="12520174" />
  <Command __id="6083" _type="ShellCommand" date="Tue Nov 21 14:22:44 EST 2023" starttimestamp="1700582044267" timestamp="12520645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6084" _type="ShellCommand" date="Tue Nov 21 14:22:45 EST 2023" starttimestamp="1700582044267" timestamp="12520982" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6085" _type="MoveCaretCommand" caretOffset="214" date="Tue Nov 21 14:22:46 EST 2023" docOffset="344" starttimestamp="1700582044267" timestamp="12522160" />
  <Command __id="6087" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Nov 21 14:22:47 EST 2023" starttimestamp="1700582044267" timestamp="12523131" />
  <Command __id="6088" _type="MoveCaretCommand" caretOffset="257" date="Tue Nov 21 14:22:47 EST 2023" docOffset="387" starttimestamp="1700582044267" timestamp="12523578" />
  <Command __id="6089" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:22:48 EST 2023" starttimestamp="1700582044267" timestamp="12523844" />
  <Command __id="6090" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:22:48 EST 2023" starttimestamp="1700582044267" timestamp="12523945" />
  <Command __id="6091" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:22:48 EST 2023" starttimestamp="1700582044267" timestamp="12523950" />
  <Command __id="6092" _type="MoveCaretCommand" caretOffset="396" date="Tue Nov 21 14:22:48 EST 2023" docOffset="526" starttimestamp="1700582044267" timestamp="12524423" />
  <Command __id="6093" _type="MoveCaretCommand" caretOffset="153" date="Tue Nov 21 14:22:59 EST 2023" docOffset="283" starttimestamp="1700582044267" timestamp="12534927" />
  <Command __id="6094" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:23:01 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="12537168" />
  <Command __id="6095" _type="MoveCaretCommand" caretOffset="236" date="Tue Nov 21 14:23:01 EST 2023" docOffset="366" starttimestamp="1700582044267" timestamp="12537686" />
  <Command __id="6096" _type="MoveCaretCommand" caretOffset="377" date="Tue Nov 21 14:23:03 EST 2023" docOffset="507" starttimestamp="1700582044267" timestamp="12539649" />
  <Command __id="6097" _type="MoveCaretCommand" caretOffset="378" date="Tue Nov 21 14:23:06 EST 2023" docOffset="508" starttimestamp="1700582044267" timestamp="12542073" />
  <DocumentChange __id="6042" _type="Insert" date="Tue Nov 21 14:22:27 EST 2023" docASTNodeCount="106" docActiveCodeLength="631" docExpressionCount="75" docLength="657" length="2" offset="318" starttimestamp="1700582044267" timestamp="12503116">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="6086" _type="Delete" date="Tue Nov 21 14:22:47 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" endLine="11" length="2" offset="318" startLine="11" starttimestamp="1700582044267" timestamp="12523115">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="6098" _type="MoveCaretCommand" caretOffset="242" date="Tue Nov 21 14:23:17 EST 2023" docOffset="372" starttimestamp="1700582044267" timestamp="12552893" />
  <Command __id="6100" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Nov 21 14:23:18 EST 2023" starttimestamp="1700582044267" timestamp="12554100" />
  <Command __id="6101" _type="MoveCaretCommand" caretOffset="398" date="Tue Nov 21 14:23:18 EST 2023" docOffset="528" starttimestamp="1700582044267" timestamp="12554655" />
  <Command __id="6102" _type="MoveCaretCommand" caretOffset="447" date="Tue Nov 21 14:23:20 EST 2023" docOffset="577" starttimestamp="1700582044267" timestamp="12556402" />
  <Command __id="6104" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12556788" timestamp2="12556788">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6106" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12556894" timestamp2="12556894">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6108" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12557026" timestamp2="12557026">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6110" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12557205" timestamp2="12557205">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="6112" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12557382" timestamp2="12557382">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6114" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12557492" timestamp2="12557492">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6116" _type="InsertStringCommand" date="Tue Nov 21 14:23:21 EST 2023" starttimestamp="1700582044267" timestamp="12557586" timestamp2="12557586">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6118" _type="InsertStringCommand" date="Tue Nov 21 14:23:22 EST 2023" starttimestamp="1700582044267" timestamp="12557803" timestamp2="12557803">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6120" _type="InsertStringCommand" date="Tue Nov 21 14:23:22 EST 2023" starttimestamp="1700582044267" timestamp="12557874" timestamp2="12557874">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6122" _type="InsertStringCommand" date="Tue Nov 21 14:23:22 EST 2023" starttimestamp="1700582044267" timestamp="12558108" timestamp2="12558108">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6123" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:23:22 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="12558113" />
  <Command __id="6159" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:23:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12566813" type="Run" />
  <Command __id="6160" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:23:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12566813" type="Run" />
  <Command __id="6161" _type="ShellCommand" date="Tue Nov 21 14:23:31 EST 2023" starttimestamp="1700582044267" timestamp="12567113" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6162" _type="ShellCommand" date="Tue Nov 21 14:23:32 EST 2023" starttimestamp="1700582044267" timestamp="12568118" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6163" _type="ShellCommand" date="Tue Nov 21 14:23:34 EST 2023" starttimestamp="1700582044267" timestamp="12569937" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6164" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571668" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6165" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571669" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6166" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571674" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6167" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571675" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6168" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571676" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6169" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571676" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6170" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571690" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6171" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571691" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6172" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571691" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)"), Diff(INSERT,"java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6173" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571692" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.eval(ListEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6174" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571697" type="ConsoleOutput">
    <outputString><![CDATA[	at index.LoadEvaluator.eval(LoadEvaluator.java:36)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.Atom.getHead(A"), Diff(INSERT,"index.LoadEvaluator.eval(LoadEvalua"), Diff(EQUAL,"to"), Diff(DELETE,"m"), Diff(INSERT,"r"), Diff(EQUAL,".java:"), Diff(DELETE,"27"), Diff(INSERT,"36"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(List"), Diff(INSERT,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpression"), Diff(EQUAL,"Evaluator.java:"), Diff(DELETE,"20"), Diff(INSERT,"16"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluato"), Diff(INSERT,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterprete"), Diff(EQUAL,"r.java:"), Diff(DELETE,"20"), Diff(INSERT,"79"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.eval(ListEvaluato"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputte"), Diff(EQUAL,"r.java:"), Diff(DELETE,"13"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecke"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"6"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:2"), Diff(DELETE,"6"), Diff(INSERT,"31"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"325"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6175" _type="ConsoleOutput" date="Tue Nov 21 14:23:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571730" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluato"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"36"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"16"), Diff(INSERT,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(EQUAL,".java:2"), Diff(DELETE,"6"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"158"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"32"), Diff(INSERT,"74"), Diff(EQUAL,"5)¶")]]]></diff>
  </Command>
  <Command __id="6176" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12571793" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):27
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (5)

Test execution time (ms):0
Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,


Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to LIST try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to LIST try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen."), Diff(INSERT,"¶Test execution time (ms):27¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (5)¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,En"), Diff(EQUAL,"co"), Diff(INSERT,"u"), Diff(EQUAL,"nt"), Diff(DELETE,"roller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen."), Diff(INSERT,"ered an unexpected error, see "), Diff(EQUAL,"con"), Diff(DELETE,"troller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Com"), Diff(INSERT,"sole for potential fixes¶¶¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for "), Diff(EQUAL,"po"), Diff(DELETE,"n"), Diff(INSERT,"t"), Diff(EQUAL,"ent"), Diff(DELETE,".java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745"), Diff(INSERT,"ial fixes¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp""), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6177" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572568" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):27¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (5)¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")"), Diff(INSERT,"(5 . 2)¶(5 . 2)¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6178" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572572" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

(5)
(5)
(5)
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)¶(5 . 2"), Diff(INSERT,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶(5"), Diff(EQUAL,")¶Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6179" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572573" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:BaseCase"), Diff(DELETE,"SExpression"), Diff(INSERT,"List"), Diff(EQUAL,"ToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶(5)¶(5)¶(5)¶Test execution time (ms):3¶")]]]></diff>
  </Command>
  <Command __id="6180" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572576" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6181" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572578" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):3
Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶"), Diff(INSERT,"Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶¶")]]]></diff>
  </Command>
  <Command __id="6182" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572582" type="ConsoleOutput">
    <outputString><![CDATA[("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,""a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6183" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572582" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6184" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572582" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6185" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572587" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:ListToString"), Diff(INSERT,"Deep"), Diff(EQUAL,"Checker"), Diff(DELETE,"Advanced,"), Diff(INSERT,"Basic,10"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,"), Diff(DELETE,"1"), Diff(EQUAL,"5.0,"), Diff(DELETE,"Expected strings:("a" (1 . 2) (1 T))actual string ("a" ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6186" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572590" type="ConsoleOutput">
    <outputString><![CDATA[("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
("a" ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,""a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6187" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572590" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))¶("a" ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6188" _type="ConsoleOutput" date="Tue Nov 21 14:23:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12572590" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6189" _type="LocalChecksRawCommand" date="Tue Nov 21 14:23:36 EST 2023" starttimestamp="1700582044267" timestamp="12572594">
    <CSVRow><![CDATA[229,Tue Nov 21 14:23:35 EST 2023,38,-16,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker- CondTestedResultsChecker- EvalTestedChecker- EvalTestedTwoResultsChecker- F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker- ListTestedTwoResultsChecker- ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker- QuoteTestedTwoResultsChecker- ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,127,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6190" _type="LocalChecksRawCommand" date="Tue Nov 21 14:23:36 EST 2023" starttimestamp="1700582044267" timestamp="12572594">
    <CSVRow><![CDATA[229,Tue Nov 21 14:23:35 EST 2023,38,-16,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker- CondTestedResultsChecker- EvalTestedChecker- EvalTestedTwoResultsChecker- F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker- ListTestedTwoResultsChecker- ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker- MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker- QuoteTestedTwoResultsChecker- ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,127,0,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6191" _type="LocalChecksRawCommand" date="Tue Nov 21 14:23:36 EST 2023" starttimestamp="1700582044267" timestamp="12572594">
    <CSVRow><![CDATA[230,Tue Nov 21 14:23:36 EST 2023,38,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,127,1,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6192" _type="LocalChecksRawCommand" date="Tue Nov 21 14:23:36 EST 2023" starttimestamp="1700582044267" timestamp="12572594">
    <CSVRow><![CDATA[230,Tue Nov 21 14:23:36 EST 2023,38,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,127,1,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6193" _type="ShellCommand" date="Tue Nov 21 14:23:42 EST 2023" starttimestamp="1700582044267" timestamp="12578618" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6194" _type="MoveCaretCommand" caretOffset="106" date="Tue Nov 21 14:23:42 EST 2023" docOffset="236" starttimestamp="1700582044267" timestamp="12578679" />
  <Command __id="6195" _type="ShellCommand" date="Tue Nov 21 14:23:44 EST 2023" starttimestamp="1700582044267" timestamp="12580139" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6196" _type="ShellCommand" date="Tue Nov 21 14:23:48 EST 2023" starttimestamp="1700582044267" timestamp="12584723" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6197" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:23:49 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12584733" type="Run" />
  <Command __id="6198" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:23:49 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12584734" type="Run" />
  <Command __id="6199" _type="MoveCaretCommand" caretOffset="457" date="Tue Nov 21 14:23:52 EST 2023" docOffset="587" starttimestamp="1700582044267" timestamp="12587789" />
  <Command __id="6200" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 14:23:52 EST 2023" docOffset="591" starttimestamp="1700582044267" timestamp="12588128" />
  <Command __id="6202" _type="UndoCommand" date="Tue Nov 21 14:23:52 EST 2023" starttimestamp="1700582044267" timestamp="12588227" />
  <Command __id="6204" _type="UndoCommand" date="Tue Nov 21 14:23:52 EST 2023" starttimestamp="1700582044267" timestamp="12588696" />
  <Command __id="6206" _type="UndoCommand" date="Tue Nov 21 14:23:53 EST 2023" starttimestamp="1700582044267" timestamp="12589212" />
  <Command __id="6208" _type="UndoCommand" date="Tue Nov 21 14:23:53 EST 2023" starttimestamp="1700582044267" timestamp="12589575" />
  <Command __id="6209" _type="MoveCaretCommand" caretOffset="526" date="Tue Nov 21 14:23:55 EST 2023" docOffset="656" starttimestamp="1700582044267" timestamp="12590998" />
  <Command __id="6210" _type="MoveCaretCommand" caretOffset="214" date="Tue Nov 21 14:23:56 EST 2023" docOffset="344" starttimestamp="1700582044267" timestamp="12592536" />
  <Command __id="6212" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Nov 21 14:23:57 EST 2023" starttimestamp="1700582044267" timestamp="12593282" />
  <Command __id="6213" _type="MoveCaretCommand" caretOffset="182" date="Tue Nov 21 14:23:58 EST 2023" docOffset="312" starttimestamp="1700582044267" timestamp="12593761" />
  <Command __id="6214" _type="MoveCaretCommand" caretOffset="257" date="Tue Nov 21 14:23:58 EST 2023" docOffset="387" starttimestamp="1700582044267" timestamp="12594257" />
  <Command __id="6215" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:23:58 EST 2023" starttimestamp="1700582044267" timestamp="12594445" />
  <Command __id="6216" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:23:58 EST 2023" starttimestamp="1700582044267" timestamp="12594544" />
  <Command __id="6217" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:23:58 EST 2023" starttimestamp="1700582044267" timestamp="12594550" />
  <Command __id="6218" _type="MoveCaretCommand" caretOffset="155" date="Tue Nov 21 14:24:05 EST 2023" docOffset="285" starttimestamp="1700582044267" timestamp="12601522" />
  <Command __id="6219" _type="MoveCaretCommand" caretOffset="149" date="Tue Nov 21 14:24:06 EST 2023" docOffset="279" starttimestamp="1700582044267" timestamp="12601984" />
  <Command __id="6220" _type="MoveCaretCommand" caretOffset="207" date="Tue Nov 21 14:24:07 EST 2023" docOffset="337" starttimestamp="1700582044267" timestamp="12602989" />
  <Command __id="6221" _type="MoveCaretCommand" caretOffset="200" date="Tue Nov 21 14:24:07 EST 2023" docOffset="330" starttimestamp="1700582044267" timestamp="12603444" />
  <Command __id="6222" _type="MoveCaretCommand" caretOffset="206" date="Tue Nov 21 14:24:08 EST 2023" docOffset="336" starttimestamp="1700582044267" timestamp="12603934" />
  <Command __id="6223" _type="MoveCaretCommand" caretOffset="206" date="Tue Nov 21 14:24:09 EST 2023" docOffset="336" starttimestamp="1700582044267" timestamp="12604930" />
  <Command __id="6224" _type="MoveCaretCommand" caretOffset="257" date="Tue Nov 21 14:24:09 EST 2023" docOffset="387" starttimestamp="1700582044267" timestamp="12605440" />
  <Command __id="6225" _type="MoveCaretCommand" caretOffset="525" date="Tue Nov 21 14:24:10 EST 2023" docOffset="655" starttimestamp="1700582044267" timestamp="12606140" />
  <Command __id="6226" _type="MoveCaretCommand" caretOffset="525" date="Tue Nov 21 14:24:10 EST 2023" docOffset="655" starttimestamp="1700582044267" timestamp="12606597" />
  <Command __id="6227" _type="MoveCaretCommand" caretOffset="525" date="Tue Nov 21 14:24:11 EST 2023" docOffset="655" starttimestamp="1700582044267" timestamp="12607137" />
  <Command __id="6228" _type="MoveCaretCommand" caretOffset="524" date="Tue Nov 21 14:24:11 EST 2023" docOffset="654" starttimestamp="1700582044267" timestamp="12607601" />
  <Command __id="6229" _type="MoveCaretCommand" caretOffset="524" date="Tue Nov 21 14:24:12 EST 2023" docOffset="654" starttimestamp="1700582044267" timestamp="12608035" />
  <Command __id="6230" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:24:12 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="12608485" />
  <Command __id="6231" _type="MoveCaretCommand" caretOffset="522" date="Tue Nov 21 14:24:13 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="12608962" />
  <Command __id="6232" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:24:13 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="12609455" />
  <Command __id="6233" _type="MoveCaretCommand" caretOffset="522" date="Tue Nov 21 14:24:14 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="12609893" />
  <Command __id="6234" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:24:14 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="12610395" />
  <Command __id="6235" _type="MoveCaretCommand" caretOffset="522" date="Tue Nov 21 14:24:15 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="12610815" />
  <Command __id="6236" _type="MoveCaretCommand" caretOffset="299" date="Tue Nov 21 14:24:17 EST 2023" docOffset="429" starttimestamp="1700582044267" timestamp="12613649" />
  <Command __id="6237" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 14:24:18 EST 2023" docOffset="421" starttimestamp="1700582044267" timestamp="12614222" />
  <Command __id="6238" _type="MoveCaretCommand" caretOffset="286" date="Tue Nov 21 14:24:19 EST 2023" docOffset="416" starttimestamp="1700582044267" timestamp="12614798" />
  <Command __id="6239" _type="ShellCommand" date="Tue Nov 21 14:24:19 EST 2023" starttimestamp="1700582044267" timestamp="12615482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6240" _type="ShellCommand" date="Tue Nov 21 14:24:19 EST 2023" starttimestamp="1700582044267" timestamp="12615547" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6241" _type="MoveCaretCommand" caretOffset="362" date="Tue Nov 21 14:24:20 EST 2023" docOffset="492" starttimestamp="1700582044267" timestamp="12616135" />
  <Command __id="6242" _type="MoveCaretCommand" caretOffset="199" date="Tue Nov 21 14:24:25 EST 2023" docOffset="329" starttimestamp="1700582044267" timestamp="12621489" />
  <Command __id="6243" _type="MoveCaretCommand" caretOffset="204" date="Tue Nov 21 14:24:26 EST 2023" docOffset="334" starttimestamp="1700582044267" timestamp="12621898" />
  <Command __id="6244" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 14:24:26 EST 2023" docOffset="363" starttimestamp="1700582044267" timestamp="12622430" />
  <Command __id="6245" _type="MoveCaretCommand" caretOffset="439" date="Tue Nov 21 14:24:45 EST 2023" docOffset="569" starttimestamp="1700582044267" timestamp="12641044" />
  <Command __id="6246" _type="MoveCaretCommand" caretOffset="440" date="Tue Nov 21 14:24:46 EST 2023" docOffset="570" starttimestamp="1700582044267" timestamp="12641786" />
  <Command __id="6247" _type="MoveCaretCommand" caretOffset="439" date="Tue Nov 21 14:24:47 EST 2023" docOffset="569" starttimestamp="1700582044267" timestamp="12643009" />
  <Command __id="6248" _type="MoveCaretCommand" caretOffset="518" date="Tue Nov 21 14:24:52 EST 2023" docOffset="648" starttimestamp="1700582044267" timestamp="12648334" />
  <Command __id="6249" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 14:24:53 EST 2023" docOffset="530" starttimestamp="1700582044267" timestamp="12649302" />
  <Command __id="6250" _type="MoveCaretCommand" caretOffset="435" date="Tue Nov 21 14:24:54 EST 2023" docOffset="565" starttimestamp="1700582044267" timestamp="12649955" />
  <Command __id="6251" _type="MoveCaretCommand" caretOffset="479" date="Tue Nov 21 14:25:03 EST 2023" docOffset="609" starttimestamp="1700582044267" timestamp="12659133" />
  <Command __id="6252" _type="SelectTextCommand" caretOffset="190" date="Tue Nov 21 14:25:15 EST 2023" end="212" start="190" starttimestamp="1700582044267" timestamp="12670996" />
  <Command __id="6254" _type="CutCommand" date="Tue Nov 21 14:25:15 EST 2023" starttimestamp="1700582044267" timestamp="12671461" />
  <Command __id="6255" _type="MoveCaretCommand" caretOffset="318" date="Tue Nov 21 14:25:16 EST 2023" docOffset="448" starttimestamp="1700582044267" timestamp="12672342" />
  <Command __id="6257" _type="InsertStringCommand" date="Tue Nov 21 14:25:16 EST 2023" starttimestamp="1700582044267" timestamp="12672594" timestamp2="12672594">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6259" _type="PasteCommand" date="Tue Nov 21 14:25:17 EST 2023" starttimestamp="1700582044267" timestamp="12672826" />
  <Command __id="6270" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:25:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12678055" type="Run" />
  <Command __id="6271" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:25:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12678055" type="Run" />
  <Command __id="6272" _type="ShellCommand" date="Tue Nov 21 14:25:22 EST 2023" starttimestamp="1700582044267" timestamp="12678356" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6273" _type="ConsoleOutput" date="Tue Nov 21 14:25:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680721" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6274" _type="ConsoleOutput" date="Tue Nov 21 14:25:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680722" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6275" _type="ConsoleOutput" date="Tue Nov 21 14:25:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680723" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6276" _type="ConsoleOutput" date="Tue Nov 21 14:25:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680724" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6277" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680739" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6278" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680742" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6279" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680744" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6280" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680746" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6281" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680746" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6282" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680747" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6283" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680751" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"BaseCase"), Diff(EQUAL,"ListToStringChecker"), Diff(INSERT,"Basic"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶")]]]></diff>
  </Command>
  <Command __id="6284" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680754" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2¶Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"java.lang.UnsupportedOperationException: Instances of Atom do not have a tail"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6285" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680755" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:16)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.UnsupportedOperationException: Instances of Atom do not have a tail"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:16)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.eval(ListEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6286" _type="ConsoleOutput" date="Tue Nov 21 14:25:25 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12680771" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.Atom.getTail(Atom"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluator"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"20"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluator"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"20"), Diff(INSERT,"17"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.eval(ListEvaluato"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"12"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"16"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s.B"), Diff(DELETE,"asicExpression.eval(BasicExpression"), Diff(INSERT,"lockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:7"), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶"), Diff(INSERT,"	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶")]]]></diff>
  </Command>
  <Command __id="6287" _type="ExceptionCommand" date="Tue Nov 21 14:25:25 EST 2023" starttimestamp="1700582044267" timestamp="12680781" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):6
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:16)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6288" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684094" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(5)
(5)
(5)
(5)
(5)
(5)
(5)
(1)
(1)
(1)
(1)
(1)
(1)
(1)
(3)
(3)
(3)
(3)
(3)
(3)
(3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.model.FrameworkMethod$1.runRefl"), Diff(INSERT,"Test ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"veCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406"), Diff(INSERT,"on time (ms):1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶¶Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(1)¶(1)¶(1)¶(1)¶(1)¶(1)¶(1)¶(3)¶(3)¶(3)¶(3)¶(3)¶(3)¶(3"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6289" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684098" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 1 2))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
((+ 3 4))
2
2
2
2
2
2
2
3
3
3
3
3
3
3
1
1
1
1
1
1
1
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶¶Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(1)¶(1)¶(1)¶(1)¶(1)¶(1)¶(1)¶(3)¶(3)¶(3)¶(3)¶(3)¶(3)¶(3)"), Diff(INSERT,"((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶2¶2¶2¶2¶2¶2¶2¶3¶3¶3¶3¶3¶3¶3¶1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6290" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684099" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 1 2))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶((+ 3 4))¶2¶2¶2¶2¶2¶2¶2¶3¶3¶3¶3¶3¶3¶3¶1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶T"), Diff(INSERT,"Test Result:CondTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6291" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684099" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6292" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684101" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6293" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684102" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="6294" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684103" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6295" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684104" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6296" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684105" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6297" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684106" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6298" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684106" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6299" _type="ConsoleOutput" date="Tue Nov 21 14:25:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12684107" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6300" _type="ShellCommand" date="Tue Nov 21 14:25:35 EST 2023" starttimestamp="1700582044267" timestamp="12691385" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6301" _type="LocalChecksRawCommand" date="Tue Nov 21 14:25:35 EST 2023" starttimestamp="1700582044267" timestamp="12691391">
    <CSVRow><![CDATA[231,Tue Nov 21 14:25:25 EST 2023,38,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,128,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6302" _type="LocalChecksRawCommand" date="Tue Nov 21 14:25:35 EST 2023" starttimestamp="1700582044267" timestamp="12691391">
    <CSVRow><![CDATA[231,Tue Nov 21 14:25:25 EST 2023,38,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,128,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6303" _type="LocalChecksRawCommand" date="Tue Nov 21 14:25:35 EST 2023" starttimestamp="1700582044267" timestamp="12691391">
    <CSVRow><![CDATA[232,Tue Nov 21 14:25:28 EST 2023,54,16,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker+ CondTestedResultsChecker+ ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker+ EvalTestedTwoResultsChecker+ GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker+ ListTestedTwoResultsChecker+ ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker+ LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker+ QuoteTestedTwoResultsChecker+ TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,128,1,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(20.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6304" _type="LocalChecksRawCommand" date="Tue Nov 21 14:25:35 EST 2023" starttimestamp="1700582044267" timestamp="12691391">
    <CSVRow><![CDATA[232,Tue Nov 21 14:25:28 EST 2023,54,16,LispInterpreterLoadSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker+ CondTestedResultsChecker+ ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker+ EvalTestedTwoResultsChecker+ GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker+ ListTestedTwoResultsChecker+ ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker+ LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker+ QuoteTestedTwoResultsChecker+ TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,128,1,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,TestLispFileProvided , ,CondTestedChecker-(10.0/10.0) CondTestedResultsChecker-(20.0/20.0) ConsTestedChecker-(10.0/10.0) ConsTestedTwoResultsChecker-(10.0/10.0) EvalTestedChecker-(10.0/10.0) EvalTestedTwoResultsChecker-(10.0/10.0) ListTestedChecker-(10.0/10.0) ListTestedTwoResultsChecker-(10.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(10.0/10.0) QuoteTestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6305" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:25:35 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="12691484" />
  <Command __id="6306" _type="MoveCaretCommand" caretOffset="209" date="Tue Nov 21 14:25:38 EST 2023" docOffset="339" starttimestamp="1700582044267" timestamp="12693968" />
  <Command __id="6307" _type="MoveCaretCommand" caretOffset="477" date="Tue Nov 21 14:25:41 EST 2023" docOffset="607" starttimestamp="1700582044267" timestamp="12697531" />
  <Command __id="6308" _type="SelectTextCommand" caretOffset="484" date="Tue Nov 21 14:25:41 EST 2023" end="484" start="474" starttimestamp="1700582044267" timestamp="12697678" />
  <DocumentChange __id="6099" _type="Insert" date="Tue Nov 21 14:23:18 EST 2023" docASTNodeCount="106" docActiveCodeLength="631" docExpressionCount="75" docLength="657" length="2" offset="318" starttimestamp="1700582044267" timestamp="12554093">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="6103" _type="Insert" date="Tue Nov 21 14:23:21 EST 2023" docASTNodeCount="108" docActiveCodeLength="641" docExpressionCount="77" docLength="667" length="10" offset="577" repeat="10" starttimestamp="1700582044267" timestamp="12556783" timestamp2="12558104">
    <text><![CDATA[getTail().]]></text>
  </DocumentChange>
  <DocumentChange __id="6127" _type="Insert" date="Tue Nov 21 14:23:25 EST 2023" docASTNodeCount="110" docActiveCodeLength="649" docExpressionCount="79" docLength="675" length="8" offset="632" repeat="8" starttimestamp="1700582044267" timestamp="12561685" timestamp2="12562739">
    <text><![CDATA[getTail.]]></text>
  </DocumentChange>
  <DocumentChange __id="6145" _type="Delete" date="Tue Nov 21 14:23:27 EST 2023" docASTNodeCount="108" docActiveCodeLength="648" docExpressionCount="77" docLength="674" endLine="19" length="1" offset="639" startLine="19" starttimestamp="1700582044267" timestamp="12563102">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="6147" _type="Insert" date="Tue Nov 21 14:23:27 EST 2023" docASTNodeCount="110" docActiveCodeLength="651" docExpressionCount="79" docLength="677" length="3" offset="639" repeat="3" starttimestamp="1700582044267" timestamp="12563360" timestamp2="12563646">
    <text><![CDATA[().]]></text>
  </DocumentChange>
  <DocumentChange __id="6201" _type="Delete" date="Tue Nov 21 14:23:52 EST 2023" docASTNodeCount="108" docActiveCodeLength="648" docExpressionCount="77" docLength="674" endLine="19" length="3" offset="639" startLine="19" starttimestamp="1700582044267" timestamp="12588217">
    <text><![CDATA[().]]></text>
  </DocumentChange>
  <DocumentChange __id="6203" _type="Insert" date="Tue Nov 21 14:23:52 EST 2023" docASTNodeCount="110" docActiveCodeLength="649" docExpressionCount="79" docLength="675" length="1" offset="639" starttimestamp="1700582044267" timestamp="12588693">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="6205" _type="Delete" date="Tue Nov 21 14:23:53 EST 2023" docASTNodeCount="108" docActiveCodeLength="641" docExpressionCount="77" docLength="667" endLine="19" length="8" offset="632" startLine="19" starttimestamp="1700582044267" timestamp="12589207">
    <text><![CDATA[getTail.]]></text>
  </DocumentChange>
  <DocumentChange __id="6207" _type="Delete" date="Tue Nov 21 14:23:53 EST 2023" docASTNodeCount="106" docActiveCodeLength="631" docExpressionCount="75" docLength="657" endLine="19" length="10" offset="577" startLine="19" starttimestamp="1700582044267" timestamp="12589570">
    <text><![CDATA[getTail().]]></text>
  </DocumentChange>
  <DocumentChange __id="6211" _type="Delete" date="Tue Nov 21 14:23:57 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" endLine="11" length="2" offset="318" startLine="11" starttimestamp="1700582044267" timestamp="12593266">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="6253" _type="Delete" date="Tue Nov 21 14:25:15 EST 2023" docASTNodeCount="106" docActiveCodeLength="633" docExpressionCount="75" docLength="633" endLine="11" length="22" offset="320" startLine="11" starttimestamp="1700582044267" timestamp="12671455">
    <text><![CDATA[expr = expr.getTail();]]></text>
  </DocumentChange>
  <DocumentChange __id="6256" _type="Insert" date="Tue Nov 21 14:25:16 EST 2023" docASTNodeCount="106" docActiveCodeLength="636" docExpressionCount="75" docLength="636" length="3" offset="448" starttimestamp="1700582044267" timestamp="12672590">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="6258" _type="Replace" date="Tue Nov 21 14:25:17 EST 2023" docASTNodeCount="112" docActiveCodeLength="658" docExpressionCount="80" docLength="658" endLine="16" insertionLength="24" int_docASTNodeCount="106" int_docActiveCodeLength="634" int_docExpressionCount="75" int_docLength="634" length="2" offset="449" startLine="16" starttimestamp="1700582044267" timestamp="12672822">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		expr = expr.getTail();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6261" _type="Delete" date="Tue Nov 21 14:25:18 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" endLine="11" length="3" offset="317" repeat="3" startLine="10" starttimestamp="1700582044267" timestamp="12674572" timestamp2="12674986">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="6309" _type="MoveCaretCommand" caretOffset="340" date="Tue Nov 21 14:25:57 EST 2023" docOffset="470" starttimestamp="1700582044267" timestamp="12712904" />
  <DocumentChange __id="6310" _type="Insert" date="Tue Nov 21 14:25:59 EST 2023" docASTNodeCount="112" docActiveCodeLength="658" docExpressionCount="80" docLength="658" length="3" offset="317" starttimestamp="1700582044267" timestamp="12715625">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="6311" _type="UndoCommand" date="Tue Nov 21 14:25:59 EST 2023" starttimestamp="1700582044267" timestamp="12715628" />
  <DocumentChange __id="6312" _type="Replace" date="Tue Nov 21 14:26:00 EST 2023" docASTNodeCount="106" docActiveCodeLength="636" docExpressionCount="75" docLength="636" endLine="16" insertionLength="2" int_docASTNodeCount="106" int_docActiveCodeLength="634" int_docExpressionCount="75" int_docLength="634" length="24" offset="449" startLine="16" starttimestamp="1700582044267" timestamp="12716061">
    <deletedText><![CDATA[		expr = expr.getTail();]]></deletedText>
    <insertedText><![CDATA[		]]></insertedText>
  </DocumentChange>
  <Command __id="6313" _type="UndoCommand" date="Tue Nov 21 14:26:00 EST 2023" starttimestamp="1700582044267" timestamp="12716066" />
  <DocumentChange __id="6314" _type="Delete" date="Tue Nov 21 14:26:00 EST 2023" docASTNodeCount="106" docActiveCodeLength="633" docExpressionCount="75" docLength="633" endLine="16" length="3" offset="448" startLine="15" starttimestamp="1700582044267" timestamp="12716390">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="6315" _type="UndoCommand" date="Tue Nov 21 14:26:00 EST 2023" starttimestamp="1700582044267" timestamp="12716396" />
  <Command __id="6317" _type="UndoCommand" date="Tue Nov 21 14:26:01 EST 2023" starttimestamp="1700582044267" timestamp="12716774" />
  <Command __id="6318" _type="MoveCaretCommand" caretOffset="362" date="Tue Nov 21 14:26:01 EST 2023" docOffset="492" starttimestamp="1700582044267" timestamp="12717488" />
  <Command __id="6319" _type="ShellCommand" date="Tue Nov 21 14:26:04 EST 2023" starttimestamp="1700582044267" timestamp="12720618" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6320" _type="ShellCommand" date="Tue Nov 21 14:26:08 EST 2023" starttimestamp="1700582044267" timestamp="12724345" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6321" _type="MoveCaretCommand" caretOffset="525" date="Tue Nov 21 14:26:22 EST 2023" docOffset="655" starttimestamp="1700582044267" timestamp="12738487" />
  <Command __id="6322" _type="MoveCaretCommand" caretOffset="522" date="Tue Nov 21 14:26:23 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="12738946" />
  <Command __id="6323" _type="MoveCaretCommand" caretOffset="450" date="Tue Nov 21 14:26:23 EST 2023" docOffset="580" starttimestamp="1700582044267" timestamp="12739458" />
  <Command __id="6324" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 14:26:24 EST 2023" docOffset="591" starttimestamp="1700582044267" timestamp="12740270" />
  <Command __id="6325" _type="MoveCaretCommand" caretOffset="442" date="Tue Nov 21 14:26:25 EST 2023" docOffset="572" starttimestamp="1700582044267" timestamp="12740819" />
  <Command __id="6326" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:26:25 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="12741334" />
  <Command __id="6327" _type="MoveCaretCommand" caretOffset="245" date="Tue Nov 21 14:26:26 EST 2023" docOffset="375" starttimestamp="1700582044267" timestamp="12742344" />
  <Command __id="6328" _type="MoveCaretCommand" caretOffset="234" date="Tue Nov 21 14:26:27 EST 2023" docOffset="364" starttimestamp="1700582044267" timestamp="12742834" />
  <Command __id="6329" _type="MoveCaretCommand" caretOffset="298" date="Tue Nov 21 14:26:27 EST 2023" docOffset="428" starttimestamp="1700582044267" timestamp="12743275" />
  <Command __id="6330" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:26:28 EST 2023" starttimestamp="1700582044267" timestamp="12743970" />
  <Command __id="6331" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:26:28 EST 2023" starttimestamp="1700582044267" timestamp="12744071" />
  <Command __id="6332" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:26:28 EST 2023" starttimestamp="1700582044267" timestamp="12744077" />
  <Command __id="6333" _type="MoveCaretCommand" caretOffset="325" date="Tue Nov 21 14:26:28 EST 2023" docOffset="455" starttimestamp="1700582044267" timestamp="12744492" />
  <Command __id="6334" _type="MoveCaretCommand" caretOffset="257" date="Tue Nov 21 14:26:29 EST 2023" docOffset="387" starttimestamp="1700582044267" timestamp="12745350" />
  <Command __id="6335" _type="MoveCaretCommand" caretOffset="257" date="Tue Nov 21 14:26:30 EST 2023" docOffset="387" starttimestamp="1700582044267" timestamp="12746010" />
  <Command __id="6336" _type="MoveCaretCommand" caretOffset="299" date="Tue Nov 21 14:26:30 EST 2023" docOffset="429" starttimestamp="1700582044267" timestamp="12746354" />
  <Command __id="6337" _type="MoveCaretCommand" caretOffset="481" date="Tue Nov 21 14:26:32 EST 2023" docOffset="611" starttimestamp="1700582044267" timestamp="12747935" />
  <Command __id="6338" _type="MoveCaretCommand" caretOffset="492" date="Tue Nov 21 14:26:32 EST 2023" docOffset="622" starttimestamp="1700582044267" timestamp="12748424" />
  <Command __id="6339" _type="MoveCaretCommand" caretOffset="480" date="Tue Nov 21 14:26:34 EST 2023" docOffset="610" starttimestamp="1700582044267" timestamp="12750455" />
  <Command __id="6340" _type="SelectTextCommand" caretOffset="484" date="Tue Nov 21 14:26:34 EST 2023" end="484" start="474" starttimestamp="1700582044267" timestamp="12750617" />
  <Command __id="6341" _type="MoveCaretCommand" caretOffset="396" date="Tue Nov 21 14:26:35 EST 2023" docOffset="526" starttimestamp="1700582044267" timestamp="12751664" />
  <Command __id="6342" _type="MoveCaretCommand" caretOffset="479" date="Tue Nov 21 14:26:36 EST 2023" docOffset="609" starttimestamp="1700582044267" timestamp="12752353" />
  <Command __id="6343" _type="SelectTextCommand" caretOffset="484" date="Tue Nov 21 14:26:36 EST 2023" end="484" start="474" starttimestamp="1700582044267" timestamp="12752492" />
  <Command __id="6344" _type="MoveCaretCommand" caretOffset="448" date="Tue Nov 21 14:26:42 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="12757773" />
  <Command __id="6345" _type="MoveCaretCommand" caretOffset="257" date="Tue Nov 21 14:26:43 EST 2023" docOffset="387" starttimestamp="1700582044267" timestamp="12759112" />
  <Command __id="6346" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 14:26:43 EST 2023" docOffset="363" starttimestamp="1700582044267" timestamp="12759679" />
  <Command __id="6347" _type="MoveCaretCommand" caretOffset="229" date="Tue Nov 21 14:26:44 EST 2023" docOffset="359" starttimestamp="1700582044267" timestamp="12760125" />
  <Command __id="6348" _type="SelectTextCommand" caretOffset="232" date="Tue Nov 21 14:26:44 EST 2023" end="232" start="222" starttimestamp="1700582044267" timestamp="12760272" />
  <Command __id="6349" _type="MoveCaretCommand" caretOffset="239" date="Tue Nov 21 14:26:44 EST 2023" docOffset="369" starttimestamp="1700582044267" timestamp="12760711" />
  <Command __id="6350" _type="MoveCaretCommand" caretOffset="234" date="Tue Nov 21 14:26:46 EST 2023" docOffset="364" starttimestamp="1700582044267" timestamp="12761992" />
  <Command __id="6351" _type="SelectTextCommand" caretOffset="237" date="Tue Nov 21 14:26:46 EST 2023" end="237" start="233" starttimestamp="1700582044267" timestamp="12762126" />
  <Command __id="6352" _type="MoveCaretCommand" caretOffset="244" date="Tue Nov 21 14:26:46 EST 2023" docOffset="374" starttimestamp="1700582044267" timestamp="12762590" />
  <Command __id="6353" _type="SelectTextCommand" caretOffset="250" date="Tue Nov 21 14:26:47 EST 2023" end="250" start="239" starttimestamp="1700582044267" timestamp="12762748" />
  <Command __id="6354" _type="MoveCaretCommand" caretOffset="235" date="Tue Nov 21 14:26:47 EST 2023" docOffset="365" starttimestamp="1700582044267" timestamp="12763209" />
  <Command __id="6355" _type="SelectTextCommand" caretOffset="237" date="Tue Nov 21 14:26:47 EST 2023" end="237" start="233" starttimestamp="1700582044267" timestamp="12763354" />
  <Command __id="6356" _type="MoveCaretCommand" caretOffset="242" date="Tue Nov 21 14:26:48 EST 2023" docOffset="372" starttimestamp="1700582044267" timestamp="12763811" />
  <Command __id="6357" _type="SelectTextCommand" caretOffset="250" date="Tue Nov 21 14:26:48 EST 2023" end="250" start="239" starttimestamp="1700582044267" timestamp="12763981" />
  <Command __id="6358" _type="MoveCaretCommand" caretOffset="235" date="Tue Nov 21 14:26:54 EST 2023" docOffset="365" starttimestamp="1700582044267" timestamp="12770082" />
  <Command __id="6359" _type="MoveCaretCommand" caretOffset="241" date="Tue Nov 21 14:26:54 EST 2023" docOffset="371" starttimestamp="1700582044267" timestamp="12770676" />
  <Command __id="6360" _type="MoveCaretCommand" caretOffset="234" date="Tue Nov 21 14:26:55 EST 2023" docOffset="364" starttimestamp="1700582044267" timestamp="12771124" />
  <Command __id="6361" _type="MoveCaretCommand" caretOffset="244" date="Tue Nov 21 14:26:56 EST 2023" docOffset="374" starttimestamp="1700582044267" timestamp="12771737" />
  <Command __id="6362" _type="MoveCaretCommand" caretOffset="236" date="Tue Nov 21 14:26:56 EST 2023" docOffset="366" starttimestamp="1700582044267" timestamp="12772562" />
  <Command __id="6363" _type="MoveCaretCommand" caretOffset="243" date="Tue Nov 21 14:26:57 EST 2023" docOffset="373" starttimestamp="1700582044267" timestamp="12773016" />
  <Command __id="6364" _type="MoveCaretCommand" caretOffset="291" date="Tue Nov 21 14:26:57 EST 2023" docOffset="421" starttimestamp="1700582044267" timestamp="12773723" />
  <Command __id="6365" _type="MoveCaretCommand" caretOffset="360" date="Tue Nov 21 14:26:58 EST 2023" docOffset="490" starttimestamp="1700582044267" timestamp="12774608" />
  <Command __id="6366" _type="MoveCaretCommand" caretOffset="362" date="Tue Nov 21 14:26:59 EST 2023" docOffset="492" starttimestamp="1700582044267" timestamp="12775150" />
  <Command __id="6367" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 14:27:00 EST 2023" docOffset="530" starttimestamp="1700582044267" timestamp="12775757" />
  <Command __id="6368" _type="MoveCaretCommand" caretOffset="382" date="Tue Nov 21 14:27:00 EST 2023" docOffset="512" starttimestamp="1700582044267" timestamp="12776373" />
  <Command __id="6369" _type="MoveCaretCommand" caretOffset="378" date="Tue Nov 21 14:27:01 EST 2023" docOffset="508" starttimestamp="1700582044267" timestamp="12776854" />
  <Command __id="6370" _type="MoveCaretCommand" caretOffset="383" date="Tue Nov 21 14:27:01 EST 2023" docOffset="513" starttimestamp="1700582044267" timestamp="12777355" />
  <Command __id="6371" _type="MoveCaretCommand" caretOffset="379" date="Tue Nov 21 14:27:02 EST 2023" docOffset="509" starttimestamp="1700582044267" timestamp="12777871" />
  <Command __id="6372" _type="MoveCaretCommand" caretOffset="385" date="Tue Nov 21 14:27:02 EST 2023" docOffset="515" starttimestamp="1700582044267" timestamp="12778400" />
  <Command __id="6373" _type="MoveCaretCommand" caretOffset="379" date="Tue Nov 21 14:27:03 EST 2023" docOffset="509" starttimestamp="1700582044267" timestamp="12778877" />
  <Command __id="6374" _type="MoveCaretCommand" caretOffset="383" date="Tue Nov 21 14:27:03 EST 2023" docOffset="513" starttimestamp="1700582044267" timestamp="12779509" />
  <Command __id="6375" _type="MoveCaretCommand" caretOffset="381" date="Tue Nov 21 14:27:05 EST 2023" docOffset="511" starttimestamp="1700582044267" timestamp="12781402" />
  <Command __id="6376" _type="MoveCaretCommand" caretOffset="448" date="Tue Nov 21 14:27:15 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="12790964" />
  <Command __id="6377" _type="MoveCaretCommand" caretOffset="522" date="Tue Nov 21 14:27:15 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="12791713" />
  <Command __id="6378" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:27:17 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="12792974" />
  <Command __id="6379" _type="MoveCaretCommand" caretOffset="434" date="Tue Nov 21 14:27:21 EST 2023" docOffset="564" starttimestamp="1700582044267" timestamp="12797372" />
  <Command __id="6380" _type="MoveCaretCommand" caretOffset="448" date="Tue Nov 21 14:27:22 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="12797876" />
  <Command __id="6385" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:28:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12850363" type="Run" />
  <Command __id="6386" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:28:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12850364" type="Run" />
  <Command __id="6387" _type="ShellCommand" date="Tue Nov 21 14:28:14 EST 2023" starttimestamp="1700582044267" timestamp="12850651" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6388" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855168" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6389" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855169" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6390" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855170" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6391" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855170" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6392" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855187" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6393" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855192" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):28
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):28"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6394" _type="ConsoleOutput" date="Tue Nov 21 14:28:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12855192" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):28"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6395" _type="ShellCommand" date="Tue Nov 21 14:28:20 EST 2023" starttimestamp="1700582044267" timestamp="12856464" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="6316" _type="Insert" date="Tue Nov 21 14:26:01 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" length="22" offset="320" starttimestamp="1700582044267" timestamp="12716770">
    <text><![CDATA[expr = expr.getTail();]]></text>
  </DocumentChange>
  <Command __id="6397" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:28:41 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12877334" type="Run" />
  <Command __id="6398" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:28:41 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12877334" type="Run" />
  <Command __id="6400" _type="MoveCaretCommand" caretOffset="241" date="Tue Nov 21 14:28:42 EST 2023" docOffset="290" starttimestamp="1700582044267" timestamp="12878625" />
  <Command __id="6401" _type="MoveCaretCommand" caretOffset="56" date="Tue Nov 21 14:28:45 EST 2023" docOffset="105" starttimestamp="1700582044267" timestamp="12881600" />
  <Command __id="6402" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:28:48 EST 2023" starttimestamp="1700582044267" timestamp="12883752" />
  <Command __id="6403" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:28:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12883887" type="Run" />
  <Command __id="6404" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:28:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12883887" type="Run" />
  <Command __id="6405" _type="ConsoleInput" date="Tue Nov 21 14:28:54 EST 2023" starttimestamp="1700582044267" timestamp="12890106" type="Exception">
    <outputString><![CDATA[（llili'slistlist 1 1)
]]></outputString>
  </Command>
  <Command __id="6406" _type="LocalChecksRawCommand" date="Tue Nov 21 14:28:54 EST 2023" starttimestamp="1700582044267" timestamp="12890111">
    <CSVRow><![CDATA[233,Tue Nov 21 14:28:19 EST 2023,54,0,ListToStringCheckerAdvanced,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,129,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6407" _type="LocalChecksRawCommand" date="Tue Nov 21 14:28:54 EST 2023" starttimestamp="1700582044267" timestamp="12890111">
    <CSVRow><![CDATA[233,Tue Nov 21 14:28:19 EST 2023,54,0,ListToStringCheckerAdvanced,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,129,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6408" _type="ConsoleOutput" date="Tue Nov 21 14:28:54 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12890121" type="ConsoleOutput">
    <outputString><![CDATA[（LIST
1
1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"（LIST¶1¶1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6409" _type="ConsoleInput" date="Tue Nov 21 14:29:00 EST 2023" starttimestamp="1700582044267" timestamp="12895904" type="Exception">
    <outputString><![CDATA[(list 1 2)
]]></outputString>
  </Command>
  <Command __id="6410" _type="ExceptionCommand" date="Tue Nov 21 14:29:00 EST 2023" starttimestamp="1700582044267" timestamp="12895909" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.NullPointerException
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:62)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:79)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6411" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:29:00 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12895916" type="Run" />
  <Command __id="6412" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:29:00 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12895916" type="Run" />
  <Command __id="6414" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:29:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12914111" type="Run" />
  <Command __id="6415" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:29:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12914111" type="Run" />
  <Command __id="6416" _type="ConsoleInput" date="Tue Nov 21 14:29:20 EST 2023" starttimestamp="1700582044267" timestamp="12916659" type="Exception">
    <outputString><![CDATA[list 1 
]]></outputString>
  </Command>
  <Command __id="6417" _type="ConsoleOutput" date="Tue Nov 21 14:29:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12916670" type="ConsoleOutput">
    <outputString><![CDATA[LIST
1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"（"), Diff(EQUAL,"LIST¶1¶"), Diff(DELETE,"1¶")]]]></diff>
  </Command>
  <Command __id="6418" _type="ConsoleInput" date="Tue Nov 21 14:29:23 EST 2023" starttimestamp="1700582044267" timestamp="12919724" type="Exception">
    <outputString><![CDATA[list 1 2
]]></outputString>
  </Command>
  <Command __id="6419" _type="ConsoleOutput" date="Tue Nov 21 14:29:23 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12919729" type="ConsoleOutput">
    <outputString><![CDATA[LIST
1
2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LIST¶1¶"), Diff(INSERT,"2¶")]]]></diff>
  </Command>
  <Command __id="6420" _type="ConsoleInput" date="Tue Nov 21 14:29:27 EST 2023" starttimestamp="1700582044267" timestamp="12923400" type="Exception">
    <outputString><![CDATA[(list 1 2)
]]></outputString>
  </Command>
  <Command __id="6421" _type="ConsoleOutput" date="Tue Nov 21 14:29:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12923406" type="ConsoleOutput">
    <outputString><![CDATA[(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LIST¶1¶2"), Diff(INSERT,"(1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6422" _type="ConsoleInput" date="Tue Nov 21 14:29:32 EST 2023" starttimestamp="1700582044267" timestamp="12928475" type="Exception">
    <outputString><![CDATA[(list 1 2)
]]></outputString>
  </Command>
  <Command __id="6423" _type="ConsoleOutput" date="Tue Nov 21 14:29:32 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12928477" type="ConsoleOutput">
    <outputString><![CDATA[(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(1 2)¶")]]]></diff>
  </Command>
  <Command __id="6424" _type="PasteCommand" date="Tue Nov 21 14:29:37 EST 2023" starttimestamp="1700582044267" timestamp="12933339" />
  <Command __id="6425" _type="ConsoleOutput" date="Tue Nov 21 14:29:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12933603" type="ConsoleOutput">
    <outputString><![CDATA[(1 T)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(1 "), Diff(DELETE,"2"), Diff(INSERT,"T"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6399" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:28:42 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12878572">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6426" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 14:29:46 EST 2023" docOffset="361" starttimestamp="1700582044267" timestamp="12941798" />
  <Command __id="6428" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 14:29:51 EST 2023" docOffset="368" starttimestamp="1700582044267" timestamp="12946857" />
  <Command __id="6429" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:29:53 EST 2023" starttimestamp="1700582044267" timestamp="12948835" />
  <Command __id="6430" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:29:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12948932" type="Run" />
  <Command __id="6431" _type="ShellCommand" date="Tue Nov 21 14:29:53 EST 2023" starttimestamp="1700582044267" timestamp="12949216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6432" _type="ConsoleOutput" date="Tue Nov 21 14:29:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12954115" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(1 T)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6433" _type="ConsoleOutput" date="Tue Nov 21 14:29:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12954117" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6434" _type="ConsoleOutput" date="Tue Nov 21 14:29:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12954118" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6435" _type="ConsoleOutput" date="Tue Nov 21 14:29:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12954118" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6436" _type="ConsoleOutput" date="Tue Nov 21 14:29:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12954134" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6437" _type="ConsoleOutput" date="Tue Nov 21 14:29:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="12954139" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):25¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"("a" (1 . 2) ((LIST 1 (AND T T))))¶")]]]></diff>
  </Command>
  <Command __id="6438" _type="ShellCommand" date="Tue Nov 21 14:30:00 EST 2023" starttimestamp="1700582044267" timestamp="12956363" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6439" _type="CopyCommand" date="Tue Nov 21 14:30:10 EST 2023" starttimestamp="1700582044267" timestamp="12965940" />
  <Command __id="6427" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:29:51 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="12946788">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6440" _type="CopyCommand" date="Tue Nov 21 14:30:44 EST 2023" starttimestamp="1700582044267" timestamp="12999740" />
  <Command __id="6442" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 14:30:47 EST 2023" docOffset="361" starttimestamp="1700582044267" timestamp="13003162" />
  <Command __id="6443" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:30:51 EST 2023" starttimestamp="1700582044267" timestamp="13007218" />
  <Command __id="6444" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:30:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13007315" type="Run" />
  <Command __id="6445" _type="PasteCommand" date="Tue Nov 21 14:30:53 EST 2023" starttimestamp="1700582044267" timestamp="13008949" />
  <Command __id="6446" _type="ConsoleInput" date="Tue Nov 21 14:30:55 EST 2023" starttimestamp="1700582044267" timestamp="13011295" type="Exception">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))list 
]]></outputString>
  </Command>
  <Command __id="6447" _type="ConsoleOutput" date="Tue Nov 21 14:30:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13011310" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):25¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6448" _type="ConsoleOutput" date="Tue Nov 21 14:30:55 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13011314" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.eval(ListEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6449" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:30:55 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13011315" type="Run" />
  <Command __id="6450" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:30:55 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13011315" type="Run" />
  <Command __id="6451" _type="MoveCaretCommand" caretOffset="309" date="Tue Nov 21 14:31:08 EST 2023" docOffset="358" starttimestamp="1700582044267" timestamp="13023861" />
  <Command __id="6441" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:30:47 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13003106">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6452" _type="MoveCaretCommand" caretOffset="225" date="Tue Nov 21 14:31:09 EST 2023" docOffset="274" starttimestamp="1700582044267" timestamp="13025218" />
  <Command __id="6453" _type="MoveCaretCommand" caretOffset="305" date="Tue Nov 21 14:31:09 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13025709" />
  <Command __id="6454" _type="ShellCommand" date="Tue Nov 21 14:31:10 EST 2023" starttimestamp="1700582044267" timestamp="13026633" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6455" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:31:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13027281" type="Run" />
  <Command __id="6456" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:31:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13027281" type="Run" />
  <Command __id="6457" _type="ShellCommand" date="Tue Nov 21 14:31:11 EST 2023" starttimestamp="1700582044267" timestamp="13027289" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6459" _type="MoveCaretCommand" caretOffset="448" date="Tue Nov 21 14:31:13 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="13029355" />
  <Command __id="6460" _type="SelectTextCommand" caretOffset="452" date="Tue Nov 21 14:31:45 EST 2023" end="452" start="445" starttimestamp="1700582044267" timestamp="13061020" />
  <Command __id="6461" _type="MoveCaretCommand" caretOffset="456" date="Tue Nov 21 14:31:45 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="13061618" />
  <Command __id="6462" _type="SelectTextCommand" caretOffset="459" date="Tue Nov 21 14:31:46 EST 2023" end="459" start="455" starttimestamp="1700582044267" timestamp="13061771" />
  <Command __id="6463" _type="MoveCaretCommand" caretOffset="463" date="Tue Nov 21 14:31:46 EST 2023" docOffset="593" starttimestamp="1700582044267" timestamp="13062439" />
  <Command __id="6464" _type="MoveCaretCommand" caretOffset="455" date="Tue Nov 21 14:31:47 EST 2023" docOffset="585" starttimestamp="1700582044267" timestamp="13062955" />
  <Command __id="6465" _type="SelectTextCommand" caretOffset="459" date="Tue Nov 21 14:31:47 EST 2023" end="459" start="455" starttimestamp="1700582044267" timestamp="13063156" />
  <Command __id="6466" _type="MoveCaretCommand" caretOffset="451" date="Tue Nov 21 14:31:47 EST 2023" docOffset="581" starttimestamp="1700582044267" timestamp="13063635" />
  <Command __id="6467" _type="SelectTextCommand" caretOffset="452" date="Tue Nov 21 14:31:48 EST 2023" end="452" start="445" starttimestamp="1700582044267" timestamp="13063780" />
  <Command __id="6468" _type="MoveCaretCommand" caretOffset="443" date="Tue Nov 21 14:31:48 EST 2023" docOffset="573" starttimestamp="1700582044267" timestamp="13064285" />
  <Command __id="6469" _type="MoveCaretCommand" caretOffset="440" date="Tue Nov 21 14:31:49 EST 2023" docOffset="570" starttimestamp="1700582044267" timestamp="13064822" />
  <Command __id="6470" _type="SelectTextCommand" caretOffset="513" date="Tue Nov 21 14:31:49 EST 2023" end="513" start="440" starttimestamp="1700582044267" timestamp="13064990" />
  <Command __id="6471" _type="MoveCaretCommand" caretOffset="459" date="Tue Nov 21 14:31:49 EST 2023" docOffset="589" starttimestamp="1700582044267" timestamp="13065629" />
  <Command __id="6472" _type="MoveCaretCommand" caretOffset="522" date="Tue Nov 21 14:31:52 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="13068717" />
  <Command __id="6473" _type="SelectTextCommand" caretOffset="444" date="Tue Nov 21 14:32:03 EST 2023" end="454" start="444" starttimestamp="1700582044267" timestamp="13078772" />
  <Command __id="6474" _type="MoveCaretCommand" caretOffset="440" date="Tue Nov 21 14:32:31 EST 2023" docOffset="570" starttimestamp="1700582044267" timestamp="13107054" />
  <Command __id="6458" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:31:13 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13029278">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="6476" _type="Replace" date="Tue Nov 21 14:32:34 EST 2023" docASTNodeCount="107" docActiveCodeLength="624" docExpressionCount="75" docLength="624" endLine="19" insertionLength="1" int_docASTNodeCount="106" int_docActiveCodeLength="623" int_docExpressionCount="74" int_docLength="623" length="32" offset="570" startLine="19" starttimestamp="1700582044267" timestamp="13110017">
    <deletedText><![CDATA[expr.getHead().eval(environment)]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="6475" _type="SelectTextCommand" caretOffset="472" date="Tue Nov 21 14:32:33 EST 2023" end="472" start="440" starttimestamp="1700582044267" timestamp="13109437" />
  <Command __id="6477" _type="InsertStringCommand" date="Tue Nov 21 14:32:34 EST 2023" starttimestamp="1700582044267" timestamp="13110026" timestamp2="13110026">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6479" _type="InsertStringCommand" date="Tue Nov 21 14:32:34 EST 2023" starttimestamp="1700582044267" timestamp="13110183" timestamp2="13110183">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6481" _type="InsertStringCommand" date="Tue Nov 21 14:32:34 EST 2023" starttimestamp="1700582044267" timestamp="13110293" timestamp2="13110293">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6483" _type="InsertStringCommand" date="Tue Nov 21 14:32:34 EST 2023" starttimestamp="1700582044267" timestamp="13110381" timestamp2="13110381">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6485" _type="InsertStringCommand" date="Tue Nov 21 14:32:34 EST 2023" starttimestamp="1700582044267" timestamp="13110656" timestamp2="13110656">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="6487" _type="InsertStringCommand" date="Tue Nov 21 14:32:35 EST 2023" starttimestamp="1700582044267" timestamp="13110903" timestamp2="13110903">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6489" _type="InsertStringCommand" date="Tue Nov 21 14:32:35 EST 2023" starttimestamp="1700582044267" timestamp="13111340" timestamp2="13111340">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6491" _type="InsertStringCommand" date="Tue Nov 21 14:32:36 EST 2023" starttimestamp="1700582044267" timestamp="13111854" timestamp2="13111854">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6493" _type="InsertStringCommand" date="Tue Nov 21 14:32:36 EST 2023" starttimestamp="1700582044267" timestamp="13112070" timestamp2="13112070">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6495" _type="InsertStringCommand" date="Tue Nov 21 14:32:36 EST 2023" starttimestamp="1700582044267" timestamp="13112144" timestamp2="13112144">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6497" _type="InsertStringCommand" date="Tue Nov 21 14:32:36 EST 2023" starttimestamp="1700582044267" timestamp="13112332" timestamp2="13112332">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6499" _type="InsertStringCommand" date="Tue Nov 21 14:32:38 EST 2023" starttimestamp="1700582044267" timestamp="13113880" timestamp2="13113880">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6501" _type="InsertStringCommand" date="Tue Nov 21 14:32:38 EST 2023" starttimestamp="1700582044267" timestamp="13114060" timestamp2="13114060">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6503" _type="InsertStringCommand" date="Tue Nov 21 14:32:38 EST 2023" starttimestamp="1700582044267" timestamp="13114168" timestamp2="13114168">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6505" _type="InsertStringCommand" date="Tue Nov 21 14:32:38 EST 2023" starttimestamp="1700582044267" timestamp="13114297" timestamp2="13114297">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6507" _type="InsertStringCommand" date="Tue Nov 21 14:32:38 EST 2023" starttimestamp="1700582044267" timestamp="13114392" timestamp2="13114392">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6508" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:32:38 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13114400" />
  <Command __id="6512" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:32:39 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13115342" />
  <Command __id="6514" _type="InsertStringCommand" date="Tue Nov 21 14:32:39 EST 2023" starttimestamp="1700582044267" timestamp="13115352" timestamp2="13115352">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6516" _type="InsertStringCommand" date="Tue Nov 21 14:32:40 EST 2023" starttimestamp="1700582044267" timestamp="13115995" timestamp2="13115995">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="6518" _type="InsertStringCommand" date="Tue Nov 21 14:32:40 EST 2023" starttimestamp="1700582044267" timestamp="13116218" timestamp2="13116218">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6520" _type="InsertStringCommand" date="Tue Nov 21 14:32:40 EST 2023" starttimestamp="1700582044267" timestamp="13116362" timestamp2="13116362">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6522" _type="InsertStringCommand" date="Tue Nov 21 14:32:40 EST 2023" starttimestamp="1700582044267" timestamp="13116487" timestamp2="13116487">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6524" _type="InsertStringCommand" date="Tue Nov 21 14:32:40 EST 2023" starttimestamp="1700582044267" timestamp="13116642" timestamp2="13116642">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6526" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13116824" timestamp2="13116824">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6528" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13117167" timestamp2="13117167">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6530" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13117289" timestamp2="13117289">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6532" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13117381" timestamp2="13117381">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6534" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13117545" timestamp2="13117545">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6536" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13117646" timestamp2="13117646">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6538" _type="InsertStringCommand" date="Tue Nov 21 14:32:41 EST 2023" starttimestamp="1700582044267" timestamp="13117730" timestamp2="13117730">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6540" _type="InsertStringCommand" date="Tue Nov 21 14:32:42 EST 2023" starttimestamp="1700582044267" timestamp="13117777" timestamp2="13117777">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6541" _type="MoveCaretCommand" caretOffset="532" date="Tue Nov 21 14:32:42 EST 2023" docOffset="662" starttimestamp="1700582044267" timestamp="13118326" />
  <DocumentChange __id="6478" _type="Insert" date="Tue Nov 21 14:32:34 EST 2023" docASTNodeCount="111" docActiveCodeLength="643" docExpressionCount="79" docLength="643" length="19" offset="571" repeat="18" starttimestamp="1700582044267" timestamp="13110180" timestamp2="13114945">
    <text><![CDATA[valHelper(expr.get)]]></text>
  </DocumentChange>
  <DocumentChange __id="6513" _type="Replace" date="Tue Nov 21 14:32:39 EST 2023" docASTNodeCount="111" docActiveCodeLength="649" docExpressionCount="79" docLength="649" endLine="19" insertionLength="9" int_docASTNodeCount="111" int_docActiveCodeLength="640" int_docExpressionCount="78" int_docLength="640" length="3" offset="586" startLine="19" starttimestamp="1700582044267" timestamp="13115343">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6515" _type="Insert" date="Tue Nov 21 14:32:40 EST 2023" docASTNodeCount="112" docActiveCodeLength="662" docExpressionCount="80" docLength="662" length="13" offset="595" repeat="13" starttimestamp="1700582044267" timestamp="13115995" timestamp2="13117777">
    <text><![CDATA[, environment]]></text>
  </DocumentChange>
  <Command __id="6548" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:32:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13127928" type="Run" />
  <Command __id="6549" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:32:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13127928" type="Run" />
  <Command __id="6551" _type="MoveCaretCommand" caretOffset="251" date="Tue Nov 21 14:32:53 EST 2023" docOffset="368" starttimestamp="1700582044267" timestamp="13129157" />
  <Command __id="6552" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:32:55 EST 2023" starttimestamp="1700582044267" timestamp="13131075" />
  <Command __id="6553" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:32:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13131200" type="Run" />
  <Command __id="6554" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:32:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13131200" type="Run" />
  <Command __id="6555" _type="ShellCommand" date="Tue Nov 21 14:32:55 EST 2023" starttimestamp="1700582044267" timestamp="13131506" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6556" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134070" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.eval(ListEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6557" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134071" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6558" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134073" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="6559" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134088" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6560" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134091" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6561" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134093" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6562" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134095" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6563" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134095" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6564" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134096" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6565" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134098" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6566" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134098" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6567" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134100" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6568" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134103" type="ConsoleOutput">
    <outputString><![CDATA[("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6569" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134103" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6570" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134104" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6571" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134106" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="6572" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134106" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6573" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134107" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6574" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134109" type="ConsoleOutput">
    <outputString><![CDATA[("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6575" _type="ConsoleOutput" date="Tue Nov 21 14:32:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13134111" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((CONS . (1 . (2 . NIL))) . ((EVAL . ((QUOTE . ((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL)) . NIL)) . NIL)))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶"), Diff(INSERT,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string "), Diff(EQUAL,"("a" "), Diff(INSERT,". ("), Diff(EQUAL,"(CONS "), Diff(DELETE,"1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) "), Diff(INSERT,". (1 . (2 . NIL))) . ("), Diff(EQUAL,"(EVAL "), Diff(INSERT,". ("), Diff(EQUAL,"(QUOTE "), Diff(INSERT,". ("), Diff(EQUAL,"(LIST "), Diff(DELETE,"1"), Diff(INSERT,"."), Diff(EQUAL," ("), Diff(DELETE,"AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T)))))¶("a" (CONS 1 2) (EVAL (QUOTE (LIST 1 (AND T T))"), Diff(INSERT,"1 . ((AND . (T . (T . NIL))) . NIL))) . NIL)) . NIL)) . NIL"), Diff(EQUAL,")))¶")]]]></diff>
  </Command>
  <Command __id="6550" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:32:53 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13129089">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6581" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:33:09 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13145485">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6583" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:33:10 EST 2023" docASTNodeCount="227" docActiveCodeLength="1425" docExpressionCount="165" docLength="1425" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13146017">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6576" _type="ShellCommand" date="Tue Nov 21 14:33:08 EST 2023" starttimestamp="1700582044267" timestamp="13144633" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6577" _type="LocalChecksRawCommand" date="Tue Nov 21 14:33:08 EST 2023" starttimestamp="1700582044267" timestamp="13144640">
    <CSVRow><![CDATA[235,Tue Nov 21 14:32:58 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,131,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6578" _type="LocalChecksRawCommand" date="Tue Nov 21 14:33:08 EST 2023" starttimestamp="1700582044267" timestamp="13144640">
    <CSVRow><![CDATA[235,Tue Nov 21 14:32:58 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,131,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6579" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 14:33:08 EST 2023" docOffset="683" starttimestamp="1700582044267" timestamp="13144715" />
  <Command __id="6580" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 14:33:08 EST 2023" docOffset="683" starttimestamp="1700582044267" timestamp="13144715" />
  <Command __id="6582" _type="SelectTextCommand" caretOffset="1399" date="Tue Nov 21 14:33:09 EST 2023" end="1455" start="1399" starttimestamp="1700582044267" timestamp="13145569" />
  <Command __id="6584" _type="MoveCaretCommand" caretOffset="1175" date="Tue Nov 21 14:33:10 EST 2023" docOffset="1175" starttimestamp="1700582044267" timestamp="13146094" />
  <Command __id="6586" _type="MoveCaretCommand" caretOffset="531" date="Tue Nov 21 14:33:11 EST 2023" docOffset="661" starttimestamp="1700582044267" timestamp="13147703" />
  <Command __id="6587" _type="MoveCaretCommand" caretOffset="444" date="Tue Nov 21 14:33:13 EST 2023" docOffset="574" starttimestamp="1700582044267" timestamp="13148966" />
  <Command __id="6588" _type="SelectTextCommand" caretOffset="450" date="Tue Nov 21 14:33:13 EST 2023" end="450" start="440" starttimestamp="1700582044267" timestamp="13149108" />
  <Command __id="6590" _type="UndoCommand" date="Tue Nov 21 14:33:14 EST 2023" starttimestamp="1700582044267" timestamp="13149836" />
  <Command __id="6593" _type="UndoCommand" date="Tue Nov 21 14:33:14 EST 2023" starttimestamp="1700582044267" timestamp="13150234" />
  <Command __id="6595" _type="UndoCommand" date="Tue Nov 21 14:33:14 EST 2023" starttimestamp="1700582044267" timestamp="13150538" />
  <Command __id="6597" _type="UndoCommand" date="Tue Nov 21 14:33:15 EST 2023" starttimestamp="1700582044267" timestamp="13150870" />
  <Command __id="6599" _type="UndoCommand" date="Tue Nov 21 14:33:15 EST 2023" starttimestamp="1700582044267" timestamp="13151307" />
  <Command __id="6600" _type="MoveCaretCommand" caretOffset="524" date="Tue Nov 21 14:33:16 EST 2023" docOffset="654" starttimestamp="1700582044267" timestamp="13152300" />
  <Command __id="6601" _type="ShellCommand" date="Tue Nov 21 14:34:10 EST 2023" starttimestamp="1700582044267" timestamp="13205853" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6602" _type="ShellCommand" date="Tue Nov 21 14:34:36 EST 2023" starttimestamp="1700582044267" timestamp="13232095" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6603" _type="MoveCaretCommand" caretOffset="362" date="Tue Nov 21 14:34:36 EST 2023" docOffset="492" starttimestamp="1700582044267" timestamp="13232169" />
  <Command __id="6604" _type="ShellCommand" date="Tue Nov 21 14:34:38 EST 2023" starttimestamp="1700582044267" timestamp="13234659" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6585" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:33:11 EST 2023" docASTNodeCount="112" docActiveCodeLength="662" docExpressionCount="80" docLength="662" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13147612">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance("), Diff(INSERT,"evalHelper("), Diff(EQUAL,"expr.getHead()"), Diff(DELETE,".eval("), Diff(INSERT,", "), Diff(EQUAL,"environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(evalHelper(expr.getHead(), environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="6589" _type="Delete" date="Tue Nov 21 14:33:14 EST 2023" docASTNodeCount="111" docActiveCodeLength="649" docExpressionCount="79" docLength="649" endLine="19" length="13" offset="595" startLine="19" starttimestamp="1700582044267" timestamp="13149829">
    <text><![CDATA[, environment]]></text>
  </DocumentChange>
  <DocumentChange __id="6591" _type="Replace" date="Tue Nov 21 14:33:14 EST 2023" docASTNodeCount="111" docActiveCodeLength="643" docExpressionCount="79" docLength="643" endLine="19" insertionLength="3" int_docASTNodeCount="111" int_docActiveCodeLength="640" int_docExpressionCount="78" int_docLength="640" length="9" offset="586" startLine="19" starttimestamp="1700582044267" timestamp="13150219">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[get]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6592" _type="Delete" date="Tue Nov 21 14:33:14 EST 2023" docASTNodeCount="108" docActiveCodeLength="635" docExpressionCount="76" docLength="635" endLine="19" length="8" offset="581" startLine="19" starttimestamp="1700582044267" timestamp="13150220">
    <text><![CDATA[expr.get]]></text>
  </DocumentChange>
  <DocumentChange __id="6594" _type="Delete" date="Tue Nov 21 14:33:14 EST 2023" docASTNodeCount="107" docActiveCodeLength="624" docExpressionCount="75" docLength="624" endLine="19" length="11" offset="571" repeat="2" startLine="19" starttimestamp="1700582044267" timestamp="13150534" timestamp2="13150866">
    <text><![CDATA[valHelper()]]></text>
  </DocumentChange>
  <DocumentChange __id="6598" _type="Replace" date="Tue Nov 21 14:33:15 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" endLine="19" insertionLength="32" int_docASTNodeCount="106" int_docActiveCodeLength="623" int_docExpressionCount="74" int_docLength="623" length="1" offset="570" startLine="19" starttimestamp="1700582044267" timestamp="13151300">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[expr.getHead().eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="6605" _type="ShellCommand" date="Tue Nov 21 14:34:41 EST 2023" starttimestamp="1700582044267" timestamp="13237598" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6606" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:34:41 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="13237669" />
  <Command __id="6608" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 14:34:53 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="13249276" />
  <Command __id="6609" _type="MoveCaretCommand" caretOffset="157" date="Tue Nov 21 14:35:01 EST 2023" docOffset="238" starttimestamp="1700582044267" timestamp="13257081" />
  <Command __id="6610" _type="MoveCaretCommand" caretOffset="244" date="Tue Nov 21 14:35:02 EST 2023" docOffset="325" starttimestamp="1700582044267" timestamp="13258374" />
  <Command __id="6611" _type="MoveCaretCommand" caretOffset="243" date="Tue Nov 21 14:35:03 EST 2023" docOffset="324" starttimestamp="1700582044267" timestamp="13259545" />
  <Command __id="6612" _type="MoveCaretCommand" caretOffset="138" date="Tue Nov 21 14:35:04 EST 2023" docOffset="219" starttimestamp="1700582044267" timestamp="13260041" />
  <Command __id="6613" _type="MoveCaretCommand" caretOffset="205" date="Tue Nov 21 14:35:04 EST 2023" docOffset="286" starttimestamp="1700582044267" timestamp="13260653" />
  <Command __id="6614" _type="SelectTextCommand" caretOffset="209" date="Tue Nov 21 14:35:05 EST 2023" end="209" start="202" starttimestamp="1700582044267" timestamp="13260841" />
  <Command __id="6615" _type="MoveCaretCommand" caretOffset="213" date="Tue Nov 21 14:35:05 EST 2023" docOffset="294" starttimestamp="1700582044267" timestamp="13261564" />
  <Command __id="6616" _type="MoveCaretCommand" caretOffset="212" date="Tue Nov 21 14:35:07 EST 2023" docOffset="293" starttimestamp="1700582044267" timestamp="13262914" />
  <Command __id="6617" _type="MoveCaretCommand" caretOffset="244" date="Tue Nov 21 14:35:08 EST 2023" docOffset="325" starttimestamp="1700582044267" timestamp="13264246" />
  <Command __id="6618" _type="ShellCommand" date="Tue Nov 21 14:35:13 EST 2023" starttimestamp="1700582044267" timestamp="13269377" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6619" _type="ShellCommand" date="Tue Nov 21 14:35:17 EST 2023" starttimestamp="1700582044267" timestamp="13273201" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6620" _type="SelectTextCommand" caretOffset="221" date="Tue Nov 21 14:35:29 EST 2023" end="221" start="212" starttimestamp="1700582044267" timestamp="13284957" />
  <Command __id="6622" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:35:29 EST 2023" starttimestamp="1700582044267" timestamp="13285401" />
  <Command __id="6624" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:35:30 EST 2023" starttimestamp="1700582044267" timestamp="13285772" />
  <Command __id="6625" _type="MoveCaretCommand" caretOffset="236" date="Tue Nov 21 14:35:31 EST 2023" docOffset="317" starttimestamp="1700582044267" timestamp="13287158" />
  <Command __id="6626" _type="MoveCaretCommand" caretOffset="163" date="Tue Nov 21 14:35:32 EST 2023" docOffset="244" starttimestamp="1700582044267" timestamp="13288216" />
  <Command __id="6627" _type="MoveCaretCommand" caretOffset="230" date="Tue Nov 21 14:35:33 EST 2023" docOffset="311" starttimestamp="1700582044267" timestamp="13288781" />
  <Command __id="6628" _type="MoveCaretCommand" caretOffset="230" date="Tue Nov 21 14:35:35 EST 2023" docOffset="311" starttimestamp="1700582044267" timestamp="13291687" />
  <Command __id="6629" _type="MoveCaretCommand" caretOffset="230" date="Tue Nov 21 14:35:37 EST 2023" docOffset="311" starttimestamp="1700582044267" timestamp="13292957" />
  <Command __id="6630" _type="MoveCaretCommand" caretOffset="230" date="Tue Nov 21 14:35:37 EST 2023" docOffset="311" starttimestamp="1700582044267" timestamp="13293298" />
  <Command __id="6631" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:35:42 EST 2023" starttimestamp="1700582044267" timestamp="13298637" />
  <Command __id="6632" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:35:43 EST 2023" starttimestamp="1700582044267" timestamp="13298735" />
  <Command __id="6633" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:35:43 EST 2023" starttimestamp="1700582044267" timestamp="13298741" />
  <Command __id="6634" _type="ShellCommand" date="Tue Nov 21 14:35:46 EST 2023" starttimestamp="1700582044267" timestamp="13301873" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6635" _type="ShellCommand" date="Tue Nov 21 14:36:44 EST 2023" starttimestamp="1700582044267" timestamp="13360582" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6636" _type="ShellCommand" date="Tue Nov 21 14:36:47 EST 2023" starttimestamp="1700582044267" timestamp="13362824" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6637" _type="ShellCommand" date="Tue Nov 21 14:37:00 EST 2023" starttimestamp="1700582044267" timestamp="13375971" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6638" _type="ShellCommand" date="Tue Nov 21 14:37:01 EST 2023" starttimestamp="1700582044267" timestamp="13377339" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6639" _type="ShellCommand" date="Tue Nov 21 14:37:07 EST 2023" starttimestamp="1700582044267" timestamp="13382964" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6640" _type="ShellCommand" date="Tue Nov 21 14:37:08 EST 2023" starttimestamp="1700582044267" timestamp="13383956" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6641" _type="ShellCommand" date="Tue Nov 21 14:37:21 EST 2023" starttimestamp="1700582044267" timestamp="13397334" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6642" _type="MoveCaretCommand" caretOffset="237" date="Tue Nov 21 14:37:22 EST 2023" docOffset="318" starttimestamp="1700582044267" timestamp="13398197" />
  <Command __id="6643" _type="MoveCaretCommand" caretOffset="236" date="Tue Nov 21 14:37:22 EST 2023" docOffset="317" starttimestamp="1700582044267" timestamp="13398621" />
  <Command __id="6644" _type="MoveCaretCommand" caretOffset="234" date="Tue Nov 21 14:37:23 EST 2023" docOffset="315" starttimestamp="1700582044267" timestamp="13399050" />
  <Command __id="6645" _type="ShellCommand" date="Tue Nov 21 14:37:23 EST 2023" starttimestamp="1700582044267" timestamp="13399496" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6646" _type="ShellCommand" date="Tue Nov 21 14:37:24 EST 2023" starttimestamp="1700582044267" timestamp="13400670" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6647" _type="ShellCommand" date="Tue Nov 21 14:37:25 EST 2023" starttimestamp="1700582044267" timestamp="13401474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6648" _type="ShellCommand" date="Tue Nov 21 14:37:26 EST 2023" starttimestamp="1700582044267" timestamp="13402503" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6649" _type="ShellCommand" date="Tue Nov 21 14:37:27 EST 2023" starttimestamp="1700582044267" timestamp="13403016" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6607" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:34:53 EST 2023" docASTNodeCount="59" docActiveCodeLength="328" docExpressionCount="42" docLength="328" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13249212">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(DELETE,"import main.lisp.parser.terms.ExpressionFactory;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().getHead().eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail().getHead().eval(environment);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="6621" _type="Delete" date="Tue Nov 21 14:35:29 EST 2023" docASTNodeCount="57" docActiveCodeLength="318" docExpressionCount="40" docLength="318" endLine="10" length="10" offset="292" repeat="2" startLine="10" starttimestamp="1700582044267" timestamp="13285394" timestamp2="13285769">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <Command __id="6650" _type="ShellCommand" date="Tue Nov 21 14:37:29 EST 2023" starttimestamp="1700582044267" timestamp="13405026" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6651" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:37:31 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13406777">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance("), Diff(DELETE,"evalHelper("), Diff(EQUAL,"expr.getHead()"), Diff(DELETE,", "), Diff(INSERT,".eval("), Diff(EQUAL,"environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="6652" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:37:31 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="13406856" />
  <Command __id="6653" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:37:32 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13408570">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6654" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 14:37:32 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="13408667" />
  <Command __id="6655" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:37:34 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13410103">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6656" _type="MoveCaretCommand" caretOffset="174" date="Tue Nov 21 14:37:34 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="13410192" />
  <Command __id="6658" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 14:37:35 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="13411670" />
  <Command __id="6659" _type="CopyCommand" date="Tue Nov 21 14:37:38 EST 2023" starttimestamp="1700582044267" timestamp="13414387" />
  <Command __id="6661" _type="MoveCaretCommand" caretOffset="234" date="Tue Nov 21 14:37:39 EST 2023" docOffset="315" starttimestamp="1700582044267" timestamp="13415126" />
  <Command __id="6662" _type="MoveCaretCommand" caretOffset="55" date="Tue Nov 21 14:37:40 EST 2023" docOffset="55" starttimestamp="1700582044267" timestamp="13415921" />
  <Command __id="6663" _type="MoveCaretCommand" caretOffset="137" date="Tue Nov 21 14:37:41 EST 2023" docOffset="137" starttimestamp="1700582044267" timestamp="13417670" />
  <Command __id="6665" _type="InsertStringCommand" date="Tue Nov 21 14:37:42 EST 2023" starttimestamp="1700582044267" timestamp="13417947" timestamp2="13417947">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6666" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 14:37:42 EST 2023" starttimestamp="1700582044267" timestamp="13418477" />
  <Command __id="6667" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 14:37:42 EST 2023" starttimestamp="1700582044267" timestamp="13418486" />
  <Command __id="6668" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 14:37:43 EST 2023" starttimestamp="1700582044267" timestamp="13419006" />
  <Command __id="6670" _type="PasteCommand" date="Tue Nov 21 14:37:43 EST 2023" starttimestamp="1700582044267" timestamp="13419152" />
  <Command __id="6671" _type="ShellCommand" date="Tue Nov 21 14:37:45 EST 2023" starttimestamp="1700582044267" timestamp="13421267" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6672" _type="ShellCommand" date="Tue Nov 21 14:37:50 EST 2023" starttimestamp="1700582044267" timestamp="13425866" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6673" _type="SelectTextCommand" caretOffset="339" date="Tue Nov 21 14:37:52 EST 2023" end="372" start="339" starttimestamp="1700582044267" timestamp="13427749" />
  <Command __id="6675" _type="PasteCommand" date="Tue Nov 21 14:37:52 EST 2023" starttimestamp="1700582044267" timestamp="13427878" />
  <Command __id="6676" _type="MoveCaretCommand" caretOffset="381" date="Tue Nov 21 14:37:54 EST 2023" docOffset="381" starttimestamp="1700582044267" timestamp="13429831" />
  <Command __id="6678" _type="InsertStringCommand" date="Tue Nov 21 14:37:54 EST 2023" starttimestamp="1700582044267" timestamp="13430146" timestamp2="13430146">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="6680" _type="InsertStringCommand" date="Tue Nov 21 14:37:54 EST 2023" starttimestamp="1700582044267" timestamp="13430292" timestamp2="13430292">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="6682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:54 EST 2023" starttimestamp="1700582044267" timestamp="13430612" />
  <Command __id="6684" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:55 EST 2023" starttimestamp="1700582044267" timestamp="13430737" />
  <Command __id="6686" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:55 EST 2023" starttimestamp="1700582044267" timestamp="13430875" />
  <Command __id="6688" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:55 EST 2023" starttimestamp="1700582044267" timestamp="13431020" />
  <Command __id="6690" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:55 EST 2023" starttimestamp="1700582044267" timestamp="13431213" />
  <Command __id="6692" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:55 EST 2023" starttimestamp="1700582044267" timestamp="13431387" />
  <Command __id="6694" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:55 EST 2023" starttimestamp="1700582044267" timestamp="13431663" />
  <Command __id="6695" _type="MoveCaretCommand" caretOffset="415" date="Tue Nov 21 14:37:57 EST 2023" docOffset="415" starttimestamp="1700582044267" timestamp="13433421" />
  <Command __id="6697" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:57 EST 2023" starttimestamp="1700582044267" timestamp="13433479" />
  <Command __id="6699" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:37:57 EST 2023" starttimestamp="1700582044267" timestamp="13433635" />
  <Command __id="6700" _type="MoveCaretCommand" caretOffset="180" date="Tue Nov 21 14:38:02 EST 2023" docOffset="180" starttimestamp="1700582044267" timestamp="13438277" />
  <Command __id="6701" _type="SelectTextCommand" caretOffset="196" date="Tue Nov 21 14:38:02 EST 2023" end="196" start="164" starttimestamp="1700582044267" timestamp="13438387" />
  <Command __id="6702" _type="CopyCommand" date="Tue Nov 21 14:38:02 EST 2023" starttimestamp="1700582044267" timestamp="13438497" />
  <Command __id="6703" _type="MoveCaretCommand" caretOffset="363" date="Tue Nov 21 14:38:03 EST 2023" docOffset="363" starttimestamp="1700582044267" timestamp="13439251" />
  <Command __id="6704" _type="SelectTextCommand" caretOffset="369" date="Tue Nov 21 14:38:03 EST 2023" end="369" start="339" starttimestamp="1700582044267" timestamp="13439360" />
  <Command __id="6706" _type="PasteCommand" date="Tue Nov 21 14:38:03 EST 2023" starttimestamp="1700582044267" timestamp="13439451" />
  <Command __id="6707" _type="MoveCaretCommand" caretOffset="439" date="Tue Nov 21 14:38:04 EST 2023" docOffset="439" starttimestamp="1700582044267" timestamp="13439919" />
  <Command __id="6657" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:37:35 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13411573">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6660" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:37:39 EST 2023" docASTNodeCount="57" docActiveCodeLength="318" docExpressionCount="40" docLength="318" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13415058">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail()."), Diff(DELETE,"getHead()."), Diff(EQUAL,"eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail().eval(environment);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="6664" _type="Insert" date="Tue Nov 21 14:37:42 EST 2023" docASTNodeCount="65" docActiveCodeLength="379" docExpressionCount="47" docLength="379" length="61" offset="137" repeat="2" starttimestamp="1700582044267" timestamp="13417944" timestamp2="13419147">
    <text><![CDATA[import main.lisp.evaluator.BuiltinOperationManagerSingleton;
]]></text>
  </DocumentChange>
  <DocumentChange __id="6674" _type="Replace" date="Tue Nov 21 14:37:52 EST 2023" docASTNodeCount="69" docActiveCodeLength="448" docExpressionCount="51" docLength="448" endLine="11" insertionLength="102" int_docASTNodeCount="59" int_docActiveCodeLength="346" int_docExpressionCount="41" int_docLength="346" length="33" offset="339" startLine="11" starttimestamp="1700582044267" timestamp="13427872">
    <deletedText><![CDATA[expr.getTail().eval(environment);]]></deletedText>
    <insertedText><![CDATA[BasicOperationManagerSingleton.get().
				getEvaluator (S.getHead().toString)}.
	eval(S, Environment)
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6677" _type="Insert" date="Tue Nov 21 14:37:54 EST 2023" docASTNodeCount="69" docActiveCodeLength="450" docExpressionCount="51" docLength="450" length="2" offset="381" repeat="2" starttimestamp="1700582044267" timestamp="13430144" timestamp2="13430290">
    <text><![CDATA[\\]]></text>
  </DocumentChange>
  <DocumentChange __id="6681" _type="Delete" date="Tue Nov 21 14:37:54 EST 2023" docASTNodeCount="69" docActiveCodeLength="443" docExpressionCount="51" docLength="443" endLine="12" length="7" offset="376" repeat="7" startLine="11" starttimestamp="1700582044267" timestamp="13430609" timestamp2="13431662">
    <text><![CDATA[
				\\]]></text>
  </DocumentChange>
  <DocumentChange __id="6696" _type="Delete" date="Tue Nov 21 14:37:57 EST 2023" docASTNodeCount="69" docActiveCodeLength="441" docExpressionCount="51" docLength="441" endLine="12" length="2" offset="413" repeat="2" startLine="11" starttimestamp="1700582044267" timestamp="13433476" timestamp2="13433631">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="6705" _type="Replace" date="Tue Nov 21 14:38:03 EST 2023" docASTNodeCount="69" docActiveCodeLength="443" docExpressionCount="51" docLength="443" endLine="11" insertionLength="32" int_docASTNodeCount="68" int_docActiveCodeLength="411" int_docExpressionCount="50" int_docLength="411" length="30" offset="339" startLine="11" starttimestamp="1700582044267" timestamp="13439445">
    <deletedText><![CDATA[BasicOperationManagerSingleton]]></deletedText>
    <insertedText><![CDATA[BuiltinOperationManagerSingleton]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6709" _type="Delete" date="Tue Nov 21 14:38:08 EST 2023" docASTNodeCount="69" docActiveCodeLength="442" docExpressionCount="51" docLength="442" endLine="11" length="1" offset="390" startLine="11" starttimestamp="1700582044267" timestamp="13443871">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="6713" _type="Delete" date="Tue Nov 21 14:38:09 EST 2023" docASTNodeCount="68" docActiveCodeLength="441" docExpressionCount="50" docLength="441" endLine="11" length="1" offset="391" startLine="11" starttimestamp="1700582044267" timestamp="13445053">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <DocumentChange __id="6715" _type="Insert" date="Tue Nov 21 14:38:09 EST 2023" docASTNodeCount="69" docActiveCodeLength="445" docExpressionCount="51" docLength="445" length="4" offset="391" repeat="4" starttimestamp="1700582044267" timestamp="13445269" timestamp2="13445688">
    <text><![CDATA[exor]]></text>
  </DocumentChange>
  <Command __id="6708" _type="MoveCaretCommand" caretOffset="391" date="Tue Nov 21 14:38:07 EST 2023" docOffset="391" starttimestamp="1700582044267" timestamp="13443564" />
  <Command __id="6710" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:08 EST 2023" starttimestamp="1700582044267" timestamp="13443874" />
  <Command __id="6711" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 14:38:08 EST 2023" starttimestamp="1700582044267" timestamp="13444334" />
  <Command __id="6712" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 14:38:09 EST 2023" starttimestamp="1700582044267" timestamp="13444875" />
  <Command __id="6714" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:09 EST 2023" starttimestamp="1700582044267" timestamp="13445056" />
  <Command __id="6716" _type="InsertStringCommand" date="Tue Nov 21 14:38:09 EST 2023" starttimestamp="1700582044267" timestamp="13445272" timestamp2="13445272">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6718" _type="InsertStringCommand" date="Tue Nov 21 14:38:09 EST 2023" starttimestamp="1700582044267" timestamp="13445482" timestamp2="13445482">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6720" _type="InsertStringCommand" date="Tue Nov 21 14:38:09 EST 2023" starttimestamp="1700582044267" timestamp="13445573" timestamp2="13445573">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6722" _type="InsertStringCommand" date="Tue Nov 21 14:38:09 EST 2023" starttimestamp="1700582044267" timestamp="13445691" timestamp2="13445691">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6724" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:12 EST 2023" starttimestamp="1700582044267" timestamp="13448241" />
  <Command __id="6726" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:12 EST 2023" starttimestamp="1700582044267" timestamp="13448375" />
  <Command __id="6728" _type="InsertStringCommand" date="Tue Nov 21 14:38:12 EST 2023" starttimestamp="1700582044267" timestamp="13448594" timestamp2="13448594">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6730" _type="InsertStringCommand" date="Tue Nov 21 14:38:12 EST 2023" starttimestamp="1700582044267" timestamp="13448680" timestamp2="13448680">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6731" _type="MoveCaretCommand" caretOffset="416" date="Tue Nov 21 14:38:14 EST 2023" docOffset="416" starttimestamp="1700582044267" timestamp="13450067" />
  <Command __id="6733" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:14 EST 2023" starttimestamp="1700582044267" timestamp="13450325" />
  <Command __id="6734" _type="MoveCaretCommand" caretOffset="414" date="Tue Nov 21 14:38:17 EST 2023" docOffset="414" starttimestamp="1700582044267" timestamp="13453085" />
  <Command __id="6735" _type="MoveCaretCommand" caretOffset="415" date="Tue Nov 21 14:38:17 EST 2023" docOffset="415" starttimestamp="1700582044267" timestamp="13453729" />
  <Command __id="6737" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:18 EST 2023" starttimestamp="1700582044267" timestamp="13454146" />
  <Command __id="6739" _type="InsertStringCommand" date="Tue Nov 21 14:38:18 EST 2023" starttimestamp="1700582044267" timestamp="13454394" timestamp2="13454394">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6740" _type="InsertStringCommand" date="Tue Nov 21 14:38:18 EST 2023" starttimestamp="1700582044267" timestamp="13454447" timestamp2="13454447">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6741" _type="MoveCaretCommand" caretOffset="445" date="Tue Nov 21 14:38:19 EST 2023" docOffset="445" starttimestamp="1700582044267" timestamp="13455008" />
  <DocumentChange __id="6723" _type="Delete" date="Tue Nov 21 14:38:12 EST 2023" docASTNodeCount="69" docActiveCodeLength="443" docExpressionCount="51" docLength="443" endLine="11" length="2" offset="393" repeat="2" startLine="11" starttimestamp="1700582044267" timestamp="13448238" timestamp2="13448373">
    <text><![CDATA[or]]></text>
  </DocumentChange>
  <DocumentChange __id="6727" _type="Insert" date="Tue Nov 21 14:38:12 EST 2023" docASTNodeCount="69" docActiveCodeLength="445" docExpressionCount="51" docLength="445" length="2" offset="393" repeat="2" starttimestamp="1700582044267" timestamp="13448591" timestamp2="13448676">
    <text><![CDATA[pr]]></text>
  </DocumentChange>
  <DocumentChange __id="6732" _type="Delete" date="Tue Nov 21 14:38:14 EST 2023" docASTNodeCount="73" docActiveCodeLength="444" docExpressionCount="55" docLength="444" endLine="11" length="1" offset="415" startLine="11" starttimestamp="1700582044267" timestamp="13450320">
    <text><![CDATA[}]]></text>
  </DocumentChange>
  <DocumentChange __id="6736" _type="Delete" date="Tue Nov 21 14:38:18 EST 2023" docASTNodeCount="73" docActiveCodeLength="443" docExpressionCount="55" docLength="443" endLine="11" length="1" offset="414" startLine="11" starttimestamp="1700582044267" timestamp="13454143">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="6738" _type="Insert" date="Tue Nov 21 14:38:18 EST 2023" docASTNodeCount="73" docActiveCodeLength="445" docExpressionCount="55" docLength="445" length="2" offset="414" starttimestamp="1700582044267" timestamp="13454393">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="6742" _type="MoveCaretCommand" caretOffset="416" date="Tue Nov 21 14:38:20 EST 2023" docOffset="416" starttimestamp="1700582044267" timestamp="13456656" />
  <Command __id="6744" _type="InsertStringCommand" date="Tue Nov 21 14:38:22 EST 2023" starttimestamp="1700582044267" timestamp="13458341" timestamp2="13458341">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6745" _type="MoveCaretCommand" caretOffset="424" date="Tue Nov 21 14:38:24 EST 2023" docOffset="424" starttimestamp="1700582044267" timestamp="13460101" />
  <Command __id="6747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:24 EST 2023" starttimestamp="1700582044267" timestamp="13460605" />
  <Command __id="6749" _type="InsertStringCommand" date="Tue Nov 21 14:38:24 EST 2023" starttimestamp="1700582044267" timestamp="13460702" timestamp2="13460702">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6751" _type="InsertStringCommand" date="Tue Nov 21 14:38:25 EST 2023" starttimestamp="1700582044267" timestamp="13460915" timestamp2="13460915">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6753" _type="InsertStringCommand" date="Tue Nov 21 14:38:25 EST 2023" starttimestamp="1700582044267" timestamp="13461054" timestamp2="13461054">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6755" _type="InsertStringCommand" date="Tue Nov 21 14:38:25 EST 2023" starttimestamp="1700582044267" timestamp="13461173" timestamp2="13461173">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6756" _type="MoveCaretCommand" caretOffset="389" date="Tue Nov 21 14:38:26 EST 2023" docOffset="389" starttimestamp="1700582044267" timestamp="13462227" />
  <Command __id="6757" _type="SelectTextCommand" caretOffset="390" date="Tue Nov 21 14:38:26 EST 2023" end="390" start="378" starttimestamp="1700582044267" timestamp="13462346" />
  <Command __id="6758" _type="CopyCommand" date="Tue Nov 21 14:38:26 EST 2023" starttimestamp="1700582044267" timestamp="13462436" />
  <Command __id="6759" _type="MoveCaretCommand" caretOffset="322" date="Tue Nov 21 14:38:27 EST 2023" docOffset="322" starttimestamp="1700582044267" timestamp="13463283" />
  <Command __id="6760" _type="SelectTextCommand" caretOffset="326" date="Tue Nov 21 14:38:27 EST 2023" end="326" start="315" starttimestamp="1700582044267" timestamp="13463431" />
  <Command __id="6761" _type="CopyCommand" date="Tue Nov 21 14:38:27 EST 2023" starttimestamp="1700582044267" timestamp="13463635" />
  <Command __id="6762" _type="MoveCaretCommand" caretOffset="433" date="Tue Nov 21 14:38:29 EST 2023" docOffset="433" starttimestamp="1700582044267" timestamp="13464797" />
  <Command __id="6763" _type="SelectTextCommand" caretOffset="440" date="Tue Nov 21 14:38:29 EST 2023" end="440" start="429" starttimestamp="1700582044267" timestamp="13464914" />
  <Command __id="6765" _type="PasteCommand" date="Tue Nov 21 14:38:29 EST 2023" starttimestamp="1700582044267" timestamp="13465026" />
  <DocumentChange __id="6743" _type="Insert" date="Tue Nov 21 14:38:22 EST 2023" docASTNodeCount="73" docActiveCodeLength="446" docExpressionCount="55" docLength="446" length="1" offset="416" starttimestamp="1700582044267" timestamp="13458337">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="6746" _type="Delete" date="Tue Nov 21 14:38:24 EST 2023" docASTNodeCount="72" docActiveCodeLength="445" docExpressionCount="54" docLength="445" endLine="11" length="1" offset="423" startLine="11" starttimestamp="1700582044267" timestamp="13460601">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <DocumentChange __id="6748" _type="Insert" date="Tue Nov 21 14:38:24 EST 2023" docASTNodeCount="73" docActiveCodeLength="449" docExpressionCount="55" docLength="449" length="4" offset="423" repeat="4" starttimestamp="1700582044267" timestamp="13460699" timestamp2="13461171">
    <text><![CDATA[expr]]></text>
  </DocumentChange>
  <DocumentChange __id="6764" _type="Replace" date="Tue Nov 21 14:38:29 EST 2023" docASTNodeCount="73" docActiveCodeLength="449" docExpressionCount="55" docLength="449" endLine="11" insertionLength="11" int_docASTNodeCount="72" int_docActiveCodeLength="438" int_docExpressionCount="54" int_docLength="438" length="11" offset="429" startLine="11" starttimestamp="1700582044267" timestamp="13465020">
    <deletedText><![CDATA[Environment]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6770" _type="Delete" date="Tue Nov 21 14:38:36 EST 2023" docASTNodeCount="73" docActiveCodeLength="448" docExpressionCount="55" docLength="448" endLine="12" length="1" offset="441" startLine="11" starttimestamp="1700582044267" timestamp="13472231">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="6766" _type="MoveCaretCommand" caretOffset="329" date="Tue Nov 21 14:38:33 EST 2023" docOffset="329" starttimestamp="1700582044267" timestamp="13469539" />
  <Command __id="6767" _type="MoveCaretCommand" caretOffset="445" date="Tue Nov 21 14:38:34 EST 2023" docOffset="445" starttimestamp="1700582044267" timestamp="13470045" />
  <Command __id="6768" _type="MoveCaretCommand" caretOffset="421" date="Tue Nov 21 14:38:34 EST 2023" docOffset="421" starttimestamp="1700582044267" timestamp="13470524" />
  <Command __id="6769" _type="MoveCaretCommand" caretOffset="442" date="Tue Nov 21 14:38:35 EST 2023" docOffset="442" starttimestamp="1700582044267" timestamp="13471425" />
  <Command __id="6771" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:38:36 EST 2023" starttimestamp="1700582044267" timestamp="13472237" />
  <Command __id="6773" _type="InsertStringCommand" date="Tue Nov 21 14:38:37 EST 2023" starttimestamp="1700582044267" timestamp="13473299" timestamp2="13473299">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6774" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 14:38:38 EST 2023" docOffset="446" starttimestamp="1700582044267" timestamp="13474007" />
  <Command __id="6775" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:38:38 EST 2023" starttimestamp="1700582044267" timestamp="13474267" />
  <Command __id="6776" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:38:38 EST 2023" starttimestamp="1700582044267" timestamp="13474368" />
  <Command __id="6777" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:38:38 EST 2023" starttimestamp="1700582044267" timestamp="13474375" />
  <Command __id="6778" _type="ShellCommand" date="Tue Nov 21 14:38:40 EST 2023" starttimestamp="1700582044267" timestamp="13476512" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6779" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:38:40 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13476709" type="Run" />
  <Command __id="6780" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:38:40 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13476709" type="Run" />
  <Command __id="6781" _type="ShellCommand" date="Tue Nov 21 14:38:40 EST 2023" starttimestamp="1700582044267" timestamp="13476719" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6782" _type="ShellCommand" date="Tue Nov 21 14:38:41 EST 2023" starttimestamp="1700582044267" timestamp="13477677" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6783" _type="ShellCommand" date="Tue Nov 21 14:38:42 EST 2023" starttimestamp="1700582044267" timestamp="13478674" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6784" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:38:43 EST 2023" starttimestamp="1700582044267" timestamp="13478772" />
  <Command __id="6785" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:38:43 EST 2023" starttimestamp="1700582044267" timestamp="13478779" />
  <Command __id="6786" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:38:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13478849" type="Run" />
  <Command __id="6787" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:38:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13478849" type="Run" />
  <Command __id="6788" _type="ShellCommand" date="Tue Nov 21 14:38:43 EST 2023" starttimestamp="1700582044267" timestamp="13479153" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6789" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481456" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"ListToStringDeepCheckerAdvanc"), Diff(INSERT,"ClassRegistryProvid"), Diff(EQUAL,"ed,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,0.0,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,"), Diff(DELETE,"Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((CONS . (1 . (2 . NIL))) . ((EVAL . ((QUOTE . ((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL)) . NIL)) . NIL)))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6790" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481458" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL,"¶Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="6791" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481476" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6792" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481479" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6793" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481481" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6794" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481482" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6795" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481482" type="ConsoleOutput">
    <outputString><![CDATA[(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(5)¶"), Diff(INSERT,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="6796" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481484" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6797" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481486" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6798" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481487" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6799" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481489" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6800" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481494" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.StackOverflowError
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"java.lang.StackOverflowError"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6801" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481495" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.Character.toUpperCaseEx(Character.java:10577)
	at java.base/java.lang.StringLatin1.toUpperCase(StringLatin1.java:461)
	at java.base/java.lang.String.toUpperCase(String.java:2584)
	at java.base/java.lang.String.toUpperCase(String.java:2608)
	at main.lisp.evaluator.BasicOperationManager.getEvaluator(BasicOperationManager.java:34)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.StackOverflowError"), Diff(INSERT,"	at java.base/java.lang.Character.toUpperCaseEx(Character.java:10577)¶	at java.base/java.lang.StringLatin1.toUpperCase(StringLatin1.java:461)¶	at java.base/java.lang.String.toUpperCase(String.java:2584)¶	at java.base/java.lang.String.toUpperCase(String.java:2608)¶	at main.lisp.evaluator.BasicOperationManager.getEvaluator(BasicOperationManager.java:34)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6802" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481496" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/java.lang.Character.toUpperCaseEx(Characte"), Diff(INSERT,"index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluato"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"0577"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.StringL"), Diff(INSERT,"index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"in"), Diff(DELETE,"1.toUpperCase(StringL"), Diff(INSERT,"dex.EvalEvaluator.eval(EvalEvaluator.java:12)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"in"), Diff(DELETE,"1"), Diff(INSERT,"dex.EvalEvaluator.eval(EvalEvaluator"), Diff(EQUAL,".java:"), Diff(DELETE,"46"), Diff(EQUAL,"1"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.String.toUpperCase(String"), Diff(INSERT,"index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"2"), Diff(DELETE,"584"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.String.toUpperCase(String"), Diff(INSERT,"index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"2"), Diff(DELETE,"608"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicOperationManager.getEvaluator(BasicOperationManage"), Diff(INSERT,"index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluato"), Diff(EQUAL,"r.java:"), Diff(DELETE,"34"), Diff(INSERT,"12"), Diff(EQUAL,")¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6803" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481498" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6804" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481502" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6805" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481503" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6806" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481504" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6807" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481504" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6808" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481506" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6809" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481507" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6810" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481507" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6811" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481508" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6812" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481508" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6813" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481508" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6814" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481509" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6815" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481509" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6816" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481509" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6817" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481509" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6818" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481510" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6819" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481510" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6820" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481510" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6821" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481510" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6822" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481511" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6823" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481511" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6824" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481511" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6825" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481511" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6826" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481511" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6827" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481512" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6828" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481512" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6829" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481512" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6830" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481512" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6831" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481514" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6832" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481515" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6833" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481515" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6834" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481515" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6835" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481515" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6836" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481516" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6837" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481516" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6838" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481516" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6839" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481517" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)"), Diff(INSERT,"Test execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6840" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481518" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,null
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,null"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6841" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481520" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,null"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6842" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481523" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6843" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481533" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.StackOverflowError
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(INSERT,"java.lang.StackOverflowError¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6844" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481534" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.StackOverflowError"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)"), Diff(EQUAL,"¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6845" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481535" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6846" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481535" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6847" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6848" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6849" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6850" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6851" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6852" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6853" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481536" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6854" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481537" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6855" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481537" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6856" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481537" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6857" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481537" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6858" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481539" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6859" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481540" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6860" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481540" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6861" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481540" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6862" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481541" type="ConsoleOutput">
    <outputString><![CDATA[
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6863" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481541" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6864" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481542" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6865" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481542" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6866" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481542" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6867" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481543" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6868" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481543" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6869" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481543" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6870" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481543" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6871" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481543" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6872" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481544" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6873" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481544" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6874" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481544" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6875" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481544" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6876" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481544" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6877" _type="ConsoleOutput" date="Tue Nov 21 14:38:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13481554" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶")]]]></diff>
  </Command>
  <Command __id="6878" _type="ShellCommand" date="Tue Nov 21 14:38:49 EST 2023" starttimestamp="1700582044267" timestamp="13485625" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6879" _type="MoveCaretCommand" caretOffset="449" date="Tue Nov 21 14:38:49 EST 2023" docOffset="449" starttimestamp="1700582044267" timestamp="13485717" />
  <Command __id="6880" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 14:38:50 EST 2023" docOffset="446" starttimestamp="1700582044267" timestamp="13486142" />
  <Command __id="6881" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 14:38:50 EST 2023" docOffset="446" starttimestamp="1700582044267" timestamp="13486615" />
  <Command __id="6882" _type="MoveCaretCommand" caretOffset="445" date="Tue Nov 21 14:38:51 EST 2023" docOffset="445" starttimestamp="1700582044267" timestamp="13487203" />
  <Command __id="6883" _type="MoveCaretCommand" caretOffset="397" date="Tue Nov 21 14:38:52 EST 2023" docOffset="397" starttimestamp="1700582044267" timestamp="13488179" />
  <Command __id="6884" _type="MoveCaretCommand" caretOffset="393" date="Tue Nov 21 14:38:52 EST 2023" docOffset="393" starttimestamp="1700582044267" timestamp="13488694" />
  <Command __id="6885" _type="MoveCaretCommand" caretOffset="403" date="Tue Nov 21 14:38:53 EST 2023" docOffset="403" starttimestamp="1700582044267" timestamp="13489263" />
  <Command __id="6886" _type="MoveCaretCommand" caretOffset="259" date="Tue Nov 21 14:38:54 EST 2023" docOffset="259" starttimestamp="1700582044267" timestamp="13490471" />
  <Command __id="6887" _type="MoveCaretCommand" caretOffset="445" date="Tue Nov 21 14:38:55 EST 2023" docOffset="445" starttimestamp="1700582044267" timestamp="13491051" />
  <Command __id="6888" _type="MoveCaretCommand" caretOffset="397" date="Tue Nov 21 14:38:55 EST 2023" docOffset="397" starttimestamp="1700582044267" timestamp="13491655" />
  <Command __id="6889" _type="MoveCaretCommand" caretOffset="396" date="Tue Nov 21 14:38:56 EST 2023" docOffset="396" starttimestamp="1700582044267" timestamp="13492130" />
  <Command __id="6935" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:39:05 EST 2023" starttimestamp="1700582044267" timestamp="13501521" />
  <Command __id="6940" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:39:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13505261" type="Run" />
  <Command __id="6941" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:39:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13505261" type="Run" />
  <Command __id="6942" _type="ShellCommand" date="Tue Nov 21 14:39:09 EST 2023" starttimestamp="1700582044267" timestamp="13505550" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6943" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507782" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6944" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507783" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6945" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507784" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="6946" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507799" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6947" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507802" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6948" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507804" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6949" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507805" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6950" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507806" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6951" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507807" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6952" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507810" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6953" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507811" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6954" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507813" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.NullPointerException
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"java.lang.NullPointerException"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6955" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507813" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.NullPointerException"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)¶	at index.ListEvaluator.eval(ListEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6956" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507816" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.EvalEvaluator.eval(EvalEvaluator"), Diff(INSERT,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(EQUAL,".java:"), Diff(DELETE,"13"), Diff(INSERT,"26"), Diff(EQUAL,")¶	at main.lisp."), Diff(DELETE,"evaluator.Basic"), Diff(INSERT,"interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluator.eval(Basic"), Diff(INSERT,"Inputter.evaluate(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluato"), Diff(INSERT,"Inputte"), Diff(EQUAL,"r.java:"), Diff(DELETE,"1"), Diff(EQUAL,"6"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.Basic"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,".eval(Basic"), Diff(INSERT,"Inputter.evaluate(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(INSERT,"Inputter"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"2"), Diff(DELETE,"6"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluato"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecke"), Diff(EQUAL,"r.java:"), Diff(DELETE,"20"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluato"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecke"), Diff(EQUAL,"r.java:"), Diff(DELETE,"20"), Diff(INSERT,"44"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.evalHelper(ListEvaluator"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:2"), Diff(DELETE,"0"), Diff(INSERT,"31"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.ListEvaluator.eval(ListEvaluator"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:1"), Diff(DELETE,"3"), Diff(INSERT,"11"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6957" _type="ConsoleOutput" date="Tue Nov 21 14:39:12 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13507845" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"er.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:4"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutp"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.exec"), Diff(EQUAL,"ut"), Diff(INSERT,"e"), Diff(EQUAL,"(A"), Diff(DELETE,"bstractLispExpressionCheck"), Diff(INSERT,"HistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:19"), Diff(INSERT,"06"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6958" _type="ExceptionCommand" date="Tue Nov 21 14:39:12 EST 2023" starttimestamp="1700582044267" timestamp="13507853" type="Exception">
    <exceptionString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):3
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.NullPointerException
	at index.EvalEvaluator.eval(EvalEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6959" _type="ShellCommand" date="Tue Nov 21 14:39:17 EST 2023" starttimestamp="1700582044267" timestamp="13512794" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6960" _type="LocalChecksRawCommand" date="Tue Nov 21 14:39:17 EST 2023" starttimestamp="1700582044267" timestamp="13512797">
    <CSVRow><![CDATA[237,Tue Nov 21 14:39:12 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,133,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6961" _type="LocalChecksRawCommand" date="Tue Nov 21 14:39:17 EST 2023" starttimestamp="1700582044267" timestamp="13512797">
    <CSVRow><![CDATA[237,Tue Nov 21 14:39:12 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,133,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6962" _type="MoveCaretCommand" caretOffset="473" date="Tue Nov 21 14:39:17 EST 2023" docOffset="473" starttimestamp="1700582044267" timestamp="13512884" />
  <Command __id="6963" _type="MoveCaretCommand" caretOffset="353" date="Tue Nov 21 14:39:17 EST 2023" docOffset="353" starttimestamp="1700582044267" timestamp="13513655" />
  <Command __id="7024" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:39:30 EST 2023" starttimestamp="1700582044267" timestamp="13525888" />
  <Command __id="7025" _type="ShellCommand" date="Tue Nov 21 14:39:31 EST 2023" starttimestamp="1700582044267" timestamp="13526985" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7026" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531175" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7027" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531175" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7028" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531176" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7029" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531177" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7030" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531177" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
(5)
(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3"), Diff(INSERT,"5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7031" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531177" type="ConsoleOutput">
    <outputString><![CDATA[(1 2)
(1 2)
(1 2)
(1 2)
(1 2)
(1 2)
(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶("), Diff(DELETE,"5"), Diff(INSERT,"1 2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7032" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531177" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7033" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531177" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.NullPointerException
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)"), Diff(INSERT,"java.lang.NullPointerException"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7034" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531178" type="ConsoleOutput">
    <outputString><![CDATA[	at index.EvalEvaluator.eval(EvalEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:36)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.NullPointerException"), Diff(INSERT,"	at index.EvalEvaluator.eval(EvalEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:36)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7035" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531182" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.EvalEvaluator.eval(EvalEvaluator"), Diff(INSERT,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(EQUAL,".java:"), Diff(DELETE,"13"), Diff(INSERT,"26"), Diff(EQUAL,")¶	at main.lisp."), Diff(DELETE,"evaluator.Basic"), Diff(INSERT,"interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluator.eval(Basic"), Diff(INSERT,"Inputter.evaluate(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluato"), Diff(INSERT,"Inputte"), Diff(EQUAL,"r.java:"), Diff(DELETE,"1"), Diff(EQUAL,"6"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.Basic"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,".eval(Basic"), Diff(INSERT,"Inputter.evaluate(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(INSERT,"Inputter"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"2"), Diff(DELETE,"6"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"111"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(EQUAL,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvalu"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".eval(BasicExpressionEvaluator"), Diff(INSERT,"g.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7036" _type="ConsoleOutput" date="Tue Nov 21 14:39:35 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13531208" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7037" _type="ExceptionCommand" date="Tue Nov 21 14:39:35 EST 2023" starttimestamp="1700582044267" timestamp="13531210" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):0
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):0
Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):0
Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes

Test execution time (ms):1
Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,

java.lang.IndexOutOfBoundsException: Index 4 out of bounds for length 4
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedTwoResultsChecker.test(AbstractFunctionTestedTwoResultsChecker.java:51)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="7038" _type="ShellCommand" date="Tue Nov 21 14:39:50 EST 2023" starttimestamp="1700582044267" timestamp="13546416" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7039" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 14:39:50 EST 2023" docOffset="512" starttimestamp="1700582044267" timestamp="13546505" />
  <Command __id="7040" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 14:39:51 EST 2023" docOffset="512" starttimestamp="1700582044267" timestamp="13546972" />
  <Command __id="7041" _type="ShellCommand" date="Tue Nov 21 14:39:52 EST 2023" starttimestamp="1700582044267" timestamp="13548015" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7042" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:39:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13548554" type="Run" />
  <Command __id="7043" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:39:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13548554" type="Run" />
  <Command __id="7044" _type="ShellCommand" date="Tue Nov 21 14:39:52 EST 2023" starttimestamp="1700582044267" timestamp="13548561" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7045" _type="MoveCaretCommand" caretOffset="259" date="Tue Nov 21 14:39:53 EST 2023" docOffset="259" starttimestamp="1700582044267" timestamp="13548953" />
  <Command __id="7046" _type="MoveCaretCommand" caretOffset="292" date="Tue Nov 21 14:39:53 EST 2023" docOffset="292" starttimestamp="1700582044267" timestamp="13549644" />
  <Command __id="7047" _type="MoveCaretCommand" caretOffset="354" date="Tue Nov 21 14:39:54 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13550066" />
  <Command __id="7048" _type="MoveCaretCommand" caretOffset="354" date="Tue Nov 21 14:39:54 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13550470" />
  <Command __id="7049" _type="MoveCaretCommand" caretOffset="392" date="Tue Nov 21 14:39:55 EST 2023" docOffset="392" starttimestamp="1700582044267" timestamp="13550906" />
  <Command __id="7050" _type="MoveCaretCommand" caretOffset="392" date="Tue Nov 21 14:39:58 EST 2023" docOffset="392" starttimestamp="1700582044267" timestamp="13553844" />
  <Command __id="7051" _type="MoveCaretCommand" caretOffset="508" date="Tue Nov 21 14:39:59 EST 2023" docOffset="508" starttimestamp="1700582044267" timestamp="13555468" />
  <Command __id="7052" _type="SelectTextCommand" caretOffset="507" date="Tue Nov 21 14:39:59 EST 2023" end="507" start="329" starttimestamp="1700582044267" timestamp="13555663" />
  <DocumentChange __id="6772" _type="Insert" date="Tue Nov 21 14:38:37 EST 2023" docASTNodeCount="73" docActiveCodeLength="449" docExpressionCount="55" docLength="449" length="1" offset="441" starttimestamp="1700582044267" timestamp="13473294">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="6892" _type="Insert" date="Tue Nov 21 14:39:01 EST 2023" docASTNodeCount="75" docActiveCodeLength="457" docExpressionCount="56" docLength="457" length="8" offset="329" repeat="6" starttimestamp="1700582044267" timestamp="13496737" timestamp2="13497729">
    <text><![CDATA[
		expr-]]></text>
  </DocumentChange>
  <DocumentChange __id="6904" _type="Delete" date="Tue Nov 21 14:39:02 EST 2023" docASTNodeCount="75" docActiveCodeLength="456" docExpressionCount="56" docLength="456" endLine="11" length="1" offset="336" startLine="11" starttimestamp="1700582044267" timestamp="13498041">
    <text><![CDATA[-]]></text>
  </DocumentChange>
  <DocumentChange __id="6906" _type="Insert" date="Tue Nov 21 14:39:02 EST 2023" docASTNodeCount="79" docActiveCodeLength="468" docExpressionCount="60" docLength="468" length="12" offset="336" repeat="12" starttimestamp="1700582044267" timestamp="13498168" timestamp2="13500093">
    <text><![CDATA[ = expr.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="6928" _type="Replace" date="Tue Nov 21 14:39:04 EST 2023" docASTNodeCount="79" docActiveCodeLength="473" docExpressionCount="60" docLength="473" endLine="11" insertionLength="9" int_docASTNodeCount="77" int_docActiveCodeLength="464" int_docExpressionCount="59" int_docLength="464" length="4" offset="344" startLine="11" starttimestamp="1700582044267" timestamp="13500337">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6930" _type="Insert" date="Tue Nov 21 14:39:04 EST 2023" docASTNodeCount="79" docActiveCodeLength="474" docExpressionCount="60" docLength="474" length="1" offset="353" starttimestamp="1700582044267" timestamp="13500564">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="6965" _type="Insert" date="Tue Nov 21 14:39:21 EST 2023" docASTNodeCount="83" docActiveCodeLength="487" docExpressionCount="63" docLength="487" length="13" offset="354" repeat="11" starttimestamp="1700582044267" timestamp="13516805" timestamp2="13518337">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="6986" _type="Replace" date="Tue Nov 21 14:39:22 EST 2023" docASTNodeCount="83" docActiveCodeLength="488" docExpressionCount="64" docLength="488" endLine="12" insertionLength="4" int_docASTNodeCount="81" int_docActiveCodeLength="484" int_docExpressionCount="62" int_docLength="484" length="3" offset="364" startLine="12" starttimestamp="1700582044267" timestamp="13518616">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6989" _type="Insert" date="Tue Nov 21 14:39:23 EST 2023" docASTNodeCount="85" docActiveCodeLength="489" docExpressionCount="65" docLength="489" length="1" offset="368" starttimestamp="1700582044267" timestamp="13518846">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="6990" _type="Delete" date="Tue Nov 21 14:39:23 EST 2023" docASTNodeCount="83" docActiveCodeLength="488" docExpressionCount="64" docLength="488" endLine="12" length="1" offset="368" startLine="12" starttimestamp="1700582044267" timestamp="13519219">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="6991" _type="Insert" date="Tue Nov 21 14:39:23 EST 2023" docASTNodeCount="88" docActiveCodeLength="512" docExpressionCount="68" docLength="512" length="24" offset="368" repeat="22" starttimestamp="1700582044267" timestamp="13519409" timestamp2="13525076">
    <text><![CDATA[println(expr.getHead());]]></text>
  </DocumentChange>
  <Command __id="7053" _type="MoveCaretCommand" caretOffset="490" date="Tue Nov 21 14:40:01 EST 2023" docOffset="490" starttimestamp="1700582044267" timestamp="13557000" />
  <DocumentChange __id="7054" _type="Insert" date="Tue Nov 21 14:40:02 EST 2023" docASTNodeCount="89" docActiveCodeLength="513" docExpressionCount="69" docLength="513" length="1" offset="490" starttimestamp="1700582044267" timestamp="13558405">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="7055" _type="InsertStringCommand" date="Tue Nov 21 14:40:02 EST 2023" starttimestamp="1700582044267" timestamp="13558408" timestamp2="13558408">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7056" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:40:02 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13558425" />
  <Command __id="7058" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:40:07 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13563398" />
  <Command __id="7059" _type="MoveCaretCommand" caretOffset="354" date="Tue Nov 21 14:40:07 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13563408" />
  <Command __id="7060" _type="MoveCaretCommand" caretOffset="489" date="Tue Nov 21 14:40:11 EST 2023" docOffset="489" starttimestamp="1700582044267" timestamp="13566896" />
  <Command __id="7061" _type="SelectTextCommand" caretOffset="490" date="Tue Nov 21 14:40:11 EST 2023" end="490" start="486" starttimestamp="1700582044267" timestamp="13567065" />
  <Command __id="7062" _type="MoveCaretCommand" caretOffset="354" date="Tue Nov 21 14:40:12 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13568096" />
  <Command __id="7063" _type="MoveCaretCommand" caretOffset="508" date="Tue Nov 21 14:40:12 EST 2023" docOffset="508" starttimestamp="1700582044267" timestamp="13568662" />
  <Command __id="7064" _type="MoveCaretCommand" caretOffset="487" date="Tue Nov 21 14:40:13 EST 2023" docOffset="487" starttimestamp="1700582044267" timestamp="13569592" />
  <Command __id="7065" _type="SelectTextCommand" caretOffset="490" date="Tue Nov 21 14:40:14 EST 2023" end="490" start="486" starttimestamp="1700582044267" timestamp="13569769" />
  <Command __id="7066" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:40:37 EST 2023" starttimestamp="1700582044267" timestamp="13593146" />
  <Command __id="7067" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:40:37 EST 2023" starttimestamp="1700582044267" timestamp="13593244" />
  <Command __id="7068" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:40:37 EST 2023" starttimestamp="1700582044267" timestamp="13593250" />
  <Command __id="7069" _type="MoveCaretCommand" caretOffset="512" date="Tue Nov 21 14:40:38 EST 2023" docOffset="512" starttimestamp="1700582044267" timestamp="13594599" />
  <Command __id="7080" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:40:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13603263" type="Run" />
  <Command __id="7081" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:40:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13603263" type="Run" />
  <Command __id="7082" _type="ShellCommand" date="Tue Nov 21 14:40:47 EST 2023" starttimestamp="1700582044267" timestamp="13603550" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7083" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613488" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7084" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613489" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7085" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613493" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7086" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613493" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7087" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613494" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7088" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613495" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7089" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613511" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7090" _type="ExceptionCommand" date="Tue Nov 21 14:40:57 EST 2023" starttimestamp="1700582044267" timestamp="13613512" type="Exception">
    <exceptionString><![CDATA[(2 . 3)
(5)
(1 2)
(3 4)
(QUOTE (+ 1 2))
java.lang.NullPointerException
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:36)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="7091" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613514" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7092" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613515" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at gradingTools.comp524f19.assignment1.testcases."), Diff(INSERT,"load."), Diff(EQUAL,"Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.test(Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.java:4"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶"), Diff(DELETE,""), Diff(EQUAL,"	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶"), Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶")]]]></diff>
  </Command>
  <Command __id="7093" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613561" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at org.junit.runners."), Diff(DELETE,"BlockJUnit4ClassRunner.runChild(BlockJUnit4Class"), Diff(INSERT,"ParentRunner.runChildren(Parent"), Diff(EQUAL,"Runner.java:"), Diff(DELETE,"7"), Diff(INSERT,"28"), Diff(EQUAL,"8)¶	at org.junit.runners."), Diff(DELETE,"BlockJUnit4ClassRunner.runChild(BlockJUnit4Class"), Diff(INSERT,"ParentRunner.access$000(Parent"), Diff(EQUAL,"Runner.java:5"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at org.junit.runners.ParentRunner$"), Diff(DELETE,"3.run"), Diff(INSERT,"2.evaluate"), Diff(EQUAL,"(ParentRunner.java:2"), Diff(DELETE,"90"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at org.junit.runners.ParentRunner"), Diff(DELETE,"$1.schedule"), Diff(INSERT,".run"), Diff(EQUAL,"(ParentRunner.java:"), Diff(DELETE,"71"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"191"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(INSERT,"6"), Diff(EQUAL,"2"), Diff(DELETE,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"4"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"52"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"43"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallabl"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"12"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"32"), Diff(INSERT,"74"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"8"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(INSERT,"8"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"203"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7094" _type="ConsoleOutput" date="Tue Nov 21 14:40:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13613591" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):31
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):32
Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)"), Diff(INSERT,"¶Test execution time (ms):31¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):32¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7095" _type="ShellCommand" date="Tue Nov 21 14:41:04 EST 2023" starttimestamp="1700582044267" timestamp="13620469" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7096" _type="LocalChecksRawCommand" date="Tue Nov 21 14:41:04 EST 2023" starttimestamp="1700582044267" timestamp="13620471">
    <CSVRow><![CDATA[239,Tue Nov 21 14:40:57 EST 2023,42,0,EvalTestedChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,134,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,EvalTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7097" _type="LocalChecksRawCommand" date="Tue Nov 21 14:41:04 EST 2023" starttimestamp="1700582044267" timestamp="13620471">
    <CSVRow><![CDATA[239,Tue Nov 21 14:40:57 EST 2023,42,0,EvalTestedChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,134,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,EvalTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7098" _type="ShellCommand" date="Tue Nov 21 14:41:04 EST 2023" starttimestamp="1700582044267" timestamp="13620651" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7099" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:41:05 EST 2023" starttimestamp="1700582044267" timestamp="13620902" />
  <Command __id="7100" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:41:05 EST 2023" starttimestamp="1700582044267" timestamp="13620908" />
  <Command __id="7101" _type="ShellCommand" date="Tue Nov 21 14:41:06 EST 2023" starttimestamp="1700582044267" timestamp="13622384" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7102" _type="ShellCommand" date="Tue Nov 21 14:41:07 EST 2023" starttimestamp="1700582044267" timestamp="13623408" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7103" _type="ShellCommand" date="Tue Nov 21 14:41:11 EST 2023" starttimestamp="1700582044267" timestamp="13626985" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7104" _type="ShellCommand" date="Tue Nov 21 14:41:15 EST 2023" starttimestamp="1700582044267" timestamp="13631563" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7105" _type="ShellCommand" date="Tue Nov 21 14:41:17 EST 2023" starttimestamp="1700582044267" timestamp="13633077" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7106" _type="MoveCaretCommand" caretOffset="390" date="Tue Nov 21 14:41:31 EST 2023" docOffset="390" starttimestamp="1700582044267" timestamp="13647332" />
  <Command __id="7107" _type="ShellCommand" date="Tue Nov 21 14:41:32 EST 2023" starttimestamp="1700582044267" timestamp="13648112" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7108" _type="ShellCommand" date="Tue Nov 21 14:41:32 EST 2023" starttimestamp="1700582044267" timestamp="13648636" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7109" _type="MoveCaretCommand" caretOffset="391" date="Tue Nov 21 14:41:36 EST 2023" docOffset="391" starttimestamp="1700582044267" timestamp="13652498" />
  <Command __id="7110" _type="MoveCaretCommand" caretOffset="390" date="Tue Nov 21 14:41:37 EST 2023" docOffset="390" starttimestamp="1700582044267" timestamp="13652925" />
  <Command __id="7112" _type="InsertStringCommand" date="Tue Nov 21 14:41:38 EST 2023" starttimestamp="1700582044267" timestamp="13653781" timestamp2="13653781">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7113" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:41:38 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13653799" />
  <Command __id="7121" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:41:39 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13655130" />
  <Command __id="7123" _type="InsertStringCommand" date="Tue Nov 21 14:41:39 EST 2023" starttimestamp="1700582044267" timestamp="13655139" timestamp2="13655139">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7124" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:41:40 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="13656240" />
  <Command __id="7125" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:41:40 EST 2023" starttimestamp="1700582044267" timestamp="13656355" />
  <Command __id="7126" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:41:40 EST 2023" starttimestamp="1700582044267" timestamp="13656452" />
  <Command __id="7127" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:41:40 EST 2023" starttimestamp="1700582044267" timestamp="13656459" />
  <Command __id="7128" _type="ShellCommand" date="Tue Nov 21 14:41:41 EST 2023" starttimestamp="1700582044267" timestamp="13657178" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7132" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:41:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13660819" type="Run" />
  <Command __id="7133" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:41:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13660819" type="Run" />
  <Command __id="7134" _type="ShellCommand" date="Tue Nov 21 14:41:45 EST 2023" starttimestamp="1700582044267" timestamp="13661105" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7135" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666514" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"31¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):32¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7136" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666515" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7137" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666520" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7138" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666521" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7139" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666521" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7140" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666522" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7141" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666538" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7142" _type="ExceptionCommand" date="Tue Nov 21 14:41:50 EST 2023" starttimestamp="1700582044267" timestamp="13666540" type="Exception">
    <exceptionString><![CDATA[(2 . 3)
(5)
(1 2)
(3 4)
QUOTE
java.lang.NullPointerException
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:36)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="7143" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666541" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7144" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666541" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶")]]]></diff>
  </Command>
  <Command __id="7145" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666542" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶"), Diff(DELETE,"	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶")]]]></diff>
  </Command>
  <Command __id="7146" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666542" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner."), Diff(DELETE,"runLeaf"), Diff(INSERT,"access$000"), Diff(EQUAL,"(ParentRunner.java:"), Diff(DELETE,"32"), Diff(EQUAL,"5"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at org.junit.runners."), Diff(DELETE,"BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4Class"), Diff(INSERT,"ParentRunner$2.evaluate(Parent"), Diff(EQUAL,"Runner.java:"), Diff(DELETE,"57"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at org.junit.runners.ParentRunner"), Diff(DELETE,"$3"), Diff(EQUAL,".run(ParentRunner.java:"), Diff(DELETE,"290"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"317"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7147" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666546" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:5"), Diff(DELETE,"8"), Diff(INSERT,"66"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"268"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7148" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666565" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"219"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1"), Diff(EQUAL,"44"), Diff(DELETE,"4"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryU"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Wi"), Diff(EQUAL,"ndo"), Diff(DELETE,"er"), Diff(INSERT,"w"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"1906"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"15"), Diff(EQUAL,"85)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1538"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1531"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1406"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1357"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"469"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component"), Diff(INSERT,"EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"6638"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java"), Diff(DELETE,"x.swing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,".awt.EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"3342"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7149" _type="ConsoleOutput" date="Tue Nov 21 14:41:50 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13666586" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):32
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):34
Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Test execution time (ms):32¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):34¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7150" _type="ShellCommand" date="Tue Nov 21 14:41:55 EST 2023" starttimestamp="1700582044267" timestamp="13671136" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7151" _type="MoveCaretCommand" caretOffset="354" date="Tue Nov 21 14:41:55 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13671215" />
  <Command __id="7152" _type="MoveCaretCommand" caretOffset="397" date="Tue Nov 21 14:41:56 EST 2023" docOffset="397" starttimestamp="1700582044267" timestamp="13672708" />
  <Command __id="7153" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 14:41:57 EST 2023" docOffset="400" starttimestamp="1700582044267" timestamp="13673199" />
  <Command __id="7154" _type="SelectTextCommand" caretOffset="390" date="Tue Nov 21 14:42:08 EST 2023" end="400" start="390" starttimestamp="1700582044267" timestamp="13684516" />
  <Command __id="7156" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:42:09 EST 2023" starttimestamp="1700582044267" timestamp="13684861" />
  <Command __id="7157" _type="MoveCaretCommand" caretOffset="468" date="Tue Nov 21 14:42:13 EST 2023" docOffset="468" starttimestamp="1700582044267" timestamp="13689070" />
  <Command __id="7158" _type="MoveCaretCommand" caretOffset="469" date="Tue Nov 21 14:42:14 EST 2023" docOffset="469" starttimestamp="1700582044267" timestamp="13690196" />
  <Command __id="7159" _type="LocalChecksRawCommand" date="Tue Nov 21 14:42:14 EST 2023" starttimestamp="1700582044267" timestamp="13690201">
    <CSVRow><![CDATA[240,Tue Nov 21 14:41:50 EST 2023,42,0,EvalTestedChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,135,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,EvalTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7160" _type="LocalChecksRawCommand" date="Tue Nov 21 14:42:14 EST 2023" starttimestamp="1700582044267" timestamp="13690201">
    <CSVRow><![CDATA[240,Tue Nov 21 14:41:50 EST 2023,42,0,EvalTestedChecker,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ConsTestedChecker ConsTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,135,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,EvalTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7162" _type="InsertStringCommand" date="Tue Nov 21 14:42:14 EST 2023" starttimestamp="1700582044267" timestamp="13690719" timestamp2="13690719">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7164" _type="InsertStringCommand" date="Tue Nov 21 14:42:15 EST 2023" starttimestamp="1700582044267" timestamp="13690838" timestamp2="13690838">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7166" _type="InsertStringCommand" date="Tue Nov 21 14:42:15 EST 2023" starttimestamp="1700582044267" timestamp="13690969" timestamp2="13690969">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7168" _type="InsertStringCommand" date="Tue Nov 21 14:42:15 EST 2023" starttimestamp="1700582044267" timestamp="13691425" timestamp2="13691425">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7170" _type="InsertStringCommand" date="Tue Nov 21 14:42:15 EST 2023" starttimestamp="1700582044267" timestamp="13691565" timestamp2="13691565">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7172" _type="InsertStringCommand" date="Tue Nov 21 14:42:15 EST 2023" starttimestamp="1700582044267" timestamp="13691697" timestamp2="13691697">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7174" _type="InsertStringCommand" date="Tue Nov 21 14:42:16 EST 2023" starttimestamp="1700582044267" timestamp="13691804" timestamp2="13691804">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7176" _type="InsertStringCommand" date="Tue Nov 21 14:42:16 EST 2023" starttimestamp="1700582044267" timestamp="13692045" timestamp2="13692045">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7178" _type="InsertStringCommand" date="Tue Nov 21 14:42:16 EST 2023" starttimestamp="1700582044267" timestamp="13692103" timestamp2="13692103">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="7180" _type="InsertStringCommand" date="Tue Nov 21 14:42:16 EST 2023" starttimestamp="1700582044267" timestamp="13692372" timestamp2="13692372">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7181" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:42:16 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13692379" />
  <Command __id="7182" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:42:18 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13694068" />
  <Command __id="7183" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:42:18 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="13694129" />
  <Command __id="7184" _type="SelectTextCommand" caretOffset="513" date="Tue Nov 21 14:42:18 EST 2023" end="513" start="501" starttimestamp="1700582044267" timestamp="13694600" />
  <Command __id="7185" _type="MoveCaretCommand" caretOffset="500" date="Tue Nov 21 14:42:19 EST 2023" docOffset="500" starttimestamp="1700582044267" timestamp="13695158" />
  <Command __id="7187" _type="InsertStringCommand" date="Tue Nov 21 14:42:19 EST 2023" starttimestamp="1700582044267" timestamp="13695579" timestamp2="13695579">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7188" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:42:19 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13695587" />
  <Command __id="7197" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:42:21 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13697588" />
  <Command __id="7198" _type="MoveCaretCommand" caretOffset="329" date="Tue Nov 21 14:42:21 EST 2023" docOffset="329" starttimestamp="1700582044267" timestamp="13697621" />
  <Command __id="7199" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:42:23 EST 2023" starttimestamp="1700582044267" timestamp="13698887" />
  <Command __id="7200" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:42:23 EST 2023" starttimestamp="1700582044267" timestamp="13698984" />
  <Command __id="7201" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:42:23 EST 2023" starttimestamp="1700582044267" timestamp="13698991" />
  <Command __id="7206" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:42:26 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13701886" type="Run" />
  <Command __id="7207" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:42:26 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13701886" type="Run" />
  <Command __id="7208" _type="ShellCommand" date="Tue Nov 21 14:42:26 EST 2023" starttimestamp="1700582044267" timestamp="13702172" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7209" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704471" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"32¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string (3 4)¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):34¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7210" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704474" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7211" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704477" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7212" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704477" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7213" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704478" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7214" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704479" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7215" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704494" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7216" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704496" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(1 2)
(3 4)
(QUOTE (+ 1 2))
((+ 1 2))
(QUOTE (+ 3 4))
((+ 3 4))
2
3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(1 2)¶(3 4)¶(QUOTE (+ 1 2))¶((+ 1 2))¶(QUOTE (+ 3 4))¶((+ 3 4))¶2¶3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7217" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704498" type="ConsoleOutput">
    <outputString><![CDATA[1
NIL
NIL
T
T
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(1 2)¶(3 4)¶(QUOTE (+ 1 2))¶((+ 1 2))¶(QUOTE (+ 3 4))¶((+ 3 4))¶2"), Diff(INSERT,"1¶NIL¶NIL¶T¶T¶NIL¶NIL"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7218" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704498" type="ConsoleOutput">
    <outputString><![CDATA[T
NIL
2
4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1¶NIL¶NIL¶T¶"), Diff(EQUAL,"T¶NIL¶"), Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7219" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704498" type="ConsoleOutput">
    <outputString><![CDATA[NIL
1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶"), Diff(EQUAL,"NIL¶"), Diff(DELETE,"2¶4"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7220" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704498" type="ConsoleOutput">
    <outputString><![CDATA[NIL
2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7221" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704498" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶"), Diff(DELETE,"2¶")]]]></diff>
  </Command>
  <Command __id="7222" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704499" type="ConsoleOutput">
    <outputString><![CDATA[T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7223" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704502" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):29
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T"), Diff(INSERT,"est execution time (ms):29"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7224" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704502" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):29"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7225" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704503" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7226" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704504" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7227" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704504" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7228" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704508" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7229" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704509" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"QuoteTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="7230" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704510" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7231" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704511" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7232" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704511" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7233" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704513" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7234" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704513" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7235" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704514" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7236" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704514" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7237" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704515" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7238" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704516" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7239" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704517" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7240" _type="ConsoleOutput" date="Tue Nov 21 14:42:28 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13704519" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Cond"), Diff(EQUAL,"Tested"), Diff(DELETE,"Two"), Diff(EQUAL,"ResultsChecker,100.0% complete,"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"0.0,"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"0.0,¶")]]]></diff>
  </Command>
  <Command __id="7241" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706177" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
Test execution time (ms):5
Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5 . 2)¶(5 . 2)¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"CondTestedResults"), Diff(INSERT,"BaseCaseSExpressionToString"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="7242" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706180" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(5"), Diff(DELETE," . 2"), Diff(EQUAL,")¶(5"), Diff(DELETE," . 2)¶Test execution time (ms):5¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,")¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7243" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706180" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7244" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706181" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7245" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706186" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):3
Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):3¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"BaseCase"), Diff(EQUAL,"ListToStringChecker"), Diff(INSERT,"Basic"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶")]]]></diff>
  </Command>
  <Command __id="7246" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706188" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (LIST 1 (AND T T)))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"QUOTE (LIST 1 (AND T T)))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7247" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706189" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"QUOTE "), Diff(INSERT,""a" (1 . 2) ("), Diff(EQUAL,"(LIST 1 (AND T T)))"), Diff(INSERT,")"), Diff(EQUAL,"¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶")]]]></diff>
  </Command>
  <Command __id="7248" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706190" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7249" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706191" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7250" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706193" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) ((LIST 1 (AND T T))"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="7251" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706195" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7252" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706196" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (LIST 1 (AND T T)))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2¶Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(INSERT,"(QUOTE (LIST 1 (AND T T)))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7253" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706196" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))
("a" (1 . 2) ((LIST 1 (AND T T))))

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"QUOTE "), Diff(INSERT,""a" (1 . 2) ("), Diff(EQUAL,"(LIST 1 (AND T T)))"), Diff(INSERT,")"), Diff(EQUAL,"¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶("a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"¶Test execution time (ms):2¶")]]]></diff>
  </Command>
  <Command __id="7254" _type="ConsoleOutput" date="Tue Nov 21 14:42:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13706198" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL)))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:"), Diff(EQUAL,"("a" "), Diff(INSERT,". ("), Diff(EQUAL,"(1 . 2) "), Diff(DELETE,"((LIST 1 (AND T T))))¶"), Diff(INSERT,". ((1 . (T . NIL)) . NIL)))actual string "), Diff(EQUAL,"("a" "), Diff(INSERT,". ("), Diff(EQUAL,"(1 . 2) "), Diff(INSERT,". ("), Diff(EQUAL,"((LIST "), Diff(DELETE,"1 (AND T T))))¶("a""), Diff(INSERT,". (1 . ((AND ."), Diff(EQUAL," ("), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL," . "), Diff(DELETE,"2) ((LIST 1 (AND T T))))¶¶Test execution time (ms):2"), Diff(INSERT,"(T . NIL))) . NIL))) . NIL) . NIL)))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7255" _type="ShellCommand" date="Tue Nov 21 14:42:49 EST 2023" starttimestamp="1700582044267" timestamp="13724870" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7256" _type="MoveCaretCommand" caretOffset="421" date="Tue Nov 21 14:42:49 EST 2023" docOffset="421" starttimestamp="1700582044267" timestamp="13724965" />
  <Command __id="7257" _type="MoveCaretCommand" caretOffset="353" date="Tue Nov 21 14:42:53 EST 2023" docOffset="353" starttimestamp="1700582044267" timestamp="13729728" />
  <Command __id="7259" _type="InsertStringCommand" date="Tue Nov 21 14:42:54 EST 2023" starttimestamp="1700582044267" timestamp="13730311" timestamp2="13730311">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:42:55 EST 2023" starttimestamp="1700582044267" timestamp="13730853" />
  <Command __id="7263" _type="InsertStringCommand" date="Tue Nov 21 14:42:55 EST 2023" starttimestamp="1700582044267" timestamp="13731093" timestamp2="13731093">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7264" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:42:55 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13731099" />
  <Command __id="7273" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:42:57 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13733616" />
  <Command __id="7274" _type="LocalChecksRawCommand" date="Tue Nov 21 14:42:57 EST 2023" starttimestamp="1700582044267" timestamp="13733619">
    <CSVRow><![CDATA[242,Tue Nov 21 14:42:30 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,136,1,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7275" _type="LocalChecksRawCommand" date="Tue Nov 21 14:42:57 EST 2023" starttimestamp="1700582044267" timestamp="13733619">
    <CSVRow><![CDATA[242,Tue Nov 21 14:42:30 EST 2023,54,0,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,136,1,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7276" _type="MoveCaretCommand" caretOffset="541" date="Tue Nov 21 14:42:57 EST 2023" docOffset="541" starttimestamp="1700582044267" timestamp="13733665" />
  <Command __id="7277" _type="MoveCaretCommand" caretOffset="402" date="Tue Nov 21 14:42:59 EST 2023" docOffset="402" starttimestamp="1700582044267" timestamp="13734786" />
  <Command __id="7278" _type="MoveCaretCommand" caretOffset="363" date="Tue Nov 21 14:43:00 EST 2023" docOffset="363" starttimestamp="1700582044267" timestamp="13736279" />
  <Command __id="7279" _type="MoveCaretCommand" caretOffset="364" date="Tue Nov 21 14:43:01 EST 2023" docOffset="364" starttimestamp="1700582044267" timestamp="13737729" />
  <Command __id="7280" _type="MoveCaretCommand" caretOffset="540" date="Tue Nov 21 14:43:02 EST 2023" docOffset="540" starttimestamp="1700582044267" timestamp="13738191" />
  <Command __id="7281" _type="ShellCommand" date="Tue Nov 21 14:43:04 EST 2023" starttimestamp="1700582044267" timestamp="13740151" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7282" _type="ShellCommand" date="Tue Nov 21 14:43:04 EST 2023" starttimestamp="1700582044267" timestamp="13740333" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7283" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:43:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13740347" type="Run" />
  <Command __id="7284" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:43:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13740347" type="Run" />
  <Command __id="7285" _type="MoveCaretCommand" caretOffset="541" date="Tue Nov 21 14:43:04 EST 2023" docOffset="541" starttimestamp="1700582044267" timestamp="13740691" />
  <Command __id="7286" _type="MoveCaretCommand" caretOffset="400" date="Tue Nov 21 14:43:05 EST 2023" docOffset="400" starttimestamp="1700582044267" timestamp="13741582" />
  <Command __id="7287" _type="MoveCaretCommand" caretOffset="435" date="Tue Nov 21 14:43:09 EST 2023" docOffset="435" starttimestamp="1700582044267" timestamp="13745320" />
  <Command __id="7288" _type="MoveCaretCommand" caretOffset="364" date="Tue Nov 21 14:43:10 EST 2023" docOffset="364" starttimestamp="1700582044267" timestamp="13746506" />
  <Command __id="7289" _type="MoveCaretCommand" caretOffset="442" date="Tue Nov 21 14:43:11 EST 2023" docOffset="442" starttimestamp="1700582044267" timestamp="13747131" />
  <Command __id="7290" _type="SelectTextCommand" caretOffset="478" date="Tue Nov 21 14:43:14 EST 2023" end="488" start="478" starttimestamp="1700582044267" timestamp="13750389" />
  <Command __id="7292" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:43:14 EST 2023" starttimestamp="1700582044267" timestamp="13750650" />
  <Command __id="7293" _type="SelectTextCommand" caretOffset="500" date="Tue Nov 21 14:43:17 EST 2023" end="510" start="500" starttimestamp="1700582044267" timestamp="13752927" />
  <Command __id="7295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:43:17 EST 2023" starttimestamp="1700582044267" timestamp="13753071" />
  <Command __id="7296" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:43:17 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="13753511" />
  <Command __id="7301" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:43:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13760458" type="Run" />
  <Command __id="7302" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:43:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13760458" type="Run" />
  <Command __id="7303" _type="ShellCommand" date="Tue Nov 21 14:43:25 EST 2023" starttimestamp="1700582044267" timestamp="13760751" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7304" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765874" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL)))"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7305" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765875" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7306" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765881" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="7307" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765882" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="7308" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765899" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7309" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765902" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(1 2)
(3 4)
QUOTE
((+ 1 2))
QUOTE
((+ 3 4))
2
3
1
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(1 2)¶(3 4)¶QUOTE¶((+ 1 2))¶QUOTE¶((+ 3 4))¶2¶3¶1¶NIL¶NIL¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7310" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765902" type="ConsoleOutput">
    <outputString><![CDATA[T
NIL
NIL
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(1 2)¶(3 4)¶QUOTE¶((+ 1 2))¶QUOTE¶((+ 3 4))¶2¶3¶1"), Diff(INSERT,"T"), Diff(EQUAL,"¶NIL¶NIL¶T¶")]]]></diff>
  </Command>
  <Command __id="7311" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶"), Diff(DELETE,"NIL¶NIL¶T¶")]]]></diff>
  </Command>
  <Command __id="7312" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7313" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7314" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7315" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"4"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7316" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7317" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7318" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7319" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7320" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765903" type="ConsoleOutput">
    <outputString><![CDATA[T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7321" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765907" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T"), Diff(INSERT,"est execution time (ms):31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7322" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765907" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):31"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7323" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765907" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7324" _type="ConsoleOutput" date="Tue Nov 21 14:43:30 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13765910" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7330" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:44:02 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13798679" type="Run" />
  <Command __id="7331" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 14:44:02 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13798679" type="Run" />
  <Command __id="7332" _type="ShellCommand" date="Tue Nov 21 14:44:03 EST 2023" starttimestamp="1700582044267" timestamp="13799396" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7333" _type="MoveCaretCommand" caretOffset="55" date="Tue Nov 21 14:44:05 EST 2023" docOffset="55" starttimestamp="1700582044267" timestamp="13800946" />
  <Command __id="7335" _type="MoveCaretCommand" caretOffset="305" date="Tue Nov 21 14:44:06 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13801813" />
  <Command __id="7336" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 14:44:08 EST 2023" starttimestamp="1700582044267" timestamp="13803794" />
  <Command __id="7337" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:44:08 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13803936" type="Run" />
  <Command __id="7338" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:44:08 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13803936" type="Run" />
  <Command __id="7339" _type="PasteCommand" date="Tue Nov 21 14:44:10 EST 2023" starttimestamp="1700582044267" timestamp="13806266" />
  <Command __id="7340" _type="ConsoleOutput" date="Tue Nov 21 14:44:10 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13806619" type="ConsoleOutput">
    <outputString><![CDATA[QUOTE
((CONS “ONE” 1))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"QUOTE¶((CONS “ONE” 1))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7341" _type="ShellCommand" date="Tue Nov 21 14:44:13 EST 2023" starttimestamp="1700582044267" timestamp="13809222" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7342" _type="ShellCommand" date="Tue Nov 21 14:44:14 EST 2023" starttimestamp="1700582044267" timestamp="13810615" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="7057" _type="Delete" date="Tue Nov 21 14:40:05 EST 2023" docASTNodeCount="88" docActiveCodeLength="512" docExpressionCount="68" docLength="512" endLine="13" length="1" offset="490" startLine="13" starttimestamp="1700582044267" timestamp="13561623">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="7074" _type="Delete" date="Tue Nov 21 14:40:43 EST 2023" docASTNodeCount="88" docActiveCodeLength="511" docExpressionCount="68" docLength="511" endLine="15" length="1" offset="508" startLine="14" starttimestamp="1700582044267" timestamp="13598822">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="7111" _type="Insert" date="Tue Nov 21 14:41:38 EST 2023" docASTNodeCount="90" docActiveCodeLength="519" docExpressionCount="70" docLength="519" length="8" offset="390" repeat="8" starttimestamp="1700582044267" timestamp="13653779" timestamp2="13654999">
    <text><![CDATA[.getHead]]></text>
  </DocumentChange>
  <DocumentChange __id="7122" _type="Replace" date="Tue Nov 21 14:41:39 EST 2023" docASTNodeCount="90" docActiveCodeLength="521" docExpressionCount="70" docLength="521" endLine="12" insertionLength="9" int_docASTNodeCount="90" int_docActiveCodeLength="512" int_docExpressionCount="70" int_docLength="512" length="7" offset="391" startLine="12" starttimestamp="1700582044267" timestamp="13655132">
    <deletedText><![CDATA[getHead]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7155" _type="Delete" date="Tue Nov 21 14:42:09 EST 2023" docASTNodeCount="88" docActiveCodeLength="511" docExpressionCount="68" docLength="511" endLine="12" length="10" offset="390" startLine="12" starttimestamp="1700582044267" timestamp="13684852">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="7161" _type="Insert" date="Tue Nov 21 14:42:14 EST 2023" docASTNodeCount="90" docActiveCodeLength="521" docExpressionCount="70" docLength="521" length="10" offset="469" repeat="10" starttimestamp="1700582044267" timestamp="13690715" timestamp2="13692368">
    <text><![CDATA[getHead().]]></text>
  </DocumentChange>
  <DocumentChange __id="7186" _type="Insert" date="Tue Nov 21 14:42:19 EST 2023" docASTNodeCount="92" docActiveCodeLength="531" docExpressionCount="72" docLength="531" length="10" offset="500" repeat="9" starttimestamp="1700582044267" timestamp="13695575" timestamp2="13697013">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="7258" _type="Insert" date="Tue Nov 21 14:42:54 EST 2023" docASTNodeCount="92" docActiveCodeLength="532" docExpressionCount="72" docLength="532" length="1" offset="353" starttimestamp="1700582044267" timestamp="13730309">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="7260" _type="Delete" date="Tue Nov 21 14:42:55 EST 2023" docASTNodeCount="92" docActiveCodeLength="531" docExpressionCount="72" docLength="531" endLine="11" length="1" offset="353" startLine="11" starttimestamp="1700582044267" timestamp="13730850">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="7262" _type="Insert" date="Tue Nov 21 14:42:55 EST 2023" docASTNodeCount="94" docActiveCodeLength="541" docExpressionCount="74" docLength="541" length="10" offset="353" repeat="9" starttimestamp="1700582044267" timestamp="13731090" timestamp2="13732433">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="7291" _type="Delete" date="Tue Nov 21 14:43:14 EST 2023" docASTNodeCount="92" docActiveCodeLength="531" docExpressionCount="72" docLength="531" endLine="13" length="10" offset="478" startLine="13" starttimestamp="1700582044267" timestamp="13750645">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="7294" _type="Delete" date="Tue Nov 21 14:43:17 EST 2023" docASTNodeCount="90" docActiveCodeLength="521" docExpressionCount="70" docLength="521" endLine="13" length="10" offset="500" startLine="13" starttimestamp="1700582044267" timestamp="13753065">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <Command __id="7334" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:44:05 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13801730">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7343" _type="ShellCommand" date="Tue Nov 21 14:44:16 EST 2023" starttimestamp="1700582044267" timestamp="13811785" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7344" _type="ShellCommand" date="Tue Nov 21 14:44:16 EST 2023" starttimestamp="1700582044267" timestamp="13812537" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7345" _type="ShellCommand" date="Tue Nov 21 14:44:17 EST 2023" starttimestamp="1700582044267" timestamp="13812939" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7346" _type="ShellCommand" date="Tue Nov 21 14:44:17 EST 2023" starttimestamp="1700582044267" timestamp="13813322" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7347" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 14:44:18 EST 2023" docOffset="361" starttimestamp="1700582044267" timestamp="13814254" />
  <Command __id="7348" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:44:19 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13815446">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7349" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:44:19 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="13815523" />
  <Command __id="7350" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:44:22 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13818073">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7351" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 14:44:22 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="13818167" />
  <Command __id="7353" _type="MoveCaretCommand" caretOffset="55" date="Tue Nov 21 14:44:23 EST 2023" docOffset="55" starttimestamp="1700582044267" timestamp="13819557" />
  <Command __id="7354" _type="SelectTextCommand" caretOffset="353" date="Tue Nov 21 14:44:36 EST 2023" end="363" start="353" starttimestamp="1700582044267" timestamp="13832439" />
  <Command __id="7355" _type="MoveCaretCommand" caretOffset="520" date="Tue Nov 21 14:44:54 EST 2023" docOffset="520" starttimestamp="1700582044267" timestamp="13850693" />
  <Command __id="7356" _type="MoveCaretCommand" caretOffset="521" date="Tue Nov 21 14:45:01 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="13856762" />
  <Command __id="7352" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:44:23 EST 2023" docASTNodeCount="90" docActiveCodeLength="521" docExpressionCount="70" docLength="521" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13819483">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;"), Diff(INSERT,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(DELETE,"return expr.getTail().eval("), Diff(INSERT,"expr = expr.getTail().getHead();		System.out.println(expr.getHead());		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, "), Diff(EQUAL,"environment);	}"), Diff(DELETE,""), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail().getHead();
		System.out.println(expr.getHead());
		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="7357" _type="SelectTextCommand" caretOffset="353" date="Tue Nov 21 14:45:05 EST 2023" end="363" start="353" starttimestamp="1700582044267" timestamp="13861338" />
  <Command __id="7359" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:45:07 EST 2023" starttimestamp="1700582044267" timestamp="13862778" />
  <DocumentChange __id="7358" _type="Delete" date="Tue Nov 21 14:45:07 EST 2023" docASTNodeCount="88" docActiveCodeLength="511" docExpressionCount="68" docLength="511" endLine="11" length="10" offset="353" startLine="11" starttimestamp="1700582044267" timestamp="13862770">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <Command __id="7360" _type="MoveCaretCommand" caretOffset="468" date="Tue Nov 21 14:45:08 EST 2023" docOffset="468" starttimestamp="1700582044267" timestamp="13864664" />
  <Command __id="7362" _type="InsertStringCommand" date="Tue Nov 21 14:45:13 EST 2023" starttimestamp="1700582044267" timestamp="13868868" timestamp2="13868868">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7363" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:45:13 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13868876" />
  <Command __id="7372" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:45:15 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13871165" />
  <Command __id="7373" _type="MoveCaretCommand" caretOffset="354" date="Tue Nov 21 14:45:15 EST 2023" docOffset="354" starttimestamp="1700582044267" timestamp="13871251" />
  <Command __id="7374" _type="MoveCaretCommand" caretOffset="500" date="Tue Nov 21 14:45:16 EST 2023" docOffset="500" starttimestamp="1700582044267" timestamp="13872709" />
  <Command __id="7379" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:45:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13878145" type="Run" />
  <Command __id="7380" _type="PasteCommand" date="Tue Nov 21 14:45:27 EST 2023" starttimestamp="1700582044267" timestamp="13883071" />
  <Command __id="7381" _type="ConsoleOutput" date="Tue Nov 21 14:45:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13883623" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (CONS “ONE” 1))
NIL
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"("), Diff(EQUAL,"QUOTE"), Diff(DELETE,"¶("), Diff(INSERT," "), Diff(EQUAL,"(CONS “ONE” 1))¶"), Diff(INSERT,"NIL¶")]]]></diff>
  </Command>
  <Command __id="7382" _type="MoveCaretCommand" caretOffset="259" date="Tue Nov 21 14:45:35 EST 2023" docOffset="259" starttimestamp="1700582044267" timestamp="13890900" />
  <Command __id="7383" _type="MoveCaretCommand" caretOffset="458" date="Tue Nov 21 14:45:39 EST 2023" docOffset="458" starttimestamp="1700582044267" timestamp="13894734" />
  <Command __id="7384" _type="MoveCaretCommand" caretOffset="464" date="Tue Nov 21 14:45:39 EST 2023" docOffset="464" starttimestamp="1700582044267" timestamp="13895262" />
  <DocumentChange __id="7361" _type="Insert" date="Tue Nov 21 14:45:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="521" docExpressionCount="70" docLength="521" length="10" offset="468" repeat="9" starttimestamp="1700582044267" timestamp="13868864" timestamp2="13870209">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <Command __id="7385" _type="MoveCaretCommand" caretOffset="518" date="Tue Nov 21 14:45:45 EST 2023" docOffset="518" starttimestamp="1700582044267" timestamp="13901164" />
  <Command __id="7386" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:45:54 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13910156">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7387" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:45:54 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="13910221" />
  <Command __id="7388" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:45:54 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13910715">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7389" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 14:45:55 EST 2023" docOffset="361" starttimestamp="1700582044267" timestamp="13910774" />
  <Command __id="7390" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:45:55 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13911264">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7391" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 14:45:55 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="13911335" />
  <Command __id="7392" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:45:56 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13911915">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7393" _type="MoveCaretCommand" caretOffset="174" date="Tue Nov 21 14:45:56 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="13911990" />
  <Command __id="7394" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:45:56 EST 2023" docASTNodeCount="178" docActiveCodeLength="1581" docExpressionCount="125" docLength="1581" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13912584">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7395" _type="SelectTextCommand" caretOffset="64" date="Tue Nov 21 14:45:56 EST 2023" end="124" start="64" starttimestamp="1700582044267" timestamp="13912659" />
  <Command __id="7397" _type="MoveCaretCommand" caretOffset="518" date="Tue Nov 21 14:45:59 EST 2023" docOffset="518" starttimestamp="1700582044267" timestamp="13914751" />
  <Command __id="7398" _type="MoveCaretCommand" caretOffset="392" date="Tue Nov 21 14:46:00 EST 2023" docOffset="392" starttimestamp="1700582044267" timestamp="13915813" />
  <Command __id="7399" _type="MoveCaretCommand" caretOffset="390" date="Tue Nov 21 14:46:02 EST 2023" docOffset="390" starttimestamp="1700582044267" timestamp="13918183" />
  <Command __id="7401" _type="InsertStringCommand" date="Tue Nov 21 14:46:02 EST 2023" starttimestamp="1700582044267" timestamp="13918707" timestamp2="13918707">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7402" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:46:02 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13918724" />
  <Command __id="7460" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:46:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13932712" type="Run" />
  <Command __id="7461" _type="PasteCommand" date="Tue Nov 21 14:46:18 EST 2023" starttimestamp="1700582044267" timestamp="13934568" />
  <Command __id="7462" _type="ConsoleOutput" date="Tue Nov 21 14:46:19 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13935018" type="ConsoleOutput">
    <outputString><![CDATA[QUOTE
((QUOTE (CONS “ONE” 1)))
NIL
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"QUOTE¶("), Diff(EQUAL,"(QUOTE (CONS “ONE” 1))"), Diff(INSERT,")"), Diff(EQUAL,"¶NIL¶")]]]></diff>
  </Command>
  <Command __id="7463" _type="MoveCaretCommand" caretOffset="556" date="Tue Nov 21 14:46:34 EST 2023" docOffset="556" starttimestamp="1700582044267" timestamp="13949759" />
  <Command __id="7464" _type="MoveCaretCommand" caretOffset="538" date="Tue Nov 21 14:46:35 EST 2023" docOffset="538" starttimestamp="1700582044267" timestamp="13951167" />
  <Command __id="7466" _type="InsertStringCommand" date="Tue Nov 21 14:46:36 EST 2023" starttimestamp="1700582044267" timestamp="13951895" timestamp2="13951895">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7467" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:46:36 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="13951915" />
  <Command __id="7472" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:46:37 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="13952831" />
  <Command __id="7474" _type="InsertStringCommand" date="Tue Nov 21 14:46:37 EST 2023" starttimestamp="1700582044267" timestamp="13952846" timestamp2="13952846">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7475" _type="MoveCaretCommand" caretOffset="569" date="Tue Nov 21 14:46:37 EST 2023" docOffset="569" starttimestamp="1700582044267" timestamp="13953533" />
  <Command __id="7480" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:46:41 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13956978" type="Run" />
  <Command __id="7481" _type="PasteCommand" date="Tue Nov 21 14:46:42 EST 2023" starttimestamp="1700582044267" timestamp="13958550" />
  <Command __id="7482" _type="ConsoleOutput" date="Tue Nov 21 14:46:43 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="13958851" type="ConsoleOutput">
    <outputString><![CDATA[QUOTE
((QUOTE (CONS “ONE” 1)))
((CONS “ONE” 1))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"QUOTE¶((QUOTE (CONS “ONE” 1)))¶"), Diff(DELETE,"NIL"), Diff(INSERT,"((CONS “ONE” 1))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7483" _type="ShellCommand" date="Tue Nov 21 14:46:47 EST 2023" starttimestamp="1700582044267" timestamp="13962920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7484" _type="ShellCommand" date="Tue Nov 21 14:46:49 EST 2023" starttimestamp="1700582044267" timestamp="13965329" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7485" _type="MoveCaretCommand" caretOffset="569" date="Tue Nov 21 14:46:54 EST 2023" docOffset="569" starttimestamp="1700582044267" timestamp="13970140" />
  <Command __id="7486" _type="ShellCommand" date="Tue Nov 21 14:46:56 EST 2023" starttimestamp="1700582044267" timestamp="13971758" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7487" _type="ShellCommand" date="Tue Nov 21 14:47:17 EST 2023" starttimestamp="1700582044267" timestamp="13992762" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7488" _type="ShellCommand" date="Tue Nov 21 14:47:25 EST 2023" starttimestamp="1700582044267" timestamp="14000967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7489" _type="ShellCommand" date="Tue Nov 21 14:48:05 EST 2023" starttimestamp="1700582044267" timestamp="14041685" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7490" _type="MoveCaretCommand" caretOffset="533" date="Tue Nov 21 14:48:22 EST 2023" docOffset="533" starttimestamp="1700582044267" timestamp="14058586" />
  <Command __id="7491" _type="MoveCaretCommand" caretOffset="530" date="Tue Nov 21 14:48:23 EST 2023" docOffset="530" starttimestamp="1700582044267" timestamp="14059199" />
  <Command __id="7396" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:45:58 EST 2023" docASTNodeCount="90" docActiveCodeLength="521" docExpressionCount="70" docLength="521" projectName="Assignment5" starttimestamp="1700582044267" timestamp="13914677">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail()"), Diff(DELETE,".getHead()"), Diff(EQUAL,";		System.out.println(expr.getHead());		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead()."), Diff(INSERT,"getHead()."), Diff(EQUAL,"toString()).eval(expr, environment);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		System.out.println(expr.getHead());
		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr, environment);
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="7400" _type="Insert" date="Tue Nov 21 14:46:02 EST 2023" docASTNodeCount="92" docActiveCodeLength="531" docExpressionCount="72" docLength="531" length="10" offset="390" repeat="9" starttimestamp="1700582044267" timestamp="13918705" timestamp2="13920379">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="7413" _type="Insert" date="Tue Nov 21 14:46:06 EST 2023" docASTNodeCount="96" docActiveCodeLength="544" docExpressionCount="75" docLength="544" length="13" offset="402" repeat="11" starttimestamp="1700582044267" timestamp="13922379" timestamp2="13924340">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="7434" _type="Replace" date="Tue Nov 21 14:46:08 EST 2023" docASTNodeCount="96" docActiveCodeLength="545" docExpressionCount="76" docLength="545" endLine="13" insertionLength="4" int_docASTNodeCount="94" int_docActiveCodeLength="541" int_docExpressionCount="74" int_docLength="541" length="3" offset="412" startLine="13" starttimestamp="1700582044267" timestamp="13924515">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7437" _type="Insert" date="Tue Nov 21 14:46:09 EST 2023" docASTNodeCount="99" docActiveCodeLength="559" docExpressionCount="78" docLength="559" length="14" offset="416" repeat="13" starttimestamp="1700582044267" timestamp="13924739" timestamp2="13928388">
    <text><![CDATA[println(expr);]]></text>
  </DocumentChange>
  <DocumentChange __id="7465" _type="Insert" date="Tue Nov 21 14:46:36 EST 2023" docASTNodeCount="101" docActiveCodeLength="564" docExpressionCount="80" docLength="564" length="5" offset="538" repeat="5" starttimestamp="1700582044267" timestamp="13951892" timestamp2="13952529">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="7473" _type="Replace" date="Tue Nov 21 14:46:37 EST 2023" docASTNodeCount="101" docActiveCodeLength="569" docExpressionCount="80" docLength="569" endLine="14" insertionLength="9" int_docASTNodeCount="100" int_docActiveCodeLength="560" int_docExpressionCount="79" int_docLength="560" length="4" offset="539" startLine="14" starttimestamp="1700582044267" timestamp="13952834">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="7492" _type="MoveCaretCommand" caretOffset="568" date="Tue Nov 21 14:48:26 EST 2023" docOffset="568" starttimestamp="1700582044267" timestamp="14061751" />
  <Command __id="7493" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 14:48:26 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="14062292" />
  <Command __id="7495" _type="InsertStringCommand" date="Tue Nov 21 14:48:27 EST 2023" starttimestamp="1700582044267" timestamp="14063618" timestamp2="14063618">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7497" _type="InsertStringCommand" date="Tue Nov 21 14:48:28 EST 2023" starttimestamp="1700582044267" timestamp="14063752" timestamp2="14063752">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="7494" _type="Insert" date="Tue Nov 21 14:48:27 EST 2023" docASTNodeCount="101" docActiveCodeLength="573" docExpressionCount="80" docLength="573" length="4" offset="566" repeat="2" starttimestamp="1700582044267" timestamp="14063614" timestamp2="14063750">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="7500" _type="Delete" date="Tue Nov 21 14:48:32 EST 2023" docASTNodeCount="83" docActiveCodeLength="497" docExpressionCount="64" docLength="497" endLine="14" length="76" offset="355" repeat="2" startLine="12" starttimestamp="1700582044267" timestamp="14068161" timestamp2="14068563">
    <text><![CDATA[		System.out.println(expr.getHead().getHead());
		System.out.println(expr);
]]></text>
  </DocumentChange>
  <Command __id="7498" _type="MoveCaretCommand" caretOffset="430" date="Tue Nov 21 14:48:31 EST 2023" docOffset="430" starttimestamp="1700582044267" timestamp="14066950" />
  <Command __id="7499" _type="MoveCaretCommand" caretOffset="388" date="Tue Nov 21 14:48:31 EST 2023" docOffset="388" starttimestamp="1700582044267" timestamp="14067374" />
  <Command __id="7501" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 14:48:32 EST 2023" starttimestamp="1700582044267" timestamp="14068163" />
  <Command __id="7503" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 14:48:32 EST 2023" starttimestamp="1700582044267" timestamp="14068565" />
  <Command __id="7505" _type="MoveCaretCommand" caretOffset="255" date="Tue Nov 21 14:48:34 EST 2023" docOffset="385" starttimestamp="1700582044267" timestamp="14070715" />
  <Command __id="7504" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:48:34 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14070644">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7506" _type="SelectTextCommand" caretOffset="258" date="Tue Nov 21 14:48:36 EST 2023" end="521" start="258" starttimestamp="1700582044267" timestamp="14072359" />
  <Command __id="7507" _type="CopyCommand" date="Tue Nov 21 14:48:36 EST 2023" starttimestamp="1700582044267" timestamp="14072520" />
  <Command __id="7508" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:48:37 EST 2023" docASTNodeCount="83" docActiveCodeLength="497" docExpressionCount="64" docLength="497" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14073617">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		"), Diff(DELETE,"System.out.println(expr.getHead());		"), Diff(EQUAL,"return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr"), Diff(INSERT,".getHead()"), Diff(EQUAL,", environment);	}"), Diff(INSERT,"		"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);
	}
	
	
}
]]></snapshot>
  </Command>
  <Command __id="7509" _type="MoveCaretCommand" caretOffset="355" date="Tue Nov 21 14:48:37 EST 2023" docOffset="355" starttimestamp="1700582044267" timestamp="14073697" />
  <Command __id="7510" _type="MoveCaretCommand" caretOffset="492" date="Tue Nov 21 14:48:38 EST 2023" docOffset="492" starttimestamp="1700582044267" timestamp="14074444" />
  <DocumentChange __id="7511" _type="Replace" date="Tue Nov 21 14:48:39 EST 2023" docASTNodeCount="124" docActiveCodeLength="759" docExpressionCount="92" docLength="759" endLine="14" insertionLength="263" int_docASTNodeCount="83" int_docActiveCodeLength="496" int_docExpressionCount="64" int_docLength="496" length="1" offset="491" startLine="14" starttimestamp="1700582044267" timestamp="14074874">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7512" _type="Insert" date="Tue Nov 21 14:48:39 EST 2023" docASTNodeCount="134" docActiveCodeLength="808" docExpressionCount="101" docLength="808" length="49" offset="93" repeat="2" starttimestamp="1700582044267" timestamp="14074911" timestamp2="14074911">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <Command __id="7514" _type="PasteCommand" date="Tue Nov 21 14:48:39 EST 2023" starttimestamp="1700582044267" timestamp="14074935" />
  <Command __id="7515" _type="MoveCaretCommand" caretOffset="539" date="Tue Nov 21 14:48:39 EST 2023" docOffset="539" starttimestamp="1700582044267" timestamp="14075530" />
  <Command __id="7517" _type="InsertStringCommand" date="Tue Nov 21 14:48:40 EST 2023" starttimestamp="1700582044267" timestamp="14075751" timestamp2="14075751">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7518" _type="MoveCaretCommand" caretOffset="573" date="Tue Nov 21 14:48:40 EST 2023" docOffset="573" starttimestamp="1700582044267" timestamp="14076477" />
  <Command __id="7519" _type="SelectTextCommand" caretOffset="579" date="Tue Nov 21 14:48:40 EST 2023" end="579" start="569" starttimestamp="1700582044267" timestamp="14076620" />
  <Command __id="7520" _type="MoveCaretCommand" caretOffset="539" date="Tue Nov 21 14:48:43 EST 2023" docOffset="539" starttimestamp="1700582044267" timestamp="14078804" />
  <Command __id="7521" _type="MoveCaretCommand" caretOffset="428" date="Tue Nov 21 14:48:43 EST 2023" docOffset="428" starttimestamp="1700582044267" timestamp="14079665" />
  <Command __id="7522" _type="MoveCaretCommand" caretOffset="435" date="Tue Nov 21 14:48:45 EST 2023" docOffset="435" starttimestamp="1700582044267" timestamp="14080882" />
  <Command __id="7523" _type="SelectTextCommand" caretOffset="445" date="Tue Nov 21 14:48:45 EST 2023" end="445" start="413" starttimestamp="1700582044267" timestamp="14081009" />
  <Command __id="7524" _type="MoveCaretCommand" caretOffset="443" date="Tue Nov 21 14:48:49 EST 2023" docOffset="443" starttimestamp="1700582044267" timestamp="14085505" />
  <Command __id="7525" _type="SelectTextCommand" caretOffset="625" date="Tue Nov 21 14:48:53 EST 2023" end="802" start="625" starttimestamp="1700582044267" timestamp="14089682" />
  <Command __id="7526" _type="MoveCaretCommand" caretOffset="424" date="Tue Nov 21 14:48:54 EST 2023" docOffset="424" starttimestamp="1700582044267" timestamp="14090695" />
  <Command __id="7527" _type="SelectTextCommand" caretOffset="536" date="Tue Nov 21 14:48:58 EST 2023" end="536" start="406" starttimestamp="1700582044267" timestamp="14093807" />
  <Command __id="7529" _type="CutCommand" date="Tue Nov 21 14:48:58 EST 2023" starttimestamp="1700582044267" timestamp="14094510" />
  <Command __id="7530" _type="MoveCaretCommand" caretOffset="672" date="Tue Nov 21 14:49:00 EST 2023" docOffset="672" starttimestamp="1700582044267" timestamp="14096221" />
  <Command __id="7532" _type="PasteCommand" date="Tue Nov 21 14:49:00 EST 2023" starttimestamp="1700582044267" timestamp="14096343" />
  <DocumentChange __id="7516" _type="Insert" date="Tue Nov 21 14:48:40 EST 2023" docASTNodeCount="134" docActiveCodeLength="810" docExpressionCount="101" docLength="810" length="2" offset="539" starttimestamp="1700582044267" timestamp="14075747">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="7528" _type="Delete" date="Tue Nov 21 14:48:58 EST 2023" docASTNodeCount="115" docActiveCodeLength="680" docExpressionCount="83" docLength="680" endLine="13" length="130" offset="406" startLine="13" starttimestamp="1700582044267" timestamp="14094503">
    <text><![CDATA[return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="7531" _type="Replace" date="Tue Nov 21 14:49:00 EST 2023" docASTNodeCount="134" docActiveCodeLength="810" docExpressionCount="101" docLength="810" endLine="21" insertionLength="132" int_docASTNodeCount="115" int_docActiveCodeLength="678" int_docExpressionCount="83" int_docLength="678" length="2" offset="670" startLine="21" starttimestamp="1700582044267" timestamp="14096338">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="7534" _type="Delete" date="Tue Nov 21 14:49:03 EST 2023" docASTNodeCount="108" docActiveCodeLength="637" docExpressionCount="79" docLength="637" endLine="21" length="173" offset="497" startLine="17" starttimestamp="1700582044267" timestamp="14099587">
    <text><![CDATA[if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
]]></text>
  </DocumentChange>
  <Command __id="7533" _type="SelectTextCommand" caretOffset="670" date="Tue Nov 21 14:49:03 EST 2023" end="670" start="497" starttimestamp="1700582044267" timestamp="14099308" />
  <Command __id="7535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:49:03 EST 2023" starttimestamp="1700582044267" timestamp="14099594" />
  <Command __id="7537" _type="InsertStringCommand" date="Tue Nov 21 14:49:05 EST 2023" starttimestamp="1700582044267" timestamp="14101062" timestamp2="14101062">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="7539" _type="InsertStringCommand" date="Tue Nov 21 14:49:05 EST 2023" starttimestamp="1700582044267" timestamp="14101312" timestamp2="14101312">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="7540" _type="MoveCaretCommand" caretOffset="630" date="Tue Nov 21 14:49:06 EST 2023" docOffset="630" starttimestamp="1700582044267" timestamp="14101900" />
  <Command __id="7541" _type="MoveCaretCommand" caretOffset="494" date="Tue Nov 21 14:49:07 EST 2023" docOffset="494" starttimestamp="1700582044267" timestamp="14102787" />
  <Command __id="7543" _type="InsertStringCommand" date="Tue Nov 21 14:49:07 EST 2023" starttimestamp="1700582044267" timestamp="14103082" timestamp2="14103082">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7544" _type="MoveCaretCommand" caretOffset="403" date="Tue Nov 21 14:49:08 EST 2023" docOffset="403" starttimestamp="1700582044267" timestamp="14104078" />
  <Command __id="7546" _type="InsertStringCommand" date="Tue Nov 21 14:49:08 EST 2023" starttimestamp="1700582044267" timestamp="14104377" timestamp2="14104377">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7548" _type="InsertStringCommand" date="Tue Nov 21 14:49:08 EST 2023" starttimestamp="1700582044267" timestamp="14104580" timestamp2="14104580">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7550" _type="InsertStringCommand" date="Tue Nov 21 14:49:08 EST 2023" starttimestamp="1700582044267" timestamp="14104632" timestamp2="14104632">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7552" _type="InsertStringCommand" date="Tue Nov 21 14:49:09 EST 2023" starttimestamp="1700582044267" timestamp="14104784" timestamp2="14104784">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7554" _type="InsertStringCommand" date="Tue Nov 21 14:49:09 EST 2023" starttimestamp="1700582044267" timestamp="14104879" timestamp2="14104879">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7556" _type="InsertStringCommand" date="Tue Nov 21 14:49:09 EST 2023" starttimestamp="1700582044267" timestamp="14104985" timestamp2="14104985">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7558" _type="InsertStringCommand" date="Tue Nov 21 14:49:09 EST 2023" starttimestamp="1700582044267" timestamp="14105050" timestamp2="14105050">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7560" _type="InsertStringCommand" date="Tue Nov 21 14:49:09 EST 2023" starttimestamp="1700582044267" timestamp="14105159" timestamp2="14105159">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7562" _type="InsertStringCommand" date="Tue Nov 21 14:49:10 EST 2023" starttimestamp="1700582044267" timestamp="14106022" timestamp2="14106022">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7564" _type="InsertStringCommand" date="Tue Nov 21 14:49:10 EST 2023" starttimestamp="1700582044267" timestamp="14106204" timestamp2="14106204">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7566" _type="InsertStringCommand" date="Tue Nov 21 14:49:10 EST 2023" starttimestamp="1700582044267" timestamp="14106292" timestamp2="14106292">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7568" _type="InsertStringCommand" date="Tue Nov 21 14:49:10 EST 2023" starttimestamp="1700582044267" timestamp="14106382" timestamp2="14106382">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7570" _type="InsertStringCommand" date="Tue Nov 21 14:49:10 EST 2023" starttimestamp="1700582044267" timestamp="14106605" timestamp2="14106605">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7572" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14106733" timestamp2="14106733">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7574" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14106941" timestamp2="14106941">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7576" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14107170" timestamp2="14107170">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="7536" _type="Delete" date="Tue Nov 21 14:49:05 EST 2023" docASTNodeCount="108" docActiveCodeLength="635" docExpressionCount="79" docLength="635" endLine="17" length="2" offset="495" repeat="2" startLine="17" starttimestamp="1700582044267" timestamp="14101044" timestamp2="14101294">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="7542" _type="Insert" date="Tue Nov 21 14:49:07 EST 2023" docASTNodeCount="108" docActiveCodeLength="638" docExpressionCount="79" docLength="638" length="3" offset="494" starttimestamp="1700582044267" timestamp="14103076">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="7578" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14107274" timestamp2="14107274">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7580" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14107448" timestamp2="14107448">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7582" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14107503" timestamp2="14107503">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7584" _type="InsertStringCommand" date="Tue Nov 21 14:49:11 EST 2023" starttimestamp="1700582044267" timestamp="14107658" timestamp2="14107658">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7586" _type="InsertStringCommand" date="Tue Nov 21 14:49:13 EST 2023" starttimestamp="1700582044267" timestamp="14109608" timestamp2="14109608">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7588" _type="InsertStringCommand" date="Tue Nov 21 14:49:14 EST 2023" starttimestamp="1700582044267" timestamp="14109812" timestamp2="14109812">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="7590" _type="InsertStringCommand" date="Tue Nov 21 14:49:14 EST 2023" starttimestamp="1700582044267" timestamp="14109946" timestamp2="14109946">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7592" _type="InsertStringCommand" date="Tue Nov 21 14:49:14 EST 2023" starttimestamp="1700582044267" timestamp="14110037" timestamp2="14110037">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7594" _type="InsertStringCommand" date="Tue Nov 21 14:49:14 EST 2023" starttimestamp="1700582044267" timestamp="14110163" timestamp2="14110163">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="7596" _type="InsertStringCommand" date="Tue Nov 21 14:49:14 EST 2023" starttimestamp="1700582044267" timestamp="14110253" timestamp2="14110253">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7598" _type="InsertStringCommand" date="Tue Nov 21 14:49:14 EST 2023" starttimestamp="1700582044267" timestamp="14110393" timestamp2="14110393">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7600" _type="InsertStringCommand" date="Tue Nov 21 14:49:15 EST 2023" starttimestamp="1700582044267" timestamp="14110739" timestamp2="14110739">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7602" _type="InsertStringCommand" date="Tue Nov 21 14:49:15 EST 2023" starttimestamp="1700582044267" timestamp="14110913" timestamp2="14110913">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7604" _type="InsertStringCommand" date="Tue Nov 21 14:49:15 EST 2023" starttimestamp="1700582044267" timestamp="14111104" timestamp2="14111104">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7606" _type="InsertStringCommand" date="Tue Nov 21 14:49:15 EST 2023" starttimestamp="1700582044267" timestamp="14111615" timestamp2="14111615">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7608" _type="InsertStringCommand" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14111799" timestamp2="14111799">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7610" _type="InsertStringCommand" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14111901" timestamp2="14111901">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7612" _type="InsertStringCommand" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14112062" timestamp2="14112062">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7614" _type="InsertStringCommand" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14112131" timestamp2="14112131">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7616" _type="InsertStringCommand" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14112218" timestamp2="14112218">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7618" _type="InsertStringCommand" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14112296" timestamp2="14112296">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7619" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 14:49:16 EST 2023" starttimestamp="1700582044267" timestamp="14112724" />
  <Command __id="7621" _type="InsertStringCommand" date="Tue Nov 21 14:49:17 EST 2023" starttimestamp="1700582044267" timestamp="14113345" timestamp2="14113345">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="7622" _type="SelectTextCommand" caretOffset="422" date="Tue Nov 21 14:49:19 EST 2023" end="422" start="421" starttimestamp="1700582044267" timestamp="14115498" />
  <Command __id="7624" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:49:20 EST 2023" starttimestamp="1700582044267" timestamp="14115805" />
  <Command __id="7625" _type="MoveCaretCommand" caretOffset="475" date="Tue Nov 21 14:49:20 EST 2023" docOffset="475" starttimestamp="1700582044267" timestamp="14116262" />
  <Command __id="7626" _type="MoveCaretCommand" caretOffset="537" date="Tue Nov 21 14:49:22 EST 2023" docOffset="537" starttimestamp="1700582044267" timestamp="14118111" />
  <Command __id="7627" _type="MoveCaretCommand" caretOffset="617" date="Tue Nov 21 14:49:30 EST 2023" docOffset="617" starttimestamp="1700582044267" timestamp="14126100" />
  <Command __id="7628" _type="MoveCaretCommand" caretOffset="626" date="Tue Nov 21 14:49:30 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="14126585" />
  <Command __id="7629" _type="MoveCaretCommand" caretOffset="616" date="Tue Nov 21 14:49:31 EST 2023" docOffset="616" starttimestamp="1700582044267" timestamp="14127063" />
  <Command __id="7630" _type="MoveCaretCommand" caretOffset="630" date="Tue Nov 21 14:49:31 EST 2023" docOffset="630" starttimestamp="1700582044267" timestamp="14127515" />
  <Command __id="7631" _type="MoveCaretCommand" caretOffset="647" date="Tue Nov 21 14:49:32 EST 2023" docOffset="647" starttimestamp="1700582044267" timestamp="14127958" />
  <Command __id="7632" _type="MoveCaretCommand" caretOffset="652" date="Tue Nov 21 14:49:32 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="14128478" />
  <Command __id="7633" _type="SelectTextCommand" caretOffset="653" date="Tue Nov 21 14:49:32 EST 2023" end="653" start="646" starttimestamp="1700582044267" timestamp="14128628" />
  <Command __id="7634" _type="MoveCaretCommand" caretOffset="642" date="Tue Nov 21 14:49:33 EST 2023" docOffset="642" starttimestamp="1700582044267" timestamp="14129069" />
  <Command __id="7635" _type="SelectTextCommand" caretOffset="645" date="Tue Nov 21 14:49:33 EST 2023" end="645" start="641" starttimestamp="1700582044267" timestamp="14129540" />
  <Command __id="7636" _type="MoveCaretCommand" caretOffset="649" date="Tue Nov 21 14:49:34 EST 2023" docOffset="649" starttimestamp="1700582044267" timestamp="14130242" />
  <Command __id="7637" _type="SelectTextCommand" caretOffset="653" date="Tue Nov 21 14:49:34 EST 2023" end="653" start="646" starttimestamp="1700582044267" timestamp="14130406" />
  <Command __id="7638" _type="MoveCaretCommand" caretOffset="644" date="Tue Nov 21 14:49:35 EST 2023" docOffset="644" starttimestamp="1700582044267" timestamp="14130845" />
  <Command __id="7639" _type="SelectTextCommand" caretOffset="645" date="Tue Nov 21 14:49:35 EST 2023" end="645" start="641" starttimestamp="1700582044267" timestamp="14130960" />
  <Command __id="7640" _type="MoveCaretCommand" caretOffset="650" date="Tue Nov 21 14:49:35 EST 2023" docOffset="650" starttimestamp="1700582044267" timestamp="14131412" />
  <Command __id="7641" _type="SelectTextCommand" caretOffset="653" date="Tue Nov 21 14:49:35 EST 2023" end="653" start="646" starttimestamp="1700582044267" timestamp="14131578" />
  <Command __id="7642" _type="MoveCaretCommand" caretOffset="641" date="Tue Nov 21 14:49:36 EST 2023" docOffset="641" starttimestamp="1700582044267" timestamp="14132029" />
  <Command __id="7643" _type="SelectTextCommand" caretOffset="668" date="Tue Nov 21 14:49:36 EST 2023" end="668" start="641" starttimestamp="1700582044267" timestamp="14132191" />
  <Command __id="7644" _type="MoveCaretCommand" caretOffset="648" date="Tue Nov 21 14:49:36 EST 2023" docOffset="648" starttimestamp="1700582044267" timestamp="14132656" />
  <Command __id="7645" _type="SelectTextCommand" caretOffset="653" date="Tue Nov 21 14:49:37 EST 2023" end="653" start="646" starttimestamp="1700582044267" timestamp="14132827" />
  <Command __id="7646" _type="MoveCaretCommand" caretOffset="644" date="Tue Nov 21 14:49:37 EST 2023" docOffset="644" starttimestamp="1700582044267" timestamp="14133261" />
  <Command __id="7647" _type="SelectTextCommand" caretOffset="645" date="Tue Nov 21 14:49:37 EST 2023" end="645" start="641" starttimestamp="1700582044267" timestamp="14133411" />
  <Command __id="7648" _type="MoveCaretCommand" caretOffset="650" date="Tue Nov 21 14:49:38 EST 2023" docOffset="650" starttimestamp="1700582044267" timestamp="14133864" />
  <Command __id="7649" _type="SelectTextCommand" caretOffset="653" date="Tue Nov 21 14:49:38 EST 2023" end="653" start="646" starttimestamp="1700582044267" timestamp="14134013" />
  <Command __id="7650" _type="MoveCaretCommand" caretOffset="645" date="Tue Nov 21 14:49:38 EST 2023" docOffset="645" starttimestamp="1700582044267" timestamp="14134446" />
  <Command __id="7651" _type="SelectTextCommand" caretOffset="645" date="Tue Nov 21 14:49:38 EST 2023" end="645" start="641" starttimestamp="1700582044267" timestamp="14134590" />
  <Command __id="7652" _type="MoveCaretCommand" caretOffset="537" date="Tue Nov 21 14:49:41 EST 2023" docOffset="537" starttimestamp="1700582044267" timestamp="14137386" />
  <Command __id="7653" _type="MoveCaretCommand" caretOffset="641" date="Tue Nov 21 14:49:43 EST 2023" docOffset="641" starttimestamp="1700582044267" timestamp="14139572" />
  <Command __id="7654" _type="MoveCaretCommand" caretOffset="537" date="Tue Nov 21 14:49:53 EST 2023" docOffset="537" starttimestamp="1700582044267" timestamp="14149515" />
  <Command __id="7655" _type="MoveCaretCommand" caretOffset="673" date="Tue Nov 21 14:49:55 EST 2023" docOffset="673" starttimestamp="1700582044267" timestamp="14151206" />
  <DocumentChange __id="7545" _type="Insert" date="Tue Nov 21 14:49:08 EST 2023" docASTNodeCount="113" docActiveCodeLength="679" docExpressionCount="83" docLength="679" length="41" offset="403" repeat="38" starttimestamp="1700582044267" timestamp="14104373" timestamp2="14113342">
    <text><![CDATA[
		return evalHelpder(expr, environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="7623" _type="Delete" date="Tue Nov 21 14:49:20 EST 2023" docASTNodeCount="113" docActiveCodeLength="678" docExpressionCount="83" docLength="678" endLine="13" length="1" offset="421" startLine="13" starttimestamp="1700582044267" timestamp="14115801">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <Command __id="7656" _type="MoveCaretCommand" caretOffset="537" date="Tue Nov 21 14:49:56 EST 2023" docOffset="537" starttimestamp="1700582044267" timestamp="14152590" />
  <DocumentChange __id="7657" _type="Insert" date="Tue Nov 21 14:50:01 EST 2023" docASTNodeCount="117" docActiveCodeLength="688" docExpressionCount="86" docLength="688" length="10" offset="537" repeat="10" starttimestamp="1700582044267" timestamp="14156897" timestamp2="14158624">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="7658" _type="InsertStringCommand" date="Tue Nov 21 14:50:01 EST 2023" starttimestamp="1700582044267" timestamp="14156900" timestamp2="14156900">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="7660" _type="InsertStringCommand" date="Tue Nov 21 14:50:01 EST 2023" starttimestamp="1700582044267" timestamp="14157084" timestamp2="14157084">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="7662" _type="InsertStringCommand" date="Tue Nov 21 14:50:01 EST 2023" starttimestamp="1700582044267" timestamp="14157188" timestamp2="14157188">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7664" _type="InsertStringCommand" date="Tue Nov 21 14:50:01 EST 2023" starttimestamp="1700582044267" timestamp="14157335" timestamp2="14157335">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7666" _type="InsertStringCommand" date="Tue Nov 21 14:50:01 EST 2023" starttimestamp="1700582044267" timestamp="14157413" timestamp2="14157413">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7668" _type="InsertStringCommand" date="Tue Nov 21 14:50:01 EST 2023" starttimestamp="1700582044267" timestamp="14157502" timestamp2="14157502">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7670" _type="InsertStringCommand" date="Tue Nov 21 14:50:02 EST 2023" starttimestamp="1700582044267" timestamp="14158120" timestamp2="14158120">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7671" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:50:02 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14158126" />
  <Command __id="7675" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:50:03 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14158743" />
  <DocumentChange __id="7676" _type="Replace" date="Tue Nov 21 14:50:03 EST 2023" docASTNodeCount="117" docActiveCodeLength="689" docExpressionCount="87" docLength="689" endLine="18" insertionLength="4" int_docASTNodeCount="115" int_docActiveCodeLength="685" int_docExpressionCount="85" int_docLength="685" length="3" offset="544" startLine="18" starttimestamp="1700582044267" timestamp="14158744">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="7677" _type="InsertStringCommand" date="Tue Nov 21 14:50:03 EST 2023" starttimestamp="1700582044267" timestamp="14158746" timestamp2="14158746">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7678" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:50:03 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14158752" />
  <DocumentChange __id="7679" _type="Insert" date="Tue Nov 21 14:50:03 EST 2023" docASTNodeCount="119" docActiveCodeLength="697" docExpressionCount="88" docLength="697" length="8" offset="548" repeat="7" starttimestamp="1700582044267" timestamp="14158944" timestamp2="14159787">
    <text><![CDATA[printl()]]></text>
  </DocumentChange>
  <Command __id="7686" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:50:04 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14159801" />
  <DocumentChange __id="7687" _type="Delete" date="Tue Nov 21 14:50:04 EST 2023" docASTNodeCount="119" docActiveCodeLength="695" docExpressionCount="88" docLength="695" endLine="18" length="2" offset="554" repeat="2" startLine="18" starttimestamp="1700582044267" timestamp="14160132" timestamp2="14160135">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="7689" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:50:04 EST 2023" starttimestamp="1700582044267" timestamp="14160136" />
  <DocumentChange __id="7690" _type="Insert" date="Tue Nov 21 14:50:04 EST 2023" docASTNodeCount="120" docActiveCodeLength="702" docExpressionCount="89" docLength="702" length="7" offset="554" repeat="6" starttimestamp="1700582044267" timestamp="14160420" timestamp2="14162888">
    <text><![CDATA[n(eval)]]></text>
  </DocumentChange>
  <Command __id="7691" _type="InsertStringCommand" date="Tue Nov 21 14:50:04 EST 2023" starttimestamp="1700582044267" timestamp="14160422" timestamp2="14160422">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7693" _type="InsertStringCommand" date="Tue Nov 21 14:50:04 EST 2023" starttimestamp="1700582044267" timestamp="14160644" timestamp2="14160644">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7695" _type="InsertStringCommand" date="Tue Nov 21 14:50:06 EST 2023" starttimestamp="1700582044267" timestamp="14162420" timestamp2="14162420">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7697" _type="InsertStringCommand" date="Tue Nov 21 14:50:06 EST 2023" starttimestamp="1700582044267" timestamp="14162713" timestamp2="14162713">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7699" _type="InsertStringCommand" date="Tue Nov 21 14:50:07 EST 2023" starttimestamp="1700582044267" timestamp="14162816" timestamp2="14162816">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7701" _type="InsertStringCommand" date="Tue Nov 21 14:50:07 EST 2023" starttimestamp="1700582044267" timestamp="14162888" timestamp2="14162888">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="7702" _type="Delete" date="Tue Nov 21 14:50:07 EST 2023" docASTNodeCount="119" docActiveCodeLength="698" docExpressionCount="88" docLength="698" endLine="18" length="4" offset="556" repeat="4" startLine="18" starttimestamp="1700582044267" timestamp="14163532" timestamp2="14163965">
    <text><![CDATA[eval]]></text>
  </DocumentChange>
  <Command __id="7703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:50:07 EST 2023" starttimestamp="1700582044267" timestamp="14163533" />
  <Command __id="7705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:50:07 EST 2023" starttimestamp="1700582044267" timestamp="14163660" />
  <Command __id="7707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14163808" />
  <Command __id="7709" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14163967" />
  <DocumentChange __id="7710" _type="Insert" date="Tue Nov 21 14:50:08 EST 2023" docASTNodeCount="122" docActiveCodeLength="712" docExpressionCount="91" docLength="712" length="14" offset="556" repeat="13" starttimestamp="1700582044267" timestamp="14164129" timestamp2="14166125">
    <text><![CDATA[expr.getHead()]]></text>
  </DocumentChange>
  <Command __id="7711" _type="InsertStringCommand" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14164130" timestamp2="14164130">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7713" _type="InsertStringCommand" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14164303" timestamp2="14164303">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="7715" _type="InsertStringCommand" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14164378" timestamp2="14164378">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7717" _type="InsertStringCommand" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14164512" timestamp2="14164512">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7719" _type="InsertStringCommand" date="Tue Nov 21 14:50:08 EST 2023" starttimestamp="1700582044267" timestamp="14164596" timestamp2="14164596">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7720" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:50:08 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14164602" />
  <Command __id="7729" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:50:11 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14166895" />
  <Command __id="7736" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:50:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14171943" type="Run" />
  <Command __id="7737" _type="PasteCommand" date="Tue Nov 21 14:50:17 EST 2023" starttimestamp="1700582044267" timestamp="14172845" />
  <Command __id="7743" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:50:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14177250" type="Run" />
  <Command __id="7744" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:50:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14177250" type="Run" />
  <Command __id="7745" _type="ShellCommand" date="Tue Nov 21 14:50:21 EST 2023" starttimestamp="1700582044267" timestamp="14177319" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7746" _type="ShellCommand" date="Tue Nov 21 14:50:22 EST 2023" starttimestamp="1700582044267" timestamp="14178050" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7747" _type="ShellCommand" date="Tue Nov 21 14:50:23 EST 2023" starttimestamp="1700582044267" timestamp="14178770" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7748" _type="ShellCommand" date="Tue Nov 21 14:50:26 EST 2023" starttimestamp="1700582044267" timestamp="14181860" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7749" _type="PasteCommand" date="Tue Nov 21 14:50:26 EST 2023" starttimestamp="1700582044267" timestamp="14182372" />
  <Command __id="7750" _type="ConsoleOutput" date="Tue Nov 21 14:50:27 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14182819" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (CONS “ONE” 1))
((CONS “ONE” 1))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"RETURN"), Diff(INSERT,"(QUOTE (CONS “ONE” 1))¶((CONS “ONE” 1))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7751" _type="ConsoleInput" date="Tue Nov 21 14:51:04 EST 2023" starttimestamp="1700582044267" timestamp="14219870" type="Exception">
    <outputString><![CDATA[(eval (quote (cons “one” 1)))(eval (cons 1 2))
]]></outputString>
  </Command>
  <Command __id="7752" _type="ConsoleOutput" date="Tue Nov 21 14:51:04 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14219877" type="ConsoleOutput">
    <outputString><![CDATA[(CONS 1 2)
(1 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"QUOTE (CONS “ONE” 1))¶((CONS “ONE” 1)"), Diff(INSERT,"CONS 1 2)¶(1 . 2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="7753" _type="MoveCaretCommand" caretOffset="708" date="Tue Nov 21 14:52:36 EST 2023" docOffset="708" starttimestamp="1700582044267" timestamp="14311791" />
  <Command __id="7755" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:52:38 EST 2023" projectName="null" starttimestamp="1700582044267" timestamp="14314303">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="7756" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 14:52:38 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="14314356" />
  <Command __id="7758" _type="MoveCaretCommand" caretOffset="626" date="Tue Nov 21 14:52:40 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="14316194" />
  <Command __id="7759" _type="MoveCaretCommand" caretOffset="618" date="Tue Nov 21 14:52:46 EST 2023" docOffset="618" starttimestamp="1700582044267" timestamp="14321859" />
  <Command __id="7760" _type="MoveCaretCommand" caretOffset="609" date="Tue Nov 21 14:52:48 EST 2023" docOffset="609" starttimestamp="1700582044267" timestamp="14323923" />
  <Command __id="7761" _type="SelectTextCommand" caretOffset="614" date="Tue Nov 21 14:52:48 EST 2023" end="614" start="582" starttimestamp="1700582044267" timestamp="14324059" />
  <Command __id="7762" _type="MoveCaretCommand" caretOffset="624" date="Tue Nov 21 14:52:49 EST 2023" docOffset="624" starttimestamp="1700582044267" timestamp="14325310" />
  <Command __id="7763" _type="MoveCaretCommand" caretOffset="572" date="Tue Nov 21 14:52:50 EST 2023" docOffset="572" starttimestamp="1700582044267" timestamp="14326525" />
  <Command __id="7764" _type="MoveCaretCommand" caretOffset="534" date="Tue Nov 21 14:52:51 EST 2023" docOffset="534" starttimestamp="1700582044267" timestamp="14327575" />
  <Command __id="7765" _type="MoveCaretCommand" caretOffset="673" date="Tue Nov 21 14:52:55 EST 2023" docOffset="673" starttimestamp="1700582044267" timestamp="14330907" />
  <Command __id="7766" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 14:52:57 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="14333389" />
  <Command __id="7767" _type="MoveCaretCommand" caretOffset="683" date="Tue Nov 21 14:52:58 EST 2023" docOffset="683" starttimestamp="1700582044267" timestamp="14333971" />
  <Command __id="7768" _type="MoveCaretCommand" caretOffset="675" date="Tue Nov 21 14:52:58 EST 2023" docOffset="675" starttimestamp="1700582044267" timestamp="14334594" />
  <Command __id="7769" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 14:52:59 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="14335684" />
  <Command __id="7770" _type="MoveCaretCommand" caretOffset="677" date="Tue Nov 21 14:53:02 EST 2023" docOffset="677" starttimestamp="1700582044267" timestamp="14337771" />
  <Command __id="7771" _type="MoveCaretCommand" caretOffset="676" date="Tue Nov 21 14:53:03 EST 2023" docOffset="676" starttimestamp="1700582044267" timestamp="14338793" />
  <Command __id="7772" _type="SelectTextCommand" caretOffset="690" date="Tue Nov 21 14:53:07 EST 2023" end="690" start="676" starttimestamp="1700582044267" timestamp="14343392" />
  <Command __id="7773" _type="MoveCaretCommand" caretOffset="690" date="Tue Nov 21 14:53:07 EST 2023" docOffset="690" starttimestamp="1700582044267" timestamp="14343732" />
  <Command __id="7774" _type="SelectTextCommand" caretOffset="537" date="Tue Nov 21 14:53:28 EST 2023" end="572" start="537" starttimestamp="1700582044267" timestamp="14364712" />
  <Command __id="7775" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:53:29 EST 2023" starttimestamp="1700582044267" timestamp="14365286" />
  <Command __id="7776" _type="InsertStringCommand" date="Tue Nov 21 14:53:31 EST 2023" starttimestamp="1700582044267" timestamp="14367307" timestamp2="14367307">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7777" _type="InsertStringCommand" date="Tue Nov 21 14:53:31 EST 2023" starttimestamp="1700582044267" timestamp="14367393" timestamp2="14367393">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="7778" _type="InsertStringCommand" date="Tue Nov 21 14:53:31 EST 2023" starttimestamp="1700582044267" timestamp="14367532" timestamp2="14367532">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7779" _type="SelectTextCommand" caretOffset="639" date="Tue Nov 21 14:53:40 EST 2023" end="639" start="551" starttimestamp="1700582044267" timestamp="14376201" />
  <Command __id="7780" _type="MoveCaretCommand" caretOffset="540" date="Tue Nov 21 14:53:42 EST 2023" docOffset="540" starttimestamp="1700582044267" timestamp="14378085" />
  <Command __id="7781" _type="InsertStringCommand" date="Tue Nov 21 14:53:44 EST 2023" starttimestamp="1700582044267" timestamp="14379909" timestamp2="14379909">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7782" _type="InsertStringCommand" date="Tue Nov 21 14:53:44 EST 2023" starttimestamp="1700582044267" timestamp="14380140" timestamp2="14380140">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="7783" _type="InsertStringCommand" date="Tue Nov 21 14:53:44 EST 2023" starttimestamp="1700582044267" timestamp="14380383" timestamp2="14380383">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="7784" _type="InsertStringCommand" date="Tue Nov 21 14:53:44 EST 2023" starttimestamp="1700582044267" timestamp="14380696" timestamp2="14380696">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7785" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:53:45 EST 2023" starttimestamp="1700582044267" timestamp="14381117" />
  <Command __id="7786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:53:45 EST 2023" starttimestamp="1700582044267" timestamp="14381232" />
  <Command __id="7787" _type="InsertStringCommand" date="Tue Nov 21 14:53:45 EST 2023" starttimestamp="1700582044267" timestamp="14381419" timestamp2="14381419">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="7788" _type="InsertStringCommand" date="Tue Nov 21 14:53:46 EST 2023" starttimestamp="1700582044267" timestamp="14381757" timestamp2="14381757">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7789" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:53:46 EST 2023" starttimestamp="1700582044267" timestamp="14382032" />
  <Command __id="7790" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:53:46 EST 2023" starttimestamp="1700582044267" timestamp="14382132" />
  <Command __id="7791" _type="InsertStringCommand" date="Tue Nov 21 14:53:46 EST 2023" starttimestamp="1700582044267" timestamp="14382616" timestamp2="14382616">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="7792" _type="InsertStringCommand" date="Tue Nov 21 14:53:47 EST 2023" starttimestamp="1700582044267" timestamp="14382740" timestamp2="14382740">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7793" _type="InsertStringCommand" date="Tue Nov 21 14:53:47 EST 2023" starttimestamp="1700582044267" timestamp="14382873" timestamp2="14382873">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7794" _type="InsertStringCommand" date="Tue Nov 21 14:53:47 EST 2023" starttimestamp="1700582044267" timestamp="14383048" timestamp2="14383048">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7795" _type="InsertStringCommand" date="Tue Nov 21 14:53:47 EST 2023" starttimestamp="1700582044267" timestamp="14383204" timestamp2="14383204">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7796" _type="InsertStringCommand" date="Tue Nov 21 14:53:47 EST 2023" starttimestamp="1700582044267" timestamp="14383303" timestamp2="14383303">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7797" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 14:53:47 EST 2023" starttimestamp="1700582044267" timestamp="14383580" />
  <Command __id="7798" _type="InsertStringCommand" date="Tue Nov 21 14:53:48 EST 2023" starttimestamp="1700582044267" timestamp="14384541" timestamp2="14384541">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="7799" _type="InsertStringCommand" date="Tue Nov 21 14:53:48 EST 2023" starttimestamp="1700582044267" timestamp="14384714" timestamp2="14384714">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7800" _type="MoveCaretCommand" caretOffset="653" date="Tue Nov 21 14:53:50 EST 2023" docOffset="653" starttimestamp="1700582044267" timestamp="14386228" />
  <Command __id="7801" _type="SelectTextCommand" caretOffset="780" date="Tue Nov 21 14:53:52 EST 2023" end="780" start="650" starttimestamp="1700582044267" timestamp="14388708" />
  <Command __id="7802" _type="MoveCaretCommand" caretOffset="643" date="Tue Nov 21 14:53:54 EST 2023" docOffset="643" starttimestamp="1700582044267" timestamp="14390088" />
  <Command __id="7803" _type="BalloonCommand" date="Tue Nov 21 14:54:04 EST 2023" message="*******************************************
Worked 33 minutes(fixed)/34 minutes(context based) from
Tue Nov 21 14:19:24 EST 2023 to Tue Nov 21 14:53:54 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 2 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java
Number of insert: 477
Number of delete: 550
" starttimestamp="1700582044267" timestamp="14400057">
    <fineGrainedWorkTime><![CDATA[34]]></fineGrainedWorkTime>
    <insert><![CDATA[477]]></insert>
    <startTime><![CDATA[1700594364894]]></startTime>
    <endTime><![CDATA[1700596434355]]></endTime>
    <workTime><![CDATA[33]]></workTime>
    <delete><![CDATA[550]]></delete>
  </Command>
  <Command __id="7804" _type="MoveCaretCommand" caretOffset="780" date="Tue Nov 21 14:54:04 EST 2023" docOffset="780" starttimestamp="1700582044267" timestamp="14400491" />
  <Command __id="7805" _type="MoveCaretCommand" caretOffset="622" date="Tue Nov 21 14:54:10 EST 2023" docOffset="622" starttimestamp="1700582044267" timestamp="14405831" />
  <Command __id="7806" _type="MoveCaretCommand" caretOffset="777" date="Tue Nov 21 14:54:10 EST 2023" docOffset="777" starttimestamp="1700582044267" timestamp="14406361" />
  <Command __id="7807" _type="MoveCaretCommand" caretOffset="709" date="Tue Nov 21 14:54:11 EST 2023" docOffset="709" starttimestamp="1700582044267" timestamp="14407224" />
  <Command __id="7808" _type="MoveCaretCommand" caretOffset="777" date="Tue Nov 21 14:54:18 EST 2023" docOffset="777" starttimestamp="1700582044267" timestamp="14413858" />
  <Command __id="7809" _type="SelectTextCommand" caretOffset="758" date="Tue Nov 21 14:54:21 EST 2023" end="758" start="744" starttimestamp="1700582044267" timestamp="14416908" />
  <Command __id="7810" _type="InsertStringCommand" date="Tue Nov 21 14:54:23 EST 2023" starttimestamp="1700582044267" timestamp="14418775" timestamp2="14418775">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7811" _type="InsertStringCommand" date="Tue Nov 21 14:54:23 EST 2023" starttimestamp="1700582044267" timestamp="14418897" timestamp2="14418897">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7812" _type="InsertStringCommand" date="Tue Nov 21 14:54:23 EST 2023" starttimestamp="1700582044267" timestamp="14419010" timestamp2="14419010">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7813" _type="InsertStringCommand" date="Tue Nov 21 14:54:23 EST 2023" starttimestamp="1700582044267" timestamp="14419149" timestamp2="14419149">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7814" _type="InsertStringCommand" date="Tue Nov 21 14:54:23 EST 2023" starttimestamp="1700582044267" timestamp="14419695" timestamp2="14419695">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7815" _type="InsertStringCommand" date="Tue Nov 21 14:54:24 EST 2023" starttimestamp="1700582044267" timestamp="14420058" timestamp2="14420058">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7816" _type="InsertStringCommand" date="Tue Nov 21 14:54:24 EST 2023" starttimestamp="1700582044267" timestamp="14420407" timestamp2="14420407">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7817" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:54:24 EST 2023" starttimestamp="1700582044267" timestamp="14420731" />
  <Command __id="7818" _type="InsertStringCommand" date="Tue Nov 21 14:54:25 EST 2023" starttimestamp="1700582044267" timestamp="14420919" timestamp2="14420919">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7819" _type="InsertStringCommand" date="Tue Nov 21 14:54:25 EST 2023" starttimestamp="1700582044267" timestamp="14421073" timestamp2="14421073">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7820" _type="InsertStringCommand" date="Tue Nov 21 14:54:25 EST 2023" starttimestamp="1700582044267" timestamp="14421160" timestamp2="14421160">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7821" _type="InsertStringCommand" date="Tue Nov 21 14:54:25 EST 2023" starttimestamp="1700582044267" timestamp="14421298" timestamp2="14421298">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7822" _type="InsertStringCommand" date="Tue Nov 21 14:54:25 EST 2023" starttimestamp="1700582044267" timestamp="14421383" timestamp2="14421383">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7823" _type="InsertStringCommand" date="Tue Nov 21 14:54:25 EST 2023" starttimestamp="1700582044267" timestamp="14421545" timestamp2="14421545">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7824" _type="InsertStringCommand" date="Tue Nov 21 14:54:28 EST 2023" starttimestamp="1700582044267" timestamp="14424121" timestamp2="14424121">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7825" _type="InsertStringCommand" date="Tue Nov 21 14:54:28 EST 2023" starttimestamp="1700582044267" timestamp="14424333" timestamp2="14424333">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="7826" _type="InsertStringCommand" date="Tue Nov 21 14:54:28 EST 2023" starttimestamp="1700582044267" timestamp="14424467" timestamp2="14424467">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7827" _type="InsertStringCommand" date="Tue Nov 21 14:54:28 EST 2023" starttimestamp="1700582044267" timestamp="14424550" timestamp2="14424550">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7828" _type="InsertStringCommand" date="Tue Nov 21 14:54:28 EST 2023" starttimestamp="1700582044267" timestamp="14424653" timestamp2="14424653">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7829" _type="InsertStringCommand" date="Tue Nov 21 14:54:29 EST 2023" starttimestamp="1700582044267" timestamp="14425035" timestamp2="14425035">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7830" _type="InsertStringCommand" date="Tue Nov 21 14:54:29 EST 2023" starttimestamp="1700582044267" timestamp="14425083" timestamp2="14425083">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7831" _type="InsertStringCommand" date="Tue Nov 21 14:54:29 EST 2023" starttimestamp="1700582044267" timestamp="14425237" timestamp2="14425237">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7832" _type="InsertStringCommand" date="Tue Nov 21 14:54:31 EST 2023" starttimestamp="1700582044267" timestamp="14426895" timestamp2="14426895">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7833" _type="InsertStringCommand" date="Tue Nov 21 14:54:31 EST 2023" starttimestamp="1700582044267" timestamp="14427197" timestamp2="14427197">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7834" _type="InsertStringCommand" date="Tue Nov 21 14:54:31 EST 2023" starttimestamp="1700582044267" timestamp="14427285" timestamp2="14427285">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7835" _type="InsertStringCommand" date="Tue Nov 21 14:54:31 EST 2023" starttimestamp="1700582044267" timestamp="14427409" timestamp2="14427409">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7836" _type="InsertStringCommand" date="Tue Nov 21 14:54:32 EST 2023" starttimestamp="1700582044267" timestamp="14427962" timestamp2="14427962">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7837" _type="InsertStringCommand" date="Tue Nov 21 14:54:32 EST 2023" starttimestamp="1700582044267" timestamp="14428684" timestamp2="14428684">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="7838" _type="InsertStringCommand" date="Tue Nov 21 14:54:34 EST 2023" starttimestamp="1700582044267" timestamp="14429793" timestamp2="14429793">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7839" _type="InsertStringCommand" date="Tue Nov 21 14:54:34 EST 2023" starttimestamp="1700582044267" timestamp="14430513" timestamp2="14430513">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7840" _type="InsertStringCommand" date="Tue Nov 21 14:54:34 EST 2023" starttimestamp="1700582044267" timestamp="14430602" timestamp2="14430602">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7841" _type="InsertStringCommand" date="Tue Nov 21 14:54:35 EST 2023" starttimestamp="1700582044267" timestamp="14430787" timestamp2="14430787">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7842" _type="InsertStringCommand" date="Tue Nov 21 14:54:35 EST 2023" starttimestamp="1700582044267" timestamp="14431067" timestamp2="14431067">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7843" _type="InsertStringCommand" date="Tue Nov 21 14:54:35 EST 2023" starttimestamp="1700582044267" timestamp="14431325" timestamp2="14431325">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7844" _type="InsertStringCommand" date="Tue Nov 21 14:54:35 EST 2023" starttimestamp="1700582044267" timestamp="14431430" timestamp2="14431430">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7845" _type="InsertStringCommand" date="Tue Nov 21 14:54:35 EST 2023" starttimestamp="1700582044267" timestamp="14431531" timestamp2="14431531">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7846" _type="InsertStringCommand" date="Tue Nov 21 14:54:36 EST 2023" starttimestamp="1700582044267" timestamp="14431737" timestamp2="14431737">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7847" _type="InsertStringCommand" date="Tue Nov 21 14:54:36 EST 2023" starttimestamp="1700582044267" timestamp="14431749" timestamp2="14431749">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7848" _type="InsertStringCommand" date="Tue Nov 21 14:54:36 EST 2023" starttimestamp="1700582044267" timestamp="14431915" timestamp2="14431915">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7849" _type="InsertStringCommand" date="Tue Nov 21 14:54:36 EST 2023" starttimestamp="1700582044267" timestamp="14431925" timestamp2="14431925">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7850" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:54:36 EST 2023" starttimestamp="1700582044267" timestamp="14432462" />
  <Command __id="7851" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:54:36 EST 2023" starttimestamp="1700582044267" timestamp="14432576" />
  <Command __id="7852" _type="InsertStringCommand" date="Tue Nov 21 14:54:37 EST 2023" starttimestamp="1700582044267" timestamp="14432778" timestamp2="14432778">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7853" _type="InsertStringCommand" date="Tue Nov 21 14:54:37 EST 2023" starttimestamp="1700582044267" timestamp="14432868" timestamp2="14432868">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7854" _type="MoveCaretCommand" caretOffset="753" date="Tue Nov 21 14:54:40 EST 2023" docOffset="753" starttimestamp="1700582044267" timestamp="14435808" />
  <Command __id="7855" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:54:40 EST 2023" starttimestamp="1700582044267" timestamp="14436144" />
  <Command __id="7856" _type="MoveCaretCommand" caretOffset="802" date="Tue Nov 21 14:54:45 EST 2023" docOffset="802" starttimestamp="1700582044267" timestamp="14440885" />
  <Command __id="7857" _type="InsertStringCommand" date="Tue Nov 21 14:54:46 EST 2023" starttimestamp="1700582044267" timestamp="14441951" timestamp2="14441951">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7858" _type="InsertStringCommand" date="Tue Nov 21 14:54:46 EST 2023" starttimestamp="1700582044267" timestamp="14442002" timestamp2="14442002">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7859" _type="InsertStringCommand" date="Tue Nov 21 14:54:46 EST 2023" starttimestamp="1700582044267" timestamp="14442116" timestamp2="14442116">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7860" _type="InsertStringCommand" date="Tue Nov 21 14:54:46 EST 2023" starttimestamp="1700582044267" timestamp="14442223" timestamp2="14442223">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7861" _type="InsertStringCommand" date="Tue Nov 21 14:54:47 EST 2023" starttimestamp="1700582044267" timestamp="14443113" timestamp2="14443113">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="7862" _type="InsertStringCommand" date="Tue Nov 21 14:54:47 EST 2023" starttimestamp="1700582044267" timestamp="14443298" timestamp2="14443298">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7863" _type="InsertStringCommand" date="Tue Nov 21 14:54:47 EST 2023" starttimestamp="1700582044267" timestamp="14443487" timestamp2="14443487">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7864" _type="InsertStringCommand" date="Tue Nov 21 14:54:47 EST 2023" starttimestamp="1700582044267" timestamp="14443505" timestamp2="14443505">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7865" _type="InsertStringCommand" date="Tue Nov 21 14:54:47 EST 2023" starttimestamp="1700582044267" timestamp="14443646" timestamp2="14443646">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7866" _type="InsertStringCommand" date="Tue Nov 21 14:54:48 EST 2023" starttimestamp="1700582044267" timestamp="14443823" timestamp2="14443823">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7867" _type="InsertStringCommand" date="Tue Nov 21 14:54:48 EST 2023" starttimestamp="1700582044267" timestamp="14443860" timestamp2="14443860">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="7868" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:54:48 EST 2023" starttimestamp="1700582044267" timestamp="14444129" />
  <Command __id="7869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:54:48 EST 2023" starttimestamp="1700582044267" timestamp="14444559" />
  <Command __id="7870" _type="InsertStringCommand" date="Tue Nov 21 14:54:49 EST 2023" starttimestamp="1700582044267" timestamp="14444957" timestamp2="14444957">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="7871" _type="InsertStringCommand" date="Tue Nov 21 14:54:49 EST 2023" starttimestamp="1700582044267" timestamp="14445081" timestamp2="14445081">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7872" _type="InsertStringCommand" date="Tue Nov 21 14:54:49 EST 2023" starttimestamp="1700582044267" timestamp="14445168" timestamp2="14445168">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7873" _type="InsertStringCommand" date="Tue Nov 21 14:54:49 EST 2023" starttimestamp="1700582044267" timestamp="14445318" timestamp2="14445318">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7874" _type="MoveCaretCommand" caretOffset="819" date="Tue Nov 21 14:55:04 EST 2023" docOffset="819" starttimestamp="1700582044267" timestamp="14460077" />
  <Command __id="7875" _type="MoveCaretCommand" caretOffset="644" date="Tue Nov 21 14:55:19 EST 2023" docOffset="644" starttimestamp="1700582044267" timestamp="14474741" />
  <Command __id="7876" _type="SelectTextCommand" caretOffset="773" date="Tue Nov 21 14:55:22 EST 2023" end="773" start="643" starttimestamp="1700582044267" timestamp="14478532" />
  <Command __id="7877" _type="InsertStringCommand" date="Tue Nov 21 14:55:23 EST 2023" starttimestamp="1700582044267" timestamp="14478978" timestamp2="14478978">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7878" _type="InsertStringCommand" date="Tue Nov 21 14:55:23 EST 2023" starttimestamp="1700582044267" timestamp="14479278" timestamp2="14479278">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7879" _type="MoveCaretCommand" caretOffset="780" date="Tue Nov 21 14:55:26 EST 2023" docOffset="780" starttimestamp="1700582044267" timestamp="14481885" />
  <Command __id="7880" _type="MoveCaretCommand" caretOffset="777" date="Tue Nov 21 14:55:27 EST 2023" docOffset="777" starttimestamp="1700582044267" timestamp="14483471" />
  <Command __id="7881" _type="InsertStringCommand" date="Tue Nov 21 14:55:28 EST 2023" starttimestamp="1700582044267" timestamp="14483972" timestamp2="14483972">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7882" _type="InsertStringCommand" date="Tue Nov 21 14:55:28 EST 2023" starttimestamp="1700582044267" timestamp="14484151" timestamp2="14484151">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="7883" _type="InsertStringCommand" date="Tue Nov 21 14:55:28 EST 2023" starttimestamp="1700582044267" timestamp="14484271" timestamp2="14484271">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7884" _type="InsertStringCommand" date="Tue Nov 21 14:55:28 EST 2023" starttimestamp="1700582044267" timestamp="14484382" timestamp2="14484382">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7885" _type="InsertStringCommand" date="Tue Nov 21 14:55:29 EST 2023" starttimestamp="1700582044267" timestamp="14484960" timestamp2="14484960">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="7886" _type="InsertStringCommand" date="Tue Nov 21 14:55:29 EST 2023" starttimestamp="1700582044267" timestamp="14485163" timestamp2="14485163">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7887" _type="MoveCaretCommand" caretOffset="616" date="Tue Nov 21 14:55:43 EST 2023" docOffset="616" starttimestamp="1700582044267" timestamp="14499380" />
  <Command __id="7888" _type="MoveCaretCommand" caretOffset="617" date="Tue Nov 21 14:55:44 EST 2023" docOffset="617" starttimestamp="1700582044267" timestamp="14500022" />
  <Command __id="7889" _type="InsertStringCommand" date="Tue Nov 21 14:55:48 EST 2023" starttimestamp="1700582044267" timestamp="14504470" timestamp2="14504470">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7890" _type="InsertStringCommand" date="Tue Nov 21 14:55:48 EST 2023" starttimestamp="1700582044267" timestamp="14504542" timestamp2="14504542">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7891" _type="InsertStringCommand" date="Tue Nov 21 14:55:48 EST 2023" starttimestamp="1700582044267" timestamp="14504681" timestamp2="14504681">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7892" _type="InsertStringCommand" date="Tue Nov 21 14:55:49 EST 2023" starttimestamp="1700582044267" timestamp="14504922" timestamp2="14504922">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7893" _type="InsertStringCommand" date="Tue Nov 21 14:55:49 EST 2023" starttimestamp="1700582044267" timestamp="14505090" timestamp2="14505090">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7894" _type="InsertStringCommand" date="Tue Nov 21 14:55:49 EST 2023" starttimestamp="1700582044267" timestamp="14505211" timestamp2="14505211">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7895" _type="InsertStringCommand" date="Tue Nov 21 14:55:49 EST 2023" starttimestamp="1700582044267" timestamp="14505318" timestamp2="14505318">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="7896" _type="InsertStringCommand" date="Tue Nov 21 14:55:49 EST 2023" starttimestamp="1700582044267" timestamp="14505555" timestamp2="14505555">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7897" _type="InsertStringCommand" date="Tue Nov 21 14:55:50 EST 2023" starttimestamp="1700582044267" timestamp="14506147" timestamp2="14506147">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="7898" _type="InsertStringCommand" date="Tue Nov 21 14:55:50 EST 2023" starttimestamp="1700582044267" timestamp="14506401" timestamp2="14506401">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7899" _type="MoveCaretCommand" caretOffset="534" date="Tue Nov 21 14:55:52 EST 2023" docOffset="534" starttimestamp="1700582044267" timestamp="14507931" />
  <Command __id="7900" _type="MoveCaretCommand" caretOffset="754" date="Tue Nov 21 14:55:54 EST 2023" docOffset="754" starttimestamp="1700582044267" timestamp="14509992" />
  <Command __id="7901" _type="MoveCaretCommand" caretOffset="487" date="Tue Nov 21 14:55:55 EST 2023" docOffset="487" starttimestamp="1700582044267" timestamp="14511031" />
  <Command __id="7902" _type="SelectTextCommand" caretOffset="489" date="Tue Nov 21 14:55:55 EST 2023" end="489" start="479" starttimestamp="1700582044267" timestamp="14511172" />
  <Command __id="7903" _type="SelectTextCommand" caretOffset="768" date="Tue Nov 21 14:55:57 EST 2023" end="768" start="754" starttimestamp="1700582044267" timestamp="14513372" />
  <Command __id="7904" _type="InsertStringCommand" date="Tue Nov 21 14:55:59 EST 2023" starttimestamp="1700582044267" timestamp="14514934" timestamp2="14514934">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7905" _type="InsertStringCommand" date="Tue Nov 21 14:55:59 EST 2023" starttimestamp="1700582044267" timestamp="14515121" timestamp2="14515121">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="7906" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 14:56:00 EST 2023" starttimestamp="1700582044267" timestamp="14515743" />
  <Command __id="7907" _type="InsertStringCommand" date="Tue Nov 21 14:56:02 EST 2023" starttimestamp="1700582044267" timestamp="14518430" timestamp2="14518430">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7908" _type="InsertStringCommand" date="Tue Nov 21 14:56:02 EST 2023" starttimestamp="1700582044267" timestamp="14518637" timestamp2="14518637">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="7909" _type="InsertStringCommand" date="Tue Nov 21 14:56:03 EST 2023" starttimestamp="1700582044267" timestamp="14518794" timestamp2="14518794">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7910" _type="InsertStringCommand" date="Tue Nov 21 14:56:03 EST 2023" starttimestamp="1700582044267" timestamp="14518887" timestamp2="14518887">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7911" _type="InsertStringCommand" date="Tue Nov 21 14:56:03 EST 2023" starttimestamp="1700582044267" timestamp="14519025" timestamp2="14519025">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="7912" _type="InsertStringCommand" date="Tue Nov 21 14:56:03 EST 2023" starttimestamp="1700582044267" timestamp="14519372" timestamp2="14519372">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7913" _type="InsertStringCommand" date="Tue Nov 21 14:56:03 EST 2023" starttimestamp="1700582044267" timestamp="14519484" timestamp2="14519484">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7914" _type="InsertStringCommand" date="Tue Nov 21 14:56:03 EST 2023" starttimestamp="1700582044267" timestamp="14519635" timestamp2="14519635">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7915" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14519782" />
  <Command __id="7916" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14519869" />
  <Command __id="7917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14519999" />
  <Command __id="7918" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14520143" />
  <Command __id="7919" _type="InsertStringCommand" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14520365" timestamp2="14520365">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7920" _type="InsertStringCommand" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14520449" timestamp2="14520449">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="7921" _type="InsertStringCommand" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14520549" timestamp2="14520549">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7922" _type="InsertStringCommand" date="Tue Nov 21 14:56:04 EST 2023" starttimestamp="1700582044267" timestamp="14520677" timestamp2="14520677">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7923" _type="InsertStringCommand" date="Tue Nov 21 14:56:05 EST 2023" starttimestamp="1700582044267" timestamp="14520906" timestamp2="14520906">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="7924" _type="InsertStringCommand" date="Tue Nov 21 14:56:05 EST 2023" starttimestamp="1700582044267" timestamp="14521304" timestamp2="14521304">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7925" _type="InsertStringCommand" date="Tue Nov 21 14:56:06 EST 2023" starttimestamp="1700582044267" timestamp="14522344" timestamp2="14522344">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="7926" _type="InsertStringCommand" date="Tue Nov 21 14:56:06 EST 2023" starttimestamp="1700582044267" timestamp="14522518" timestamp2="14522518">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="7927" _type="InsertStringCommand" date="Tue Nov 21 14:56:07 EST 2023" starttimestamp="1700582044267" timestamp="14522741" timestamp2="14522741">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7928" _type="InsertStringCommand" date="Tue Nov 21 14:56:07 EST 2023" starttimestamp="1700582044267" timestamp="14522863" timestamp2="14522863">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7929" _type="InsertStringCommand" date="Tue Nov 21 14:56:07 EST 2023" starttimestamp="1700582044267" timestamp="14523055" timestamp2="14523055">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="7930" _type="InsertStringCommand" date="Tue Nov 21 14:56:07 EST 2023" starttimestamp="1700582044267" timestamp="14523214" timestamp2="14523214">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7931" _type="InsertStringCommand" date="Tue Nov 21 14:56:07 EST 2023" starttimestamp="1700582044267" timestamp="14523530" timestamp2="14523530">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7932" _type="InsertStringCommand" date="Tue Nov 21 14:56:07 EST 2023" starttimestamp="1700582044267" timestamp="14523722" timestamp2="14523722">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="7933" _type="InsertStringCommand" date="Tue Nov 21 14:56:08 EST 2023" starttimestamp="1700582044267" timestamp="14523940" timestamp2="14523940">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7934" _type="InsertStringCommand" date="Tue Nov 21 14:56:08 EST 2023" starttimestamp="1700582044267" timestamp="14524132" timestamp2="14524132">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="7935" _type="InsertStringCommand" date="Tue Nov 21 14:56:08 EST 2023" starttimestamp="1700582044267" timestamp="14524239" timestamp2="14524239">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="7936" _type="InsertStringCommand" date="Tue Nov 21 14:56:08 EST 2023" starttimestamp="1700582044267" timestamp="14524323" timestamp2="14524323">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7937" _type="InsertStringCommand" date="Tue Nov 21 14:56:08 EST 2023" starttimestamp="1700582044267" timestamp="14524397" timestamp2="14524397">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7941" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:56:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14531569" type="Run" />
  <Command __id="7757" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:52:40 EST 2023" docASTNodeCount="122" docActiveCodeLength="713" docExpressionCount="91" docLength="713" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14316130">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(INSERT,"import main.lisp.parser.terms.ExpressionFactory;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		"), Diff(INSERT,"return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println(expr.getHead());		"), Diff(EQUAL,"return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);	}	"), Diff(DELETE,"	"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
		
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		System.out.println(expr.getHead());
		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="7942" _type="ShellCommand" date="Tue Nov 21 14:56:20 EST 2023" starttimestamp="1700582044267" timestamp="14536238" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7943" _type="ShellCommand" date="Tue Nov 21 14:56:21 EST 2023" starttimestamp="1700582044267" timestamp="14537159" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7944" _type="ConsoleOutput" date="Tue Nov 21 14:56:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14537552" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(CONS 1 2)¶(1 . 2)"), Diff(INSERT,"Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7946" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:56:21 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14537556" type="Run" />
  <Command __id="7947" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:56:21 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14537556" type="Run" />
  <Command __id="7945" _type="ConsoleOutput" date="Tue Nov 21 14:56:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14537556" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:19)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)¶	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:19)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7949" _type="MoveCaretCommand" caretOffset="959" date="Tue Nov 21 14:56:26 EST 2023" docOffset="959" starttimestamp="1700582044267" timestamp="14542497" />
  <Command __id="7950" _type="MoveCaretCommand" caretOffset="959" date="Tue Nov 21 14:56:26 EST 2023" docOffset="959" starttimestamp="1700582044267" timestamp="14542500" />
  <Command __id="7948" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 14:56:26 EST 2023" docASTNodeCount="154" docActiveCodeLength="967" docExpressionCount="120" docLength="967" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14542434">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		"), Diff(DELETE,"System.out.println(expr.getHead());"), Diff(INSERT,"if(BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().getHead().toString()) != null) {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(evalHelper(expr.getHead(), environment), environment);		}else {	"), Diff(EQUAL,"		return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);	"), Diff(INSERT,"	}			"), Diff(EQUAL,"}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
		
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().getHead().toString()) != null) {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(evalHelper(expr.getHead(), environment), environment);
		}else {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().getHead().toString()).eval(expr.getHead(), environment);
		}
		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="7951" _type="MoveCaretCommand" caretOffset="402" date="Tue Nov 21 14:56:58 EST 2023" docOffset="402" starttimestamp="1700582044267" timestamp="14574677" />
  <Command __id="7952" _type="MoveCaretCommand" caretOffset="402" date="Tue Nov 21 14:56:58 EST 2023" docOffset="402" starttimestamp="1700582044267" timestamp="14574677" />
  <DocumentChange __id="7953" _type="Insert" date="Tue Nov 21 14:57:01 EST 2023" docASTNodeCount="156" docActiveCodeLength="972" docExpressionCount="122" docLength="972" length="5" offset="402" repeat="5" starttimestamp="1700582044267" timestamp="14577620" timestamp2="14578247">
    <text><![CDATA[.getT]]></text>
  </DocumentChange>
  <Command __id="7954" _type="InsertStringCommand" date="Tue Nov 21 14:57:01 EST 2023" starttimestamp="1700582044267" timestamp="14577622" timestamp2="14577622">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7955" _type="InsertStringCommand" date="Tue Nov 21 14:57:01 EST 2023" starttimestamp="1700582044267" timestamp="14577622" timestamp2="14577622">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="7956" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:57:01 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14577635" />
  <DocumentChange __id="7961" _type="Delete" date="Tue Nov 21 14:57:02 EST 2023" docASTNodeCount="156" docActiveCodeLength="971" docExpressionCount="122" docLength="971" endLine="12" length="1" offset="406" startLine="12" starttimestamp="1700582044267" timestamp="14578524">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="7962" _type="Insert" date="Tue Nov 21 14:57:02 EST 2023" docASTNodeCount="156" docActiveCodeLength="977" docExpressionCount="122" docLength="977" length="6" offset="406" repeat="5" starttimestamp="1700582044267" timestamp="14578696" timestamp2="14579557">
    <text><![CDATA[Head()]]></text>
  </DocumentChange>
  <Command __id="7967" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:57:04 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14580674" />
  <Command __id="7968" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 14:57:04 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="14580732" />
  <Command __id="7969" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 14:57:04 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="14580732" />
  <DocumentChange __id="7970" _type="Insert" date="Tue Nov 21 14:57:05 EST 2023" docASTNodeCount="158" docActiveCodeLength="985" docExpressionCount="123" docLength="985" length="8" offset="413" repeat="6" starttimestamp="1700582044267" timestamp="14581116" timestamp2="14581774">
    <text><![CDATA[
		print]]></text>
  </DocumentChange>
  <Command __id="7971" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581120" timestamp2="14581120">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7972" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581120" timestamp2="14581120">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="7974" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581458" timestamp2="14581458">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7975" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581458" timestamp2="14581458">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="7977" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581562" timestamp2="14581562">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7978" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581562" timestamp2="14581562">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="7980" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581661" timestamp2="14581661">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7981" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581661" timestamp2="14581661">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7983" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581721" timestamp2="14581721">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7984" _type="InsertStringCommand" date="Tue Nov 21 14:57:05 EST 2023" starttimestamp="1700582044267" timestamp="14581721" timestamp2="14581721">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="7986" _type="InsertStringCommand" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14581776" timestamp2="14581776">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="7987" _type="InsertStringCommand" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14581776" timestamp2="14581776">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="7988" _type="Delete" date="Tue Nov 21 14:57:06 EST 2023" docASTNodeCount="156" docActiveCodeLength="980" docExpressionCount="122" docLength="980" endLine="13" length="5" offset="416" repeat="5" startLine="13" starttimestamp="1700582044267" timestamp="14581993" timestamp2="14582470">
    <text><![CDATA[print]]></text>
  </DocumentChange>
  <Command __id="7989" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14581995" />
  <Command __id="7990" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14581996" />
  <Command __id="7992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582097" />
  <Command __id="7993" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582097" />
  <Command __id="7995" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582224" />
  <Command __id="7996" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582224" />
  <Command __id="7998" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582348" />
  <Command __id="7999" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582348" />
  <Command __id="8001" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582471" />
  <Command __id="8002" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:06 EST 2023" starttimestamp="1700582044267" timestamp="14582471" />
  <DocumentChange __id="8003" _type="Insert" date="Tue Nov 21 14:57:07 EST 2023" docASTNodeCount="158" docActiveCodeLength="981" docExpressionCount="123" docLength="981" length="1" offset="416" starttimestamp="1700582044267" timestamp="14582774">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="8004" _type="Delete" date="Tue Nov 21 14:57:07 EST 2023" docASTNodeCount="156" docActiveCodeLength="978" docExpressionCount="122" docLength="978" endLine="13" length="3" offset="414" repeat="3" startLine="13" starttimestamp="1700582044267" timestamp="14583362" timestamp2="14583406">
    <text><![CDATA[		s]]></text>
  </DocumentChange>
  <Command __id="8006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:07 EST 2023" starttimestamp="1700582044267" timestamp="14583365" />
  <Command __id="8007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:07 EST 2023" starttimestamp="1700582044267" timestamp="14583365" />
  <Command __id="8009" _type="InsertStringCommand" date="Tue Nov 21 14:57:07 EST 2023" starttimestamp="1700582044267" timestamp="14583407" timestamp2="14583407">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8010" _type="InsertStringCommand" date="Tue Nov 21 14:57:07 EST 2023" starttimestamp="1700582044267" timestamp="14583407" timestamp2="14583407">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="8011" _type="Insert" date="Tue Nov 21 14:57:08 EST 2023" docASTNodeCount="158" docActiveCodeLength="981" docExpressionCount="123" docLength="981" length="3" offset="414" repeat="2" starttimestamp="1700582044267" timestamp="14584107" timestamp2="14584682">
    <text><![CDATA[		S]]></text>
  </DocumentChange>
  <Command __id="8012" _type="InsertStringCommand" date="Tue Nov 21 14:57:08 EST 2023" starttimestamp="1700582044267" timestamp="14584110" timestamp2="14584110">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="8013" _type="InsertStringCommand" date="Tue Nov 21 14:57:08 EST 2023" starttimestamp="1700582044267" timestamp="14584110" timestamp2="14584110">
    <data><![CDATA[	]]></data>
  </Command>
  <DocumentChange __id="8015" _type="Replace" date="Tue Nov 21 14:57:09 EST 2023" docASTNodeCount="158" docActiveCodeLength="982" docExpressionCount="123" docLength="982" endLine="13" insertionLength="2" int_docASTNodeCount="156" int_docActiveCodeLength="980" int_docExpressionCount="122" int_docLength="980" length="1" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14584779">
    <deletedText><![CDATA[S]]></deletedText>
    <insertedText><![CDATA[SS]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8016" _type="Replace" date="Tue Nov 21 14:57:09 EST 2023" docASTNodeCount="156" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="13" insertionLength="5" int_docASTNodeCount="156" int_docActiveCodeLength="980" int_docExpressionCount="122" int_docLength="980" length="2" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14584949">
    <deletedText><![CDATA[SS]]></deletedText>
    <insertedText><![CDATA[S'S'y]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8017" _type="Replace" date="Tue Nov 21 14:57:09 EST 2023" docASTNodeCount="151" docActiveCodeLength="987" docExpressionCount="118" docLength="987" endLine="13" insertionLength="7" int_docASTNodeCount="156" int_docActiveCodeLength="980" int_docExpressionCount="122" int_docLength="980" length="5" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14585019">
    <deletedText><![CDATA[S'S'y]]></deletedText>
    <insertedText><![CDATA[S'S'y's]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8018" _type="Replace" date="Tue Nov 21 14:57:09 EST 2023" docASTNodeCount="156" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="13" insertionLength="5" int_docASTNodeCount="156" int_docActiveCodeLength="980" int_docExpressionCount="122" int_docLength="980" length="7" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14585302">
    <deletedText><![CDATA[S'S'y's]]></deletedText>
    <insertedText><![CDATA[S'S'y]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8019" _type="Replace" date="Tue Nov 21 14:57:09 EST 2023" docASTNodeCount="158" docActiveCodeLength="982" docExpressionCount="123" docLength="982" endLine="13" insertionLength="2" int_docASTNodeCount="156" int_docActiveCodeLength="980" int_docExpressionCount="122" int_docLength="980" length="5" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14585416">
    <deletedText><![CDATA[S'S'y]]></deletedText>
    <insertedText><![CDATA[SS]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8020" _type="Replace" date="Tue Nov 21 14:57:09 EST 2023" docASTNodeCount="158" docActiveCodeLength="981" docExpressionCount="123" docLength="981" endLine="13" insertionLength="1" int_docASTNodeCount="156" int_docActiveCodeLength="980" int_docExpressionCount="122" int_docLength="980" length="2" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14585537">
    <deletedText><![CDATA[SS]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8021" _type="Delete" date="Tue Nov 21 14:57:10 EST 2023" docASTNodeCount="156" docActiveCodeLength="980" docExpressionCount="122" docLength="980" endLine="13" length="1" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14585848">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <DocumentChange __id="8022" _type="Insert" date="Tue Nov 21 14:57:10 EST 2023" docASTNodeCount="158" docActiveCodeLength="981" docExpressionCount="123" docLength="981" length="1" offset="416" starttimestamp="1700582044267" timestamp="14586347">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="8023" _type="InsertStringCommand" date="Tue Nov 21 14:57:10 EST 2023" starttimestamp="1700582044267" timestamp="14586349" timestamp2="14586349">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8024" _type="InsertStringCommand" date="Tue Nov 21 14:57:10 EST 2023" starttimestamp="1700582044267" timestamp="14586349" timestamp2="14586349">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="8025" _type="Delete" date="Tue Nov 21 14:57:10 EST 2023" docASTNodeCount="156" docActiveCodeLength="980" docExpressionCount="122" docLength="980" endLine="13" length="1" offset="416" startLine="13" starttimestamp="1700582044267" timestamp="14586677">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="8026" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:10 EST 2023" starttimestamp="1700582044267" timestamp="14586679" />
  <Command __id="8027" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:10 EST 2023" starttimestamp="1700582044267" timestamp="14586679" />
  <DocumentChange __id="8028" _type="Insert" date="Tue Nov 21 14:57:11 EST 2023" docASTNodeCount="160" docActiveCodeLength="990" docExpressionCount="125" docLength="990" length="10" offset="416" repeat="10" starttimestamp="1700582044267" timestamp="14586818" timestamp2="14588054">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="8029" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14586820" timestamp2="14586820">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8030" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14586820" timestamp2="14586820">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="8032" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587052" timestamp2="14587052">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="8033" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587052" timestamp2="14587052">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="8035" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587144" timestamp2="14587144">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8036" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587144" timestamp2="14587144">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8038" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587358" timestamp2="14587358">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8039" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587358" timestamp2="14587358">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8041" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587418" timestamp2="14587418">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8042" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587418" timestamp2="14587418">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8044" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587504" timestamp2="14587504">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8045" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587504" timestamp2="14587504">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="8047" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587697" timestamp2="14587697">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8048" _type="InsertStringCommand" date="Tue Nov 21 14:57:11 EST 2023" starttimestamp="1700582044267" timestamp="14587697" timestamp2="14587697">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8049" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:57:11 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14587704" />
  <Command __id="8053" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:57:12 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14588261" />
  <DocumentChange __id="8054" _type="Replace" date="Tue Nov 21 14:57:12 EST 2023" docASTNodeCount="159" docActiveCodeLength="991" docExpressionCount="125" docLength="991" endLine="13" insertionLength="4" int_docASTNodeCount="157" int_docActiveCodeLength="987" int_docExpressionCount="123" int_docLength="987" length="3" offset="423" startLine="13" starttimestamp="1700582044267" timestamp="14588264">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8058" _type="Insert" date="Tue Nov 21 14:57:12 EST 2023" docASTNodeCount="162" docActiveCodeLength="1000" docExpressionCount="127" docLength="1000" length="9" offset="427" repeat="8" starttimestamp="1700582044267" timestamp="14588454" timestamp2="14589297">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <Command __id="8055" _type="InsertStringCommand" date="Tue Nov 21 14:57:12 EST 2023" starttimestamp="1700582044267" timestamp="14588269" timestamp2="14588269">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8056" _type="InsertStringCommand" date="Tue Nov 21 14:57:12 EST 2023" starttimestamp="1700582044267" timestamp="14588269" timestamp2="14588269">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8057" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:57:12 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14588279" />
  <Command __id="8067" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:57:15 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14591425" />
  <Command __id="8069" _type="InsertStringCommand" date="Tue Nov 21 14:57:15 EST 2023" starttimestamp="1700582044267" timestamp="14591619" timestamp2="14591619">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8070" _type="InsertStringCommand" date="Tue Nov 21 14:57:15 EST 2023" starttimestamp="1700582044267" timestamp="14591619" timestamp2="14591619">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8072" _type="InsertStringCommand" date="Tue Nov 21 14:57:16 EST 2023" starttimestamp="1700582044267" timestamp="14592013" timestamp2="14592013">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8073" _type="InsertStringCommand" date="Tue Nov 21 14:57:16 EST 2023" starttimestamp="1700582044267" timestamp="14592013" timestamp2="14592013">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8075" _type="InsertStringCommand" date="Tue Nov 21 14:57:16 EST 2023" starttimestamp="1700582044267" timestamp="14592110" timestamp2="14592110">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8076" _type="InsertStringCommand" date="Tue Nov 21 14:57:16 EST 2023" starttimestamp="1700582044267" timestamp="14592110" timestamp2="14592110">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8087" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:57:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14597611" type="Run" />
  <Command __id="8088" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:57:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14597611" type="Run" />
  <Command __id="8089" _type="ShellCommand" date="Tue Nov 21 14:57:22 EST 2023" starttimestamp="1700582044267" timestamp="14598315" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8090" _type="ShellCommand" date="Tue Nov 21 14:57:23 EST 2023" starttimestamp="1700582044267" timestamp="14598895" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8091" _type="PasteCommand" date="Tue Nov 21 14:57:24 EST 2023" starttimestamp="1700582044267" timestamp="14600213" />
  <Command __id="8092" _type="ConsoleOutput" date="Tue Nov 21 14:57:24 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14600585" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (CONS “ONE” 1))
Exception in thread "main" 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)¶	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:19)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(INSERT,"(QUOTE (CONS “ONE” 1))¶Exception in thread "main" "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8093" _type="ExceptionCommand" date="Tue Nov 21 14:57:24 EST 2023" starttimestamp="1700582044267" timestamp="14600588" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:20)
	at index.EvalEvaluator.eval(EvalEvaluator.java:15)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8094" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:57:24 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14600593" type="Run" />
  <Command __id="8095" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:57:24 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14600593" type="Run" />
  <Command __id="8096" _type="MoveCaretCommand" caretOffset="489" date="Tue Nov 21 14:57:31 EST 2023" docOffset="489" starttimestamp="1700582044267" timestamp="14607692" />
  <Command __id="8097" _type="MoveCaretCommand" caretOffset="489" date="Tue Nov 21 14:57:31 EST 2023" docOffset="489" starttimestamp="1700582044267" timestamp="14607692" />
  <Command __id="8098" _type="ShellCommand" date="Tue Nov 21 14:57:32 EST 2023" starttimestamp="1700582044267" timestamp="14608578" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8099" _type="ShellCommand" date="Tue Nov 21 14:57:33 EST 2023" starttimestamp="1700582044267" timestamp="14609206" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8100" _type="SelectTextCommand" caretOffset="664" date="Tue Nov 21 14:57:40 EST 2023" end="664" start="645" starttimestamp="1700582044267" timestamp="14616328" />
  <Command __id="8101" _type="SelectTextCommand" caretOffset="664" date="Tue Nov 21 14:57:40 EST 2023" end="664" start="645" starttimestamp="1700582044267" timestamp="14616329" />
  <Command __id="8102" _type="MoveCaretCommand" caretOffset="770" date="Tue Nov 21 14:57:40 EST 2023" docOffset="770" starttimestamp="1700582044267" timestamp="14616690" />
  <Command __id="8103" _type="MoveCaretCommand" caretOffset="770" date="Tue Nov 21 14:57:40 EST 2023" docOffset="770" starttimestamp="1700582044267" timestamp="14616690" />
  <Command __id="8104" _type="SelectTextCommand" caretOffset="774" date="Tue Nov 21 14:57:42 EST 2023" end="774" start="765" starttimestamp="1700582044267" timestamp="14618043" />
  <Command __id="8105" _type="SelectTextCommand" caretOffset="774" date="Tue Nov 21 14:57:42 EST 2023" end="774" start="765" starttimestamp="1700582044267" timestamp="14618044" />
  <Command __id="8107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:42 EST 2023" starttimestamp="1700582044267" timestamp="14618369" />
  <Command __id="8108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:42 EST 2023" starttimestamp="1700582044267" timestamp="14618369" />
  <Command __id="8110" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:43 EST 2023" starttimestamp="1700582044267" timestamp="14619065" />
  <Command __id="8111" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:57:43 EST 2023" starttimestamp="1700582044267" timestamp="14619066" />
  <Command __id="8112" _type="MoveCaretCommand" caretOffset="484" date="Tue Nov 21 14:57:43 EST 2023" docOffset="484" starttimestamp="1700582044267" timestamp="14619701" />
  <Command __id="8113" _type="MoveCaretCommand" caretOffset="484" date="Tue Nov 21 14:57:43 EST 2023" docOffset="484" starttimestamp="1700582044267" timestamp="14619701" />
  <Command __id="8114" _type="MoveCaretCommand" caretOffset="763" date="Tue Nov 21 14:57:49 EST 2023" docOffset="763" starttimestamp="1700582044267" timestamp="14624780" />
  <Command __id="8115" _type="MoveCaretCommand" caretOffset="763" date="Tue Nov 21 14:57:49 EST 2023" docOffset="763" starttimestamp="1700582044267" timestamp="14624780" />
  <Command __id="8116" _type="MoveCaretCommand" caretOffset="769" date="Tue Nov 21 14:57:49 EST 2023" docOffset="769" starttimestamp="1700582044267" timestamp="14625264" />
  <Command __id="8117" _type="MoveCaretCommand" caretOffset="769" date="Tue Nov 21 14:57:49 EST 2023" docOffset="769" starttimestamp="1700582044267" timestamp="14625264" />
  <Command __id="8118" _type="MoveCaretCommand" caretOffset="782" date="Tue Nov 21 14:57:50 EST 2023" docOffset="782" starttimestamp="1700582044267" timestamp="14625736" />
  <Command __id="8119" _type="MoveCaretCommand" caretOffset="782" date="Tue Nov 21 14:57:50 EST 2023" docOffset="782" starttimestamp="1700582044267" timestamp="14625736" />
  <Command __id="8120" _type="MoveCaretCommand" caretOffset="790" date="Tue Nov 21 14:57:50 EST 2023" docOffset="790" starttimestamp="1700582044267" timestamp="14626285" />
  <Command __id="8121" _type="MoveCaretCommand" caretOffset="790" date="Tue Nov 21 14:57:50 EST 2023" docOffset="790" starttimestamp="1700582044267" timestamp="14626285" />
  <Command __id="8122" _type="MoveCaretCommand" caretOffset="789" date="Tue Nov 21 14:57:54 EST 2023" docOffset="789" starttimestamp="1700582044267" timestamp="14629987" />
  <Command __id="8123" _type="MoveCaretCommand" caretOffset="789" date="Tue Nov 21 14:57:54 EST 2023" docOffset="789" starttimestamp="1700582044267" timestamp="14629987" />
  <Command __id="8124" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 14:57:55 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="14630944" />
  <Command __id="8125" _type="MoveCaretCommand" caretOffset="674" date="Tue Nov 21 14:57:55 EST 2023" docOffset="674" starttimestamp="1700582044267" timestamp="14630944" />
  <Command __id="8126" _type="MoveCaretCommand" caretOffset="801" date="Tue Nov 21 14:57:55 EST 2023" docOffset="801" starttimestamp="1700582044267" timestamp="14631475" />
  <Command __id="8127" _type="MoveCaretCommand" caretOffset="801" date="Tue Nov 21 14:57:55 EST 2023" docOffset="801" starttimestamp="1700582044267" timestamp="14631475" />
  <Command __id="8128" _type="SelectTextCommand" caretOffset="805" date="Tue Nov 21 14:57:55 EST 2023" end="805" start="798" starttimestamp="1700582044267" timestamp="14631618" />
  <Command __id="8129" _type="SelectTextCommand" caretOffset="805" date="Tue Nov 21 14:57:55 EST 2023" end="805" start="798" starttimestamp="1700582044267" timestamp="14631618" />
  <Command __id="8130" _type="SelectTextCommand" caretOffset="963" date="Tue Nov 21 14:58:06 EST 2023" end="963" start="956" starttimestamp="1700582044267" timestamp="14641853" />
  <Command __id="8131" _type="SelectTextCommand" caretOffset="963" date="Tue Nov 21 14:58:06 EST 2023" end="963" start="956" starttimestamp="1700582044267" timestamp="14641853" />
  <Command __id="8133" _type="InsertStringCommand" date="Tue Nov 21 14:58:06 EST 2023" starttimestamp="1700582044267" timestamp="14642504" timestamp2="14642504">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8134" _type="InsertStringCommand" date="Tue Nov 21 14:58:06 EST 2023" starttimestamp="1700582044267" timestamp="14642504" timestamp2="14642504">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8136" _type="InsertStringCommand" date="Tue Nov 21 14:58:06 EST 2023" starttimestamp="1700582044267" timestamp="14642628" timestamp2="14642628">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8137" _type="InsertStringCommand" date="Tue Nov 21 14:58:06 EST 2023" starttimestamp="1700582044267" timestamp="14642628" timestamp2="14642628">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8139" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643035" timestamp2="14643035">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8140" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643035" timestamp2="14643035">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8142" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643332" timestamp2="14643332">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8143" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643332" timestamp2="14643332">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8145" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643542" timestamp2="14643542">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8146" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643543" timestamp2="14643543">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8148" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643665" timestamp2="14643665">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8149" _type="InsertStringCommand" date="Tue Nov 21 14:58:07 EST 2023" starttimestamp="1700582044267" timestamp="14643666" timestamp2="14643666">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8151" _type="InsertStringCommand" date="Tue Nov 21 14:58:08 EST 2023" starttimestamp="1700582044267" timestamp="14643766" timestamp2="14643766">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8152" _type="InsertStringCommand" date="Tue Nov 21 14:58:08 EST 2023" starttimestamp="1700582044267" timestamp="14643766" timestamp2="14643766">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8153" _type="MoveCaretCommand" caretOffset="687" date="Tue Nov 21 14:58:10 EST 2023" docOffset="687" starttimestamp="1700582044267" timestamp="14646040" />
  <Command __id="8154" _type="MoveCaretCommand" caretOffset="687" date="Tue Nov 21 14:58:10 EST 2023" docOffset="687" starttimestamp="1700582044267" timestamp="14646040" />
  <Command __id="8155" _type="MoveCaretCommand" caretOffset="805" date="Tue Nov 21 14:58:17 EST 2023" docOffset="805" starttimestamp="1700582044267" timestamp="14653423" />
  <Command __id="8156" _type="MoveCaretCommand" caretOffset="805" date="Tue Nov 21 14:58:17 EST 2023" docOffset="805" starttimestamp="1700582044267" timestamp="14653423" />
  <Command __id="8157" _type="MoveCaretCommand" caretOffset="800" date="Tue Nov 21 14:58:18 EST 2023" docOffset="800" starttimestamp="1700582044267" timestamp="14653960" />
  <Command __id="8158" _type="MoveCaretCommand" caretOffset="800" date="Tue Nov 21 14:58:18 EST 2023" docOffset="800" starttimestamp="1700582044267" timestamp="14653960" />
  <Command __id="8159" _type="ShellCommand" date="Tue Nov 21 14:58:18 EST 2023" starttimestamp="1700582044267" timestamp="14654651" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8160" _type="ShellCommand" date="Tue Nov 21 14:58:18 EST 2023" starttimestamp="1700582044267" timestamp="14654699" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8161" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 14:58:19 EST 2023" docOffset="960" starttimestamp="1700582044267" timestamp="14655651" />
  <Command __id="8162" _type="MoveCaretCommand" caretOffset="960" date="Tue Nov 21 14:58:19 EST 2023" docOffset="960" starttimestamp="1700582044267" timestamp="14655651" />
  <Command __id="8163" _type="SelectTextCommand" caretOffset="955" date="Tue Nov 21 14:58:22 EST 2023" end="965" start="955" starttimestamp="1700582044267" timestamp="14658293" />
  <Command __id="8164" _type="SelectTextCommand" caretOffset="955" date="Tue Nov 21 14:58:22 EST 2023" end="965" start="955" starttimestamp="1700582044267" timestamp="14658293" />
  <Command __id="8166" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:58:22 EST 2023" starttimestamp="1700582044267" timestamp="14658688" />
  <Command __id="8167" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:58:22 EST 2023" starttimestamp="1700582044267" timestamp="14658688" />
  <Command __id="8168" _type="SelectTextCommand" caretOffset="797" date="Tue Nov 21 14:58:32 EST 2023" end="807" start="797" starttimestamp="1700582044267" timestamp="14667805" />
  <Command __id="8169" _type="SelectTextCommand" caretOffset="797" date="Tue Nov 21 14:58:32 EST 2023" end="807" start="797" starttimestamp="1700582044267" timestamp="14667805" />
  <Command __id="8171" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:58:32 EST 2023" starttimestamp="1700582044267" timestamp="14668261" />
  <Command __id="8172" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 14:58:32 EST 2023" starttimestamp="1700582044267" timestamp="14668261" />
  <Command __id="8173" _type="ShellCommand" date="Tue Nov 21 14:58:35 EST 2023" starttimestamp="1700582044267" timestamp="14670948" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8174" _type="ShellCommand" date="Tue Nov 21 14:58:36 EST 2023" starttimestamp="1700582044267" timestamp="14671755" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8199" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:58:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14692438" type="Run" />
  <Command __id="8200" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:58:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14692438" type="Run" />
  <Command __id="8201" _type="PasteCommand" date="Tue Nov 21 14:58:58 EST 2023" starttimestamp="1700582044267" timestamp="14694243" />
  <Command __id="8202" _type="ConsoleOutput" date="Tue Nov 21 14:58:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14694643" type="ConsoleOutput">
    <outputString><![CDATA[QUOTE
Exception in thread "main" 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("), Diff(EQUAL,"QUOTE"), Diff(DELETE," (CONS “ONE” 1))"), Diff(EQUAL,"¶Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="8203" _type="ExceptionCommand" date="Tue Nov 21 14:58:58 EST 2023" starttimestamp="1700582044267" timestamp="14694645" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:20)
	at index.EvalEvaluator.eval(EvalEvaluator.java:15)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8204" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:58:58 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14694648" type="Run" />
  <Command __id="8205" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:58:58 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14694648" type="Run" />
  <Command __id="8206" _type="MoveCaretCommand" caretOffset="449" date="Tue Nov 21 14:59:09 EST 2023" docOffset="449" starttimestamp="1700582044267" timestamp="14705560" />
  <Command __id="8207" _type="MoveCaretCommand" caretOffset="449" date="Tue Nov 21 14:59:09 EST 2023" docOffset="449" starttimestamp="1700582044267" timestamp="14705560" />
  <Command __id="8208" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 14:59:11 EST 2023" docOffset="446" starttimestamp="1700582044267" timestamp="14706915" />
  <Command __id="8209" _type="MoveCaretCommand" caretOffset="446" date="Tue Nov 21 14:59:11 EST 2023" docOffset="446" starttimestamp="1700582044267" timestamp="14706916" />
  <Command __id="8210" _type="SelectTextCommand" caretOffset="447" date="Tue Nov 21 14:59:11 EST 2023" end="447" start="440" starttimestamp="1700582044267" timestamp="14707043" />
  <Command __id="8211" _type="SelectTextCommand" caretOffset="447" date="Tue Nov 21 14:59:11 EST 2023" end="447" start="440" starttimestamp="1700582044267" timestamp="14707043" />
  <Command __id="8213" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14707882" timestamp2="14707882">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8214" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14707882" timestamp2="14707882">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8216" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14707976" timestamp2="14707976">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8217" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14707976" timestamp2="14707976">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8219" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708092" timestamp2="14708092">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8220" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708092" timestamp2="14708092">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8222" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708365" timestamp2="14708365">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8223" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708365" timestamp2="14708365">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8225" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708598" timestamp2="14708598">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8226" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708598" timestamp2="14708598">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8228" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708703" timestamp2="14708703">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8229" _type="InsertStringCommand" date="Tue Nov 21 14:59:12 EST 2023" starttimestamp="1700582044267" timestamp="14708703" timestamp2="14708703">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8231" _type="InsertStringCommand" date="Tue Nov 21 14:59:13 EST 2023" starttimestamp="1700582044267" timestamp="14708789" timestamp2="14708789">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8232" _type="InsertStringCommand" date="Tue Nov 21 14:59:13 EST 2023" starttimestamp="1700582044267" timestamp="14708789" timestamp2="14708789">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="8066" _type="Insert" date="Tue Nov 21 14:57:15 EST 2023" docASTNodeCount="163" docActiveCodeLength="1004" docExpressionCount="128" docLength="1004" length="4" offset="435" repeat="4" starttimestamp="1700582044267" timestamp="14591404" timestamp2="14592110">
    <text><![CDATA[expr]]></text>
  </DocumentChange>
  <DocumentChange __id="8079" _type="Insert" date="Tue Nov 21 14:57:17 EST 2023" docASTNodeCount="163" docActiveCodeLength="1005" docExpressionCount="128" docLength="1005" length="1" offset="440" starttimestamp="1700582044267" timestamp="14593696">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="8106" _type="Delete" date="Tue Nov 21 14:57:42 EST 2023" docASTNodeCount="161" docActiveCodeLength="995" docExpressionCount="126" docLength="995" endLine="20" length="10" offset="764" repeat="2" startLine="20" starttimestamp="1700582044267" timestamp="14618360" timestamp2="14619061">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="8132" _type="Replace" date="Tue Nov 21 14:58:06 EST 2023" docASTNodeCount="161" docActiveCodeLength="989" docExpressionCount="126" docLength="989" endLine="22" insertionLength="1" int_docASTNodeCount="161" int_docActiveCodeLength="988" int_docExpressionCount="126" int_docLength="988" length="7" offset="956" startLine="22" starttimestamp="1700582044267" timestamp="14642499">
    <deletedText><![CDATA[getHead]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8135" _type="Insert" date="Tue Nov 21 14:58:06 EST 2023" docASTNodeCount="161" docActiveCodeLength="995" docExpressionCount="126" docLength="995" length="6" offset="957" repeat="6" starttimestamp="1700582044267" timestamp="14642625" timestamp2="14643761">
    <text><![CDATA[etTail]]></text>
  </DocumentChange>
  <DocumentChange __id="8165" _type="Delete" date="Tue Nov 21 14:58:22 EST 2023" docASTNodeCount="159" docActiveCodeLength="985" docExpressionCount="124" docLength="985" endLine="22" length="10" offset="955" startLine="22" starttimestamp="1700582044267" timestamp="14658683">
    <text><![CDATA[.getTail()]]></text>
  </DocumentChange>
  <DocumentChange __id="8170" _type="Delete" date="Tue Nov 21 14:58:32 EST 2023" docASTNodeCount="157" docActiveCodeLength="975" docExpressionCount="122" docLength="975" endLine="20" length="10" offset="797" startLine="20" starttimestamp="1700582044267" timestamp="14668256">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="8177" _type="Insert" date="Tue Nov 21 14:58:51 EST 2023" docASTNodeCount="159" docActiveCodeLength="977" docExpressionCount="123" docLength="977" length="2" offset="439" repeat="2" starttimestamp="1700582044267" timestamp="14687181" timestamp2="14687194">
    <text><![CDATA[.,]]></text>
  </DocumentChange>
  <DocumentChange __id="8184" _type="Delete" date="Tue Nov 21 14:58:51 EST 2023" docASTNodeCount="159" docActiveCodeLength="976" docExpressionCount="123" docLength="976" endLine="13" length="1" offset="440" startLine="13" starttimestamp="1700582044267" timestamp="14687644">
    <text><![CDATA[,]]></text>
  </DocumentChange>
  <DocumentChange __id="8185" _type="Insert" date="Tue Nov 21 14:58:52 EST 2023" docASTNodeCount="159" docActiveCodeLength="985" docExpressionCount="124" docLength="985" length="9" offset="440" repeat="8" starttimestamp="1700582044267" timestamp="14687824" timestamp2="14689002">
    <text><![CDATA[getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="8212" _type="Replace" date="Tue Nov 21 14:59:12 EST 2023" docASTNodeCount="159" docActiveCodeLength="979" docExpressionCount="124" docLength="979" endLine="13" insertionLength="1" int_docASTNodeCount="159" int_docActiveCodeLength="978" int_docExpressionCount="124" int_docLength="978" length="7" offset="440" startLine="13" starttimestamp="1700582044267" timestamp="14707873">
    <deletedText><![CDATA[getHead]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8215" _type="Insert" date="Tue Nov 21 14:59:12 EST 2023" docASTNodeCount="159" docActiveCodeLength="985" docExpressionCount="124" docLength="985" length="6" offset="441" repeat="6" starttimestamp="1700582044267" timestamp="14707974" timestamp2="14708786">
    <text><![CDATA[etTail]]></text>
  </DocumentChange>
  <Command __id="8233" _type="MoveCaretCommand" caretOffset="449" date="Tue Nov 21 14:59:14 EST 2023" docOffset="449" starttimestamp="1700582044267" timestamp="14710097" />
  <Command __id="8234" _type="MoveCaretCommand" caretOffset="449" date="Tue Nov 21 14:59:14 EST 2023" docOffset="449" starttimestamp="1700582044267" timestamp="14710098" />
  <DocumentChange __id="8235" _type="Insert" date="Tue Nov 21 14:59:15 EST 2023" docASTNodeCount="161" docActiveCodeLength="993" docExpressionCount="126" docLength="993" length="8" offset="449" repeat="8" starttimestamp="1700582044267" timestamp="14711213" timestamp2="14712398">
    <text><![CDATA[.getHead]]></text>
  </DocumentChange>
  <Command __id="8236" _type="InsertStringCommand" date="Tue Nov 21 14:59:15 EST 2023" starttimestamp="1700582044267" timestamp="14711216" timestamp2="14711216">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8237" _type="InsertStringCommand" date="Tue Nov 21 14:59:15 EST 2023" starttimestamp="1700582044267" timestamp="14711217" timestamp2="14711217">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8238" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 14:59:15 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="14711225" />
  <Command __id="8246" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 14:59:16 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="14712508" />
  <Command __id="8248" _type="InsertStringCommand" date="Tue Nov 21 14:59:16 EST 2023" starttimestamp="1700582044267" timestamp="14712514" timestamp2="14712514">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8249" _type="InsertStringCommand" date="Tue Nov 21 14:59:16 EST 2023" starttimestamp="1700582044267" timestamp="14712514" timestamp2="14712514">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8253" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:59:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14715312" type="Run" />
  <Command __id="8254" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:59:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14715312" type="Run" />
  <Command __id="8255" _type="PasteCommand" date="Tue Nov 21 14:59:21 EST 2023" starttimestamp="1700582044267" timestamp="14716818" />
  <Command __id="8256" _type="ConsoleOutput" date="Tue Nov 21 14:59:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14717035" type="ConsoleOutput">
    <outputString><![CDATA[(CONS “ONE” 1)
Exception in thread "main" 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"QUOTE"), Diff(INSERT,"(CONS “ONE” 1)"), Diff(EQUAL,"¶Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="8257" _type="ExceptionCommand" date="Tue Nov 21 14:59:21 EST 2023" starttimestamp="1700582044267" timestamp="14717037" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:20)
	at index.EvalEvaluator.eval(EvalEvaluator.java:15)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8258" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:59:21 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14717052" type="Run" />
  <Command __id="8259" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 14:59:21 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14717052" type="Run" />
  <Command __id="8260" _type="MoveCaretCommand" caretOffset="452" date="Tue Nov 21 14:59:26 EST 2023" docOffset="452" starttimestamp="1700582044267" timestamp="14722189" />
  <Command __id="8261" _type="MoveCaretCommand" caretOffset="452" date="Tue Nov 21 14:59:26 EST 2023" docOffset="452" starttimestamp="1700582044267" timestamp="14722189" />
  <Command __id="8262" _type="MoveCaretCommand" caretOffset="659" date="Tue Nov 21 14:59:30 EST 2023" docOffset="659" starttimestamp="1700582044267" timestamp="14725759" />
  <Command __id="8263" _type="MoveCaretCommand" caretOffset="659" date="Tue Nov 21 14:59:30 EST 2023" docOffset="659" starttimestamp="1700582044267" timestamp="14725759" />
  <Command __id="8264" _type="SelectTextCommand" caretOffset="662" date="Tue Nov 21 14:59:30 EST 2023" end="662" start="655" starttimestamp="1700582044267" timestamp="14725901" />
  <Command __id="8265" _type="SelectTextCommand" caretOffset="662" date="Tue Nov 21 14:59:30 EST 2023" end="662" start="655" starttimestamp="1700582044267" timestamp="14725901" />
  <Command __id="8267" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14726768" timestamp2="14726768">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8268" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14726768" timestamp2="14726768">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8270" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14726844" timestamp2="14726844">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8271" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14726844" timestamp2="14726844">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8273" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727008" timestamp2="14727008">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8274" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727008" timestamp2="14727008">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8276" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727317" timestamp2="14727317">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8277" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727317" timestamp2="14727317">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="8279" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727509" timestamp2="14727509">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8280" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727509" timestamp2="14727509">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="8282" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727613" timestamp2="14727613">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8283" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727613" timestamp2="14727613">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8285" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727717" timestamp2="14727717">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8286" _type="InsertStringCommand" date="Tue Nov 21 14:59:31 EST 2023" starttimestamp="1700582044267" timestamp="14727717" timestamp2="14727717">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="8287" _type="MoveCaretCommand" caretOffset="592" date="Tue Nov 21 14:59:33 EST 2023" docOffset="592" starttimestamp="1700582044267" timestamp="14729074" />
  <Command __id="8288" _type="MoveCaretCommand" caretOffset="592" date="Tue Nov 21 14:59:33 EST 2023" docOffset="592" starttimestamp="1700582044267" timestamp="14729075" />
  <Command __id="8289" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 14:59:34 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="14730043" />
  <Command __id="8290" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 14:59:34 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="14730043" />
  <Command __id="8291" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:59:35 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="14731303" />
  <Command __id="8292" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:59:35 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="14731303" />
  <Command __id="8293" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:59:36 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="14731831" />
  <Command __id="8294" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:59:36 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="14731831" />
  <Command __id="8295" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 14:59:36 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="14732301" />
  <Command __id="8296" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 14:59:36 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="14732301" />
  <Command __id="8298" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 14:59:37 EST 2023" starttimestamp="1700582044267" timestamp="14732795" />
  <Command __id="8299" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 14:59:37 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="14733257" />
  <Command __id="8300" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 14:59:37 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="14733257" />
  <Command __id="8301" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 14:59:37 EST 2023" starttimestamp="1700582044267" timestamp="14733397" />
  <Command __id="8302" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:59:37 EST 2023" starttimestamp="1700582044267" timestamp="14733499" />
  <Command __id="8303" _type="EclipseCommand" commandID="" date="Tue Nov 21 14:59:37 EST 2023" starttimestamp="1700582044267" timestamp="14733505" />
  <Command __id="8304" _type="MoveCaretCommand" caretOffset="609" date="Tue Nov 21 14:59:42 EST 2023" docOffset="609" starttimestamp="1700582044267" timestamp="14738218" />
  <Command __id="8305" _type="MoveCaretCommand" caretOffset="609" date="Tue Nov 21 14:59:42 EST 2023" docOffset="609" starttimestamp="1700582044267" timestamp="14738218" />
  <Command __id="8306" _type="MoveCaretCommand" caretOffset="532" date="Tue Nov 21 14:59:45 EST 2023" docOffset="532" starttimestamp="1700582044267" timestamp="14741602" />
  <Command __id="8307" _type="MoveCaretCommand" caretOffset="532" date="Tue Nov 21 14:59:45 EST 2023" docOffset="532" starttimestamp="1700582044267" timestamp="14741602" />
  <Command __id="8308" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 14:59:50 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="14745742" />
  <Command __id="8309" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 14:59:50 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="14745742" />
  <Command __id="8311" _type="UndoCommand" date="Tue Nov 21 14:59:50 EST 2023" starttimestamp="1700582044267" timestamp="14745848" />
  <Command __id="8312" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:59:50 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="14746691" />
  <Command __id="8313" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 14:59:50 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="14746691" />
  <Command __id="8314" _type="MoveCaretCommand" caretOffset="507" date="Tue Nov 21 14:59:55 EST 2023" docOffset="507" starttimestamp="1700582044267" timestamp="14750947" />
  <Command __id="8315" _type="MoveCaretCommand" caretOffset="507" date="Tue Nov 21 14:59:55 EST 2023" docOffset="507" starttimestamp="1700582044267" timestamp="14750947" />
  <Command __id="8350" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:00:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14765199" type="Run" />
  <Command __id="8351" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:00:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14765199" type="Run" />
  <Command __id="8352" _type="PasteCommand" date="Tue Nov 21 15:00:11 EST 2023" starttimestamp="1700582044267" timestamp="14766786" />
  <Command __id="8353" _type="ConsoleOutput" date="Tue Nov 21 15:00:11 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="14767216" type="ConsoleOutput">
    <outputString><![CDATA[(CONS “ONE” 1)
Exception in thread "main" 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(CONS “ONE” 1)¶Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="8354" _type="ExceptionCommand" date="Tue Nov 21 15:00:11 EST 2023" starttimestamp="1700582044267" timestamp="14767218" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:20)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:21)
	at index.EvalEvaluator.eval(EvalEvaluator.java:15)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8355" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:00:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14767221" type="Run" />
  <Command __id="8356" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:00:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="14767221" type="Run" />
  <Command __id="8357" _type="ShellCommand" date="Tue Nov 21 15:00:14 EST 2023" starttimestamp="1700582044267" timestamp="14770606" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8358" _type="ShellCommand" date="Tue Nov 21 15:01:35 EST 2023" starttimestamp="1700582044267" timestamp="14851710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8359" _type="MoveCaretCommand" caretOffset="1015" date="Tue Nov 21 15:01:36 EST 2023" docOffset="1015" starttimestamp="1700582044267" timestamp="14852449" />
  <Command __id="8360" _type="MoveCaretCommand" caretOffset="1015" date="Tue Nov 21 15:01:36 EST 2023" docOffset="1015" starttimestamp="1700582044267" timestamp="14852449" />
  <Command __id="8361" _type="ShellCommand" date="Tue Nov 21 15:01:38 EST 2023" starttimestamp="1700582044267" timestamp="14853782" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8362" _type="ShellCommand" date="Tue Nov 21 15:31:56 EST 2023" starttimestamp="1700582044267" timestamp="16672242" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8363" _type="ShellCommand" date="Tue Nov 21 15:32:20 EST 2023" starttimestamp="1700582044267" timestamp="16695999" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8364" _type="ShellCommand" date="Tue Nov 21 15:32:20 EST 2023" starttimestamp="1700582044267" timestamp="16696019" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8365" _type="ShellCommand" date="Tue Nov 21 15:32:20 EST 2023" starttimestamp="1700582044267" timestamp="16696670" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8366" _type="ShellCommand" date="Tue Nov 21 15:32:29 EST 2023" starttimestamp="1700582044267" timestamp="16704814" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8367" _type="ShellCommand" date="Tue Nov 21 15:32:29 EST 2023" starttimestamp="1700582044267" timestamp="16705096" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8368" _type="ShellCommand" date="Tue Nov 21 15:35:41 EST 2023" starttimestamp="1700582044267" timestamp="16897633" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8369" _type="MoveCaretCommand" caretOffset="1012" date="Tue Nov 21 15:35:46 EST 2023" docOffset="1012" starttimestamp="1700582044267" timestamp="16902233" />
  <Command __id="8370" _type="MoveCaretCommand" caretOffset="1012" date="Tue Nov 21 15:35:46 EST 2023" docOffset="1012" starttimestamp="1700582044267" timestamp="16902233" />
  <Command __id="8371" _type="MoveCaretCommand" caretOffset="592" date="Tue Nov 21 15:36:24 EST 2023" docOffset="592" starttimestamp="1700582044267" timestamp="16940032" />
  <Command __id="8372" _type="MoveCaretCommand" caretOffset="592" date="Tue Nov 21 15:36:24 EST 2023" docOffset="592" starttimestamp="1700582044267" timestamp="16940032" />
  <Command __id="8373" _type="ShellCommand" date="Tue Nov 21 15:40:02 EST 2023" starttimestamp="1700582044267" timestamp="17157983" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8374" _type="ShellCommand" date="Tue Nov 21 15:40:03 EST 2023" starttimestamp="1700582044267" timestamp="17159290" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8375" _type="MoveCaretCommand" caretOffset="1015" date="Tue Nov 21 15:40:03 EST 2023" docOffset="1015" starttimestamp="1700582044267" timestamp="17159357" />
  <Command __id="8376" _type="MoveCaretCommand" caretOffset="1015" date="Tue Nov 21 15:40:03 EST 2023" docOffset="1015" starttimestamp="1700582044267" timestamp="17159357" />
  <Command __id="8377" _type="ShellCommand" date="Tue Nov 21 15:40:04 EST 2023" starttimestamp="1700582044267" timestamp="17159799" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8378" _type="ShellCommand" date="Tue Nov 21 15:40:04 EST 2023" starttimestamp="1700582044267" timestamp="17159863" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8379" _type="ShellCommand" date="Tue Nov 21 15:40:04 EST 2023" starttimestamp="1700582044267" timestamp="17160337" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8380" _type="ShellCommand" date="Tue Nov 21 15:40:05 EST 2023" starttimestamp="1700582044267" timestamp="17161152" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8381" _type="ShellCommand" date="Tue Nov 21 15:40:05 EST 2023" starttimestamp="1700582044267" timestamp="17161168" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8382" _type="ShellCommand" date="Tue Nov 21 15:40:06 EST 2023" starttimestamp="1700582044267" timestamp="17162358" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8383" _type="ShellCommand" date="Tue Nov 21 15:40:07 EST 2023" starttimestamp="1700582044267" timestamp="17163529" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8384" _type="ShellCommand" date="Tue Nov 21 15:40:07 EST 2023" starttimestamp="1700582044267" timestamp="17163590" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8385" _type="ShellCommand" date="Tue Nov 21 15:40:09 EST 2023" starttimestamp="1700582044267" timestamp="17165080" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8386" _type="ShellCommand" date="Tue Nov 21 15:40:20 EST 2023" starttimestamp="1700582044267" timestamp="17176637" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8387" _type="ShellCommand" date="Tue Nov 21 15:40:40 EST 2023" starttimestamp="1700582044267" timestamp="17195976" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8388" _type="ShellCommand" date="Tue Nov 21 15:40:52 EST 2023" starttimestamp="1700582044267" timestamp="17207967" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8389" _type="ShellCommand" date="Tue Nov 21 15:40:53 EST 2023" starttimestamp="1700582044267" timestamp="17208846" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8390" _type="ShellCommand" date="Tue Nov 21 15:40:53 EST 2023" starttimestamp="1700582044267" timestamp="17209613" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8391" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:40:58 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17214514" />
  <Command __id="8392" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:40:58 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17214514" />
  <Command __id="8393" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:40:58 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17214732" />
  <Command __id="8394" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:40:58 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17214732" />
  <Command __id="8395" _type="MoveCaretCommand" caretOffset="504" date="Tue Nov 21 15:40:59 EST 2023" docOffset="504" starttimestamp="1700582044267" timestamp="17214961" />
  <Command __id="8396" _type="MoveCaretCommand" caretOffset="504" date="Tue Nov 21 15:40:59 EST 2023" docOffset="504" starttimestamp="1700582044267" timestamp="17214961" />
  <Command __id="8397" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:40:59 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17215150" />
  <Command __id="8398" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:40:59 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17215150" />
  <Command __id="8399" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:40:59 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17215354" />
  <Command __id="8400" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:40:59 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17215354" />
  <Command __id="8401" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:40:59 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17215523" />
  <Command __id="8402" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:40:59 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17215523" />
  <Command __id="8403" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:40:59 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17215696" />
  <Command __id="8404" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:40:59 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17215696" />
  <Command __id="8405" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:00 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17215873" />
  <Command __id="8406" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:00 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17215873" />
  <Command __id="8407" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:00 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17216033" />
  <Command __id="8408" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:00 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17216033" />
  <Command __id="8409" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:00 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17216207" />
  <Command __id="8410" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:00 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17216207" />
  <Command __id="8411" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:00 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17216351" />
  <Command __id="8412" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:00 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17216351" />
  <Command __id="8413" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:00 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17216531" />
  <Command __id="8414" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:00 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17216531" />
  <Command __id="8415" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:01 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17216867" />
  <Command __id="8416" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:01 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17216868" />
  <Command __id="8417" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:01 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17217045" />
  <Command __id="8418" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:01 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17217045" />
  <Command __id="8419" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:01 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17217199" />
  <Command __id="8420" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:01 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17217199" />
  <Command __id="8421" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:01 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17217384" />
  <Command __id="8422" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:01 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17217384" />
  <Command __id="8423" _type="SelectTextCommand" caretOffset="470" date="Tue Nov 21 15:41:01 EST 2023" end="470" start="461" starttimestamp="1700582044267" timestamp="17217572" />
  <Command __id="8424" _type="SelectTextCommand" caretOffset="470" date="Tue Nov 21 15:41:01 EST 2023" end="470" start="461" starttimestamp="1700582044267" timestamp="17217573" />
  <Command __id="8425" _type="MoveCaretCommand" caretOffset="504" date="Tue Nov 21 15:41:02 EST 2023" docOffset="504" starttimestamp="1700582044267" timestamp="17217805" />
  <Command __id="8426" _type="MoveCaretCommand" caretOffset="504" date="Tue Nov 21 15:41:02 EST 2023" docOffset="504" starttimestamp="1700582044267" timestamp="17217805" />
  <Command __id="8427" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:02 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17217974" />
  <Command __id="8428" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:02 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17217974" />
  <Command __id="8429" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:02 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17218169" />
  <Command __id="8430" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:02 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17218169" />
  <Command __id="8431" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 15:41:02 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="17218503" />
  <Command __id="8432" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 15:41:02 EST 2023" docOffset="413" starttimestamp="1700582044267" timestamp="17218503" />
  <Command __id="8433" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:03 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17218744" />
  <Command __id="8434" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:41:03 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17218744" />
  <Command __id="8435" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:03 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17218987" />
  <Command __id="8436" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:41:03 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="17218987" />
  <Command __id="8437" _type="MoveCaretCommand" caretOffset="563" date="Tue Nov 21 15:41:03 EST 2023" docOffset="563" starttimestamp="1700582044267" timestamp="17219526" />
  <Command __id="8438" _type="MoveCaretCommand" caretOffset="563" date="Tue Nov 21 15:41:03 EST 2023" docOffset="563" starttimestamp="1700582044267" timestamp="17219526" />
  <Command __id="8439" _type="SelectTextCommand" caretOffset="621" date="Tue Nov 21 15:41:04 EST 2023" end="621" start="620" starttimestamp="1700582044267" timestamp="17220562" />
  <Command __id="8440" _type="SelectTextCommand" caretOffset="621" date="Tue Nov 21 15:41:04 EST 2023" end="621" start="620" starttimestamp="1700582044267" timestamp="17220563" />
  <Command __id="8441" _type="MoveCaretCommand" caretOffset="749" date="Tue Nov 21 15:41:05 EST 2023" docOffset="749" starttimestamp="1700582044267" timestamp="17220779" />
  <Command __id="8442" _type="MoveCaretCommand" caretOffset="749" date="Tue Nov 21 15:41:05 EST 2023" docOffset="749" starttimestamp="1700582044267" timestamp="17220779" />
  <Command __id="8443" _type="SelectTextCommand" caretOffset="651" date="Tue Nov 21 15:41:05 EST 2023" end="651" start="650" starttimestamp="1700582044267" timestamp="17221066" />
  <Command __id="8444" _type="SelectTextCommand" caretOffset="651" date="Tue Nov 21 15:41:05 EST 2023" end="651" start="650" starttimestamp="1700582044267" timestamp="17221066" />
  <Command __id="8445" _type="MoveCaretCommand" caretOffset="657" date="Tue Nov 21 15:41:05 EST 2023" docOffset="657" starttimestamp="1700582044267" timestamp="17221709" />
  <Command __id="8446" _type="MoveCaretCommand" caretOffset="657" date="Tue Nov 21 15:41:05 EST 2023" docOffset="657" starttimestamp="1700582044267" timestamp="17221709" />
  <Command __id="8447" _type="MoveCaretCommand" caretOffset="651" date="Tue Nov 21 15:41:06 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="17222224" />
  <Command __id="8448" _type="MoveCaretCommand" caretOffset="651" date="Tue Nov 21 15:41:06 EST 2023" docOffset="651" starttimestamp="1700582044267" timestamp="17222224" />
  <Command __id="8449" _type="SelectTextCommand" caretOffset="660" date="Tue Nov 21 15:41:06 EST 2023" end="660" start="659" starttimestamp="1700582044267" timestamp="17222487" />
  <Command __id="8450" _type="SelectTextCommand" caretOffset="660" date="Tue Nov 21 15:41:06 EST 2023" end="660" start="659" starttimestamp="1700582044267" timestamp="17222487" />
  <Command __id="8451" _type="MoveCaretCommand" caretOffset="661" date="Tue Nov 21 15:41:07 EST 2023" docOffset="661" starttimestamp="1700582044267" timestamp="17223174" />
  <Command __id="8452" _type="MoveCaretCommand" caretOffset="661" date="Tue Nov 21 15:41:07 EST 2023" docOffset="661" starttimestamp="1700582044267" timestamp="17223175" />
  <Command __id="8453" _type="MoveCaretCommand" caretOffset="670" date="Tue Nov 21 15:41:07 EST 2023" docOffset="670" starttimestamp="1700582044267" timestamp="17223412" />
  <Command __id="8454" _type="MoveCaretCommand" caretOffset="670" date="Tue Nov 21 15:41:07 EST 2023" docOffset="670" starttimestamp="1700582044267" timestamp="17223412" />
  <Command __id="8455" _type="MoveCaretCommand" caretOffset="675" date="Tue Nov 21 15:41:07 EST 2023" docOffset="675" starttimestamp="1700582044267" timestamp="17223626" />
  <Command __id="8456" _type="MoveCaretCommand" caretOffset="675" date="Tue Nov 21 15:41:07 EST 2023" docOffset="675" starttimestamp="1700582044267" timestamp="17223626" />
  <Command __id="8457" _type="MoveCaretCommand" caretOffset="684" date="Tue Nov 21 15:41:08 EST 2023" docOffset="684" starttimestamp="1700582044267" timestamp="17223903" />
  <Command __id="8458" _type="MoveCaretCommand" caretOffset="684" date="Tue Nov 21 15:41:08 EST 2023" docOffset="684" starttimestamp="1700582044267" timestamp="17223903" />
  <Command __id="8459" _type="MoveCaretCommand" caretOffset="695" date="Tue Nov 21 15:41:08 EST 2023" docOffset="695" starttimestamp="1700582044267" timestamp="17224151" />
  <Command __id="8460" _type="MoveCaretCommand" caretOffset="695" date="Tue Nov 21 15:41:08 EST 2023" docOffset="695" starttimestamp="1700582044267" timestamp="17224151" />
  <Command __id="8461" _type="MoveCaretCommand" caretOffset="664" date="Tue Nov 21 15:41:09 EST 2023" docOffset="664" starttimestamp="1700582044267" timestamp="17224823" />
  <Command __id="8462" _type="MoveCaretCommand" caretOffset="664" date="Tue Nov 21 15:41:09 EST 2023" docOffset="664" starttimestamp="1700582044267" timestamp="17224823" />
  <Command __id="8463" _type="SelectTextCommand" caretOffset="796" date="Tue Nov 21 15:41:09 EST 2023" end="796" start="795" starttimestamp="1700582044267" timestamp="17225221" />
  <Command __id="8464" _type="SelectTextCommand" caretOffset="796" date="Tue Nov 21 15:41:09 EST 2023" end="796" start="795" starttimestamp="1700582044267" timestamp="17225221" />
  <Command __id="8465" _type="MoveCaretCommand" caretOffset="691" date="Tue Nov 21 15:41:09 EST 2023" docOffset="691" starttimestamp="1700582044267" timestamp="17225535" />
  <Command __id="8466" _type="MoveCaretCommand" caretOffset="691" date="Tue Nov 21 15:41:09 EST 2023" docOffset="691" starttimestamp="1700582044267" timestamp="17225535" />
  <Command __id="8467" _type="MoveCaretCommand" caretOffset="680" date="Tue Nov 21 15:41:10 EST 2023" docOffset="680" starttimestamp="1700582044267" timestamp="17226014" />
  <Command __id="8468" _type="MoveCaretCommand" caretOffset="680" date="Tue Nov 21 15:41:10 EST 2023" docOffset="680" starttimestamp="1700582044267" timestamp="17226014" />
  <Command __id="8469" _type="MoveCaretCommand" caretOffset="584" date="Tue Nov 21 15:41:10 EST 2023" docOffset="584" starttimestamp="1700582044267" timestamp="17226287" />
  <Command __id="8470" _type="MoveCaretCommand" caretOffset="584" date="Tue Nov 21 15:41:10 EST 2023" docOffset="584" starttimestamp="1700582044267" timestamp="17226287" />
  <Command __id="8471" _type="MoveCaretCommand" caretOffset="652" date="Tue Nov 21 15:41:10 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="17226600" />
  <Command __id="8472" _type="MoveCaretCommand" caretOffset="652" date="Tue Nov 21 15:41:10 EST 2023" docOffset="652" starttimestamp="1700582044267" timestamp="17226600" />
  <Command __id="8473" _type="MoveCaretCommand" caretOffset="661" date="Tue Nov 21 15:41:11 EST 2023" docOffset="661" starttimestamp="1700582044267" timestamp="17226996" />
  <Command __id="8474" _type="MoveCaretCommand" caretOffset="661" date="Tue Nov 21 15:41:11 EST 2023" docOffset="661" starttimestamp="1700582044267" timestamp="17226996" />
  <Command __id="8475" _type="MoveCaretCommand" caretOffset="673" date="Tue Nov 21 15:41:11 EST 2023" docOffset="673" starttimestamp="1700582044267" timestamp="17227258" />
  <Command __id="8476" _type="MoveCaretCommand" caretOffset="673" date="Tue Nov 21 15:41:11 EST 2023" docOffset="673" starttimestamp="1700582044267" timestamp="17227258" />
  <Command __id="8477" _type="MoveCaretCommand" caretOffset="685" date="Tue Nov 21 15:41:11 EST 2023" docOffset="685" starttimestamp="1700582044267" timestamp="17227469" />
  <Command __id="8478" _type="MoveCaretCommand" caretOffset="685" date="Tue Nov 21 15:41:11 EST 2023" docOffset="685" starttimestamp="1700582044267" timestamp="17227469" />
  <Command __id="8479" _type="MoveCaretCommand" caretOffset="692" date="Tue Nov 21 15:41:11 EST 2023" docOffset="692" starttimestamp="1700582044267" timestamp="17227714" />
  <Command __id="8480" _type="MoveCaretCommand" caretOffset="692" date="Tue Nov 21 15:41:11 EST 2023" docOffset="692" starttimestamp="1700582044267" timestamp="17227715" />
  <Command __id="8481" _type="MoveCaretCommand" caretOffset="696" date="Tue Nov 21 15:41:12 EST 2023" docOffset="696" starttimestamp="1700582044267" timestamp="17228356" />
  <Command __id="8482" _type="MoveCaretCommand" caretOffset="696" date="Tue Nov 21 15:41:12 EST 2023" docOffset="696" starttimestamp="1700582044267" timestamp="17228356" />
  <Command __id="8483" _type="SelectTextCommand" caretOffset="650" date="Tue Nov 21 15:41:15 EST 2023" end="696" start="650" starttimestamp="1700582044267" timestamp="17230737" />
  <Command __id="8484" _type="SelectTextCommand" caretOffset="650" date="Tue Nov 21 15:41:15 EST 2023" end="696" start="650" starttimestamp="1700582044267" timestamp="17230737" />
  <Command __id="8485" _type="MoveCaretCommand" caretOffset="578" date="Tue Nov 21 15:41:15 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="17230992" />
  <Command __id="8486" _type="MoveCaretCommand" caretOffset="578" date="Tue Nov 21 15:41:15 EST 2023" docOffset="578" starttimestamp="1700582044267" timestamp="17230992" />
  <DocumentChange __id="8247" _type="Replace" date="Tue Nov 21 14:59:16 EST 2023" docASTNodeCount="161" docActiveCodeLength="995" docExpressionCount="126" docLength="995" endLine="13" insertionLength="9" int_docASTNodeCount="161" int_docActiveCodeLength="986" int_docExpressionCount="126" int_docLength="986" length="7" offset="450" startLine="13" starttimestamp="1700582044267" timestamp="14712510">
    <deletedText><![CDATA[getHead]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8266" _type="Replace" date="Tue Nov 21 14:59:31 EST 2023" docASTNodeCount="161" docActiveCodeLength="989" docExpressionCount="126" docLength="989" endLine="19" insertionLength="1" int_docASTNodeCount="161" int_docActiveCodeLength="988" int_docExpressionCount="126" int_docLength="988" length="7" offset="655" startLine="19" starttimestamp="1700582044267" timestamp="14726758">
    <deletedText><![CDATA[getHead]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8269" _type="Insert" date="Tue Nov 21 14:59:31 EST 2023" docASTNodeCount="161" docActiveCodeLength="995" docExpressionCount="126" docLength="995" length="6" offset="656" repeat="6" starttimestamp="1700582044267" timestamp="14726841" timestamp2="14727713">
    <text><![CDATA[etTail]]></text>
  </DocumentChange>
  <DocumentChange __id="8297" _type="Delete" date="Tue Nov 21 14:59:37 EST 2023" docASTNodeCount="150" docActiveCodeLength="947" docExpressionCount="116" docLength="947" endLine="14" length="48" offset="414" startLine="13" starttimestamp="1700582044267" timestamp="14732793">
    <text><![CDATA[		System.out.println(expr.getTail().getHead());
]]></text>
  </DocumentChange>
  <DocumentChange __id="8310" _type="Insert" date="Tue Nov 21 14:59:50 EST 2023" docASTNodeCount="161" docActiveCodeLength="995" docExpressionCount="126" docLength="995" length="48" offset="414" starttimestamp="1700582044267" timestamp="14745846">
    <text><![CDATA[		System.out.println(expr.getTail().getHead());
]]></text>
  </DocumentChange>
  <DocumentChange __id="8318" _type="Insert" date="Tue Nov 21 15:00:03 EST 2023" docASTNodeCount="163" docActiveCodeLength="1003" docExpressionCount="128" docLength="1003" length="8" offset="817" repeat="8" starttimestamp="1700582044267" timestamp="14759060" timestamp2="14760131">
    <text><![CDATA[.getTail]]></text>
  </DocumentChange>
  <DocumentChange __id="8330" _type="Replace" date="Tue Nov 21 15:00:04 EST 2023" docASTNodeCount="163" docActiveCodeLength="1005" docExpressionCount="128" docLength="1005" endLine="20" insertionLength="9" int_docASTNodeCount="162" int_docActiveCodeLength="996" int_docExpressionCount="127" int_docLength="996" length="7" offset="818" startLine="20" starttimestamp="1700582044267" timestamp="14760556">
    <deletedText><![CDATA[getTail]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8333" _type="Insert" date="Tue Nov 21 15:00:05 EST 2023" docASTNodeCount="165" docActiveCodeLength="1010" docExpressionCount="130" docLength="1010" length="5" offset="827" repeat="5" starttimestamp="1700582044267" timestamp="14760885" timestamp2="14761611">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="8342" _type="Replace" date="Tue Nov 21 15:00:06 EST 2023" docASTNodeCount="165" docActiveCodeLength="1015" docExpressionCount="130" docLength="1015" endLine="20" insertionLength="9" int_docASTNodeCount="164" int_docActiveCodeLength="1006" int_docExpressionCount="129" int_docLength="1006" length="4" offset="828" startLine="20" starttimestamp="1700582044267" timestamp="14761860">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="8487" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:41:59 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17274973" />
  <Command __id="8488" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:41:59 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17274973" />
  <DocumentChange __id="8489" _type="Insert" date="Tue Nov 21 15:42:05 EST 2023" docASTNodeCount="165" docActiveCodeLength="1016" docExpressionCount="130" docLength="1016" length="1" offset="598" starttimestamp="1700582044267" timestamp="17281558">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="8490" _type="Replace" date="Tue Nov 21 15:42:06 EST 2023" docASTNodeCount="107" docActiveCodeLength="1018" docExpressionCount="77" docLength="1018" endLine="19" insertionLength="3" int_docASTNodeCount="165" int_docActiveCodeLength="1015" int_docExpressionCount="130" int_docLength="1015" length="1" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17281790">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[e'x]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8491" _type="Replace" date="Tue Nov 21 15:42:06 EST 2023" docASTNodeCount="165" docActiveCodeLength="1018" docExpressionCount="130" docLength="1018" endLine="19" insertionLength="3" int_docASTNodeCount="165" int_docActiveCodeLength="1015" int_docExpressionCount="130" int_docLength="1015" length="3" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17282023">
    <deletedText><![CDATA[e'x]]></deletedText>
    <insertedText><![CDATA[exp]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8492" _type="Delete" date="Tue Nov 21 15:42:06 EST 2023" docASTNodeCount="165" docActiveCodeLength="1015" docExpressionCount="130" docLength="1015" endLine="19" length="3" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17282478">
    <text><![CDATA[exp]]></text>
  </DocumentChange>
  <DocumentChange __id="8493" _type="Insert" date="Tue Nov 21 15:42:06 EST 2023" docASTNodeCount="165" docActiveCodeLength="1016" docExpressionCount="130" docLength="1016" length="1" offset="598" starttimestamp="1700582044267" timestamp="17282732">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <Command __id="8494" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17282736" timestamp2="17282736">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8495" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17282736" timestamp2="17282736">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="8496" _type="Delete" date="Tue Nov 21 15:42:07 EST 2023" docASTNodeCount="165" docActiveCodeLength="1015" docExpressionCount="130" docLength="1015" endLine="19" length="1" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17283102">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <Command __id="8497" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283105" />
  <Command __id="8498" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283106" />
  <DocumentChange __id="8499" _type="Insert" date="Tue Nov 21 15:42:07 EST 2023" docASTNodeCount="167" docActiveCodeLength="1020" docExpressionCount="132" docLength="1020" length="5" offset="598" repeat="5" starttimestamp="1700582044267" timestamp="17283302" timestamp2="17283792">
    <text><![CDATA[expr.]]></text>
  </DocumentChange>
  <Command __id="8500" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283306" timestamp2="17283306">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8501" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283306" timestamp2="17283306">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8503" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283487" timestamp2="17283487">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8504" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283487" timestamp2="17283487">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8506" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283604" timestamp2="17283604">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8507" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283605" timestamp2="17283605">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8509" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283696" timestamp2="17283696">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8510" _type="InsertStringCommand" date="Tue Nov 21 15:42:07 EST 2023" starttimestamp="1700582044267" timestamp="17283696" timestamp2="17283696">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8512" _type="InsertStringCommand" date="Tue Nov 21 15:42:08 EST 2023" starttimestamp="1700582044267" timestamp="17283794" timestamp2="17283794">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8513" _type="InsertStringCommand" date="Tue Nov 21 15:42:08 EST 2023" starttimestamp="1700582044267" timestamp="17283794" timestamp2="17283794">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8514" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:42:08 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17283802" />
  <DocumentChange __id="8515" _type="Insert" date="Tue Nov 21 15:42:14 EST 2023" docASTNodeCount="167" docActiveCodeLength="1027" docExpressionCount="132" docLength="1027" length="7" offset="603" repeat="7" starttimestamp="1700582044267" timestamp="17289949" timestamp2="17291062">
    <text><![CDATA[getTail]]></text>
  </DocumentChange>
  <Command __id="8522" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:42:15 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17291335" />
  <DocumentChange __id="8523" _type="Replace" date="Tue Nov 21 15:42:15 EST 2023" docASTNodeCount="167" docActiveCodeLength="998" docExpressionCount="132" docLength="998" endLine="19" insertionLength="10" int_docASTNodeCount="165" int_docActiveCodeLength="988" int_docExpressionCount="130" int_docLength="988" length="39" offset="603" startLine="19" starttimestamp="1700582044267" timestamp="17291336">
    <deletedText><![CDATA[getTailBuiltinOperationManagerSingleton]]></deletedText>
    <insertedText><![CDATA[getTail().]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8527" _type="Insert" date="Tue Nov 21 15:42:17 EST 2023" docASTNodeCount="169" docActiveCodeLength="1000" docExpressionCount="134" docLength="1000" length="2" offset="613" repeat="2" starttimestamp="1700582044267" timestamp="17293728" timestamp2="17293921">
    <text><![CDATA[is]]></text>
  </DocumentChange>
  <DocumentChange __id="8529" _type="Delete" date="Tue Nov 21 15:42:20 EST 2023" docASTNodeCount="167" docActiveCodeLength="998" docExpressionCount="132" docLength="998" endLine="19" length="2" offset="613" startLine="19" starttimestamp="1700582044267" timestamp="17295845">
    <text><![CDATA[is]]></text>
  </DocumentChange>
  <DocumentChange __id="8531" _type="Replace" date="Tue Nov 21 15:42:20 EST 2023" docASTNodeCount="167" docActiveCodeLength="1027" docExpressionCount="132" docLength="1027" endLine="19" insertionLength="39" int_docASTNodeCount="165" int_docActiveCodeLength="988" int_docExpressionCount="130" int_docLength="988" length="10" offset="603" startLine="19" starttimestamp="1700582044267" timestamp="17296210">
    <deletedText><![CDATA[getTail().]]></deletedText>
    <insertedText><![CDATA[getTailBuiltinOperationManagerSingleton]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8533" _type="Delete" date="Tue Nov 21 15:42:23 EST 2023" docASTNodeCount="165" docActiveCodeLength="1022" docExpressionCount="130" docLength="1022" endLine="19" length="5" offset="598" repeat="5" startLine="19" starttimestamp="1700582044267" timestamp="17299543" timestamp2="17300380">
    <text><![CDATA[expr.]]></text>
  </DocumentChange>
  <Command __id="8524" _type="InsertStringCommand" date="Tue Nov 21 15:42:15 EST 2023" starttimestamp="1700582044267" timestamp="17291338" timestamp2="17291338">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8525" _type="InsertStringCommand" date="Tue Nov 21 15:42:15 EST 2023" starttimestamp="1700582044267" timestamp="17291338" timestamp2="17291338">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8526" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:42:15 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17291351" />
  <Command __id="8530" _type="UndoCommand" date="Tue Nov 21 15:42:20 EST 2023" starttimestamp="1700582044267" timestamp="17295856" />
  <Command __id="8532" _type="UndoCommand" date="Tue Nov 21 15:42:20 EST 2023" starttimestamp="1700582044267" timestamp="17296222" />
  <Command __id="8540" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:42:27 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17303295" />
  <Command __id="8542" _type="InsertStringCommand" date="Tue Nov 21 15:42:27 EST 2023" starttimestamp="1700582044267" timestamp="17303397" timestamp2="17303397">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8543" _type="InsertStringCommand" date="Tue Nov 21 15:42:27 EST 2023" starttimestamp="1700582044267" timestamp="17303397" timestamp2="17303397">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:42:28 EST 2023" starttimestamp="1700582044267" timestamp="17303947" />
  <Command __id="8545" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:42:28 EST 2023" starttimestamp="1700582044267" timestamp="17303948" />
  <Command __id="8546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:42:28 EST 2023" starttimestamp="1700582044267" timestamp="17304328" />
  <Command __id="8547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:42:28 EST 2023" starttimestamp="1700582044267" timestamp="17304328" />
  <Command __id="8549" _type="InsertStringCommand" date="Tue Nov 21 15:42:29 EST 2023" starttimestamp="1700582044267" timestamp="17305398" timestamp2="17305398">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8550" _type="InsertStringCommand" date="Tue Nov 21 15:42:29 EST 2023" starttimestamp="1700582044267" timestamp="17305398" timestamp2="17305398">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8552" _type="InsertStringCommand" date="Tue Nov 21 15:42:29 EST 2023" starttimestamp="1700582044267" timestamp="17305608" timestamp2="17305608">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8553" _type="InsertStringCommand" date="Tue Nov 21 15:42:29 EST 2023" starttimestamp="1700582044267" timestamp="17305608" timestamp2="17305608">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8555" _type="InsertStringCommand" date="Tue Nov 21 15:42:29 EST 2023" starttimestamp="1700582044267" timestamp="17305711" timestamp2="17305711">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8556" _type="InsertStringCommand" date="Tue Nov 21 15:42:29 EST 2023" starttimestamp="1700582044267" timestamp="17305711" timestamp2="17305711">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8558" _type="InsertStringCommand" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17305818" timestamp2="17305818">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8559" _type="InsertStringCommand" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17305818" timestamp2="17305818">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8561" _type="InsertStringCommand" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306105" timestamp2="17306105">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8562" _type="InsertStringCommand" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306105" timestamp2="17306105">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="8564" _type="InsertStringCommand" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306257" timestamp2="17306257">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8565" _type="InsertStringCommand" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306257" timestamp2="17306257">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8567" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306503" />
  <Command __id="8568" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306503" />
  <Command __id="8570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306625" />
  <Command __id="8571" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:42:30 EST 2023" starttimestamp="1700582044267" timestamp="17306625" />
  <Command __id="8573" _type="InsertStringCommand" date="Tue Nov 21 15:42:31 EST 2023" starttimestamp="1700582044267" timestamp="17306838" timestamp2="17306838">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8574" _type="InsertStringCommand" date="Tue Nov 21 15:42:31 EST 2023" starttimestamp="1700582044267" timestamp="17306838" timestamp2="17306838">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8575" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:42:31 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17306844" />
  <Command __id="8583" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:42:32 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17308303" />
  <Command __id="8585" _type="InsertStringCommand" date="Tue Nov 21 15:42:32 EST 2023" starttimestamp="1700582044267" timestamp="17308309" timestamp2="17308309">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8586" _type="InsertStringCommand" date="Tue Nov 21 15:42:32 EST 2023" starttimestamp="1700582044267" timestamp="17308309" timestamp2="17308309">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8588" _type="InsertStringCommand" date="Tue Nov 21 15:42:33 EST 2023" starttimestamp="1700582044267" timestamp="17308758" timestamp2="17308758">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8589" _type="InsertStringCommand" date="Tue Nov 21 15:42:33 EST 2023" starttimestamp="1700582044267" timestamp="17308758" timestamp2="17308758">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8590" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:42:33 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17308763" />
  <Command __id="8591" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:42:52 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17328349" />
  <Command __id="8593" _type="InsertStringCommand" date="Tue Nov 21 15:42:52 EST 2023" starttimestamp="1700582044267" timestamp="17328356" timestamp2="17328356">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8594" _type="InsertStringCommand" date="Tue Nov 21 15:42:52 EST 2023" starttimestamp="1700582044267" timestamp="17328356" timestamp2="17328356">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8595" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:42:54 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17329960" />
  <Command __id="8596" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:42:54 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17329960" />
  <Command __id="8598" _type="InsertStringCommand" date="Tue Nov 21 15:42:54 EST 2023" starttimestamp="1700582044267" timestamp="17330173" timestamp2="17330173">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="8599" _type="InsertStringCommand" date="Tue Nov 21 15:42:54 EST 2023" starttimestamp="1700582044267" timestamp="17330173" timestamp2="17330173">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="8600" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:42:54 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17330463" />
  <Command __id="8601" _type="MoveCaretCommand" caretOffset="501" date="Tue Nov 21 15:42:54 EST 2023" docOffset="501" starttimestamp="1700582044267" timestamp="17330463" />
  <Command __id="8602" _type="SelectTextCommand" caretOffset="803" date="Tue Nov 21 15:42:55 EST 2023" end="804" start="803" starttimestamp="1700582044267" timestamp="17330839" />
  <Command __id="8603" _type="SelectTextCommand" caretOffset="803" date="Tue Nov 21 15:42:55 EST 2023" end="804" start="803" starttimestamp="1700582044267" timestamp="17330839" />
  <Command __id="8604" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 15:42:55 EST 2023" starttimestamp="1700582044267" timestamp="17331011" />
  <Command __id="8605" _type="EclipseCommand" commandID="" date="Tue Nov 21 15:42:55 EST 2023" starttimestamp="1700582044267" timestamp="17331110" />
  <Command __id="8606" _type="EclipseCommand" commandID="" date="Tue Nov 21 15:42:55 EST 2023" starttimestamp="1700582044267" timestamp="17331117" />
  <Command __id="8607" _type="MoveCaretCommand" caretOffset="622" date="Tue Nov 21 15:42:56 EST 2023" docOffset="622" starttimestamp="1700582044267" timestamp="17332507" />
  <Command __id="8608" _type="MoveCaretCommand" caretOffset="622" date="Tue Nov 21 15:42:56 EST 2023" docOffset="622" starttimestamp="1700582044267" timestamp="17332507" />
  <Command __id="8610" _type="InsertStringCommand" date="Tue Nov 21 15:42:56 EST 2023" starttimestamp="1700582044267" timestamp="17332576" timestamp2="17332576">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8611" _type="InsertStringCommand" date="Tue Nov 21 15:42:56 EST 2023" starttimestamp="1700582044267" timestamp="17332576" timestamp2="17332576">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8612" _type="SelectTextCommand" caretOffset="647" date="Tue Nov 21 15:42:57 EST 2023" end="647" start="646" starttimestamp="1700582044267" timestamp="17332802" />
  <Command __id="8613" _type="SelectTextCommand" caretOffset="647" date="Tue Nov 21 15:42:57 EST 2023" end="647" start="646" starttimestamp="1700582044267" timestamp="17332802" />
  <Command __id="8614" _type="MoveCaretCommand" caretOffset="1047" date="Tue Nov 21 15:42:59 EST 2023" docOffset="1047" starttimestamp="1700582044267" timestamp="17335236" />
  <Command __id="8615" _type="MoveCaretCommand" caretOffset="1047" date="Tue Nov 21 15:42:59 EST 2023" docOffset="1047" starttimestamp="1700582044267" timestamp="17335236" />
  <Command __id="8616" _type="MoveCaretCommand" caretOffset="509" date="Tue Nov 21 15:43:04 EST 2023" docOffset="509" starttimestamp="1700582044267" timestamp="17340074" />
  <Command __id="8617" _type="MoveCaretCommand" caretOffset="509" date="Tue Nov 21 15:43:04 EST 2023" docOffset="509" starttimestamp="1700582044267" timestamp="17340074" />
  <DocumentChange __id="8538" _type="Insert" date="Tue Nov 21 15:42:26 EST 2023" docASTNodeCount="167" docActiveCodeLength="1031" docExpressionCount="132" docLength="1031" length="9" offset="598" repeat="9" starttimestamp="1700582044267" timestamp="17302092" timestamp2="17306254">
    <text><![CDATA[exprge&& ]]></text>
  </DocumentChange>
  <DocumentChange __id="8566" _type="Delete" date="Tue Nov 21 15:42:30 EST 2023" docASTNodeCount="167" docActiveCodeLength="1029" docExpressionCount="132" docLength="1029" endLine="19" length="2" offset="602" repeat="2" startLine="19" starttimestamp="1700582044267" timestamp="17306500" timestamp2="17306622">
    <text><![CDATA[ge]]></text>
  </DocumentChange>
  <DocumentChange __id="8572" _type="Insert" date="Tue Nov 21 15:42:31 EST 2023" docASTNodeCount="169" docActiveCodeLength="1037" docExpressionCount="134" docLength="1037" length="8" offset="602" repeat="8" starttimestamp="1700582044267" timestamp="17306835" timestamp2="17307763">
    <text><![CDATA[.getTail]]></text>
  </DocumentChange>
  <DocumentChange __id="8584" _type="Replace" date="Tue Nov 21 15:42:32 EST 2023" docASTNodeCount="169" docActiveCodeLength="1039" docExpressionCount="134" docLength="1039" endLine="19" insertionLength="9" int_docASTNodeCount="167" int_docActiveCodeLength="1030" int_docExpressionCount="132" int_docLength="1030" length="7" offset="603" startLine="19" starttimestamp="1700582044267" timestamp="17308305">
    <deletedText><![CDATA[getTail]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8587" _type="Insert" date="Tue Nov 21 15:42:33 EST 2023" docASTNodeCount="169" docActiveCodeLength="1040" docExpressionCount="134" docLength="1040" length="1" offset="612" starttimestamp="1700582044267" timestamp="17308755">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="8592" _type="Insert" date="Tue Nov 21 15:42:52 EST 2023" docASTNodeCount="171" docActiveCodeLength="1048" docExpressionCount="136" docLength="1048" length="8" offset="613" starttimestamp="1700582044267" timestamp="17328353">
    <text><![CDATA[isAtom()]]></text>
  </DocumentChange>
  <DocumentChange __id="8597" _type="Insert" date="Tue Nov 21 15:42:54 EST 2023" docASTNodeCount="172" docActiveCodeLength="1049" docExpressionCount="137" docLength="1049" length="1" offset="598" starttimestamp="1700582044267" timestamp="17330171">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="8609" _type="Insert" date="Tue Nov 21 15:42:56 EST 2023" docASTNodeCount="172" docActiveCodeLength="1050" docExpressionCount="137" docLength="1050" length="1" offset="622" starttimestamp="1700582044267" timestamp="17332574">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="8618" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 15:43:06 EST 2023" docOffset="233" starttimestamp="1700582044267" timestamp="17341849" />
  <Command __id="8619" _type="MoveCaretCommand" caretOffset="233" date="Tue Nov 21 15:43:06 EST 2023" docOffset="233" starttimestamp="1700582044267" timestamp="17341849" />
  <Command __id="8620" _type="SelectTextCommand" caretOffset="245" date="Tue Nov 21 15:43:06 EST 2023" end="245" start="213" starttimestamp="1700582044267" timestamp="17341998" />
  <Command __id="8621" _type="SelectTextCommand" caretOffset="245" date="Tue Nov 21 15:43:06 EST 2023" end="245" start="213" starttimestamp="1700582044267" timestamp="17341998" />
  <Command __id="8622" _type="CopyCommand" date="Tue Nov 21 15:43:06 EST 2023" starttimestamp="1700582044267" timestamp="17342139" />
  <Command __id="8623" _type="MoveCaretCommand" caretOffset="627" date="Tue Nov 21 15:43:06 EST 2023" docOffset="627" starttimestamp="1700582044267" timestamp="17342663" />
  <Command __id="8624" _type="MoveCaretCommand" caretOffset="627" date="Tue Nov 21 15:43:06 EST 2023" docOffset="627" starttimestamp="1700582044267" timestamp="17342663" />
  <Command __id="8625" _type="MoveCaretCommand" caretOffset="626" date="Tue Nov 21 15:43:07 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="17342986" />
  <Command __id="8626" _type="MoveCaretCommand" caretOffset="626" date="Tue Nov 21 15:43:07 EST 2023" docOffset="626" starttimestamp="1700582044267" timestamp="17342987" />
  <DocumentChange __id="8627" _type="Insert" date="Tue Nov 21 15:43:07 EST 2023" docASTNodeCount="174" docActiveCodeLength="1083" docExpressionCount="139" docLength="1083" length="33" offset="626" repeat="2" starttimestamp="1700582044267" timestamp="17343157" timestamp2="17344667">
    <text><![CDATA[BuiltinOperationManagerSingleton.]]></text>
  </DocumentChange>
  <Command __id="8628" _type="PasteCommand" date="Tue Nov 21 15:43:07 EST 2023" starttimestamp="1700582044267" timestamp="17343159" />
  <Command __id="8630" _type="InsertStringCommand" date="Tue Nov 21 15:43:08 EST 2023" starttimestamp="1700582044267" timestamp="17344677" timestamp2="17344677">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8631" _type="InsertStringCommand" date="Tue Nov 21 15:43:08 EST 2023" starttimestamp="1700582044267" timestamp="17344678" timestamp2="17344678">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8632" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:43:08 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17344683" />
  <Command __id="8633" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:43:09 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17345653" />
  <Command __id="8634" _type="SelectTextCommand" caretOffset="663" date="Tue Nov 21 15:43:10 EST 2023" end="663" start="662" starttimestamp="1700582044267" timestamp="17345738" />
  <Command __id="8635" _type="SelectTextCommand" caretOffset="663" date="Tue Nov 21 15:43:10 EST 2023" end="663" start="662" starttimestamp="1700582044267" timestamp="17345738" />
  <DocumentChange __id="8636" _type="Delete" date="Tue Nov 21 15:43:14 EST 2023" docASTNodeCount="172" docActiveCodeLength="1050" docExpressionCount="137" docLength="1050" endLine="19" length="33" offset="626" repeat="2" startLine="19" starttimestamp="1700582044267" timestamp="17349810" timestamp2="17350002">
    <text><![CDATA[BuiltinOperationManagerSingleton.]]></text>
  </DocumentChange>
  <Command __id="8637" _type="UndoCommand" date="Tue Nov 21 15:43:14 EST 2023" starttimestamp="1700582044267" timestamp="17349815" />
  <Command __id="8639" _type="UndoCommand" date="Tue Nov 21 15:43:14 EST 2023" starttimestamp="1700582044267" timestamp="17350007" />
  <DocumentChange __id="8640" _type="Delete" date="Tue Nov 21 15:43:14 EST 2023" docASTNodeCount="172" docActiveCodeLength="1049" docExpressionCount="137" docLength="1049" endLine="19" length="1" offset="622" startLine="19" starttimestamp="1700582044267" timestamp="17350199">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="8641" _type="UndoCommand" date="Tue Nov 21 15:43:14 EST 2023" starttimestamp="1700582044267" timestamp="17350209" />
  <DocumentChange __id="8642" _type="Delete" date="Tue Nov 21 15:43:14 EST 2023" docASTNodeCount="171" docActiveCodeLength="1048" docExpressionCount="136" docLength="1048" endLine="19" length="1" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17350529">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <Command __id="8643" _type="UndoCommand" date="Tue Nov 21 15:43:14 EST 2023" starttimestamp="1700582044267" timestamp="17350537" />
  <DocumentChange __id="8644" _type="Delete" date="Tue Nov 21 15:43:15 EST 2023" docASTNodeCount="169" docActiveCodeLength="1039" docExpressionCount="134" docLength="1039" endLine="19" length="9" offset="612" repeat="2" startLine="19" starttimestamp="1700582044267" timestamp="17350856" timestamp2="17351252">
    <text><![CDATA[.isAtom()]]></text>
  </DocumentChange>
  <Command __id="8645" _type="UndoCommand" date="Tue Nov 21 15:43:15 EST 2023" starttimestamp="1700582044267" timestamp="17350861" />
  <Command __id="8647" _type="UndoCommand" date="Tue Nov 21 15:43:15 EST 2023" starttimestamp="1700582044267" timestamp="17351257" />
  <DocumentChange __id="8648" _type="Replace" date="Tue Nov 21 15:43:15 EST 2023" docASTNodeCount="169" docActiveCodeLength="1037" docExpressionCount="134" docLength="1037" endLine="19" insertionLength="7" int_docASTNodeCount="167" int_docActiveCodeLength="1030" int_docExpressionCount="132" int_docLength="1030" length="9" offset="603" startLine="19" starttimestamp="1700582044267" timestamp="17351495">
    <deletedText><![CDATA[getTail()]]></deletedText>
    <insertedText><![CDATA[getTail]]></insertedText>
  </DocumentChange>
  <Command __id="8649" _type="UndoCommand" date="Tue Nov 21 15:43:15 EST 2023" starttimestamp="1700582044267" timestamp="17351500" />
  <DocumentChange __id="8650" _type="Delete" date="Tue Nov 21 15:43:15 EST 2023" docASTNodeCount="167" docActiveCodeLength="1029" docExpressionCount="132" docLength="1029" endLine="19" length="8" offset="602" startLine="19" starttimestamp="1700582044267" timestamp="17351703">
    <text><![CDATA[.getTail]]></text>
  </DocumentChange>
  <Command __id="8651" _type="UndoCommand" date="Tue Nov 21 15:43:15 EST 2023" starttimestamp="1700582044267" timestamp="17351708" />
  <DocumentChange __id="8652" _type="Insert" date="Tue Nov 21 15:43:16 EST 2023" docASTNodeCount="167" docActiveCodeLength="1031" docExpressionCount="132" docLength="1031" length="2" offset="602" starttimestamp="1700582044267" timestamp="17351867">
    <text><![CDATA[ge]]></text>
  </DocumentChange>
  <Command __id="8653" _type="UndoCommand" date="Tue Nov 21 15:43:16 EST 2023" starttimestamp="1700582044267" timestamp="17351869" />
  <DocumentChange __id="8654" _type="Delete" date="Tue Nov 21 15:43:16 EST 2023" docASTNodeCount="165" docActiveCodeLength="1022" docExpressionCount="130" docLength="1022" endLine="19" length="9" offset="598" repeat="3" startLine="19" starttimestamp="1700582044267" timestamp="17352045" timestamp2="17352748">
    <text><![CDATA[exprge&& ]]></text>
  </DocumentChange>
  <Command __id="8655" _type="UndoCommand" date="Tue Nov 21 15:43:16 EST 2023" starttimestamp="1700582044267" timestamp="17352050" />
  <Command __id="8657" _type="UndoCommand" date="Tue Nov 21 15:43:16 EST 2023" starttimestamp="1700582044267" timestamp="17352367" />
  <Command __id="8659" _type="UndoCommand" date="Tue Nov 21 15:43:17 EST 2023" starttimestamp="1700582044267" timestamp="17352752" />
  <Command __id="8661" _type="UndoCommand" date="Tue Nov 21 15:43:17 EST 2023" starttimestamp="1700582044267" timestamp="17353250" />
  <DocumentChange __id="8660" _type="Insert" date="Tue Nov 21 15:43:17 EST 2023" docASTNodeCount="167" docActiveCodeLength="1027" docExpressionCount="132" docLength="1027" length="5" offset="598" starttimestamp="1700582044267" timestamp="17353247">
    <text><![CDATA[expr.]]></text>
  </DocumentChange>
  <DocumentChange __id="8664" _type="Delete" date="Tue Nov 21 15:43:20 EST 2023" docASTNodeCount="165" docActiveCodeLength="1015" docExpressionCount="130" docLength="1015" endLine="19" length="12" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17356138">
    <text><![CDATA[expr.getTail]]></text>
  </DocumentChange>
  <DocumentChange __id="8666" _type="Insert" date="Tue Nov 21 15:43:20 EST 2023" docASTNodeCount="165" docActiveCodeLength="1016" docExpressionCount="130" docLength="1016" length="1" offset="598" starttimestamp="1700582044267" timestamp="17356589">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="8668" _type="Delete" date="Tue Nov 21 15:43:21 EST 2023" docASTNodeCount="165" docActiveCodeLength="1015" docExpressionCount="130" docLength="1015" endLine="19" length="1" offset="598" startLine="19" starttimestamp="1700582044267" timestamp="17357235">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <Command __id="8662" _type="MoveCaretCommand" caretOffset="1019" date="Tue Nov 21 15:43:19 EST 2023" docOffset="1019" starttimestamp="1700582044267" timestamp="17355371" />
  <Command __id="8663" _type="MoveCaretCommand" caretOffset="1019" date="Tue Nov 21 15:43:19 EST 2023" docOffset="1019" starttimestamp="1700582044267" timestamp="17355371" />
  <Command __id="8665" _type="UndoCommand" date="Tue Nov 21 15:43:20 EST 2023" starttimestamp="1700582044267" timestamp="17356144" />
  <Command __id="8667" _type="UndoCommand" date="Tue Nov 21 15:43:20 EST 2023" starttimestamp="1700582044267" timestamp="17356593" />
  <Command __id="8669" _type="UndoCommand" date="Tue Nov 21 15:43:21 EST 2023" starttimestamp="1700582044267" timestamp="17357238" />
  <Command __id="8671" _type="InsertStringCommand" date="Tue Nov 21 15:43:27 EST 2023" starttimestamp="1700582044267" timestamp="17362819" timestamp2="17362819">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8672" _type="InsertStringCommand" date="Tue Nov 21 15:43:27 EST 2023" starttimestamp="1700582044267" timestamp="17362820" timestamp2="17362820">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8674" _type="InsertStringCommand" date="Tue Nov 21 15:43:27 EST 2023" starttimestamp="1700582044267" timestamp="17363028" timestamp2="17363028">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8675" _type="InsertStringCommand" date="Tue Nov 21 15:43:27 EST 2023" starttimestamp="1700582044267" timestamp="17363028" timestamp2="17363028">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8677" _type="InsertStringCommand" date="Tue Nov 21 15:43:27 EST 2023" starttimestamp="1700582044267" timestamp="17363664" timestamp2="17363664">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8678" _type="InsertStringCommand" date="Tue Nov 21 15:43:27 EST 2023" starttimestamp="1700582044267" timestamp="17363664" timestamp2="17363664">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8679" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:28 EST 2023" starttimestamp="1700582044267" timestamp="17364046" />
  <Command __id="8680" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:28 EST 2023" starttimestamp="1700582044267" timestamp="17364046" />
  <Command __id="8681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:28 EST 2023" starttimestamp="1700582044267" timestamp="17364175" />
  <Command __id="8682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:28 EST 2023" starttimestamp="1700582044267" timestamp="17364176" />
  <Command __id="8683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:28 EST 2023" starttimestamp="1700582044267" timestamp="17364353" />
  <Command __id="8684" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:28 EST 2023" starttimestamp="1700582044267" timestamp="17364353" />
  <Command __id="8686" _type="InsertStringCommand" date="Tue Nov 21 15:43:29 EST 2023" starttimestamp="1700582044267" timestamp="17364801" timestamp2="17364801">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8687" _type="InsertStringCommand" date="Tue Nov 21 15:43:29 EST 2023" starttimestamp="1700582044267" timestamp="17364802" timestamp2="17364802">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8688" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:29 EST 2023" starttimestamp="1700582044267" timestamp="17365187" />
  <Command __id="8689" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:29 EST 2023" starttimestamp="1700582044267" timestamp="17365187" />
  <Command __id="8690" _type="SelectTextCommand" caretOffset="669" date="Tue Nov 21 15:43:33 EST 2023" end="669" start="654" starttimestamp="1700582044267" timestamp="17369055" />
  <Command __id="8691" _type="SelectTextCommand" caretOffset="669" date="Tue Nov 21 15:43:33 EST 2023" end="669" start="654" starttimestamp="1700582044267" timestamp="17369056" />
  <Command __id="8692" _type="CopyCommand" date="Tue Nov 21 15:43:33 EST 2023" starttimestamp="1700582044267" timestamp="17369162" />
  <Command __id="8693" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:43:34 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17369977" />
  <Command __id="8694" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:43:34 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17369977" />
  <Command __id="8696" _type="PasteCommand" date="Tue Nov 21 15:43:34 EST 2023" starttimestamp="1700582044267" timestamp="17370131" />
  <Command __id="8698" _type="InsertStringCommand" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371115" timestamp2="17371115">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8699" _type="InsertStringCommand" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371115" timestamp2="17371115">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8701" _type="InsertStringCommand" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371185" timestamp2="17371185">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8702" _type="InsertStringCommand" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371185" timestamp2="17371185">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="8704" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371591" />
  <Command __id="8705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371591" />
  <Command __id="8707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371728" />
  <Command __id="8708" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:35 EST 2023" starttimestamp="1700582044267" timestamp="17371728" />
  <Command __id="8710" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:36 EST 2023" starttimestamp="1700582044267" timestamp="17371924" />
  <Command __id="8711" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:36 EST 2023" starttimestamp="1700582044267" timestamp="17371924" />
  <Command __id="8713" _type="InsertStringCommand" date="Tue Nov 21 15:43:36 EST 2023" starttimestamp="1700582044267" timestamp="17372486" timestamp2="17372486">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8714" _type="InsertStringCommand" date="Tue Nov 21 15:43:36 EST 2023" starttimestamp="1700582044267" timestamp="17372486" timestamp2="17372486">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8715" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:43:36 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17372489" />
  <Command __id="8720" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:43:38 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17374567" />
  <Command __id="8722" _type="InsertStringCommand" date="Tue Nov 21 15:43:38 EST 2023" starttimestamp="1700582044267" timestamp="17374579" timestamp2="17374579">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8723" _type="InsertStringCommand" date="Tue Nov 21 15:43:38 EST 2023" starttimestamp="1700582044267" timestamp="17374579" timestamp2="17374579">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8724" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:43:40 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17375989" />
  <Command __id="8725" _type="MoveCaretCommand" caretOffset="598" date="Tue Nov 21 15:43:40 EST 2023" docOffset="598" starttimestamp="1700582044267" timestamp="17375990" />
  <Command __id="8727" _type="InsertStringCommand" date="Tue Nov 21 15:43:40 EST 2023" starttimestamp="1700582044267" timestamp="17376218" timestamp2="17376218">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="8728" _type="InsertStringCommand" date="Tue Nov 21 15:43:40 EST 2023" starttimestamp="1700582044267" timestamp="17376218" timestamp2="17376218">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="8729" _type="MoveCaretCommand" caretOffset="800" date="Tue Nov 21 15:43:40 EST 2023" docOffset="800" starttimestamp="1700582044267" timestamp="17376514" />
  <Command __id="8730" _type="MoveCaretCommand" caretOffset="800" date="Tue Nov 21 15:43:40 EST 2023" docOffset="800" starttimestamp="1700582044267" timestamp="17376514" />
  <Command __id="8731" _type="MoveCaretCommand" caretOffset="599" date="Tue Nov 21 15:43:42 EST 2023" docOffset="599" starttimestamp="1700582044267" timestamp="17377855" />
  <Command __id="8732" _type="MoveCaretCommand" caretOffset="599" date="Tue Nov 21 15:43:42 EST 2023" docOffset="599" starttimestamp="1700582044267" timestamp="17377856" />
  <Command __id="8733" _type="SelectTextCommand" caretOffset="599" date="Tue Nov 21 15:43:42 EST 2023" end="599" start="598" starttimestamp="1700582044267" timestamp="17378677" />
  <Command __id="8734" _type="SelectTextCommand" caretOffset="599" date="Tue Nov 21 15:43:42 EST 2023" end="599" start="598" starttimestamp="1700582044267" timestamp="17378677" />
  <Command __id="8735" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:44 EST 2023" starttimestamp="1700582044267" timestamp="17380051" />
  <Command __id="8736" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:43:44 EST 2023" starttimestamp="1700582044267" timestamp="17380051" />
  <Command __id="8738" _type="InsertStringCommand" date="Tue Nov 21 15:43:44 EST 2023" starttimestamp="1700582044267" timestamp="17380634" timestamp2="17380634">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="8739" _type="InsertStringCommand" date="Tue Nov 21 15:43:44 EST 2023" starttimestamp="1700582044267" timestamp="17380634" timestamp2="17380634">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="8670" _type="Insert" date="Tue Nov 21 15:43:27 EST 2023" docASTNodeCount="165" docActiveCodeLength="1019" docExpressionCount="130" docLength="1019" length="4" offset="598" repeat="4" starttimestamp="1700582044267" timestamp="17362815" timestamp2="17364797">
    <text><![CDATA[ && ]]></text>
  </DocumentChange>
  <DocumentChange __id="8695" _type="Insert" date="Tue Nov 21 15:43:34 EST 2023" docASTNodeCount="171" docActiveCodeLength="1036" docExpressionCount="136" docLength="1036" length="17" offset="598" repeat="3" starttimestamp="1700582044267" timestamp="17370128" timestamp2="17371182">
    <text><![CDATA[expr.getTail().is]]></text>
  </DocumentChange>
  <DocumentChange __id="8703" _type="Delete" date="Tue Nov 21 15:43:35 EST 2023" docASTNodeCount="169" docActiveCodeLength="1033" docExpressionCount="134" docLength="1033" endLine="19" length="3" offset="612" repeat="3" startLine="19" starttimestamp="1700582044267" timestamp="17371589" timestamp2="17371919">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="8712" _type="Insert" date="Tue Nov 21 15:43:36 EST 2023" docASTNodeCount="171" docActiveCodeLength="1038" docExpressionCount="136" docLength="1038" length="5" offset="612" repeat="5" starttimestamp="1700582044267" timestamp="17372484" timestamp2="17374318">
    <text><![CDATA[.isAt]]></text>
  </DocumentChange>
  <DocumentChange __id="8721" _type="Replace" date="Tue Nov 21 15:43:38 EST 2023" docASTNodeCount="171" docActiveCodeLength="1042" docExpressionCount="136" docLength="1042" endLine="19" insertionLength="8" int_docASTNodeCount="169" int_docActiveCodeLength="1034" int_docExpressionCount="134" int_docLength="1034" length="4" offset="613" startLine="19" starttimestamp="1700582044267" timestamp="17374568">
    <deletedText><![CDATA[isAt]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8726" _type="Insert" date="Tue Nov 21 15:43:40 EST 2023" docASTNodeCount="172" docActiveCodeLength="1043" docExpressionCount="137" docLength="1043" length="1" offset="598" starttimestamp="1700582044267" timestamp="17376215">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="8737" _type="Insert" date="Tue Nov 21 15:43:44 EST 2023" docASTNodeCount="174" docActiveCodeLength="1045" docExpressionCount="138" docLength="1045" length="2" offset="598" starttimestamp="1700582044267" timestamp="17380631">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="8742" _type="Delete" date="Tue Nov 21 15:43:47 EST 2023" docASTNodeCount="174" docActiveCodeLength="1044" docExpressionCount="138" docLength="1044" endLine="20" length="1" offset="740" startLine="20" starttimestamp="1700582044267" timestamp="17382886">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="8740" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 15:43:46 EST 2023" starttimestamp="1700582044267" timestamp="17382666" />
  <Command __id="8741" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Tue Nov 21 15:43:46 EST 2023" starttimestamp="1700582044267" timestamp="17382667" />
  <Command __id="8743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:47 EST 2023" starttimestamp="1700582044267" timestamp="17382889" />
  <Command __id="8744" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:47 EST 2023" starttimestamp="1700582044267" timestamp="17382889" />
  <Command __id="8746" _type="UndoCommand" date="Tue Nov 21 15:43:48 EST 2023" starttimestamp="1700582044267" timestamp="17383973" />
  <Command __id="8747" _type="MoveCaretCommand" caretOffset="600" date="Tue Nov 21 15:43:49 EST 2023" docOffset="600" starttimestamp="1700582044267" timestamp="17384737" />
  <Command __id="8748" _type="MoveCaretCommand" caretOffset="600" date="Tue Nov 21 15:43:49 EST 2023" docOffset="600" starttimestamp="1700582044267" timestamp="17384737" />
  <Command __id="8749" _type="SelectTextCommand" caretOffset="599" date="Tue Nov 21 15:43:49 EST 2023" end="600" start="599" starttimestamp="1700582044267" timestamp="17385628" />
  <Command __id="8750" _type="SelectTextCommand" caretOffset="599" date="Tue Nov 21 15:43:49 EST 2023" end="600" start="599" starttimestamp="1700582044267" timestamp="17385628" />
  <Command __id="8752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:50 EST 2023" starttimestamp="1700582044267" timestamp="17386042" />
  <Command __id="8753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:43:50 EST 2023" starttimestamp="1700582044267" timestamp="17386042" />
  <Command __id="8754" _type="MoveCaretCommand" caretOffset="623" date="Tue Nov 21 15:43:51 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="17386829" />
  <Command __id="8755" _type="MoveCaretCommand" caretOffset="623" date="Tue Nov 21 15:43:51 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="17386829" />
  <Command __id="8757" _type="InsertStringCommand" date="Tue Nov 21 15:43:52 EST 2023" starttimestamp="1700582044267" timestamp="17387804" timestamp2="17387804">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="8758" _type="InsertStringCommand" date="Tue Nov 21 15:43:52 EST 2023" starttimestamp="1700582044267" timestamp="17387804" timestamp2="17387804">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="8759" _type="MoveCaretCommand" caretOffset="1045" date="Tue Nov 21 15:43:52 EST 2023" docOffset="1045" starttimestamp="1700582044267" timestamp="17388479" />
  <Command __id="8760" _type="MoveCaretCommand" caretOffset="1045" date="Tue Nov 21 15:43:52 EST 2023" docOffset="1045" starttimestamp="1700582044267" timestamp="17388479" />
  <Command __id="8766" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:43:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17392593" type="Run" />
  <Command __id="8767" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:43:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17392593" type="Run" />
  <Command __id="8768" _type="ShellCommand" date="Tue Nov 21 15:43:58 EST 2023" starttimestamp="1700582044267" timestamp="17394471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8769" _type="ShellCommand" date="Tue Nov 21 15:43:59 EST 2023" starttimestamp="1700582044267" timestamp="17395281" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8770" _type="PasteCommand" date="Tue Nov 21 15:43:59 EST 2023" starttimestamp="1700582044267" timestamp="17395452" />
  <Command __id="8771" _type="ConsoleOutput" date="Tue Nov 21 15:44:01 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="17397160" type="ConsoleOutput">
    <outputString><![CDATA[(CONS “ONE” 1)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(CONS “ONE” 1)¶"), Diff(DELETE,"Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="8772" _type="ExceptionCommand" date="Tue Nov 21 15:44:01 EST 2023" starttimestamp="1700582044267" timestamp="17397162" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:20)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:21)
	at index.EvalEvaluator.eval(EvalEvaluator.java:15)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8773" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:44:01 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17397166" type="Run" />
  <Command __id="8774" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:44:01 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17397166" type="Run" />
  <Command __id="8775" _type="MoveCaretCommand" caretOffset="623" date="Tue Nov 21 15:44:19 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="17415257" />
  <Command __id="8776" _type="MoveCaretCommand" caretOffset="623" date="Tue Nov 21 15:44:19 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="17415257" />
  <Command __id="8777" _type="MoveCaretCommand" caretOffset="624" date="Tue Nov 21 15:44:20 EST 2023" docOffset="624" starttimestamp="1700582044267" timestamp="17416426" />
  <Command __id="8778" _type="MoveCaretCommand" caretOffset="624" date="Tue Nov 21 15:44:20 EST 2023" docOffset="624" starttimestamp="1700582044267" timestamp="17416426" />
  <DocumentChange __id="8745" _type="Insert" date="Tue Nov 21 15:43:48 EST 2023" docASTNodeCount="174" docActiveCodeLength="1045" docExpressionCount="138" docLength="1045" length="1" offset="740" starttimestamp="1700582044267" timestamp="17383970">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="8751" _type="Delete" date="Tue Nov 21 15:43:50 EST 2023" docASTNodeCount="174" docActiveCodeLength="1044" docExpressionCount="138" docLength="1044" endLine="19" length="1" offset="599" startLine="19" starttimestamp="1700582044267" timestamp="17386036">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="8756" _type="Insert" date="Tue Nov 21 15:43:52 EST 2023" docASTNodeCount="173" docActiveCodeLength="1045" docExpressionCount="138" docLength="1045" length="1" offset="623" starttimestamp="1700582044267" timestamp="17387801">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="8779" _type="MoveCaretCommand" caretOffset="623" date="Tue Nov 21 15:44:22 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="17418640" />
  <Command __id="8780" _type="MoveCaretCommand" caretOffset="623" date="Tue Nov 21 15:44:22 EST 2023" docOffset="623" starttimestamp="1700582044267" timestamp="17418641" />
  <Command __id="8781" _type="MoveCaretCommand" caretOffset="624" date="Tue Nov 21 15:44:23 EST 2023" docOffset="624" starttimestamp="1700582044267" timestamp="17419199" />
  <Command __id="8782" _type="MoveCaretCommand" caretOffset="624" date="Tue Nov 21 15:44:23 EST 2023" docOffset="624" starttimestamp="1700582044267" timestamp="17419199" />
  <Command __id="8783" _type="MoveCaretCommand" caretOffset="625" date="Tue Nov 21 15:44:23 EST 2023" docOffset="625" starttimestamp="1700582044267" timestamp="17419488" />
  <Command __id="8784" _type="MoveCaretCommand" caretOffset="625" date="Tue Nov 21 15:44:23 EST 2023" docOffset="625" starttimestamp="1700582044267" timestamp="17419488" />
  <Command __id="8786" _type="InsertStringCommand" date="Tue Nov 21 15:44:25 EST 2023" starttimestamp="1700582044267" timestamp="17421527" timestamp2="17421527">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8787" _type="InsertStringCommand" date="Tue Nov 21 15:44:25 EST 2023" starttimestamp="1700582044267" timestamp="17421527" timestamp2="17421527">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8789" _type="InsertStringCommand" date="Tue Nov 21 15:44:25 EST 2023" starttimestamp="1700582044267" timestamp="17421681" timestamp2="17421681">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8790" _type="InsertStringCommand" date="Tue Nov 21 15:44:25 EST 2023" starttimestamp="1700582044267" timestamp="17421681" timestamp2="17421681">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="8792" _type="InsertStringCommand" date="Tue Nov 21 15:44:26 EST 2023" starttimestamp="1700582044267" timestamp="17422071" timestamp2="17422071">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8793" _type="InsertStringCommand" date="Tue Nov 21 15:44:26 EST 2023" starttimestamp="1700582044267" timestamp="17422071" timestamp2="17422071">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8795" _type="InsertStringCommand" date="Tue Nov 21 15:44:26 EST 2023" starttimestamp="1700582044267" timestamp="17422631" timestamp2="17422631">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="8796" _type="InsertStringCommand" date="Tue Nov 21 15:44:26 EST 2023" starttimestamp="1700582044267" timestamp="17422631" timestamp2="17422631">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="8797" _type="InsertStringCommand" date="Tue Nov 21 15:44:26 EST 2023" starttimestamp="1700582044267" timestamp="17422686" timestamp2="17422686">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="8798" _type="InsertStringCommand" date="Tue Nov 21 15:44:26 EST 2023" starttimestamp="1700582044267" timestamp="17422686" timestamp2="17422686">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="8799" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:44:27 EST 2023" starttimestamp="1700582044267" timestamp="17423355" />
  <Command __id="8800" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:44:27 EST 2023" starttimestamp="1700582044267" timestamp="17423355" />
  <Command __id="8801" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 15:44:28 EST 2023" starttimestamp="1700582044267" timestamp="17424421" />
  <Command __id="8802" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 15:44:28 EST 2023" starttimestamp="1700582044267" timestamp="17424422" />
  <Command __id="8804" _type="InsertStringCommand" date="Tue Nov 21 15:44:28 EST 2023" starttimestamp="1700582044267" timestamp="17424602" timestamp2="17424602">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8805" _type="InsertStringCommand" date="Tue Nov 21 15:44:28 EST 2023" starttimestamp="1700582044267" timestamp="17424602" timestamp2="17424602">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8806" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:44:29 EST 2023" starttimestamp="1700582044267" timestamp="17424747" />
  <Command __id="8807" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:44:29 EST 2023" starttimestamp="1700582044267" timestamp="17424747" />
  <Command __id="8808" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:44:29 EST 2023" starttimestamp="1700582044267" timestamp="17425155" />
  <Command __id="8809" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 15:44:29 EST 2023" starttimestamp="1700582044267" timestamp="17425155" />
  <Command __id="8811" _type="InsertStringCommand" date="Tue Nov 21 15:44:30 EST 2023" starttimestamp="1700582044267" timestamp="17426441" timestamp2="17426441">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="8812" _type="InsertStringCommand" date="Tue Nov 21 15:44:30 EST 2023" starttimestamp="1700582044267" timestamp="17426441" timestamp2="17426441">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="8814" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17426733" timestamp2="17426733">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8815" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17426733" timestamp2="17426733">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8817" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17426941" timestamp2="17426941">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8818" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17426941" timestamp2="17426941">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8820" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17427062" timestamp2="17427062">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8821" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17427062" timestamp2="17427062">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8823" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17427154" timestamp2="17427154">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8824" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17427154" timestamp2="17427154">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8826" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17427558" timestamp2="17427558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8827" _type="InsertStringCommand" date="Tue Nov 21 15:44:31 EST 2023" starttimestamp="1700582044267" timestamp="17427558" timestamp2="17427558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8828" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:44:31 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17427565" />
  <Command __id="8837" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:44:34 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17429987" />
  <Command __id="8839" _type="InsertStringCommand" date="Tue Nov 21 15:44:34 EST 2023" starttimestamp="1700582044267" timestamp="17429996" timestamp2="17429996">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8840" _type="InsertStringCommand" date="Tue Nov 21 15:44:34 EST 2023" starttimestamp="1700582044267" timestamp="17429996" timestamp2="17429996">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8866" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:44:42 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17438169" type="Run" />
  <Command __id="8867" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:44:42 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17438169" type="Run" />
  <Command __id="8868" _type="ShellCommand" date="Tue Nov 21 15:44:43 EST 2023" starttimestamp="1700582044267" timestamp="17439018" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8869" _type="ShellCommand" date="Tue Nov 21 15:44:44 EST 2023" starttimestamp="1700582044267" timestamp="17440047" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8870" _type="PasteCommand" date="Tue Nov 21 15:44:45 EST 2023" starttimestamp="1700582044267" timestamp="17440979" />
  <Command __id="8871" _type="ConsoleOutput" date="Tue Nov 21 15:44:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="17441494" type="ConsoleOutput">
    <outputString><![CDATA[(CONS “ONE” 1)
Exception in thread "main" 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(CONS “ONE” 1)¶"), Diff(INSERT,"Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="8872" _type="ExceptionCommand" date="Tue Nov 21 15:44:45 EST 2023" starttimestamp="1700582044267" timestamp="17441496" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:23)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:21)
	at index.EvalEvaluator.eval(EvalEvaluator.java:15)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8873" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:44:45 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17441498" type="Run" />
  <Command __id="8874" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:44:45 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17441498" type="Run" />
  <Command __id="8875" _type="ShellCommand" date="Tue Nov 21 15:45:59 EST 2023" starttimestamp="1700582044267" timestamp="17515372" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8876" _type="ShellCommand" date="Tue Nov 21 15:49:02 EST 2023" starttimestamp="1700582044267" timestamp="17697734" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8877" _type="ShellCommand" date="Tue Nov 21 15:49:04 EST 2023" starttimestamp="1700582044267" timestamp="17699819" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8878" _type="ShellCommand" date="Tue Nov 21 15:49:23 EST 2023" starttimestamp="1700582044267" timestamp="17719561" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8879" _type="ShellCommand" date="Tue Nov 21 15:49:24 EST 2023" starttimestamp="1700582044267" timestamp="17720529" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8880" _type="ShellCommand" date="Tue Nov 21 15:49:25 EST 2023" starttimestamp="1700582044267" timestamp="17720768" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8881" _type="ShellCommand" date="Tue Nov 21 15:49:25 EST 2023" starttimestamp="1700582044267" timestamp="17721537" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8882" _type="ShellCommand" date="Tue Nov 21 15:49:48 EST 2023" starttimestamp="1700582044267" timestamp="17744067" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8883" _type="ShellCommand" date="Tue Nov 21 15:50:11 EST 2023" starttimestamp="1700582044267" timestamp="17767040" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8884" _type="ShellCommand" date="Tue Nov 21 15:50:11 EST 2023" starttimestamp="1700582044267" timestamp="17767624" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8885" _type="ShellCommand" date="Tue Nov 21 15:50:12 EST 2023" starttimestamp="1700582044267" timestamp="17768074" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8887" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:50:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17790685" type="Run" />
  <Command __id="8888" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:50:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17790685" type="Run" />
  <Command __id="8889" _type="PasteCommand" date="Tue Nov 21 15:50:35 EST 2023" starttimestamp="1700582044267" timestamp="17791382" />
  <Command __id="8890" _type="ExceptionCommand" date="Tue Nov 21 15:50:36 EST 2023" starttimestamp="1700582044267" timestamp="17791755" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="8891" _type="ConsoleOutput" date="Tue Nov 21 15:50:36 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="17791759" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(CONS “ONE” 1)¶Exception in thread "main" "), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8892" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:50:36 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17791761" type="Run" />
  <Command __id="8893" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:50:36 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17791761" type="Run" />
  <Command __id="8894" _type="ShellCommand" date="Tue Nov 21 15:50:39 EST 2023" starttimestamp="1700582044267" timestamp="17795628" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8895" _type="ShellCommand" date="Tue Nov 21 15:50:41 EST 2023" starttimestamp="1700582044267" timestamp="17797312" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8896" _type="ShellCommand" date="Tue Nov 21 15:50:41 EST 2023" starttimestamp="1700582044267" timestamp="17797686" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8897" _type="ShellCommand" date="Tue Nov 21 15:50:42 EST 2023" starttimestamp="1700582044267" timestamp="17798246" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="8785" _type="Insert" date="Tue Nov 21 15:44:25 EST 2023" docASTNodeCount="178" docActiveCodeLength="1066" docExpressionCount="143" docLength="1066" length="21" offset="625" repeat="19" starttimestamp="1700582044267" timestamp="17421525" timestamp2="17429160">
    <text><![CDATA[&& (!expr.getTail()) ]]></text>
  </DocumentChange>
  <DocumentChange __id="8838" _type="Replace" date="Tue Nov 21 15:44:34 EST 2023" docASTNodeCount="180" docActiveCodeLength="1067" docExpressionCount="145" docLength="1067" endLine="19" insertionLength="10" int_docASTNodeCount="178" int_docActiveCodeLength="1057" int_docExpressionCount="142" int_docLength="1057" length="9" offset="635" startLine="19" starttimestamp="1700582044267" timestamp="17429990">
    <deletedText><![CDATA[getTail()]]></deletedText>
    <insertedText><![CDATA[getTail().]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8842" _type="Insert" date="Tue Nov 21 15:44:34 EST 2023" docASTNodeCount="180" docActiveCodeLength="1071" docExpressionCount="145" docLength="1071" length="4" offset="645" repeat="4" starttimestamp="1700582044267" timestamp="17430653" timestamp2="17431332">
    <text><![CDATA[getH]]></text>
  </DocumentChange>
  <DocumentChange __id="8847" _type="Replace" date="Tue Nov 21 15:44:36 EST 2023" docASTNodeCount="180" docActiveCodeLength="1076" docExpressionCount="145" docLength="1076" endLine="19" insertionLength="9" int_docASTNodeCount="180" int_docActiveCodeLength="1067" int_docExpressionCount="145" int_docLength="1067" length="4" offset="645" startLine="19" starttimestamp="1700582044267" timestamp="17431969">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="8850" _type="Insert" date="Tue Nov 21 15:44:36 EST 2023" docASTNodeCount="182" docActiveCodeLength="1080" docExpressionCount="147" docLength="1080" length="4" offset="654" repeat="4" starttimestamp="1700582044267" timestamp="17432281" timestamp2="17433001">
    <text><![CDATA[.isA]]></text>
  </DocumentChange>
  <DocumentChange __id="8858" _type="Replace" date="Tue Nov 21 15:44:37 EST 2023" docASTNodeCount="182" docActiveCodeLength="1085" docExpressionCount="147" docLength="1085" endLine="19" insertionLength="8" int_docASTNodeCount="182" int_docActiveCodeLength="1077" int_docExpressionCount="147" int_docLength="1077" length="3" offset="655" startLine="19" starttimestamp="1700582044267" timestamp="17433376">
    <deletedText><![CDATA[isA]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <Command __id="8898" _type="MoveCaretCommand" caretOffset="592" date="Tue Nov 21 15:51:07 EST 2023" docOffset="592" starttimestamp="1700582044267" timestamp="17823364" />
  <Command __id="8899" _type="MoveCaretCommand" caretOffset="592" date="Tue Nov 21 15:51:07 EST 2023" docOffset="592" starttimestamp="1700582044267" timestamp="17823364" />
  <DocumentChange __id="8900" _type="Insert" date="Tue Nov 21 15:51:09 EST 2023" docASTNodeCount="186" docActiveCodeLength="1099" docExpressionCount="150" docLength="1099" length="14" offset="592" repeat="11" starttimestamp="1700582044267" timestamp="17825458" timestamp2="17828608">
    <text><![CDATA[
		if(expr.is)]]></text>
  </DocumentChange>
  <Command __id="8901" _type="InsertStringCommand" date="Tue Nov 21 15:51:09 EST 2023" starttimestamp="1700582044267" timestamp="17825462" timestamp2="17825462">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8902" _type="InsertStringCommand" date="Tue Nov 21 15:51:09 EST 2023" starttimestamp="1700582044267" timestamp="17825462" timestamp2="17825462">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8904" _type="InsertStringCommand" date="Tue Nov 21 15:51:09 EST 2023" starttimestamp="1700582044267" timestamp="17825659" timestamp2="17825659">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8905" _type="InsertStringCommand" date="Tue Nov 21 15:51:09 EST 2023" starttimestamp="1700582044267" timestamp="17825659" timestamp2="17825659">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="8907" _type="InsertStringCommand" date="Tue Nov 21 15:51:10 EST 2023" starttimestamp="1700582044267" timestamp="17825750" timestamp2="17825750">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="8908" _type="InsertStringCommand" date="Tue Nov 21 15:51:10 EST 2023" starttimestamp="1700582044267" timestamp="17825750" timestamp2="17825750">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="8910" _type="InsertStringCommand" date="Tue Nov 21 15:51:10 EST 2023" starttimestamp="1700582044267" timestamp="17825873" timestamp2="17825873">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="8911" _type="InsertStringCommand" date="Tue Nov 21 15:51:10 EST 2023" starttimestamp="1700582044267" timestamp="17825873" timestamp2="17825873">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="8913" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827103" timestamp2="17827103">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8914" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827103" timestamp2="17827103">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8916" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827325" timestamp2="17827325">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8917" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827326" timestamp2="17827326">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8919" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827442" timestamp2="17827442">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8920" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827442" timestamp2="17827442">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8922" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827532" timestamp2="17827532">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8923" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827532" timestamp2="17827532">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8925" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827646" timestamp2="17827646">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8926" _type="InsertStringCommand" date="Tue Nov 21 15:51:11 EST 2023" starttimestamp="1700582044267" timestamp="17827646" timestamp2="17827646">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8927" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:51:11 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17827651" />
  <Command __id="8930" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:51:13 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17828790" />
  <Command __id="8932" _type="InsertStringCommand" date="Tue Nov 21 15:51:13 EST 2023" starttimestamp="1700582044267" timestamp="17828796" timestamp2="17828796">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8933" _type="InsertStringCommand" date="Tue Nov 21 15:51:13 EST 2023" starttimestamp="1700582044267" timestamp="17828796" timestamp2="17828796">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="8931" _type="Replace" date="Tue Nov 21 15:51:13 EST 2023" docASTNodeCount="186" docActiveCodeLength="1105" docExpressionCount="150" docLength="1105" endLine="19" insertionLength="8" int_docASTNodeCount="186" int_docActiveCodeLength="1097" int_docExpressionCount="149" int_docLength="1097" length="2" offset="603" startLine="19" starttimestamp="1700582044267" timestamp="17828792">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <Command __id="8934" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 15:51:14 EST 2023" starttimestamp="1700582044267" timestamp="17830112" />
  <Command __id="8935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 15:51:14 EST 2023" starttimestamp="1700582044267" timestamp="17830112" />
  <DocumentChange __id="8936" _type="Insert" date="Tue Nov 21 15:51:14 EST 2023" docASTNodeCount="188" docActiveCodeLength="1122" docExpressionCount="150" docLength="1122" length="17" offset="612" repeat="9" starttimestamp="1700582044267" timestamp="17830340" timestamp2="17832409">
    <text><![CDATA[ {
			return 
		}]]></text>
  </DocumentChange>
  <Command __id="8937" _type="InsertStringCommand" date="Tue Nov 21 15:51:14 EST 2023" starttimestamp="1700582044267" timestamp="17830341" timestamp2="17830341">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="8938" _type="InsertStringCommand" date="Tue Nov 21 15:51:14 EST 2023" starttimestamp="1700582044267" timestamp="17830341" timestamp2="17830341">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="8940" _type="InsertStringCommand" date="Tue Nov 21 15:51:14 EST 2023" starttimestamp="1700582044267" timestamp="17830510" timestamp2="17830510">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8941" _type="InsertStringCommand" date="Tue Nov 21 15:51:14 EST 2023" starttimestamp="1700582044267" timestamp="17830510" timestamp2="17830510">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="8943" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17831755" timestamp2="17831755">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8944" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17831755" timestamp2="17831755">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8946" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17831811" timestamp2="17831811">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8947" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17831811" timestamp2="17831811">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8949" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17831975" timestamp2="17831975">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8950" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17831975" timestamp2="17831975">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="8952" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832047" timestamp2="17832047">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="8953" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832047" timestamp2="17832047">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="8955" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832218" timestamp2="17832218">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8956" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832218" timestamp2="17832218">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8958" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832273" timestamp2="17832273">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8959" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832273" timestamp2="17832273">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="8961" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832411" timestamp2="17832411">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="8962" _type="InsertStringCommand" date="Tue Nov 21 15:51:16 EST 2023" starttimestamp="1700582044267" timestamp="17832411" timestamp2="17832411">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="8963" _type="Insert" date="Tue Nov 21 15:51:32 EST 2023" docASTNodeCount="189" docActiveCodeLength="1127" docExpressionCount="151" docLength="1127" length="5" offset="625" repeat="5" starttimestamp="1700582044267" timestamp="17847876" timestamp2="17848467">
    <text><![CDATA[expr.]]></text>
  </DocumentChange>
  <Command __id="8964" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17847879" timestamp2="17847879">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8965" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17847880" timestamp2="17847880">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="8967" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848147" timestamp2="17848147">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8968" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848147" timestamp2="17848147">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="8970" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848280" timestamp2="17848280">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8971" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848280" timestamp2="17848280">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="8973" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848381" timestamp2="17848381">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8974" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848381" timestamp2="17848381">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="8976" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848469" timestamp2="17848469">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8977" _type="InsertStringCommand" date="Tue Nov 21 15:51:32 EST 2023" starttimestamp="1700582044267" timestamp="17848469" timestamp2="17848469">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="8978" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:51:32 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="17848474" />
  <DocumentChange __id="8979" _type="Delete" date="Tue Nov 21 15:51:33 EST 2023" docASTNodeCount="189" docActiveCodeLength="1126" docExpressionCount="151" docLength="1126" endLine="20" length="1" offset="629" startLine="20" starttimestamp="1700582044267" timestamp="17848908">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="8980" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:51:33 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="17849066" />
  <Command __id="8982" _type="InsertStringCommand" date="Tue Nov 21 15:51:33 EST 2023" starttimestamp="1700582044267" timestamp="17849070" timestamp2="17849070">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="8983" _type="InsertStringCommand" date="Tue Nov 21 15:51:33 EST 2023" starttimestamp="1700582044267" timestamp="17849070" timestamp2="17849070">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="8989" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:51:39 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17855641" type="Run" />
  <Command __id="8990" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:51:39 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17855641" type="Run" />
  <Command __id="8991" _type="ShellCommand" date="Tue Nov 21 15:51:41 EST 2023" starttimestamp="1700582044267" timestamp="17856869" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8992" _type="ShellCommand" date="Tue Nov 21 15:51:42 EST 2023" starttimestamp="1700582044267" timestamp="17857800" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8993" _type="PasteCommand" date="Tue Nov 21 15:51:42 EST 2023" starttimestamp="1700582044267" timestamp="17858012" />
  <Command __id="8994" _type="ConsoleOutput" date="Tue Nov 21 15:51:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="17858486" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(INSERT,"Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="8995" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:51:42 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17858491" type="Run" />
  <Command __id="8996" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:51:42 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17858491" type="Run" />
  <Command __id="8997" _type="ConsoleOutput" date="Tue Nov 21 15:51:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="17858492" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9019" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:51:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17872658" type="Run" />
  <Command __id="9020" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:51:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17872658" type="Run" />
  <Command __id="9021" _type="PasteCommand" date="Tue Nov 21 15:51:58 EST 2023" starttimestamp="1700582044267" timestamp="17874097" />
  <Command __id="9022" _type="ConsoleOutput" date="Tue Nov 21 15:51:58 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="17874312" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9023" _type="ShellCommand" date="Tue Nov 21 15:51:59 EST 2023" starttimestamp="1700582044267" timestamp="17875292" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9024" _type="ShellCommand" date="Tue Nov 21 15:52:01 EST 2023" starttimestamp="1700582044267" timestamp="17877230" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9027" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:52:20 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17895944" type="Run" />
  <Command __id="9028" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:52:20 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="17895944" type="Run" />
  <Command __id="9029" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:52:20 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="17896355" />
  <Command __id="9030" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:52:20 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="17896355" />
  <Command __id="9031" _type="ShellCommand" date="Tue Nov 21 15:52:55 EST 2023" starttimestamp="1700582044267" timestamp="17931278" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9032" _type="ShellCommand" date="Tue Nov 21 15:53:34 EST 2023" starttimestamp="1700582044267" timestamp="17970362" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9033" _type="ShellCommand" date="Tue Nov 21 15:53:35 EST 2023" starttimestamp="1700582044267" timestamp="17970876" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9034" _type="ShellCommand" date="Tue Nov 21 15:53:35 EST 2023" starttimestamp="1700582044267" timestamp="17971478" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9035" _type="ShellCommand" date="Tue Nov 21 15:53:36 EST 2023" starttimestamp="1700582044267" timestamp="17972290" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9036" _type="ShellCommand" date="Tue Nov 21 15:53:50 EST 2023" starttimestamp="1700582044267" timestamp="17986282" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9037" _type="ShellCommand" date="Tue Nov 21 15:53:53 EST 2023" starttimestamp="1700582044267" timestamp="17989055" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9038" _type="ShellCommand" date="Tue Nov 21 15:53:56 EST 2023" starttimestamp="1700582044267" timestamp="17991914" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9039" _type="MoveCaretCommand" caretOffset="1076" date="Tue Nov 21 15:53:59 EST 2023" docOffset="1076" starttimestamp="1700582044267" timestamp="17995030" />
  <Command __id="9040" _type="MoveCaretCommand" caretOffset="1076" date="Tue Nov 21 15:53:59 EST 2023" docOffset="1076" starttimestamp="1700582044267" timestamp="17995031" />
  <Command __id="9041" _type="MoveCaretCommand" caretOffset="1068" date="Tue Nov 21 15:54:00 EST 2023" docOffset="1068" starttimestamp="1700582044267" timestamp="17995855" />
  <Command __id="9042" _type="MoveCaretCommand" caretOffset="1068" date="Tue Nov 21 15:54:00 EST 2023" docOffset="1068" starttimestamp="1700582044267" timestamp="17995855" />
  <Command __id="9043" _type="ShellCommand" date="Tue Nov 21 15:54:01 EST 2023" starttimestamp="1700582044267" timestamp="17997484" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9044" _type="ShellCommand" date="Tue Nov 21 15:54:04 EST 2023" starttimestamp="1700582044267" timestamp="17999773" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9045" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:04 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="17999836" />
  <Command __id="9046" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:04 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="17999836" />
  <Command __id="9047" _type="ShellCommand" date="Tue Nov 21 15:54:06 EST 2023" starttimestamp="1700582044267" timestamp="18002467" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9048" _type="BalloonCommand" date="Tue Nov 21 15:54:09 EST 2023" message="*******************************************
Worked 9 minutes(fixed)/60 minutes(context based) from
Tue Nov 21 14:54:04 EST 2023 to Tue Nov 21 15:54:06 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 1 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java
Number of insert: 327
Number of delete: 231
" starttimestamp="1700582044267" timestamp="18004984">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[327]]></insert>
    <startTime><![CDATA[1700596444324]]></startTime>
    <endTime><![CDATA[1700600046734]]></endTime>
    <workTime><![CDATA[9]]></workTime>
    <delete><![CDATA[231]]></delete>
  </Command>
  <Command __id="9049" _type="ShellCommand" date="Tue Nov 21 15:54:09 EST 2023" starttimestamp="1700582044267" timestamp="18005136" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9050" _type="MoveCaretCommand" caretOffset="1079" date="Tue Nov 21 15:54:09 EST 2023" docOffset="1079" starttimestamp="1700582044267" timestamp="18005208" />
  <Command __id="9051" _type="MoveCaretCommand" caretOffset="1079" date="Tue Nov 21 15:54:09 EST 2023" docOffset="1079" starttimestamp="1700582044267" timestamp="18005208" />
  <Command __id="9052" _type="ShellCommand" date="Tue Nov 21 15:54:10 EST 2023" starttimestamp="1700582044267" timestamp="18005924" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9053" _type="ShellCommand" date="Tue Nov 21 15:54:12 EST 2023" starttimestamp="1700582044267" timestamp="18008461" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9054" _type="MoveCaretCommand" caretOffset="1079" date="Tue Nov 21 15:54:12 EST 2023" docOffset="1079" starttimestamp="1700582044267" timestamp="18008520" />
  <Command __id="9055" _type="MoveCaretCommand" caretOffset="1079" date="Tue Nov 21 15:54:12 EST 2023" docOffset="1079" starttimestamp="1700582044267" timestamp="18008520" />
  <Command __id="9056" _type="SelectTextCommand" caretOffset="508" date="Tue Nov 21 15:54:20 EST 2023" end="511" start="508" starttimestamp="1700582044267" timestamp="18016617" />
  <Command __id="9057" _type="SelectTextCommand" caretOffset="508" date="Tue Nov 21 15:54:20 EST 2023" end="511" start="508" starttimestamp="1700582044267" timestamp="18016617" />
  <Command __id="9058" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:54:21 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="18017085" />
  <Command __id="9059" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 15:54:21 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="18017085" />
  <Command __id="9060" _type="MoveCaretCommand" caretOffset="544" date="Tue Nov 21 15:54:21 EST 2023" docOffset="544" starttimestamp="1700582044267" timestamp="18017414" />
  <Command __id="9061" _type="MoveCaretCommand" caretOffset="544" date="Tue Nov 21 15:54:21 EST 2023" docOffset="544" starttimestamp="1700582044267" timestamp="18017414" />
  <Command __id="9062" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 15:54:24 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="18020577" />
  <Command __id="9063" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 15:54:24 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="18020577" />
  <Command __id="9064" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:25 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="18020842" />
  <Command __id="9065" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:25 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="18020842" />
  <Command __id="9066" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 15:54:25 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="18021093" />
  <Command __id="9067" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 15:54:25 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="18021093" />
  <Command __id="9068" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:25 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="18021265" />
  <Command __id="9069" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:25 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="18021265" />
  <Command __id="9070" _type="MoveCaretCommand" caretOffset="505" date="Tue Nov 21 15:54:25 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="18021480" />
  <Command __id="9071" _type="MoveCaretCommand" caretOffset="505" date="Tue Nov 21 15:54:25 EST 2023" docOffset="505" starttimestamp="1700582044267" timestamp="18021480" />
  <Command __id="9072" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:25 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="18021660" />
  <Command __id="9073" _type="MoveCaretCommand" caretOffset="586" date="Tue Nov 21 15:54:25 EST 2023" docOffset="586" starttimestamp="1700582044267" timestamp="18021660" />
  <Command __id="9074" _type="ShellCommand" date="Tue Nov 21 15:54:46 EST 2023" starttimestamp="1700582044267" timestamp="18042470" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9075" _type="ShellCommand" date="Tue Nov 21 15:54:47 EST 2023" starttimestamp="1700582044267" timestamp="18043146" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9076" _type="ShellCommand" date="Tue Nov 21 15:54:48 EST 2023" starttimestamp="1700582044267" timestamp="18044526" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9077" _type="ShellCommand" date="Tue Nov 21 15:55:02 EST 2023" starttimestamp="1700582044267" timestamp="18058488" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9078" _type="ShellCommand" date="Tue Nov 21 15:55:03 EST 2023" starttimestamp="1700582044267" timestamp="18059299" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9079" _type="ShellCommand" date="Tue Nov 21 15:55:07 EST 2023" starttimestamp="1700582044267" timestamp="18063176" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9080" _type="ShellCommand" date="Tue Nov 21 15:55:10 EST 2023" starttimestamp="1700582044267" timestamp="18066049" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9081" _type="ShellCommand" date="Tue Nov 21 15:55:11 EST 2023" starttimestamp="1700582044267" timestamp="18067132" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9082" _type="ShellCommand" date="Tue Nov 21 15:55:20 EST 2023" starttimestamp="1700582044267" timestamp="18076576" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9083" _type="ShellCommand" date="Tue Nov 21 15:55:21 EST 2023" starttimestamp="1700582044267" timestamp="18077256" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9084" _type="ShellCommand" date="Tue Nov 21 15:55:25 EST 2023" starttimestamp="1700582044267" timestamp="18081276" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9085" _type="ShellCommand" date="Tue Nov 21 15:55:31 EST 2023" starttimestamp="1700582044267" timestamp="18087332" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9086" _type="ShellCommand" date="Tue Nov 21 15:55:34 EST 2023" starttimestamp="1700582044267" timestamp="18090216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9087" _type="ShellCommand" date="Tue Nov 21 15:55:35 EST 2023" starttimestamp="1700582044267" timestamp="18091190" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9088" _type="ShellCommand" date="Tue Nov 21 15:55:46 EST 2023" starttimestamp="1700582044267" timestamp="18102293" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9089" _type="ShellCommand" date="Tue Nov 21 15:55:48 EST 2023" starttimestamp="1700582044267" timestamp="18103745" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9090" _type="ShellCommand" date="Tue Nov 21 15:55:51 EST 2023" starttimestamp="1700582044267" timestamp="18107489" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9091" _type="ShellCommand" date="Tue Nov 21 15:56:03 EST 2023" starttimestamp="1700582044267" timestamp="18118957" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9092" _type="ShellCommand" date="Tue Nov 21 15:56:05 EST 2023" starttimestamp="1700582044267" timestamp="18120801" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9093" _type="ShellCommand" date="Tue Nov 21 15:56:05 EST 2023" starttimestamp="1700582044267" timestamp="18121292" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9094" _type="ShellCommand" date="Tue Nov 21 15:56:06 EST 2023" starttimestamp="1700582044267" timestamp="18121917" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9095" _type="ShellCommand" date="Tue Nov 21 15:56:51 EST 2023" starttimestamp="1700582044267" timestamp="18167414" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9096" _type="SelectTextCommand" caretOffset="661" date="Tue Nov 21 15:57:42 EST 2023" end="661" start="592" starttimestamp="1700582044267" timestamp="18218333" />
  <Command __id="9097" _type="SelectTextCommand" caretOffset="661" date="Tue Nov 21 15:57:42 EST 2023" end="661" start="592" starttimestamp="1700582044267" timestamp="18218333" />
  <Command __id="9099" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:57:43 EST 2023" starttimestamp="1700582044267" timestamp="18219148" />
  <Command __id="9100" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:57:43 EST 2023" starttimestamp="1700582044267" timestamp="18219148" />
  <Command __id="9101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 15:57:43 EST 2023" starttimestamp="1700582044267" timestamp="18219614" />
  <Command __id="9102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 15:57:43 EST 2023" starttimestamp="1700582044267" timestamp="18219614" />
  <Command __id="9104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:57:43 EST 2023" starttimestamp="1700582044267" timestamp="18219633" />
  <Command __id="9105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 15:57:43 EST 2023" starttimestamp="1700582044267" timestamp="18219633" />
  <Command __id="9106" _type="ShellCommand" date="Tue Nov 21 15:58:05 EST 2023" starttimestamp="1700582044267" timestamp="18241717" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9107" _type="ShellCommand" date="Tue Nov 21 15:58:06 EST 2023" starttimestamp="1700582044267" timestamp="18242303" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9113" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:58:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18253191" type="Run" />
  <Command __id="9114" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:58:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18253192" type="Run" />
  <Command __id="9115" _type="ShellCommand" date="Tue Nov 21 15:58:18 EST 2023" starttimestamp="1700582044267" timestamp="18254688" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9116" _type="ShellCommand" date="Tue Nov 21 15:58:19 EST 2023" starttimestamp="1700582044267" timestamp="18255009" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9117" _type="ShellCommand" date="Tue Nov 21 15:58:19 EST 2023" starttimestamp="1700582044267" timestamp="18255345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9118" _type="ShellCommand" date="Tue Nov 21 15:58:19 EST 2023" starttimestamp="1700582044267" timestamp="18255617" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9119" _type="ShellCommand" date="Tue Nov 21 15:58:20 EST 2023" starttimestamp="1700582044267" timestamp="18255820" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9120" _type="ShellCommand" date="Tue Nov 21 15:58:22 EST 2023" starttimestamp="1700582044267" timestamp="18257792" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9121" _type="PasteCommand" date="Tue Nov 21 15:58:22 EST 2023" starttimestamp="1700582044267" timestamp="18257982" />
  <Command __id="9122" _type="ConsoleOutput" date="Tue Nov 21 15:58:22 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18258237" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9123" _type="ConsoleOutput" date="Tue Nov 21 15:58:22 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18258242" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:22)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)¶	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:22)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9124" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:58:22 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18258242" type="Run" />
  <Command __id="9125" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 15:58:22 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18258242" type="Run" />
  <DocumentChange __id="8981" _type="Replace" date="Tue Nov 21 15:51:33 EST 2023" docASTNodeCount="189" docActiveCodeLength="1127" docExpressionCount="151" docLength="1127" endLine="20" insertionLength="5" int_docASTNodeCount="188" int_docActiveCodeLength="1122" int_docExpressionCount="150" int_docLength="1122" length="4" offset="625" startLine="20" starttimestamp="1700582044267" timestamp="17849068">
    <deletedText><![CDATA[expr]]></deletedText>
    <insertedText><![CDATA[expr;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9002" _type="Delete" date="Tue Nov 21 15:51:51 EST 2023" docASTNodeCount="178" docActiveCodeLength="1079" docExpressionCount="141" docLength="1079" endLine="13" length="48" offset="413" repeat="4" startLine="12" starttimestamp="1700582044267" timestamp="17867557" timestamp2="17868003">
    <text><![CDATA[
		System.out.println(expr.getTail().getHead());]]></text>
  </DocumentChange>
  <DocumentChange __id="9098" _type="Delete" date="Tue Nov 21 15:57:43 EST 2023" docASTNodeCount="161" docActiveCodeLength="1009" docExpressionCount="124" docLength="1009" endLine="21" length="70" offset="592" repeat="2" startLine="21" starttimestamp="1700582044267" timestamp="18219137" timestamp2="18219631">
    <text><![CDATA[(!expr.getTail().isAtom()) && (!expr.getTail().getHead().isAtom()) && ]]></text>
  </DocumentChange>
  <DocumentChange __id="9128" _type="Insert" date="Tue Nov 21 15:59:51 EST 2023" docASTNodeCount="165" docActiveCodeLength="1023" docExpressionCount="127" docLength="1023" length="14" offset="701" repeat="11" starttimestamp="1700582044267" timestamp="18347558" timestamp2="18349750">
    <text><![CDATA[
			System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="9157" _type="Replace" date="Tue Nov 21 15:59:54 EST 2023" docASTNodeCount="165" docActiveCodeLength="1024" docExpressionCount="128" docLength="1024" endLine="22" insertionLength="4" int_docASTNodeCount="163" int_docActiveCodeLength="1020" int_docExpressionCount="126" int_docLength="1020" length="3" offset="712" startLine="22" starttimestamp="1700582044267" timestamp="18349878">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="9126" _type="MoveCaretCommand" caretOffset="701" date="Tue Nov 21 15:59:51 EST 2023" docOffset="701" starttimestamp="1700582044267" timestamp="18346850" />
  <Command __id="9127" _type="MoveCaretCommand" caretOffset="701" date="Tue Nov 21 15:59:51 EST 2023" docOffset="701" starttimestamp="1700582044267" timestamp="18346851" />
  <Command __id="9129" _type="InsertStringCommand" date="Tue Nov 21 15:59:51 EST 2023" starttimestamp="1700582044267" timestamp="18347562" timestamp2="18347562">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9130" _type="InsertStringCommand" date="Tue Nov 21 15:59:51 EST 2023" starttimestamp="1700582044267" timestamp="18347562" timestamp2="18347562">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9132" _type="InsertStringCommand" date="Tue Nov 21 15:59:52 EST 2023" starttimestamp="1700582044267" timestamp="18348452" timestamp2="18348452">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9133" _type="InsertStringCommand" date="Tue Nov 21 15:59:52 EST 2023" starttimestamp="1700582044267" timestamp="18348452" timestamp2="18348452">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9135" _type="InsertStringCommand" date="Tue Nov 21 15:59:52 EST 2023" starttimestamp="1700582044267" timestamp="18348660" timestamp2="18348660">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9136" _type="InsertStringCommand" date="Tue Nov 21 15:59:52 EST 2023" starttimestamp="1700582044267" timestamp="18348660" timestamp2="18348660">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9138" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18348752" timestamp2="18348752">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9139" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18348753" timestamp2="18348753">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9141" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18348875" timestamp2="18348875">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9142" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18348876" timestamp2="18348876">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9144" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18348962" timestamp2="18348962">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9145" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18348962" timestamp2="18348962">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9147" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18349075" timestamp2="18349075">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9148" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18349075" timestamp2="18349075">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9150" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18349311" timestamp2="18349311">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9151" _type="InsertStringCommand" date="Tue Nov 21 15:59:53 EST 2023" starttimestamp="1700582044267" timestamp="18349311" timestamp2="18349311">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9152" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:59:53 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18349318" />
  <Command __id="9156" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:59:54 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18349875" />
  <Command __id="9158" _type="InsertStringCommand" date="Tue Nov 21 15:59:54 EST 2023" starttimestamp="1700582044267" timestamp="18349883" timestamp2="18349883">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9159" _type="InsertStringCommand" date="Tue Nov 21 15:59:54 EST 2023" starttimestamp="1700582044267" timestamp="18349883" timestamp2="18349883">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9160" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:59:54 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18349892" />
  <Command __id="9170" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 15:59:56 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18352474" />
  <Command __id="9172" _type="InsertStringCommand" date="Tue Nov 21 15:59:56 EST 2023" starttimestamp="1700582044267" timestamp="18352638" timestamp2="18352638">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9173" _type="InsertStringCommand" date="Tue Nov 21 15:59:56 EST 2023" starttimestamp="1700582044267" timestamp="18352638" timestamp2="18352638">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9175" _type="InsertStringCommand" date="Tue Nov 21 15:59:57 EST 2023" starttimestamp="1700582044267" timestamp="18352737" timestamp2="18352737">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9176" _type="InsertStringCommand" date="Tue Nov 21 15:59:57 EST 2023" starttimestamp="1700582044267" timestamp="18352737" timestamp2="18352737">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9178" _type="InsertStringCommand" date="Tue Nov 21 15:59:57 EST 2023" starttimestamp="1700582044267" timestamp="18352828" timestamp2="18352828">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9179" _type="InsertStringCommand" date="Tue Nov 21 15:59:57 EST 2023" starttimestamp="1700582044267" timestamp="18352828" timestamp2="18352828">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9181" _type="InsertStringCommand" date="Tue Nov 21 15:59:57 EST 2023" starttimestamp="1700582044267" timestamp="18352916" timestamp2="18352916">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9182" _type="InsertStringCommand" date="Tue Nov 21 15:59:57 EST 2023" starttimestamp="1700582044267" timestamp="18352916" timestamp2="18352916">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9183" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 15:59:57 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18352920" />
  <Command __id="9192" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:00:03 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18359127" />
  <DocumentChange __id="9161" _type="Insert" date="Tue Nov 21 15:59:54 EST 2023" docASTNodeCount="170" docActiveCodeLength="1047" docExpressionCount="132" docLength="1047" length="23" offset="716" repeat="21" starttimestamp="1700582044267" timestamp="18350070" timestamp2="18354079">
    <text><![CDATA[println(expr.getTail())]]></text>
  </DocumentChange>
  <DocumentChange __id="9195" _type="Delete" date="Tue Nov 21 16:00:05 EST 2023" docASTNodeCount="161" docActiveCodeLength="1013" docExpressionCount="124" docLength="1013" endLine="22" length="34" offset="705" startLine="22" starttimestamp="1700582044267" timestamp="18361444">
    <text><![CDATA[System.out.println(expr.getTail())]]></text>
  </DocumentChange>
  <DocumentChange __id="9199" _type="Insert" date="Tue Nov 21 16:00:06 EST 2023" docASTNodeCount="161" docActiveCodeLength="1016" docExpressionCount="124" docLength="1016" length="3" offset="586" starttimestamp="1700582044267" timestamp="18362507">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="9202" _type="Replace" date="Tue Nov 21 16:00:06 EST 2023" docASTNodeCount="170" docActiveCodeLength="1050" docExpressionCount="132" docLength="1050" endLine="21" insertionLength="36" int_docASTNodeCount="161" int_docActiveCodeLength="1014" int_docExpressionCount="124" int_docLength="1014" length="2" offset="587" startLine="21" starttimestamp="1700582044267" timestamp="18362655">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println(expr.getTail())]]></insertedText>
  </DocumentChange>
  <Command __id="9226" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18370333" type="Run" />
  <Command __id="9227" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18370333" type="Run" />
  <Command __id="9228" _type="PasteCommand" date="Tue Nov 21 16:00:15 EST 2023" starttimestamp="1700582044267" timestamp="18370894" />
  <Command __id="9229" _type="ConsoleOutput" date="Tue Nov 21 16:00:17 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18373047" type="ConsoleOutput">
    <outputString><![CDATA[SYSTEM.OUT.PRINTLN
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)¶	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:22)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:14)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:12)"), Diff(INSERT,"SYSTEM.OUT.PRINTLN"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9230" _type="ExceptionCommand" date="Tue Nov 21 16:00:17 EST 2023" starttimestamp="1700582044267" timestamp="18373050" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: No evaluator registered for operator 'EXPR.GETTAIL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9231" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:17 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18373069" type="Run" />
  <Command __id="9232" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:17 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18373069" type="Run" />
  <Command __id="9233" _type="ShellCommand" date="Tue Nov 21 16:00:19 EST 2023" starttimestamp="1700582044267" timestamp="18374876" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9234" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18374886" type="Run" />
  <Command __id="9235" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18374886" type="Run" />
  <Command __id="9236" _type="ShellCommand" date="Tue Nov 21 16:00:20 EST 2023" starttimestamp="1700582044267" timestamp="18375779" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9237" _type="PasteCommand" date="Tue Nov 21 16:00:20 EST 2023" starttimestamp="1700582044267" timestamp="18376037" />
  <Command __id="9238" _type="ConsoleOutput" date="Tue Nov 21 16:00:21 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18377366" type="ConsoleOutput">
    <outputString><![CDATA[(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SYSTEM.OUT.PRINTLN"), Diff(INSERT,"(1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9239" _type="ExceptionCommand" date="Tue Nov 21 16:00:21 EST 2023" starttimestamp="1700582044267" timestamp="18377368" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:23)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9240" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:21 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18377386" type="Run" />
  <Command __id="9241" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:21 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18377386" type="Run" />
  <Command __id="9242" _type="ShellCommand" date="Tue Nov 21 16:00:41 EST 2023" starttimestamp="1700582044267" timestamp="18397364" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9244" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18403678" type="Run" />
  <Command __id="9245" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18403678" type="Run" />
  <Command __id="9246" _type="PasteCommand" date="Tue Nov 21 16:00:48 EST 2023" starttimestamp="1700582044267" timestamp="18404301" />
  <Command __id="9247" _type="ConsoleOutput" date="Tue Nov 21 16:00:49 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18404773" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"((+ 1 2))¶"), Diff(EQUAL,"(1 2)¶")]]]></diff>
  </Command>
  <Command __id="9248" _type="ExceptionCommand" date="Tue Nov 21 16:00:49 EST 2023" starttimestamp="1700582044267" timestamp="18404776" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:23)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:24)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9249" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:49 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18404779" type="Run" />
  <Command __id="9250" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:00:49 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18404779" type="Run" />
  <Command __id="9251" _type="MoveCaretCommand" caretOffset="630" date="Tue Nov 21 16:01:18 EST 2023" docOffset="630" starttimestamp="1700582044267" timestamp="18434145" />
  <Command __id="9252" _type="MoveCaretCommand" caretOffset="630" date="Tue Nov 21 16:01:18 EST 2023" docOffset="630" starttimestamp="1700582044267" timestamp="18434145" />
  <DocumentChange __id="9204" _type="Insert" date="Tue Nov 21 16:00:08 EST 2023" docASTNodeCount="170" docActiveCodeLength="1051" docExpressionCount="132" docLength="1051" length="1" offset="623" starttimestamp="1700582044267" timestamp="18364159">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="9209" _type="Delete" date="Tue Nov 21 16:00:10 EST 2023" docASTNodeCount="170" docActiveCodeLength="1047" docExpressionCount="132" docLength="1047" endLine="23" length="4" offset="739" repeat="4" startLine="22" starttimestamp="1700582044267" timestamp="18365838" timestamp2="18366944">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="9253" _type="SelectTextCommand" caretOffset="630" date="Tue Nov 21 16:01:31 EST 2023" end="736" start="630" starttimestamp="1700582044267" timestamp="18447180" />
  <Command __id="9254" _type="SelectTextCommand" caretOffset="630" date="Tue Nov 21 16:01:31 EST 2023" end="736" start="630" starttimestamp="1700582044267" timestamp="18447180" />
  <DocumentChange __id="9255" _type="Replace" date="Tue Nov 21 16:01:33 EST 2023" docASTNodeCount="155" docActiveCodeLength="942" docExpressionCount="117" docLength="942" endLine="22" insertionLength="1" int_docASTNodeCount="155" int_docActiveCodeLength="941" int_docExpressionCount="117" int_docLength="941" length="106" offset="630" startLine="22" starttimestamp="1700582044267" timestamp="18449267">
    <deletedText><![CDATA[BuiltinOperationManagerSingleton.get().getEvaluator(expr.getTail().getHead().getHead().toString()) != null]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="9256" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449276" timestamp2="18449276">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9257" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449276" timestamp2="18449276">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="9258" _type="Insert" date="Tue Nov 21 16:01:33 EST 2023" docASTNodeCount="157" docActiveCodeLength="950" docExpressionCount="119" docLength="950" length="8" offset="631" repeat="8" starttimestamp="1700582044267" timestamp="18449460" timestamp2="18450990">
    <text><![CDATA[xpr.getT]]></text>
  </DocumentChange>
  <Command __id="9259" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449463" timestamp2="18449463">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9260" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449463" timestamp2="18449463">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9262" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449595" timestamp2="18449595">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9263" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449595" timestamp2="18449595">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9265" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449700" timestamp2="18449700">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9266" _type="InsertStringCommand" date="Tue Nov 21 16:01:33 EST 2023" starttimestamp="1700582044267" timestamp="18449700" timestamp2="18449700">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9268" _type="InsertStringCommand" date="Tue Nov 21 16:01:34 EST 2023" starttimestamp="1700582044267" timestamp="18449809" timestamp2="18449809">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9269" _type="InsertStringCommand" date="Tue Nov 21 16:01:34 EST 2023" starttimestamp="1700582044267" timestamp="18449809" timestamp2="18449809">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9270" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:01:34 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18449817" />
  <Command __id="9275" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:01:35 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18451391" />
  <DocumentChange __id="9276" _type="Replace" date="Tue Nov 21 16:01:35 EST 2023" docASTNodeCount="157" docActiveCodeLength="955" docExpressionCount="119" docLength="955" endLine="22" insertionLength="9" int_docASTNodeCount="157" int_docActiveCodeLength="946" int_docExpressionCount="118" int_docLength="946" length="4" offset="635" startLine="22" starttimestamp="1700582044267" timestamp="18451392">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="9277" _type="InsertStringCommand" date="Tue Nov 21 16:01:35 EST 2023" starttimestamp="1700582044267" timestamp="18451395" timestamp2="18451395">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9278" _type="InsertStringCommand" date="Tue Nov 21 16:01:35 EST 2023" starttimestamp="1700582044267" timestamp="18451395" timestamp2="18451395">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="9279" _type="Insert" date="Tue Nov 21 16:01:35 EST 2023" docASTNodeCount="159" docActiveCodeLength="960" docExpressionCount="121" docLength="960" length="5" offset="644" repeat="5" starttimestamp="1700582044267" timestamp="18451651" timestamp2="18452353">
    <text><![CDATA[.getT]]></text>
  </DocumentChange>
  <Command __id="9280" _type="InsertStringCommand" date="Tue Nov 21 16:01:35 EST 2023" starttimestamp="1700582044267" timestamp="18451654" timestamp2="18451654">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9281" _type="InsertStringCommand" date="Tue Nov 21 16:01:35 EST 2023" starttimestamp="1700582044267" timestamp="18451654" timestamp2="18451654">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9282" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:01:35 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18451662" />
  <DocumentChange __id="9287" _type="Delete" date="Tue Nov 21 16:01:37 EST 2023" docASTNodeCount="159" docActiveCodeLength="959" docExpressionCount="121" docLength="959" endLine="22" length="1" offset="648" startLine="22" starttimestamp="1700582044267" timestamp="18452918">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="9288" _type="Insert" date="Tue Nov 21 16:01:37 EST 2023" docASTNodeCount="159" docActiveCodeLength="960" docExpressionCount="121" docLength="960" length="1" offset="648" starttimestamp="1700582044267" timestamp="18453179">
    <text><![CDATA[H]]></text>
  </DocumentChange>
  <Command __id="9289" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:01:37 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18453450" />
  <DocumentChange __id="9290" _type="Replace" date="Tue Nov 21 16:01:37 EST 2023" docASTNodeCount="159" docActiveCodeLength="966" docExpressionCount="121" docLength="966" endLine="22" insertionLength="9" int_docASTNodeCount="159" int_docActiveCodeLength="957" int_docExpressionCount="121" int_docLength="957" length="3" offset="645" startLine="22" starttimestamp="1700582044267" timestamp="18453453">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="9291" _type="InsertStringCommand" date="Tue Nov 21 16:01:37 EST 2023" starttimestamp="1700582044267" timestamp="18453458" timestamp2="18453458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9292" _type="InsertStringCommand" date="Tue Nov 21 16:01:37 EST 2023" starttimestamp="1700582044267" timestamp="18453458" timestamp2="18453458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9294" _type="UndoCommand" date="Tue Nov 21 16:01:39 EST 2023" starttimestamp="1700582044267" timestamp="18455299" />
  <DocumentChange __id="9293" _type="Replace" date="Tue Nov 21 16:01:39 EST 2023" docASTNodeCount="159" docActiveCodeLength="960" docExpressionCount="121" docLength="960" endLine="22" insertionLength="3" int_docASTNodeCount="159" int_docActiveCodeLength="957" int_docExpressionCount="121" int_docLength="957" length="9" offset="645" startLine="22" starttimestamp="1700582044267" timestamp="18455294">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[get]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9299" _type="Delete" date="Tue Nov 21 16:01:42 EST 2023" docASTNodeCount="159" docActiveCodeLength="959" docExpressionCount="121" docLength="959" endLine="22" length="1" offset="648" startLine="22" starttimestamp="1700582044267" timestamp="18458053">
    <text><![CDATA[H]]></text>
  </DocumentChange>
  <DocumentChange __id="9302" _type="Insert" date="Tue Nov 21 16:01:42 EST 2023" docASTNodeCount="159" docActiveCodeLength="960" docExpressionCount="121" docLength="960" length="1" offset="648" starttimestamp="1700582044267" timestamp="18458390">
    <text><![CDATA[H]]></text>
  </DocumentChange>
  <DocumentChange __id="9305" _type="Delete" date="Tue Nov 21 16:01:43 EST 2023" docASTNodeCount="157" docActiveCodeLength="955" docExpressionCount="119" docLength="955" endLine="22" length="5" offset="644" repeat="5" startLine="22" starttimestamp="1700582044267" timestamp="18458750" timestamp2="18459254">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="9320" _type="Insert" date="Tue Nov 21 16:01:43 EST 2023" docASTNodeCount="159" docActiveCodeLength="960" docExpressionCount="121" docLength="960" length="5" offset="644" repeat="5" starttimestamp="1700582044267" timestamp="18459525" timestamp2="18460020">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="9329" _type="Replace" date="Tue Nov 21 16:01:44 EST 2023" docASTNodeCount="159" docActiveCodeLength="965" docExpressionCount="121" docLength="965" endLine="22" insertionLength="9" int_docASTNodeCount="159" int_docActiveCodeLength="956" int_docExpressionCount="121" int_docLength="956" length="4" offset="645" startLine="22" starttimestamp="1700582044267" timestamp="18460354">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="9295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:01:41 EST 2023" starttimestamp="1700582044267" timestamp="18457202" />
  <Command __id="9296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:01:41 EST 2023" starttimestamp="1700582044267" timestamp="18457202" />
  <Command __id="9297" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:01:42 EST 2023" starttimestamp="1700582044267" timestamp="18457772" />
  <Command __id="9298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:01:42 EST 2023" starttimestamp="1700582044267" timestamp="18457773" />
  <Command __id="9300" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:42 EST 2023" starttimestamp="1700582044267" timestamp="18458055" />
  <Command __id="9301" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:42 EST 2023" starttimestamp="1700582044267" timestamp="18458055" />
  <Command __id="9303" _type="InsertStringCommand" date="Tue Nov 21 16:01:42 EST 2023" starttimestamp="1700582044267" timestamp="18458393" timestamp2="18458393">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9304" _type="InsertStringCommand" date="Tue Nov 21 16:01:42 EST 2023" starttimestamp="1700582044267" timestamp="18458393" timestamp2="18458393">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9306" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18458751" />
  <Command __id="9307" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18458751" />
  <Command __id="9309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18458860" />
  <Command __id="9310" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18458860" />
  <Command __id="9312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18458985" />
  <Command __id="9313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18458985" />
  <Command __id="9315" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18459120" />
  <Command __id="9316" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18459121" />
  <Command __id="9318" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18459256" />
  <Command __id="9319" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18459257" />
  <Command __id="9321" _type="InsertStringCommand" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18459528" timestamp2="18459528">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9322" _type="InsertStringCommand" date="Tue Nov 21 16:01:43 EST 2023" starttimestamp="1700582044267" timestamp="18459528" timestamp2="18459528">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9323" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:01:43 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18459536" />
  <Command __id="9328" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:01:44 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18460352" />
  <Command __id="9330" _type="InsertStringCommand" date="Tue Nov 21 16:01:44 EST 2023" starttimestamp="1700582044267" timestamp="18460358" timestamp2="18460358">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9331" _type="InsertStringCommand" date="Tue Nov 21 16:01:44 EST 2023" starttimestamp="1700582044267" timestamp="18460358" timestamp2="18460358">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="9332" _type="Insert" date="Tue Nov 21 16:01:48 EST 2023" docASTNodeCount="161" docActiveCodeLength="969" docExpressionCount="123" docLength="969" length="4" offset="654" repeat="4" starttimestamp="1700582044267" timestamp="18463875" timestamp2="18464730">
    <text><![CDATA[.isA]]></text>
  </DocumentChange>
  <Command __id="9333" _type="InsertStringCommand" date="Tue Nov 21 16:01:48 EST 2023" starttimestamp="1700582044267" timestamp="18463878" timestamp2="18463878">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9334" _type="InsertStringCommand" date="Tue Nov 21 16:01:48 EST 2023" starttimestamp="1700582044267" timestamp="18463879" timestamp2="18463879">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9335" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:01:48 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18463890" />
  <Command __id="9339" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:01:49 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18464911" />
  <Command __id="9341" _type="InsertStringCommand" date="Tue Nov 21 16:01:49 EST 2023" starttimestamp="1700582044267" timestamp="18464918" timestamp2="18464918">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9342" _type="InsertStringCommand" date="Tue Nov 21 16:01:49 EST 2023" starttimestamp="1700582044267" timestamp="18464918" timestamp2="18464918">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9355" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:01:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18470486" type="Run" />
  <Command __id="9356" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:01:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18470486" type="Run" />
  <Command __id="9357" _type="PasteCommand" date="Tue Nov 21 16:01:56 EST 2023" starttimestamp="1700582044267" timestamp="18471737" />
  <Command __id="9358" _type="ConsoleOutput" date="Tue Nov 21 16:01:56 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18472287" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
(1 2)
Exception in thread "main" 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"((+ 1 2))¶(1 2)¶"), Diff(INSERT,"Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="9359" _type="ExceptionCommand" date="Tue Nov 21 16:01:56 EST 2023" starttimestamp="1700582044267" timestamp="18472292" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:26)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:24)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9360" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:01:56 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18472296" type="Run" />
  <Command __id="9361" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:01:56 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18472296" type="Run" />
  <Command __id="9362" _type="ShellCommand" date="Tue Nov 21 16:02:05 EST 2023" starttimestamp="1700582044267" timestamp="18481085" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9363" _type="ShellCommand" date="Tue Nov 21 16:02:05 EST 2023" starttimestamp="1700582044267" timestamp="18481665" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9364" _type="MoveCaretCommand" caretOffset="925" date="Tue Nov 21 16:02:56 EST 2023" docOffset="925" starttimestamp="1700582044267" timestamp="18531766" />
  <Command __id="9365" _type="MoveCaretCommand" caretOffset="925" date="Tue Nov 21 16:02:56 EST 2023" docOffset="925" starttimestamp="1700582044267" timestamp="18531766" />
  <Command __id="9366" _type="SelectTextCommand" caretOffset="914" date="Tue Nov 21 16:02:57 EST 2023" end="924" start="914" starttimestamp="1700582044267" timestamp="18532748" />
  <Command __id="9367" _type="SelectTextCommand" caretOffset="914" date="Tue Nov 21 16:02:57 EST 2023" end="924" start="914" starttimestamp="1700582044267" timestamp="18532748" />
  <Command __id="9369" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:02:57 EST 2023" starttimestamp="1700582044267" timestamp="18532820" />
  <Command __id="9370" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:02:57 EST 2023" starttimestamp="1700582044267" timestamp="18532820" />
  <Command __id="9371" _type="MoveCaretCommand" caretOffset="954" date="Tue Nov 21 16:02:58 EST 2023" docOffset="954" starttimestamp="1700582044267" timestamp="18534468" />
  <Command __id="9372" _type="MoveCaretCommand" caretOffset="954" date="Tue Nov 21 16:02:58 EST 2023" docOffset="954" starttimestamp="1700582044267" timestamp="18534469" />
  <Command __id="9376" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:03:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18537937" type="Run" />
  <Command __id="9377" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:03:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18537937" type="Run" />
  <Command __id="9378" _type="PasteCommand" date="Tue Nov 21 16:03:03 EST 2023" starttimestamp="1700582044267" timestamp="18539192" />
  <Command __id="9379" _type="ConsoleOutput" date="Tue Nov 21 16:03:04 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18539774" type="ConsoleOutput">
    <outputString><![CDATA[((+ 1 2))
(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"((+ 1 2))¶(1 2)¶"), Diff(DELETE,"Exception in thread "main" ¶")]]]></diff>
  </Command>
  <Command __id="9380" _type="ExceptionCommand" date="Tue Nov 21 16:03:04 EST 2023" starttimestamp="1700582044267" timestamp="18539776" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.QuoteEvaluator.eval(QuoteEvaluator.java:11)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:24)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9381" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:03:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18539780" type="Run" />
  <Command __id="9382" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:03:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18539780" type="Run" />
  <DocumentChange __id="9340" _type="Replace" date="Tue Nov 21 16:01:49 EST 2023" docASTNodeCount="161" docActiveCodeLength="974" docExpressionCount="123" docLength="974" endLine="22" insertionLength="8" int_docASTNodeCount="161" int_docActiveCodeLength="966" int_docExpressionCount="123" int_docLength="966" length="3" offset="655" startLine="22" starttimestamp="1700582044267" timestamp="18464913">
    <deletedText><![CDATA[isA]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9347" _type="Insert" date="Tue Nov 21 16:01:52 EST 2023" docASTNodeCount="162" docActiveCodeLength="975" docExpressionCount="124" docLength="975" length="1" offset="630" starttimestamp="1700582044267" timestamp="18467741">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="9368" _type="Delete" date="Tue Nov 21 16:02:57 EST 2023" docASTNodeCount="160" docActiveCodeLength="965" docExpressionCount="122" docLength="965" endLine="25" length="10" offset="914" startLine="25" starttimestamp="1700582044267" timestamp="18532814">
    <text><![CDATA[getHead().]]></text>
  </DocumentChange>
  <Command __id="9383" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 16:03:58 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="18593850" />
  <Command __id="9384" _type="MoveCaretCommand" caretOffset="461" date="Tue Nov 21 16:03:58 EST 2023" docOffset="461" starttimestamp="1700582044267" timestamp="18593850" />
  <Command __id="9385" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 16:03:58 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="18594413" />
  <Command __id="9386" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 16:03:58 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="18594413" />
  <Command __id="9387" _type="MoveCaretCommand" caretOffset="544" date="Tue Nov 21 16:03:59 EST 2023" docOffset="544" starttimestamp="1700582044267" timestamp="18594912" />
  <Command __id="9388" _type="MoveCaretCommand" caretOffset="544" date="Tue Nov 21 16:03:59 EST 2023" docOffset="544" starttimestamp="1700582044267" timestamp="18594912" />
  <DocumentChange __id="9389" _type="Insert" date="Tue Nov 21 16:04:01 EST 2023" docASTNodeCount="164" docActiveCodeLength="978" docExpressionCount="125" docLength="978" length="13" offset="544" repeat="11" starttimestamp="1700582044267" timestamp="18596770" timestamp2="18598510">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <Command __id="9390" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18596775" timestamp2="18596775">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9391" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18596775" timestamp2="18596775">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9393" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18597226" timestamp2="18597226">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9394" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18597226" timestamp2="18597226">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9396" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18597528" timestamp2="18597528">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9397" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18597528" timestamp2="18597528">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9399" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18597619" timestamp2="18597619">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9400" _type="InsertStringCommand" date="Tue Nov 21 16:04:01 EST 2023" starttimestamp="1700582044267" timestamp="18597619" timestamp2="18597619">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9402" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18597770" timestamp2="18597770">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9403" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18597770" timestamp2="18597770">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9405" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18597860" timestamp2="18597860">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9406" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18597860" timestamp2="18597860">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9408" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18597946" timestamp2="18597946">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9409" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18597946" timestamp2="18597946">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9411" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18598128" timestamp2="18598128">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9412" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18598128" timestamp2="18598128">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9413" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:04:02 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18598136" />
  <Command __id="9417" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:04:02 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18598616" />
  <DocumentChange __id="9418" _type="Replace" date="Tue Nov 21 16:04:02 EST 2023" docASTNodeCount="160" docActiveCodeLength="979" docExpressionCount="122" docLength="979" endLine="18" insertionLength="4" int_docASTNodeCount="162" int_docActiveCodeLength="975" int_docExpressionCount="123" int_docLength="975" length="3" offset="554" startLine="18" starttimestamp="1700582044267" timestamp="18598619">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="9419" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18598623" timestamp2="18598623">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9420" _type="InsertStringCommand" date="Tue Nov 21 16:04:02 EST 2023" starttimestamp="1700582044267" timestamp="18598623" timestamp2="18598623">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9421" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:04:02 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18598632" />
  <DocumentChange __id="9422" _type="Insert" date="Tue Nov 21 16:04:03 EST 2023" docASTNodeCount="167" docActiveCodeLength="994" docExpressionCount="128" docLength="994" length="15" offset="558" repeat="13" starttimestamp="1700582044267" timestamp="18598810" timestamp2="18601936">
    <text><![CDATA[println("Expr")]]></text>
  </DocumentChange>
  <Command __id="9431" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:04:05 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18600968" />
  <Command __id="9433" _type="InsertStringCommand" date="Tue Nov 21 16:04:05 EST 2023" starttimestamp="1700582044267" timestamp="18601416" timestamp2="18601416">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9434" _type="InsertStringCommand" date="Tue Nov 21 16:04:05 EST 2023" starttimestamp="1700582044267" timestamp="18601416" timestamp2="18601416">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9436" _type="InsertStringCommand" date="Tue Nov 21 16:04:05 EST 2023" starttimestamp="1700582044267" timestamp="18601730" timestamp2="18601730">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9437" _type="InsertStringCommand" date="Tue Nov 21 16:04:05 EST 2023" starttimestamp="1700582044267" timestamp="18601730" timestamp2="18601730">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9439" _type="InsertStringCommand" date="Tue Nov 21 16:04:06 EST 2023" starttimestamp="1700582044267" timestamp="18601832" timestamp2="18601832">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9440" _type="InsertStringCommand" date="Tue Nov 21 16:04:06 EST 2023" starttimestamp="1700582044267" timestamp="18601832" timestamp2="18601832">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9442" _type="InsertStringCommand" date="Tue Nov 21 16:04:06 EST 2023" starttimestamp="1700582044267" timestamp="18601936" timestamp2="18601936">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9443" _type="InsertStringCommand" date="Tue Nov 21 16:04:06 EST 2023" starttimestamp="1700582044267" timestamp="18601936" timestamp2="18601936">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="9444" _type="Delete" date="Tue Nov 21 16:04:07 EST 2023" docASTNodeCount="167" docActiveCodeLength="990" docExpressionCount="128" docLength="990" endLine="18" length="4" offset="567" repeat="4" startLine="18" starttimestamp="1700582044267" timestamp="18603320" timestamp2="18603720">
    <text><![CDATA[Expr]]></text>
  </DocumentChange>
  <Command __id="9445" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603322" />
  <Command __id="9446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603322" />
  <Command __id="9448" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603436" />
  <Command __id="9449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603436" />
  <Command __id="9451" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603566" />
  <Command __id="9452" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603566" />
  <Command __id="9454" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603723" />
  <Command __id="9455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:07 EST 2023" starttimestamp="1700582044267" timestamp="18603723" />
  <DocumentChange __id="9456" _type="Insert" date="Tue Nov 21 16:04:08 EST 2023" docASTNodeCount="167" docActiveCodeLength="996" docExpressionCount="128" docLength="996" length="6" offset="567" repeat="6" starttimestamp="1700582044267" timestamp="18603799" timestamp2="18605539">
    <text><![CDATA[expr: ]]></text>
  </DocumentChange>
  <Command __id="9457" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18603800" timestamp2="18603800">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9458" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18603800" timestamp2="18603800">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9460" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18603982" timestamp2="18603982">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9461" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18603982" timestamp2="18603982">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9463" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18604052" timestamp2="18604052">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9464" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18604052" timestamp2="18604052">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9466" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18604204" timestamp2="18604204">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9467" _type="InsertStringCommand" date="Tue Nov 21 16:04:08 EST 2023" starttimestamp="1700582044267" timestamp="18604204" timestamp2="18604204">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9469" _type="InsertStringCommand" date="Tue Nov 21 16:04:09 EST 2023" starttimestamp="1700582044267" timestamp="18605077" timestamp2="18605077">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="9470" _type="InsertStringCommand" date="Tue Nov 21 16:04:09 EST 2023" starttimestamp="1700582044267" timestamp="18605077" timestamp2="18605077">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="9472" _type="InsertStringCommand" date="Tue Nov 21 16:04:09 EST 2023" starttimestamp="1700582044267" timestamp="18605539" timestamp2="18605539">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9473" _type="InsertStringCommand" date="Tue Nov 21 16:04:09 EST 2023" starttimestamp="1700582044267" timestamp="18605539" timestamp2="18605539">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9474" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:04:10 EST 2023" starttimestamp="1700582044267" timestamp="18605808" />
  <Command __id="9475" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:04:10 EST 2023" starttimestamp="1700582044267" timestamp="18605808" />
  <DocumentChange __id="9476" _type="Insert" date="Tue Nov 21 16:04:11 EST 2023" docASTNodeCount="169" docActiveCodeLength="1003" docExpressionCount="130" docLength="1003" length="7" offset="574" repeat="7" starttimestamp="1700582044267" timestamp="18606738" timestamp2="18607516">
    <text><![CDATA[ + expr]]></text>
  </DocumentChange>
  <Command __id="9477" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18606739" timestamp2="18606739">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9478" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18606739" timestamp2="18606739">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9480" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18606853" timestamp2="18606853">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="9481" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18606853" timestamp2="18606853">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="9483" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607055" timestamp2="18607055">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9484" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607055" timestamp2="18607055">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9486" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607174" timestamp2="18607174">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9487" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607174" timestamp2="18607174">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9489" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607366" timestamp2="18607366">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9490" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607366" timestamp2="18607366">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9492" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607472" timestamp2="18607472">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9493" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607472" timestamp2="18607472">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9495" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607516" timestamp2="18607516">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9496" _type="InsertStringCommand" date="Tue Nov 21 16:04:11 EST 2023" starttimestamp="1700582044267" timestamp="18607516" timestamp2="18607516">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9497" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:04:12 EST 2023" starttimestamp="1700582044267" timestamp="18607800" />
  <Command __id="9498" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:04:12 EST 2023" starttimestamp="1700582044267" timestamp="18607800" />
  <Command __id="9500" _type="InsertStringCommand" date="Tue Nov 21 16:04:12 EST 2023" starttimestamp="1700582044267" timestamp="18608241" timestamp2="18608241">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9501" _type="InsertStringCommand" date="Tue Nov 21 16:04:12 EST 2023" starttimestamp="1700582044267" timestamp="18608241" timestamp2="18608241">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9502" _type="MoveCaretCommand" caretOffset="621" date="Tue Nov 21 16:04:14 EST 2023" docOffset="621" starttimestamp="1700582044267" timestamp="18610100" />
  <Command __id="9503" _type="MoveCaretCommand" caretOffset="621" date="Tue Nov 21 16:04:14 EST 2023" docOffset="621" starttimestamp="1700582044267" timestamp="18610100" />
  <Command __id="9504" _type="MoveCaretCommand" caretOffset="625" date="Tue Nov 21 16:04:17 EST 2023" docOffset="625" starttimestamp="1700582044267" timestamp="18613035" />
  <Command __id="9505" _type="MoveCaretCommand" caretOffset="625" date="Tue Nov 21 16:04:17 EST 2023" docOffset="625" starttimestamp="1700582044267" timestamp="18613035" />
  <DocumentChange __id="9499" _type="Insert" date="Tue Nov 21 16:04:12 EST 2023" docASTNodeCount="169" docActiveCodeLength="1004" docExpressionCount="130" docLength="1004" length="1" offset="582" starttimestamp="1700582044267" timestamp="18608238">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="9506" _type="MoveCaretCommand" caretOffset="647" date="Tue Nov 21 16:04:28 EST 2023" docOffset="647" starttimestamp="1700582044267" timestamp="18624256" />
  <Command __id="9507" _type="MoveCaretCommand" caretOffset="647" date="Tue Nov 21 16:04:28 EST 2023" docOffset="647" starttimestamp="1700582044267" timestamp="18624257" />
  <DocumentChange __id="9508" _type="Insert" date="Tue Nov 21 16:04:30 EST 2023" docASTNodeCount="169" docActiveCodeLength="1011" docExpressionCount="130" docLength="1011" length="7" offset="647" repeat="7" starttimestamp="1700582044267" timestamp="18625846" timestamp2="18628399">
    <text><![CDATA["expr:"]]></text>
  </DocumentChange>
  <Command __id="9509" _type="InsertStringCommand" date="Tue Nov 21 16:04:30 EST 2023" starttimestamp="1700582044267" timestamp="18625849" timestamp2="18625849">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9510" _type="InsertStringCommand" date="Tue Nov 21 16:04:30 EST 2023" starttimestamp="1700582044267" timestamp="18625849" timestamp2="18625849">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9512" _type="InsertStringCommand" date="Tue Nov 21 16:04:30 EST 2023" starttimestamp="1700582044267" timestamp="18626525" timestamp2="18626525">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9513" _type="InsertStringCommand" date="Tue Nov 21 16:04:30 EST 2023" starttimestamp="1700582044267" timestamp="18626525" timestamp2="18626525">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="9514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 16:04:31 EST 2023" starttimestamp="1700582044267" timestamp="18626864" />
  <Command __id="9515" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Nov 21 16:04:31 EST 2023" starttimestamp="1700582044267" timestamp="18626864" />
  <Command __id="9517" _type="InsertStringCommand" date="Tue Nov 21 16:04:31 EST 2023" starttimestamp="1700582044267" timestamp="18627577" timestamp2="18627577">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9518" _type="InsertStringCommand" date="Tue Nov 21 16:04:31 EST 2023" starttimestamp="1700582044267" timestamp="18627577" timestamp2="18627577">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9520" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18627757" timestamp2="18627757">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9521" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18627757" timestamp2="18627757">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9523" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18627862" timestamp2="18627862">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9524" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18627862" timestamp2="18627862">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9526" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18627981" timestamp2="18627981">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9527" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18627981" timestamp2="18627981">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9529" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18628401" timestamp2="18628401">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="9530" _type="InsertStringCommand" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18628401" timestamp2="18628401">
    <data><![CDATA[:]]></data>
  </Command>
  <DocumentChange __id="9531" _type="Delete" date="Tue Nov 21 16:04:32 EST 2023" docASTNodeCount="169" docActiveCodeLength="1010" docExpressionCount="130" docLength="1010" endLine="22" length="1" offset="652" startLine="22" starttimestamp="1700582044267" timestamp="18628727">
    <text><![CDATA[:]]></text>
  </DocumentChange>
  <Command __id="9532" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18628730" />
  <Command __id="9533" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:32 EST 2023" starttimestamp="1700582044267" timestamp="18628730" />
  <Command __id="9535" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18629735" timestamp2="18629735">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9536" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18629735" timestamp2="18629735">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9538" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18630427" timestamp2="18630427">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9539" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18630427" timestamp2="18630427">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9541" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18630514" timestamp2="18630514">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9542" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18630514" timestamp2="18630514">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9544" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18630588" timestamp2="18630588">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9545" _type="InsertStringCommand" date="Tue Nov 21 16:04:34 EST 2023" starttimestamp="1700582044267" timestamp="18630588" timestamp2="18630588">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9547" _type="InsertStringCommand" date="Tue Nov 21 16:04:35 EST 2023" starttimestamp="1700582044267" timestamp="18630876" timestamp2="18630876">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="9548" _type="InsertStringCommand" date="Tue Nov 21 16:04:35 EST 2023" starttimestamp="1700582044267" timestamp="18630876" timestamp2="18630876">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="9550" _type="InsertStringCommand" date="Tue Nov 21 16:04:35 EST 2023" starttimestamp="1700582044267" timestamp="18631443" timestamp2="18631443">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9551" _type="InsertStringCommand" date="Tue Nov 21 16:04:35 EST 2023" starttimestamp="1700582044267" timestamp="18631443" timestamp2="18631443">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9552" _type="MoveCaretCommand" caretOffset="659" date="Tue Nov 21 16:04:36 EST 2023" docOffset="659" starttimestamp="1700582044267" timestamp="18632612" />
  <Command __id="9553" _type="MoveCaretCommand" caretOffset="659" date="Tue Nov 21 16:04:36 EST 2023" docOffset="659" starttimestamp="1700582044267" timestamp="18632612" />
  <Command __id="9555" _type="InsertStringCommand" date="Tue Nov 21 16:04:37 EST 2023" starttimestamp="1700582044267" timestamp="18633125" timestamp2="18633125">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9556" _type="InsertStringCommand" date="Tue Nov 21 16:04:37 EST 2023" starttimestamp="1700582044267" timestamp="18633125" timestamp2="18633125">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9558" _type="InsertStringCommand" date="Tue Nov 21 16:04:37 EST 2023" starttimestamp="1700582044267" timestamp="18633225" timestamp2="18633225">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="9559" _type="InsertStringCommand" date="Tue Nov 21 16:04:37 EST 2023" starttimestamp="1700582044267" timestamp="18633225" timestamp2="18633225">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="9561" _type="InsertStringCommand" date="Tue Nov 21 16:04:37 EST 2023" starttimestamp="1700582044267" timestamp="18633361" timestamp2="18633361">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9562" _type="InsertStringCommand" date="Tue Nov 21 16:04:37 EST 2023" starttimestamp="1700582044267" timestamp="18633361" timestamp2="18633361">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9563" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:04:38 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18634088" />
  <Command __id="9564" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:04:38 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18634088" />
  <Command __id="9566" _type="InsertStringCommand" date="Tue Nov 21 16:04:38 EST 2023" starttimestamp="1700582044267" timestamp="18634567" timestamp2="18634567">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="9567" _type="InsertStringCommand" date="Tue Nov 21 16:04:38 EST 2023" starttimestamp="1700582044267" timestamp="18634567" timestamp2="18634567">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="9569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:39 EST 2023" starttimestamp="1700582044267" timestamp="18635282" />
  <Command __id="9570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:04:39 EST 2023" starttimestamp="1700582044267" timestamp="18635282" />
  <Command __id="9571" _type="SelectTextCommand" caretOffset="628" date="Tue Nov 21 16:04:41 EST 2023" end="678" start="628" starttimestamp="1700582044267" timestamp="18637062" />
  <Command __id="9572" _type="SelectTextCommand" caretOffset="628" date="Tue Nov 21 16:04:41 EST 2023" end="678" start="628" starttimestamp="1700582044267" timestamp="18637063" />
  <Command __id="9573" _type="CopyCommand" date="Tue Nov 21 16:04:41 EST 2023" starttimestamp="1700582044267" timestamp="18637267" />
  <Command __id="9574" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:04:41 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18637705" />
  <Command __id="9575" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:04:41 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18637705" />
  <Command __id="9577" _type="InsertStringCommand" date="Tue Nov 21 16:04:42 EST 2023" starttimestamp="1700582044267" timestamp="18638479" timestamp2="18638479">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9578" _type="InsertStringCommand" date="Tue Nov 21 16:04:42 EST 2023" starttimestamp="1700582044267" timestamp="18638479" timestamp2="18638479">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9580" _type="PasteCommand" date="Tue Nov 21 16:04:42 EST 2023" starttimestamp="1700582044267" timestamp="18638722" />
  <Command __id="9581" _type="MoveCaretCommand" caretOffset="708" date="Tue Nov 21 16:04:44 EST 2023" docOffset="708" starttimestamp="1700582044267" timestamp="18640353" />
  <Command __id="9582" _type="MoveCaretCommand" caretOffset="708" date="Tue Nov 21 16:04:44 EST 2023" docOffset="708" starttimestamp="1700582044267" timestamp="18640354" />
  <Command __id="9583" _type="SelectTextCommand" caretOffset="705" date="Tue Nov 21 16:04:45 EST 2023" end="709" start="705" starttimestamp="1700582044267" timestamp="18641307" />
  <Command __id="9584" _type="SelectTextCommand" caretOffset="705" date="Tue Nov 21 16:04:45 EST 2023" end="709" start="705" starttimestamp="1700582044267" timestamp="18641307" />
  <Command __id="9586" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18641812" timestamp2="18641812">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9587" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18641813" timestamp2="18641813">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9589" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18641970" timestamp2="18641970">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9590" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18641970" timestamp2="18641970">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9592" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18642072" timestamp2="18642072">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9593" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18642072" timestamp2="18642072">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9595" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18642186" timestamp2="18642186">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9596" _type="InsertStringCommand" date="Tue Nov 21 16:04:46 EST 2023" starttimestamp="1700582044267" timestamp="18642186" timestamp2="18642186">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9597" _type="SelectTextCommand" caretOffset="723" date="Tue Nov 21 16:04:47 EST 2023" end="727" start="723" starttimestamp="1700582044267" timestamp="18643508" />
  <Command __id="9598" _type="SelectTextCommand" caretOffset="723" date="Tue Nov 21 16:04:47 EST 2023" end="727" start="723" starttimestamp="1700582044267" timestamp="18643509" />
  <Command __id="9600" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644002" timestamp2="18644002">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9601" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644002" timestamp2="18644002">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="9603" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644172" timestamp2="18644172">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9604" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644172" timestamp2="18644172">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9606" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644276" timestamp2="18644276">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9607" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644276" timestamp2="18644276">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9609" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644366" timestamp2="18644366">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9610" _type="InsertStringCommand" date="Tue Nov 21 16:04:48 EST 2023" starttimestamp="1700582044267" timestamp="18644366" timestamp2="18644366">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="9611" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:04:49 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18644738" />
  <Command __id="9612" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:04:49 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18644738" />
  <Command __id="9613" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:04:55 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18651047" />
  <Command __id="9614" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:04:55 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18651048" />
  <Command __id="9615" _type="SelectTextCommand" caretOffset="681" date="Tue Nov 21 16:04:57 EST 2023" end="731" start="681" starttimestamp="1700582044267" timestamp="18653564" />
  <Command __id="9616" _type="SelectTextCommand" caretOffset="681" date="Tue Nov 21 16:04:57 EST 2023" end="731" start="681" starttimestamp="1700582044267" timestamp="18653564" />
  <Command __id="9617" _type="CopyCommand" date="Tue Nov 21 16:04:57 EST 2023" starttimestamp="1700582044267" timestamp="18653690" />
  <Command __id="9618" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:04:58 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18654003" />
  <Command __id="9619" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:04:58 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18654003" />
  <Command __id="9620" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:04:59 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18654781" />
  <Command __id="9621" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:04:59 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18654781" />
  <Command __id="9623" _type="InsertStringCommand" date="Tue Nov 21 16:04:59 EST 2023" starttimestamp="1700582044267" timestamp="18655207" timestamp2="18655207">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9624" _type="InsertStringCommand" date="Tue Nov 21 16:04:59 EST 2023" starttimestamp="1700582044267" timestamp="18655207" timestamp2="18655207">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9626" _type="PasteCommand" date="Tue Nov 21 16:04:59 EST 2023" starttimestamp="1700582044267" timestamp="18655355" />
  <Command __id="9627" _type="MoveCaretCommand" caretOffset="758" date="Tue Nov 21 16:05:00 EST 2023" docOffset="758" starttimestamp="1700582044267" timestamp="18656418" />
  <Command __id="9628" _type="MoveCaretCommand" caretOffset="758" date="Tue Nov 21 16:05:00 EST 2023" docOffset="758" starttimestamp="1700582044267" timestamp="18656418" />
  <Command __id="9630" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18656735" timestamp2="18656735">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9631" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18656735" timestamp2="18656735">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9633" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18657240" timestamp2="18657240">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9634" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18657241" timestamp2="18657241">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9636" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18657348" timestamp2="18657348">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9637" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18657348" timestamp2="18657348">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9639" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18657407" timestamp2="18657407">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9640" _type="InsertStringCommand" date="Tue Nov 21 16:05:01 EST 2023" starttimestamp="1700582044267" timestamp="18657408" timestamp2="18657408">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9641" _type="MoveCaretCommand" caretOffset="831" date="Tue Nov 21 16:05:02 EST 2023" docOffset="831" starttimestamp="1700582044267" timestamp="18658495" />
  <Command __id="9642" _type="MoveCaretCommand" caretOffset="831" date="Tue Nov 21 16:05:02 EST 2023" docOffset="831" starttimestamp="1700582044267" timestamp="18658495" />
  <Command __id="9643" _type="MoveCaretCommand" caretOffset="777" date="Tue Nov 21 16:05:03 EST 2023" docOffset="777" starttimestamp="1700582044267" timestamp="18658959" />
  <Command __id="9644" _type="MoveCaretCommand" caretOffset="777" date="Tue Nov 21 16:05:03 EST 2023" docOffset="777" starttimestamp="1700582044267" timestamp="18658959" />
  <Command __id="9646" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659147" timestamp2="18659147">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="9647" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659147" timestamp2="18659147">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="9649" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659231" timestamp2="18659231">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9650" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659231" timestamp2="18659231">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9652" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659347" timestamp2="18659347">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9653" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659347" timestamp2="18659347">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9655" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659583" timestamp2="18659583">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9656" _type="InsertStringCommand" date="Tue Nov 21 16:05:03 EST 2023" starttimestamp="1700582044267" timestamp="18659583" timestamp2="18659583">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="9658" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18659808" timestamp2="18659808">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9659" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18659808" timestamp2="18659808">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9661" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18659898" timestamp2="18659898">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9662" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18659898" timestamp2="18659898">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9664" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18659987" timestamp2="18659987">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9665" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18659987" timestamp2="18659987">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="9667" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18660167" timestamp2="18660167">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9668" _type="InsertStringCommand" date="Tue Nov 21 16:05:04 EST 2023" starttimestamp="1700582044267" timestamp="18660167" timestamp2="18660167">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9669" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:05:04 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18660175" />
  <Command __id="9670" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:05:04 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18660180" />
  <Command __id="9671" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:05:05 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18660883" />
  <Command __id="9672" _type="MoveCaretCommand" caretOffset="731" date="Tue Nov 21 16:05:05 EST 2023" docOffset="731" starttimestamp="1700582044267" timestamp="18660883" />
  <Command __id="9685" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:05:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18666806" type="Run" />
  <Command __id="9686" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:05:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18666807" type="Run" />
  <Command __id="9694" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:05:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18671192" type="Run" />
  <Command __id="9695" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:05:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18671192" type="Run" />
  <Command __id="9696" _type="PasteCommand" date="Tue Nov 21 16:05:16 EST 2023" starttimestamp="1700582044267" timestamp="18671752" />
  <Command __id="9697" _type="ConsoleOutput" date="Tue Nov 21 16:05:16 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18672161" type="ConsoleOutput">
    <outputString><![CDATA[expr: (QUOTE (+ 1 2))
exprTail: ((+ 1 2))
exprHead: QUOTE
exprTailHead: (+ 1 2)
expr: (+ 1 2)
exprTail: (1 2)
exprHead: +
exprTailHead: 1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SYSTEM.OUT.PRINTLN"), Diff(INSERT,"expr: (QUOTE (+ 1 2))¶exprTail: ((+ 1 2))¶exprHead: QUOTE¶exprTailHead: (+ 1 2)¶expr: (+ 1 2)¶exprTail: (1 2)¶exprHead: +¶exprTailHead: 1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9698" _type="ExceptionCommand" date="Tue Nov 21 16:05:16 EST 2023" starttimestamp="1700582044267" timestamp="18672166" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.QuoteEvaluator.eval(QuoteEvaluator.java:11)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:27)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9699" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:05:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18672170" type="Run" />
  <Command __id="9700" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:05:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18672170" type="Run" />
  <Command __id="9701" _type="ShellCommand" date="Tue Nov 21 16:06:07 EST 2023" starttimestamp="1700582044267" timestamp="18723598" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="9534" _type="Insert" date="Tue Nov 21 16:04:34 EST 2023" docASTNodeCount="169" docActiveCodeLength="1016" docExpressionCount="130" docLength="1016" length="6" offset="652" repeat="6" starttimestamp="1700582044267" timestamp="18629733" timestamp2="18631441">
    <text><![CDATA[Tail: ]]></text>
  </DocumentChange>
  <DocumentChange __id="9554" _type="Insert" date="Tue Nov 21 16:04:37 EST 2023" docASTNodeCount="171" docActiveCodeLength="1019" docExpressionCount="132" docLength="1019" length="3" offset="659" repeat="3" starttimestamp="1700582044267" timestamp="18633123" timestamp2="18633359">
    <text><![CDATA[ + ]]></text>
  </DocumentChange>
  <DocumentChange __id="9565" _type="Insert" date="Tue Nov 21 16:04:38 EST 2023" docASTNodeCount="175" docActiveCodeLength="1020" docExpressionCount="135" docLength="1020" length="1" offset="678" starttimestamp="1700582044267" timestamp="18634564">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="9568" _type="Delete" date="Tue Nov 21 16:04:39 EST 2023" docASTNodeCount="171" docActiveCodeLength="1019" docExpressionCount="132" docLength="1019" endLine="22" length="1" offset="678" startLine="22" starttimestamp="1700582044267" timestamp="18635280">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="9576" _type="Insert" date="Tue Nov 21 16:04:42 EST 2023" docASTNodeCount="171" docActiveCodeLength="1022" docExpressionCount="132" docLength="1022" length="3" offset="678" starttimestamp="1700582044267" timestamp="18638476">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="9579" _type="Replace" date="Tue Nov 21 16:04:42 EST 2023" docASTNodeCount="182" docActiveCodeLength="1072" docExpressionCount="142" docLength="1072" endLine="23" insertionLength="52" int_docASTNodeCount="171" int_docActiveCodeLength="1020" int_docExpressionCount="132" int_docLength="1020" length="2" offset="679" startLine="23" starttimestamp="1700582044267" timestamp="18638717">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("exprTail: " + expr.getTail());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9585" _type="Replace" date="Tue Nov 21 16:04:46 EST 2023" docASTNodeCount="182" docActiveCodeLength="1069" docExpressionCount="142" docLength="1069" endLine="23" insertionLength="1" int_docASTNodeCount="182" int_docActiveCodeLength="1068" int_docExpressionCount="142" int_docLength="1068" length="4" offset="705" startLine="23" starttimestamp="1700582044267" timestamp="18641808">
    <deletedText><![CDATA[Tail]]></deletedText>
    <insertedText><![CDATA[H]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9588" _type="Insert" date="Tue Nov 21 16:04:46 EST 2023" docASTNodeCount="182" docActiveCodeLength="1072" docExpressionCount="142" docLength="1072" length="3" offset="706" repeat="3" starttimestamp="1700582044267" timestamp="18641968" timestamp2="18642184">
    <text><![CDATA[ead]]></text>
  </DocumentChange>
  <DocumentChange __id="9599" _type="Replace" date="Tue Nov 21 16:04:48 EST 2023" docASTNodeCount="182" docActiveCodeLength="1069" docExpressionCount="142" docLength="1069" endLine="23" insertionLength="1" int_docASTNodeCount="182" int_docActiveCodeLength="1068" int_docExpressionCount="142" int_docLength="1068" length="4" offset="723" startLine="23" starttimestamp="1700582044267" timestamp="18643996">
    <deletedText><![CDATA[Tail]]></deletedText>
    <insertedText><![CDATA[H]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9602" _type="Insert" date="Tue Nov 21 16:04:48 EST 2023" docASTNodeCount="182" docActiveCodeLength="1072" docExpressionCount="142" docLength="1072" length="3" offset="724" repeat="3" starttimestamp="1700582044267" timestamp="18644170" timestamp2="18644364">
    <text><![CDATA[ead]]></text>
  </DocumentChange>
  <DocumentChange __id="9622" _type="Insert" date="Tue Nov 21 16:04:59 EST 2023" docASTNodeCount="182" docActiveCodeLength="1075" docExpressionCount="142" docLength="1075" length="3" offset="731" starttimestamp="1700582044267" timestamp="18655203">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="9625" _type="Replace" date="Tue Nov 21 16:04:59 EST 2023" docASTNodeCount="193" docActiveCodeLength="1125" docExpressionCount="152" docLength="1125" endLine="24" insertionLength="52" int_docASTNodeCount="182" int_docActiveCodeLength="1073" int_docExpressionCount="142" int_docLength="1073" length="2" offset="732" startLine="24" starttimestamp="1700582044267" timestamp="18655351">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("exprHead: " + expr.getHead());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9629" _type="Insert" date="Tue Nov 21 16:05:00 EST 2023" docASTNodeCount="193" docActiveCodeLength="1129" docExpressionCount="152" docLength="1129" length="4" offset="758" repeat="4" starttimestamp="1700582044267" timestamp="18656732" timestamp2="18657405">
    <text><![CDATA[Tail]]></text>
  </DocumentChange>
  <DocumentChange __id="9645" _type="Insert" date="Tue Nov 21 16:05:03 EST 2023" docASTNodeCount="195" docActiveCodeLength="1137" docExpressionCount="154" docLength="1137" length="8" offset="777" repeat="8" starttimestamp="1700582044267" timestamp="18659145" timestamp2="18660165">
    <text><![CDATA[getTail.]]></text>
  </DocumentChange>
  <DocumentChange __id="9675" _type="Insert" date="Tue Nov 21 16:05:06 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" length="2" offset="784" starttimestamp="1700582044267" timestamp="18662375">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="9702" _type="ShellCommand" date="Tue Nov 21 16:06:11 EST 2023" starttimestamp="1700582044267" timestamp="18727244" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9703" _type="ShellCommand" date="Tue Nov 21 16:06:12 EST 2023" starttimestamp="1700582044267" timestamp="18728149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9704" _type="ShellCommand" date="Tue Nov 21 16:06:13 EST 2023" starttimestamp="1700582044267" timestamp="18728737" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9706" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 16:06:21 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="18736905" />
  <Command __id="9707" _type="MoveCaretCommand" caretOffset="213" date="Tue Nov 21 16:06:22 EST 2023" docOffset="294" starttimestamp="1700582044267" timestamp="18738221" />
  <Command __id="9708" _type="ShellCommand" date="Tue Nov 21 16:06:27 EST 2023" starttimestamp="1700582044267" timestamp="18743061" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9709" _type="ShellCommand" date="Tue Nov 21 16:06:28 EST 2023" starttimestamp="1700582044267" timestamp="18744668" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9710" _type="ShellCommand" date="Tue Nov 21 16:06:29 EST 2023" starttimestamp="1700582044267" timestamp="18745131" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9705" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:06:21 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18736840">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class QuoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail();
	}

}
]]></snapshot>
  </Command>
  <Command __id="9712" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:06:32 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18747775">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail()"), Diff(INSERT,".getHead()"), Diff(EQUAL,";		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		"), Diff(DELETE,"if(BuiltinOperationManagerSingleton.get().getEvaluator("), Diff(INSERT,"System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + "), Diff(EQUAL,"expr.get"), Diff(DELETE,"Head"), Diff(INSERT,"Tail"), Diff(EQUAL,"().getHead()"), Diff(DELETE,".getHead().toString()) != null"), Diff(INSERT,");		if(!expr.getTail().getHead().isAtom()"), Diff(EQUAL,") {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead()."), Diff(DELETE,"getHead()."), Diff(EQUAL,"toString()).eval(evalHelper(expr."), Diff(INSERT,"getTail()."), Diff(EQUAL,"getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead()."), Diff(DELETE,"getHead()."), Diff(EQUAL,"toString()).eval(expr"), Diff(DELETE,".getHead()"), Diff(EQUAL,", environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail().getHead();
		return evalHelper(expr, environment);
		
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		System.out.println("expr: " + expr);
		if(expr.isAtom()) {
			return expr;
		}
		System.out.println("exprTail: " + expr.getTail());
		System.out.println("exprHead: " + expr.getHead());
		System.out.println("exprTailHead: " + expr.getTail().getHead());
		if(!expr.getTail().getHead().isAtom()) {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);
		}else {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="9711" _type="ShellCommand" date="Tue Nov 21 16:06:31 EST 2023" starttimestamp="1700582044267" timestamp="18746811" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9713" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:06:32 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18747815" />
  <Command __id="9715" _type="SelectTextCommand" caretOffset="213" date="Tue Nov 21 16:08:22 EST 2023" end="213" start="189" starttimestamp="1700582044267" timestamp="18858549" />
  <Command __id="9714" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:22 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18858510">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9716" _type="MoveCaretCommand" caretOffset="209" date="Tue Nov 21 16:08:23 EST 2023" docOffset="290" starttimestamp="1700582044267" timestamp="18859696" />
  <Command __id="9717" _type="MoveCaretCommand" caretOffset="200" date="Tue Nov 21 16:08:24 EST 2023" docOffset="281" starttimestamp="1700582044267" timestamp="18860170" />
  <Command __id="9718" _type="MoveCaretCommand" caretOffset="188" date="Tue Nov 21 16:08:25 EST 2023" docOffset="269" starttimestamp="1700582044267" timestamp="18860854" />
  <DocumentChange __id="9719" _type="Insert" date="Tue Nov 21 16:08:26 EST 2023" docASTNodeCount="58" docActiveCodeLength="314" docExpressionCount="40" docLength="314" length="13" offset="269" repeat="11" starttimestamp="1700582044267" timestamp="18862299" timestamp2="18864311">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <Command __id="9720" _type="InsertStringCommand" date="Tue Nov 21 16:08:26 EST 2023" starttimestamp="1700582044267" timestamp="18862303" timestamp2="18862303">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9722" _type="InsertStringCommand" date="Tue Nov 21 16:08:27 EST 2023" starttimestamp="1700582044267" timestamp="18862904" timestamp2="18862904">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="9724" _type="InsertStringCommand" date="Tue Nov 21 16:08:27 EST 2023" starttimestamp="1700582044267" timestamp="18863179" timestamp2="18863179">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="9726" _type="InsertStringCommand" date="Tue Nov 21 16:08:27 EST 2023" starttimestamp="1700582044267" timestamp="18863276" timestamp2="18863276">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9728" _type="InsertStringCommand" date="Tue Nov 21 16:08:27 EST 2023" starttimestamp="1700582044267" timestamp="18863442" timestamp2="18863442">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9730" _type="InsertStringCommand" date="Tue Nov 21 16:08:27 EST 2023" starttimestamp="1700582044267" timestamp="18863547" timestamp2="18863547">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9732" _type="InsertStringCommand" date="Tue Nov 21 16:08:27 EST 2023" starttimestamp="1700582044267" timestamp="18863672" timestamp2="18863672">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="9734" _type="InsertStringCommand" date="Tue Nov 21 16:08:28 EST 2023" starttimestamp="1700582044267" timestamp="18863883" timestamp2="18863883">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9735" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:08:28 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18863890" />
  <Command __id="9739" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:08:28 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18864432" />
  <DocumentChange __id="9740" _type="Replace" date="Tue Nov 21 16:08:28 EST 2023" docASTNodeCount="58" docActiveCodeLength="315" docExpressionCount="41" docLength="315" endLine="10" insertionLength="4" int_docASTNodeCount="56" int_docActiveCodeLength="311" int_docExpressionCount="39" int_docLength="311" length="3" offset="279" startLine="10" starttimestamp="1700582044267" timestamp="18864434">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="9741" _type="InsertStringCommand" date="Tue Nov 21 16:08:28 EST 2023" starttimestamp="1700582044267" timestamp="18864439" timestamp2="18864439">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="9742" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:08:28 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="18864447" />
  <DocumentChange __id="9743" _type="Insert" date="Tue Nov 21 16:08:28 EST 2023" docASTNodeCount="61" docActiveCodeLength="329" docExpressionCount="43" docLength="329" length="14" offset="283" repeat="13" starttimestamp="1700582044267" timestamp="18864628" timestamp2="18869040">
    <text><![CDATA[println(expr);]]></text>
  </DocumentChange>
  <Command __id="9752" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:08:31 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="18867177" />
  <Command __id="9754" _type="InsertStringCommand" date="Tue Nov 21 16:08:31 EST 2023" starttimestamp="1700582044267" timestamp="18867334" timestamp2="18867334">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9756" _type="InsertStringCommand" date="Tue Nov 21 16:08:31 EST 2023" starttimestamp="1700582044267" timestamp="18867439" timestamp2="18867439">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9758" _type="InsertStringCommand" date="Tue Nov 21 16:08:31 EST 2023" starttimestamp="1700582044267" timestamp="18867497" timestamp2="18867497">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Nov 21 16:08:32 EST 2023" starttimestamp="1700582044267" timestamp="18868475" />
  <Command __id="9761" _type="InsertStringCommand" date="Tue Nov 21 16:08:33 EST 2023" starttimestamp="1700582044267" timestamp="18869042" timestamp2="18869042">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="9762" _type="MoveCaretCommand" caretOffset="216" date="Tue Nov 21 16:08:34 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="18869861" />
  <Command __id="9763" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 16:08:34 EST 2023" starttimestamp="1700582044267" timestamp="18870238" />
  <Command __id="9764" _type="EclipseCommand" commandID="" date="Tue Nov 21 16:08:34 EST 2023" starttimestamp="1700582044267" timestamp="18870337" />
  <Command __id="9765" _type="EclipseCommand" commandID="" date="Tue Nov 21 16:08:34 EST 2023" starttimestamp="1700582044267" timestamp="18870345" />
  <Command __id="9768" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:08:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18874046" type="Run" />
  <Command __id="9769" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:08:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18874046" type="Run" />
  <Command __id="9766" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:36 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18872348">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail().getHead();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + expr.getTail().getHead());		if(!expr.getTail().getHead().isAtom()) {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9770" _type="PasteCommand" date="Tue Nov 21 16:08:39 EST 2023" starttimestamp="1700582044267" timestamp="18875161" />
  <Command __id="9771" _type="ConsoleOutput" date="Tue Nov 21 16:08:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18875851" type="ConsoleOutput">
    <outputString><![CDATA[expr: (QUOTE (+ 1 2))
exprTail: ((+ 1 2))
exprHead: QUOTE
exprTailHead: (+ 1 2)
expr: (+ 1 2)
exprTail: (1 2)
exprHead: +
exprTailHead: 1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"expr: (QUOTE (+ 1 2))¶exprTail: ((+ 1 2))¶exprHead: QUOTE¶exprTailHead: (+ 1 2)¶expr: (+ 1 2)¶exprTail: (1 2)¶exprHead: +¶exprTailHead: 1¶")]]]></diff>
  </Command>
  <Command __id="9772" _type="ExceptionCommand" date="Tue Nov 21 16:08:40 EST 2023" starttimestamp="1700582044267" timestamp="18875855" type="Exception">
    <exceptionString><![CDATA[3
Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.QuoteEvaluator.eval(QuoteEvaluator.java:12)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:27)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9773" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:08:40 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18875858" type="Run" />
  <Command __id="9774" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:08:40 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18875858" type="Run" />
  <Command __id="9775" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:47 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18883690">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9776" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 16:08:48 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="18883738" />
  <Command __id="9777" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:48 EST 2023" docASTNodeCount="205" docActiveCodeLength="1301" docExpressionCount="148" docLength="1481" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18884689">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9778" _type="MoveCaretCommand" caretOffset="174" date="Tue Nov 21 16:08:49 EST 2023" docOffset="521" starttimestamp="1700582044267" timestamp="18884746" />
  <Command __id="9779" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:49 EST 2023" docASTNodeCount="256" docActiveCodeLength="1453" docExpressionCount="174" docLength="1453" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18885273">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/GreaterEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;public class GreaterEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}				if (firstInt != null) {			long difference = firstInt.getValue() - secondInt.getValue();			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		} else {			double difference = 0;			if (firstDec != null) {				difference = firstDec.getValue();			}			if (secondDec != null) {				difference -= secondDec.getValue();			}			if(difference > 0) {				return new TAtom();			}else {				return new NilAtom();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9780" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 16:08:49 EST 2023" docOffset="0" starttimestamp="1700582044267" timestamp="18885302" />
  <Command __id="9781" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:49 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18885732">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9782" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 16:08:50 EST 2023" docOffset="361" starttimestamp="1700582044267" timestamp="18885787" />
  <Command __id="9783" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:50 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18886192">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9784" _type="SelectTextCommand" caretOffset="258" date="Tue Nov 21 16:08:50 EST 2023" end="521" start="258" starttimestamp="1700582044267" timestamp="18886246" />
  <Command __id="9785" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:50 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18886532">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail().getHead();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + expr.getTail().getHead());		if(!expr.getTail().getHead().isAtom()) {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9786" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:08:50 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18886571" />
  <Command __id="9788" _type="MoveCaretCommand" caretOffset="216" date="Tue Nov 21 16:08:51 EST 2023" docOffset="297" starttimestamp="1700582044267" timestamp="18886863" />
  <Command __id="9789" _type="ShellCommand" date="Tue Nov 21 16:08:52 EST 2023" starttimestamp="1700582044267" timestamp="18888467" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9790" _type="ShellCommand" date="Tue Nov 21 16:09:00 EST 2023" starttimestamp="1700582044267" timestamp="18896364" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9791" _type="ShellCommand" date="Tue Nov 21 16:09:01 EST 2023" starttimestamp="1700582044267" timestamp="18896797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9792" _type="ShellCommand" date="Tue Nov 21 16:09:03 EST 2023" starttimestamp="1700582044267" timestamp="18898956" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9793" _type="ShellCommand" date="Tue Nov 21 16:09:04 EST 2023" starttimestamp="1700582044267" timestamp="18900386" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9794" _type="ShellCommand" date="Tue Nov 21 16:09:13 EST 2023" starttimestamp="1700582044267" timestamp="18909658" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9795" _type="ShellCommand" date="Tue Nov 21 16:09:23 EST 2023" starttimestamp="1700582044267" timestamp="18919575" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9796" _type="ShellCommand" date="Tue Nov 21 16:09:24 EST 2023" starttimestamp="1700582044267" timestamp="18920377" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9797" _type="ShellCommand" date="Tue Nov 21 16:09:27 EST 2023" starttimestamp="1700582044267" timestamp="18923000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9798" _type="ShellCommand" date="Tue Nov 21 16:09:28 EST 2023" starttimestamp="1700582044267" timestamp="18924532" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9799" _type="ShellCommand" date="Tue Nov 21 16:09:28 EST 2023" starttimestamp="1700582044267" timestamp="18924677" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9800" _type="ShellCommand" date="Tue Nov 21 16:10:06 EST 2023" starttimestamp="1700582044267" timestamp="18962486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9801" _type="SelectTextCommand" caretOffset="209" date="Tue Nov 21 16:10:10 EST 2023" end="211" start="209" starttimestamp="1700582044267" timestamp="18966040" />
  <Command __id="9813" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:10:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18971330" type="Run" />
  <Command __id="9814" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:10:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18971330" type="Run" />
  <Command __id="9815" _type="ShellCommand" date="Tue Nov 21 16:10:16 EST 2023" starttimestamp="1700582044267" timestamp="18972372" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9816" _type="ShellCommand" date="Tue Nov 21 16:10:18 EST 2023" starttimestamp="1700582044267" timestamp="18974500" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9817" _type="PasteCommand" date="Tue Nov 21 16:10:19 EST 2023" starttimestamp="1700582044267" timestamp="18974797" />
  <Command __id="9818" _type="ConsoleInput" date="Tue Nov 21 16:10:20 EST 2023" starttimestamp="1700582044267" timestamp="18976151" type="Exception">
    <outputString><![CDATA[(quote 1)
]]></outputString>
  </Command>
  <Command __id="9819" _type="ConsoleOutput" date="Tue Nov 21 16:10:20 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="18976162" type="ConsoleOutput">
    <outputString><![CDATA[(1)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"expr: (QUOTE (+ 1 2))¶exprTail: ((+ 1 2))¶exprHead: QUOTE¶exprTailHead: (+ 1 2)¶expr: (+ 1 2)¶exprTail: (1 2)¶exprHead: +¶exprTailHead: 1"), Diff(INSERT,"(1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="9820" _type="ShellCommand" date="Tue Nov 21 16:10:22 EST 2023" starttimestamp="1700582044267" timestamp="18977832" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9821" _type="ShellCommand" date="Tue Nov 21 16:10:23 EST 2023" starttimestamp="1700582044267" timestamp="18978958" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9787" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:08:51 EST 2023" docASTNodeCount="61" docActiveCodeLength="329" docExpressionCount="43" docLength="329" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18886831">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(INSERT,"System.out.println(expr);		"), Diff(EQUAL,"return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class QuoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		System.out.println(expr);
		return expr.getTail();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="9803" _type="Delete" date="Tue Nov 21 16:10:11 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" endLine="10" length="28" offset="269" repeat="3" startLine="9" starttimestamp="1700582044267" timestamp="18967505" timestamp2="18967831">
    <text><![CDATA[
		System.out.println(expr);]]></text>
  </DocumentChange>
  <Command __id="9822" _type="MoveCaretCommand" caretOffset="158" date="Tue Nov 21 16:10:27 EST 2023" docOffset="239" starttimestamp="1700582044267" timestamp="18983621" />
  <Command __id="9824" _type="MoveCaretCommand" caretOffset="678" date="Tue Nov 21 16:10:29 EST 2023" docOffset="678" starttimestamp="1700582044267" timestamp="18984908" />
  <Command __id="9825" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 16:10:30 EST 2023" docOffset="1107" starttimestamp="1700582044267" timestamp="18986720" />
  <Command __id="9826" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 16:10:30 EST 2023" docOffset="1107" starttimestamp="1700582044267" timestamp="18986720" />
  <Command __id="9827" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 16:10:31 EST 2023" docOffset="1107" starttimestamp="1700582044267" timestamp="18987666" />
  <Command __id="9828" _type="MoveCaretCommand" caretOffset="1107" date="Tue Nov 21 16:10:31 EST 2023" docOffset="1107" starttimestamp="1700582044267" timestamp="18987666" />
  <Command __id="9829" _type="SelectTextCommand" caretOffset="1109" date="Tue Nov 21 16:10:32 EST 2023" end="1109" start="1105" starttimestamp="1700582044267" timestamp="18987833" />
  <Command __id="9830" _type="SelectTextCommand" caretOffset="1109" date="Tue Nov 21 16:10:32 EST 2023" end="1109" start="1105" starttimestamp="1700582044267" timestamp="18987833" />
  <Command __id="9831" _type="MoveCaretCommand" caretOffset="1128" date="Tue Nov 21 16:10:38 EST 2023" docOffset="1128" starttimestamp="1700582044267" timestamp="18993744" />
  <Command __id="9832" _type="MoveCaretCommand" caretOffset="1128" date="Tue Nov 21 16:10:38 EST 2023" docOffset="1128" starttimestamp="1700582044267" timestamp="18993745" />
  <Command __id="9833" _type="MoveCaretCommand" caretOffset="1092" date="Tue Nov 21 16:10:38 EST 2023" docOffset="1092" starttimestamp="1700582044267" timestamp="18994074" />
  <Command __id="9834" _type="MoveCaretCommand" caretOffset="1092" date="Tue Nov 21 16:10:38 EST 2023" docOffset="1092" starttimestamp="1700582044267" timestamp="18994074" />
  <Command __id="9835" _type="MoveCaretCommand" caretOffset="1085" date="Tue Nov 21 16:10:39 EST 2023" docOffset="1085" starttimestamp="1700582044267" timestamp="18994977" />
  <Command __id="9836" _type="MoveCaretCommand" caretOffset="1085" date="Tue Nov 21 16:10:39 EST 2023" docOffset="1085" starttimestamp="1700582044267" timestamp="18994977" />
  <Command __id="9837" _type="ShellCommand" date="Tue Nov 21 16:10:43 EST 2023" starttimestamp="1700582044267" timestamp="18999448" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9838" _type="ShellCommand" date="Tue Nov 21 16:10:47 EST 2023" starttimestamp="1700582044267" timestamp="19003521" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9839" _type="PasteCommand" date="Tue Nov 21 16:10:48 EST 2023" starttimestamp="1700582044267" timestamp="19003925" />
  <Command __id="9823" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:10:29 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" projectName="Assignment5" starttimestamp="1700582044267" timestamp="18984871">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail().getHead();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + expr.getTail().getHead());		if(!expr.getTail().getHead().isAtom()) {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9840" _type="ExceptionCommand" date="Tue Nov 21 16:10:49 EST 2023" starttimestamp="1700582044267" timestamp="19005463" type="Exception">
    <exceptionString><![CDATA[expr: (QUOTE (+ 1 2))
exprTail: ((+ 1 2))
exprHead: QUOTE
exprTailHead: (+ 1 2)
expr: (+ 1 2)
exprTail: (1 2)
exprHead: +
exprTailHead: 1
Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.QuoteEvaluator.eval(QuoteEvaluator.java:11)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:27)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="9841" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:10:49 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19005471" type="Run" />
  <Command __id="9842" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:10:49 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19005471" type="Run" />
  <Command __id="9843" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:10:55 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19010933">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(DELETE,"System.out.println(expr);		"), Diff(EQUAL,"return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class QuoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail();
	}

}
]]></snapshot>
  </Command>
  <Command __id="9844" _type="MoveCaretCommand" caretOffset="158" date="Tue Nov 21 16:10:55 EST 2023" docOffset="239" starttimestamp="1700582044267" timestamp="19010971" />
  <Command __id="9846" _type="MoveCaretCommand" caretOffset="1085" date="Tue Nov 21 16:10:57 EST 2023" docOffset="1085" starttimestamp="1700582044267" timestamp="19013437" />
  <Command __id="9845" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:10:57 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19013397">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail().getHead();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + expr.getTail().getHead());		if(!expr.getTail().getHead().isAtom()) {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9847" _type="MoveCaretCommand" caretOffset="1106" date="Tue Nov 21 16:11:33 EST 2023" docOffset="1106" starttimestamp="1700582044267" timestamp="19049062" />
  <Command __id="9848" _type="MoveCaretCommand" caretOffset="1106" date="Tue Nov 21 16:11:33 EST 2023" docOffset="1106" starttimestamp="1700582044267" timestamp="19049062" />
  <Command __id="9850" _type="SelectTextCommand" caretOffset="258" date="Tue Nov 21 16:11:40 EST 2023" end="521" start="258" starttimestamp="1700582044267" timestamp="19056644" />
  <Command __id="9851" _type="MoveCaretCommand" caretOffset="518" date="Tue Nov 21 16:11:41 EST 2023" docOffset="648" starttimestamp="1700582044267" timestamp="19057676" />
  <Command __id="9852" _type="MoveCaretCommand" caretOffset="436" date="Tue Nov 21 16:11:42 EST 2023" docOffset="566" starttimestamp="1700582044267" timestamp="19058357" />
  <Command __id="9853" _type="MoveCaretCommand" caretOffset="410" date="Tue Nov 21 16:11:44 EST 2023" docOffset="540" starttimestamp="1700582044267" timestamp="19059783" />
  <Command __id="9854" _type="MoveCaretCommand" caretOffset="176" date="Tue Nov 21 16:11:46 EST 2023" docOffset="176" starttimestamp="1700582044267" timestamp="19061804" />
  <Command __id="9855" _type="SelectTextCommand" caretOffset="184" date="Tue Nov 21 16:11:46 EST 2023" end="184" start="167" starttimestamp="1700582044267" timestamp="19061956" />
  <Command __id="9856" _type="MoveCaretCommand" caretOffset="185" date="Tue Nov 21 16:11:46 EST 2023" docOffset="185" starttimestamp="1700582044267" timestamp="19062393" />
  <Command __id="9857" _type="SelectTextCommand" caretOffset="137" date="Tue Nov 21 16:11:47 EST 2023" end="185" start="137" starttimestamp="1700582044267" timestamp="19063544" />
  <Command __id="9858" _type="CopyCommand" date="Tue Nov 21 16:11:48 EST 2023" starttimestamp="1700582044267" timestamp="19064036" />
  <Command __id="9860" _type="MoveCaretCommand" caretOffset="1106" date="Tue Nov 21 16:11:48 EST 2023" docOffset="1106" starttimestamp="1700582044267" timestamp="19064630" />
  <Command __id="9861" _type="MoveCaretCommand" caretOffset="246" date="Tue Nov 21 16:11:50 EST 2023" docOffset="246" starttimestamp="1700582044267" timestamp="19065871" />
  <Command __id="9862" _type="MoveCaretCommand" caretOffset="246" date="Tue Nov 21 16:11:50 EST 2023" docOffset="246" starttimestamp="1700582044267" timestamp="19065871" />
  <Command __id="9863" _type="MoveCaretCommand" caretOffset="841" date="Tue Nov 21 16:11:52 EST 2023" docOffset="841" starttimestamp="1700582044267" timestamp="19068078" />
  <Command __id="9864" _type="MoveCaretCommand" caretOffset="841" date="Tue Nov 21 16:11:52 EST 2023" docOffset="841" starttimestamp="1700582044267" timestamp="19068078" />
  <Command __id="9865" _type="MoveCaretCommand" caretOffset="947" date="Tue Nov 21 16:11:57 EST 2023" docOffset="947" starttimestamp="1700582044267" timestamp="19073588" />
  <Command __id="9866" _type="MoveCaretCommand" caretOffset="947" date="Tue Nov 21 16:11:57 EST 2023" docOffset="947" starttimestamp="1700582044267" timestamp="19073588" />
  <Command __id="9849" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:11:40 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19056601">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9859" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:11:48 EST 2023" docASTNodeCount="195" docActiveCodeLength="1139" docExpressionCount="154" docLength="1139" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19064593">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail().getHead();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + expr.getTail().getHead());		if(!expr.getTail().getHead().isAtom()) {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="9867" _type="MoveCaretCommand" caretOffset="841" date="Tue Nov 21 16:12:22 EST 2023" docOffset="841" starttimestamp="1700582044267" timestamp="19097746" />
  <Command __id="9868" _type="MoveCaretCommand" caretOffset="841" date="Tue Nov 21 16:12:22 EST 2023" docOffset="841" starttimestamp="1700582044267" timestamp="19097747" />
  <Command __id="9870" _type="InsertStringCommand" date="Tue Nov 21 16:12:23 EST 2023" starttimestamp="1700582044267" timestamp="19098858" timestamp2="19098858">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9871" _type="InsertStringCommand" date="Tue Nov 21 16:12:23 EST 2023" starttimestamp="1700582044267" timestamp="19098858" timestamp2="19098858">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="9873" _type="InsertStringCommand" date="Tue Nov 21 16:12:23 EST 2023" starttimestamp="1700582044267" timestamp="19099276" timestamp2="19099276">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9874" _type="InsertStringCommand" date="Tue Nov 21 16:12:23 EST 2023" starttimestamp="1700582044267" timestamp="19099276" timestamp2="19099276">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="9876" _type="InsertStringCommand" date="Tue Nov 21 16:12:23 EST 2023" starttimestamp="1700582044267" timestamp="19099508" timestamp2="19099508">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9877" _type="InsertStringCommand" date="Tue Nov 21 16:12:23 EST 2023" starttimestamp="1700582044267" timestamp="19099508" timestamp2="19099508">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9879" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100036" timestamp2="19100036">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9880" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100036" timestamp2="19100036">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9882" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100150" timestamp2="19100150">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9883" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100150" timestamp2="19100150">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9885" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100242" timestamp2="19100242">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9886" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100242" timestamp2="19100242">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9888" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100377" timestamp2="19100377">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9889" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100377" timestamp2="19100377">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9891" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100573" timestamp2="19100573">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9892" _type="InsertStringCommand" date="Tue Nov 21 16:12:24 EST 2023" starttimestamp="1700582044267" timestamp="19100573" timestamp2="19100573">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9894" _type="InsertStringCommand" date="Tue Nov 21 16:12:25 EST 2023" starttimestamp="1700582044267" timestamp="19101170" timestamp2="19101170">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9895" _type="InsertStringCommand" date="Tue Nov 21 16:12:25 EST 2023" starttimestamp="1700582044267" timestamp="19101170" timestamp2="19101170">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9897" _type="InsertStringCommand" date="Tue Nov 21 16:12:25 EST 2023" starttimestamp="1700582044267" timestamp="19101250" timestamp2="19101250">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9898" _type="InsertStringCommand" date="Tue Nov 21 16:12:25 EST 2023" starttimestamp="1700582044267" timestamp="19101250" timestamp2="19101250">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9900" _type="InsertStringCommand" date="Tue Nov 21 16:12:25 EST 2023" starttimestamp="1700582044267" timestamp="19101337" timestamp2="19101337">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9901" _type="InsertStringCommand" date="Tue Nov 21 16:12:25 EST 2023" starttimestamp="1700582044267" timestamp="19101337" timestamp2="19101337">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9903" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102057" timestamp2="19102057">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="9904" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102057" timestamp2="19102057">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="9906" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102283" timestamp2="19102283">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9907" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102284" timestamp2="19102284">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9909" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102462" timestamp2="19102462">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9910" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102462" timestamp2="19102462">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9912" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102629" timestamp2="19102629">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9913" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102629" timestamp2="19102629">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9915" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102717" timestamp2="19102717">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9916" _type="InsertStringCommand" date="Tue Nov 21 16:12:26 EST 2023" starttimestamp="1700582044267" timestamp="19102717" timestamp2="19102717">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9918" _type="InsertStringCommand" date="Tue Nov 21 16:12:27 EST 2023" starttimestamp="1700582044267" timestamp="19102825" timestamp2="19102825">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9919" _type="InsertStringCommand" date="Tue Nov 21 16:12:27 EST 2023" starttimestamp="1700582044267" timestamp="19102825" timestamp2="19102825">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9921" _type="InsertStringCommand" date="Tue Nov 21 16:12:27 EST 2023" starttimestamp="1700582044267" timestamp="19102968" timestamp2="19102968">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9922" _type="InsertStringCommand" date="Tue Nov 21 16:12:27 EST 2023" starttimestamp="1700582044267" timestamp="19102969" timestamp2="19102969">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9923" _type="MoveCaretCommand" caretOffset="134" date="Tue Nov 21 16:12:30 EST 2023" docOffset="134" starttimestamp="1700582044267" timestamp="19106590" />
  <Command __id="9924" _type="MoveCaretCommand" caretOffset="134" date="Tue Nov 21 16:12:30 EST 2023" docOffset="134" starttimestamp="1700582044267" timestamp="19106590" />
  <Command __id="9925" _type="SelectTextCommand" caretOffset="141" date="Tue Nov 21 16:12:30 EST 2023" end="141" start="124" starttimestamp="1700582044267" timestamp="19106721" />
  <Command __id="9926" _type="SelectTextCommand" caretOffset="141" date="Tue Nov 21 16:12:30 EST 2023" end="141" start="124" starttimestamp="1700582044267" timestamp="19106721" />
  <Command __id="9927" _type="CopyCommand" date="Tue Nov 21 16:12:31 EST 2023" starttimestamp="1700582044267" timestamp="19106840" />
  <Command __id="9928" _type="MoveCaretCommand" caretOffset="854" date="Tue Nov 21 16:12:31 EST 2023" docOffset="854" starttimestamp="1700582044267" timestamp="19107554" />
  <Command __id="9929" _type="MoveCaretCommand" caretOffset="854" date="Tue Nov 21 16:12:31 EST 2023" docOffset="854" starttimestamp="1700582044267" timestamp="19107554" />
  <Command __id="9930" _type="SelectTextCommand" caretOffset="861" date="Tue Nov 21 16:12:31 EST 2023" end="861" start="845" starttimestamp="1700582044267" timestamp="19107696" />
  <Command __id="9931" _type="SelectTextCommand" caretOffset="861" date="Tue Nov 21 16:12:31 EST 2023" end="861" start="845" starttimestamp="1700582044267" timestamp="19107697" />
  <Command __id="9933" _type="PasteCommand" date="Tue Nov 21 16:12:32 EST 2023" starttimestamp="1700582044267" timestamp="19107782" />
  <Command __id="9934" _type="MoveCaretCommand" caretOffset="863" date="Tue Nov 21 16:12:32 EST 2023" docOffset="863" starttimestamp="1700582044267" timestamp="19108100" />
  <Command __id="9935" _type="MoveCaretCommand" caretOffset="863" date="Tue Nov 21 16:12:32 EST 2023" docOffset="863" starttimestamp="1700582044267" timestamp="19108100" />
  <Command __id="9937" _type="InsertStringCommand" date="Tue Nov 21 16:12:32 EST 2023" starttimestamp="1700582044267" timestamp="19108687" timestamp2="19108687">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9938" _type="InsertStringCommand" date="Tue Nov 21 16:12:32 EST 2023" starttimestamp="1700582044267" timestamp="19108687" timestamp2="19108687">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9940" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19108904" timestamp2="19108904">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9941" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19108905" timestamp2="19108905">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="9943" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109168" timestamp2="19109168">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9944" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109168" timestamp2="19109168">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="9946" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109377" timestamp2="19109377">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9947" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109377" timestamp2="19109377">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9949" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109388" timestamp2="19109388">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9950" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109388" timestamp2="19109388">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="9952" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109506" timestamp2="19109506">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9953" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109507" timestamp2="19109507">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9955" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109691" timestamp2="19109691">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9956" _type="InsertStringCommand" date="Tue Nov 21 16:12:33 EST 2023" starttimestamp="1700582044267" timestamp="19109692" timestamp2="19109692">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="9958" _type="InsertStringCommand" date="Tue Nov 21 16:12:34 EST 2023" starttimestamp="1700582044267" timestamp="19109890" timestamp2="19109890">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9959" _type="InsertStringCommand" date="Tue Nov 21 16:12:34 EST 2023" starttimestamp="1700582044267" timestamp="19109890" timestamp2="19109890">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="9961" _type="InsertStringCommand" date="Tue Nov 21 16:12:34 EST 2023" starttimestamp="1700582044267" timestamp="19109903" timestamp2="19109903">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9962" _type="InsertStringCommand" date="Tue Nov 21 16:12:34 EST 2023" starttimestamp="1700582044267" timestamp="19109903" timestamp2="19109903">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9964" _type="InsertStringCommand" date="Tue Nov 21 16:12:34 EST 2023" starttimestamp="1700582044267" timestamp="19109956" timestamp2="19109956">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9965" _type="InsertStringCommand" date="Tue Nov 21 16:12:34 EST 2023" starttimestamp="1700582044267" timestamp="19109956" timestamp2="19109956">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="9967" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19110803" timestamp2="19110803">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="9968" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19110803" timestamp2="19110803">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="9970" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19110999" timestamp2="19110999">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9971" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19110999" timestamp2="19110999">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="9973" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111177" timestamp2="19111177">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9974" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111177" timestamp2="19111177">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="9976" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111316" timestamp2="19111316">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9977" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111316" timestamp2="19111316">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="9979" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111419" timestamp2="19111419">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9980" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111419" timestamp2="19111419">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="9982" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111533" timestamp2="19111533">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9983" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111533" timestamp2="19111533">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="9985" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111608" timestamp2="19111608">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9986" _type="InsertStringCommand" date="Tue Nov 21 16:12:35 EST 2023" starttimestamp="1700582044267" timestamp="19111608" timestamp2="19111608">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9988" _type="InsertStringCommand" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19111807" timestamp2="19111807">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9989" _type="InsertStringCommand" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19111807" timestamp2="19111807">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9991" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19112142" />
  <Command __id="9992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19112143" />
  <Command __id="9994" _type="InsertStringCommand" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19112347" timestamp2="19112347">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="9995" _type="InsertStringCommand" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19112347" timestamp2="19112347">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="9997" _type="InsertStringCommand" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19112482" timestamp2="19112482">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9998" _type="InsertStringCommand" date="Tue Nov 21 16:12:36 EST 2023" starttimestamp="1700582044267" timestamp="19112482" timestamp2="19112482">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="9999" _type="ShellCommand" date="Tue Nov 21 16:12:38 EST 2023" starttimestamp="1700582044267" timestamp="19113836" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10000" _type="ShellCommand" date="Tue Nov 21 16:12:38 EST 2023" starttimestamp="1700582044267" timestamp="19114432" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10002" _type="SelectTextCommand" caretOffset="137" date="Tue Nov 21 16:12:39 EST 2023" end="185" start="137" starttimestamp="1700582044267" timestamp="19115424" />
  <Command __id="10003" _type="ShellCommand" date="Tue Nov 21 16:12:41 EST 2023" starttimestamp="1700582044267" timestamp="19117074" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10004" _type="ShellCommand" date="Tue Nov 21 16:12:42 EST 2023" starttimestamp="1700582044267" timestamp="19117865" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10005" _type="ShellCommand" date="Tue Nov 21 16:12:44 EST 2023" starttimestamp="1700582044267" timestamp="19119836" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10006" _type="ShellCommand" date="Tue Nov 21 16:12:44 EST 2023" starttimestamp="1700582044267" timestamp="19120554" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10008" _type="MoveCaretCommand" caretOffset="158" date="Tue Nov 21 16:12:45 EST 2023" docOffset="239" starttimestamp="1700582044267" timestamp="19121389" />
  <Command __id="10010" _type="MoveCaretCommand" caretOffset="882" date="Tue Nov 21 16:12:46 EST 2023" docOffset="882" starttimestamp="1700582044267" timestamp="19122358" />
  <DocumentChange __id="9869" _type="Insert" date="Tue Nov 21 16:12:23 EST 2023" docASTNodeCount="197" docActiveCodeLength="1160" docExpressionCount="155" docLength="1160" length="21" offset="841" repeat="18" starttimestamp="1700582044267" timestamp="19098854" timestamp2="19102967">
    <text><![CDATA[
			ExpressionFactor ]]></text>
  </DocumentChange>
  <DocumentChange __id="9932" _type="Replace" date="Tue Nov 21 16:12:32 EST 2023" docASTNodeCount="197" docActiveCodeLength="1161" docExpressionCount="155" docLength="1161" endLine="26" insertionLength="20" int_docASTNodeCount="195" int_docActiveCodeLength="1141" int_docExpressionCount="154" int_docLength="1141" length="19" offset="842" startLine="26" starttimestamp="1700582044267" timestamp="19107780">
    <deletedText><![CDATA[			ExpressionFactor]]></deletedText>
    <insertedText><![CDATA[			ExpressionFactory]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="9936" _type="Insert" date="Tue Nov 21 16:12:32 EST 2023" docASTNodeCount="200" docActiveCodeLength="1179" docExpressionCount="156" docLength="1179" length="18" offset="863" repeat="18" starttimestamp="1700582044267" timestamp="19108685" timestamp2="19111805">
    <text><![CDATA[expressionFactor  ]]></text>
  </DocumentChange>
  <DocumentChange __id="9990" _type="Delete" date="Tue Nov 21 16:12:36 EST 2023" docASTNodeCount="200" docActiveCodeLength="1178" docExpressionCount="156" docLength="1178" endLine="26" length="1" offset="880" startLine="26" starttimestamp="1700582044267" timestamp="19112140">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="9993" _type="Insert" date="Tue Nov 21 16:12:36 EST 2023" docASTNodeCount="199" docActiveCodeLength="1180" docExpressionCount="156" docLength="1180" length="2" offset="880" repeat="2" starttimestamp="1700582044267" timestamp="19112345" timestamp2="19112479">
    <text><![CDATA[= ]]></text>
  </DocumentChange>
  <Command __id="10001" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:12:39 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19115382">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="10007" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:12:45 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19121349">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="10009" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:12:46 EST 2023" docASTNodeCount="199" docActiveCodeLength="1180" docExpressionCount="156" docLength="1180" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19122319">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail().getHead();		return evalHelper(expr, environment);			}		public static SExpression evalHelper(SExpression expr, Environment environment) {		System.out.println("expr: " + expr);		if(expr.isAtom()) {			return expr;		}		System.out.println("exprTail: " + expr.getTail());		System.out.println("exprHead: " + expr.getHead());		System.out.println("exprTailHead: " + expr.getTail().getHead());		if(!expr.getTail().getHead().isAtom()) {			"), Diff(INSERT,"ExpressionFactory expressionFactor = 			"), Diff(EQUAL,"return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail().getHead();
		return evalHelper(expr, environment);
		
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		System.out.println("expr: " + expr);
		if(expr.isAtom()) {
			return expr;
		}
		System.out.println("exprTail: " + expr.getTail());
		System.out.println("exprHead: " + expr.getHead());
		System.out.println("exprTailHead: " + expr.getTail().getHead());
		if(!expr.getTail().getHead().isAtom()) {
			ExpressionFactory expressionFactor = 
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(evalHelper(expr.getTail().getHead(), environment), environment);
		}else {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="10011" _type="SelectTextCommand" caretOffset="845" date="Tue Nov 21 16:12:48 EST 2023" end="882" start="845" starttimestamp="1700582044267" timestamp="19124250" />
  <Command __id="10012" _type="SelectTextCommand" caretOffset="845" date="Tue Nov 21 16:12:48 EST 2023" end="882" start="845" starttimestamp="1700582044267" timestamp="19124250" />
  <DocumentChange __id="10013" _type="Replace" date="Tue Nov 21 16:12:49 EST 2023" docASTNodeCount="197" docActiveCodeLength="1144" docExpressionCount="155" docLength="1144" endLine="26" insertionLength="1" int_docASTNodeCount="195" int_docActiveCodeLength="1143" int_docExpressionCount="154" int_docLength="1143" length="37" offset="845" startLine="26" starttimestamp="1700582044267" timestamp="19125711">
    <deletedText><![CDATA[ExpressionFactory expressionFactor = ]]></deletedText>
    <insertedText><![CDATA[E]]></insertedText>
  </DocumentChange>
  <Command __id="10014" _type="InsertStringCommand" date="Tue Nov 21 16:12:49 EST 2023" starttimestamp="1700582044267" timestamp="19125716" timestamp2="19125716">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="10015" _type="InsertStringCommand" date="Tue Nov 21 16:12:49 EST 2023" starttimestamp="1700582044267" timestamp="19125716" timestamp2="19125716">
    <data><![CDATA[E]]></data>
  </Command>
  <DocumentChange __id="10016" _type="Delete" date="Tue Nov 21 16:12:51 EST 2023" docASTNodeCount="195" docActiveCodeLength="1143" docExpressionCount="154" docLength="1143" endLine="26" length="1" offset="845" startLine="26" starttimestamp="1700582044267" timestamp="19127360">
    <text><![CDATA[E]]></text>
  </DocumentChange>
  <Command __id="10017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:51 EST 2023" starttimestamp="1700582044267" timestamp="19127363" />
  <Command __id="10018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:51 EST 2023" starttimestamp="1700582044267" timestamp="19127363" />
  <Command __id="10020" _type="InsertStringCommand" date="Tue Nov 21 16:12:51 EST 2023" starttimestamp="1700582044267" timestamp="19127499" timestamp2="19127499">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="10021" _type="InsertStringCommand" date="Tue Nov 21 16:12:51 EST 2023" starttimestamp="1700582044267" timestamp="19127499" timestamp2="19127499">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="10023" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19127768" timestamp2="19127768">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="10024" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19127768" timestamp2="19127768">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="10026" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128157" timestamp2="19128157">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10027" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128157" timestamp2="19128157">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10029" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128383" timestamp2="19128383">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10030" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128383" timestamp2="19128383">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10032" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128504" timestamp2="19128504">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10033" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128504" timestamp2="19128504">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10035" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128561" timestamp2="19128561">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10036" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128562" timestamp2="19128562">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10038" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128675" timestamp2="19128675">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10039" _type="InsertStringCommand" date="Tue Nov 21 16:12:52 EST 2023" starttimestamp="1700582044267" timestamp="19128675" timestamp2="19128675">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10041" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19128847" timestamp2="19128847">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10042" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19128847" timestamp2="19128847">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10044" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19128961" timestamp2="19128961">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="10045" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19128961" timestamp2="19128961">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="10047" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19129035" timestamp2="19129035">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="10048" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19129035" timestamp2="19129035">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="10050" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19129096" timestamp2="19129096">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="10051" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19129096" timestamp2="19129096">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="10053" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19129549" timestamp2="19129549">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="10054" _type="InsertStringCommand" date="Tue Nov 21 16:12:53 EST 2023" starttimestamp="1700582044267" timestamp="19129549" timestamp2="19129549">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="10056" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131084" timestamp2="19131084">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10057" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131084" timestamp2="19131084">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10059" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131296" timestamp2="19131296">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10060" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131296" timestamp2="19131296">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10062" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131427" timestamp2="19131427">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10063" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131427" timestamp2="19131427">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10065" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131489" timestamp2="19131489">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10066" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131489" timestamp2="19131489">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10068" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131545" timestamp2="19131545">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10069" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131545" timestamp2="19131545">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10071" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131622" timestamp2="19131622">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10072" _type="InsertStringCommand" date="Tue Nov 21 16:12:55 EST 2023" starttimestamp="1700582044267" timestamp="19131622" timestamp2="19131622">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10074" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19131803" timestamp2="19131803">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10075" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19131803" timestamp2="19131803">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10077" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19131911" timestamp2="19131911">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="10078" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19131911" timestamp2="19131911">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="10080" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19131983" timestamp2="19131983">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="10081" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19131983" timestamp2="19131983">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="10083" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132057" timestamp2="19132057">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="10084" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132057" timestamp2="19132057">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="10086" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132283" timestamp2="19132283">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="10087" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132283" timestamp2="19132283">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="10089" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132372" timestamp2="19132372">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="10090" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132372" timestamp2="19132372">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="10092" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132508" timestamp2="19132508">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="10093" _type="InsertStringCommand" date="Tue Nov 21 16:12:56 EST 2023" starttimestamp="1700582044267" timestamp="19132508" timestamp2="19132508">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="10095" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133018" timestamp2="19133018">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="10096" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133018" timestamp2="19133018">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="10098" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133242" timestamp2="19133242">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10099" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133242" timestamp2="19133242">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10101" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133434" timestamp2="19133434">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10102" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133434" timestamp2="19133434">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10104" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133571" timestamp2="19133571">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10105" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133571" timestamp2="19133571">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10107" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133618" timestamp2="19133618">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10108" _type="InsertStringCommand" date="Tue Nov 21 16:12:57 EST 2023" starttimestamp="1700582044267" timestamp="19133618" timestamp2="19133618">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10110" _type="InsertStringCommand" date="Tue Nov 21 16:12:58 EST 2023" starttimestamp="1700582044267" timestamp="19133739" timestamp2="19133739">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10111" _type="InsertStringCommand" date="Tue Nov 21 16:12:58 EST 2023" starttimestamp="1700582044267" timestamp="19133739" timestamp2="19133739">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10113" _type="InsertStringCommand" date="Tue Nov 21 16:12:58 EST 2023" starttimestamp="1700582044267" timestamp="19133919" timestamp2="19133919">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10114" _type="InsertStringCommand" date="Tue Nov 21 16:12:58 EST 2023" starttimestamp="1700582044267" timestamp="19133919" timestamp2="19133919">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="10116" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:58 EST 2023" starttimestamp="1700582044267" timestamp="19134682" />
  <Command __id="10117" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:58 EST 2023" starttimestamp="1700582044267" timestamp="19134682" />
  <Command __id="10119" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19134798" />
  <Command __id="10120" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19134798" />
  <Command __id="10122" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19134922" />
  <Command __id="10123" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19134923" />
  <Command __id="10125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135044" />
  <Command __id="10126" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135044" />
  <DocumentChange __id="10019" _type="Insert" date="Tue Nov 21 16:12:51 EST 2023" docASTNodeCount="201" docActiveCodeLength="1175" docExpressionCount="157" docLength="1175" length="32" offset="845" repeat="32" starttimestamp="1700582044267" timestamp="19127497" timestamp2="19133917">
    <text><![CDATA[SExpression expression = Express]]></text>
  </DocumentChange>
  <DocumentChange __id="10115" _type="Delete" date="Tue Nov 21 16:12:58 EST 2023" docASTNodeCount="199" docActiveCodeLength="1168" docExpressionCount="156" docLength="1168" endLine="26" length="7" offset="870" repeat="7" startLine="26" starttimestamp="1700582044267" timestamp="19134680" timestamp2="19135456">
    <text><![CDATA[Express]]></text>
  </DocumentChange>
  <DocumentChange __id="10136" _type="Insert" date="Tue Nov 21 16:12:59 EST 2023" docASTNodeCount="152" docActiveCodeLength="1189" docExpressionCount="113" docLength="1189" length="21" offset="870" repeat="5" starttimestamp="1700582044267" timestamp="19135563" timestamp2="19136838">
    <text><![CDATA[ExpressionFactory.new]]></text>
  </DocumentChange>
  <DocumentChange __id="10146" _type="Replace" date="Tue Nov 21 16:13:01 EST 2023" docASTNodeCount="205" docActiveCodeLength="1209" docExpressionCount="161" docLength="1209" endLine="26" insertionLength="23" int_docASTNodeCount="201" int_docActiveCodeLength="1186" int_docExpressionCount="158" int_docLength="1186" length="3" offset="888" startLine="26" starttimestamp="1700582044267" timestamp="19137042">
    <deletedText><![CDATA[new]]></deletedText>
    <insertedText><![CDATA[newInstance(expr, expr)]]></insertedText>
  </DocumentChange>
  <Command __id="10128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135177" />
  <Command __id="10129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135177" />
  <Command __id="10131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135301" />
  <Command __id="10132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135301" />
  <Command __id="10134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135457" />
  <Command __id="10135" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135457" />
  <Command __id="10137" _type="PasteCommand" date="Tue Nov 21 16:12:59 EST 2023" starttimestamp="1700582044267" timestamp="19135567" />
  <Command __id="10139" _type="InsertStringCommand" date="Tue Nov 21 16:13:00 EST 2023" starttimestamp="1700582044267" timestamp="19136147" timestamp2="19136147">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="10140" _type="InsertStringCommand" date="Tue Nov 21 16:13:00 EST 2023" starttimestamp="1700582044267" timestamp="19136147" timestamp2="19136147">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="10141" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:13:00 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="19136151" />
  <Command __id="10145" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:13:01 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="19137039" />
  <Command __id="10147" _type="InsertStringCommand" date="Tue Nov 21 16:13:01 EST 2023" starttimestamp="1700582044267" timestamp="19137069" timestamp2="19137069">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10148" _type="InsertStringCommand" date="Tue Nov 21 16:13:01 EST 2023" starttimestamp="1700582044267" timestamp="19137069" timestamp2="19137069">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10150" _type="InsertStringCommand" date="Tue Nov 21 16:13:03 EST 2023" starttimestamp="1700582044267" timestamp="19139427" timestamp2="19139427">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10151" _type="InsertStringCommand" date="Tue Nov 21 16:13:03 EST 2023" starttimestamp="1700582044267" timestamp="19139428" timestamp2="19139428">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="10153" _type="InsertStringCommand" date="Tue Nov 21 16:13:03 EST 2023" starttimestamp="1700582044267" timestamp="19139619" timestamp2="19139619">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10154" _type="InsertStringCommand" date="Tue Nov 21 16:13:03 EST 2023" starttimestamp="1700582044267" timestamp="19139619" timestamp2="19139619">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="10156" _type="InsertStringCommand" date="Tue Nov 21 16:13:04 EST 2023" starttimestamp="1700582044267" timestamp="19139735" timestamp2="19139735">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10157" _type="InsertStringCommand" date="Tue Nov 21 16:13:04 EST 2023" starttimestamp="1700582044267" timestamp="19139735" timestamp2="19139735">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="10159" _type="InsertStringCommand" date="Tue Nov 21 16:13:04 EST 2023" starttimestamp="1700582044267" timestamp="19139816" timestamp2="19139816">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10160" _type="InsertStringCommand" date="Tue Nov 21 16:13:04 EST 2023" starttimestamp="1700582044267" timestamp="19139816" timestamp2="19139816">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="10162" _type="InsertStringCommand" date="Tue Nov 21 16:13:04 EST 2023" starttimestamp="1700582044267" timestamp="19139954" timestamp2="19139954">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="10163" _type="InsertStringCommand" date="Tue Nov 21 16:13:04 EST 2023" starttimestamp="1700582044267" timestamp="19139954" timestamp2="19139954">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="10164" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Nov 21 16:13:04 EST 2023" start_end="START" starttimestamp="1700582044267" timestamp="19139961" />
  <Command __id="10169" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:13:05 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="19141639" />
  <Command __id="10171" _type="InsertStringCommand" date="Tue Nov 21 16:13:05 EST 2023" starttimestamp="1700582044267" timestamp="19141645" timestamp2="19141645">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10172" _type="InsertStringCommand" date="Tue Nov 21 16:13:05 EST 2023" starttimestamp="1700582044267" timestamp="19141645" timestamp2="19141645">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="10173" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Nov 21 16:13:06 EST 2023" start_end="END" starttimestamp="1700582044267" timestamp="19142609" />
  <Command __id="10174" _type="SelectTextCommand" caretOffset="1065" date="Tue Nov 21 16:13:14 EST 2023" end="1065" start="1016" starttimestamp="1700582044267" timestamp="19150544" />
  <Command __id="10175" _type="SelectTextCommand" caretOffset="1065" date="Tue Nov 21 16:13:14 EST 2023" end="1065" start="1016" starttimestamp="1700582044267" timestamp="19150544" />
  <Command __id="10177" _type="CutCommand" date="Tue Nov 21 16:13:15 EST 2023" starttimestamp="1700582044267" timestamp="19150842" />
  <Command __id="10178" _type="MoveCaretCommand" caretOffset="919" date="Tue Nov 21 16:13:17 EST 2023" docOffset="919" starttimestamp="1700582044267" timestamp="19153356" />
  <Command __id="10179" _type="MoveCaretCommand" caretOffset="919" date="Tue Nov 21 16:13:17 EST 2023" docOffset="919" starttimestamp="1700582044267" timestamp="19153357" />
  <Command __id="10180" _type="SelectTextCommand" caretOffset="920" date="Tue Nov 21 16:13:17 EST 2023" end="920" start="916" starttimestamp="1700582044267" timestamp="19153497" />
  <Command __id="10181" _type="SelectTextCommand" caretOffset="920" date="Tue Nov 21 16:13:17 EST 2023" end="920" start="916" starttimestamp="1700582044267" timestamp="19153497" />
  <Command __id="10183" _type="PasteCommand" date="Tue Nov 21 16:13:18 EST 2023" starttimestamp="1700582044267" timestamp="19153890" />
  <DocumentChange __id="10149" _type="Replace" date="Tue Nov 21 16:13:03 EST 2023" docASTNodeCount="205" docActiveCodeLength="1206" docExpressionCount="161" docLength="1206" endLine="26" insertionLength="1" int_docASTNodeCount="204" int_docActiveCodeLength="1205" int_docExpressionCount="160" int_docLength="1205" length="4" offset="900" startLine="26" starttimestamp="1700582044267" timestamp="19139422">
    <deletedText><![CDATA[expr]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="10152" _type="Insert" date="Tue Nov 21 16:13:03 EST 2023" docASTNodeCount="207" docActiveCodeLength="1214" docExpressionCount="163" docLength="1214" length="8" offset="901" repeat="8" starttimestamp="1700582044267" timestamp="19139619" timestamp2="19141069">
    <text><![CDATA[xpr.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="10170" _type="Replace" date="Tue Nov 21 16:13:05 EST 2023" docASTNodeCount="207" docActiveCodeLength="1219" docExpressionCount="163" docLength="1219" endLine="26" insertionLength="9" int_docASTNodeCount="206" int_docActiveCodeLength="1210" int_docExpressionCount="162" int_docLength="1210" length="4" offset="905" startLine="26" starttimestamp="1700582044267" timestamp="19141642">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="10176" _type="Delete" date="Tue Nov 21 16:13:15 EST 2023" docASTNodeCount="199" docActiveCodeLength="1170" docExpressionCount="155" docLength="1170" endLine="27" length="49" offset="1016" startLine="27" starttimestamp="1700582044267" timestamp="19150837">
    <text><![CDATA[evalHelper(expr.getTail().getHead(), environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="10182" _type="Replace" date="Tue Nov 21 16:13:18 EST 2023" docASTNodeCount="206" docActiveCodeLength="1215" docExpressionCount="162" docLength="1215" endLine="26" insertionLength="49" int_docASTNodeCount="197" int_docActiveCodeLength="1166" int_docExpressionCount="154" int_docLength="1166" length="4" offset="916" startLine="26" starttimestamp="1700582044267" timestamp="19153885">
    <deletedText><![CDATA[expr]]></deletedText>
    <insertedText><![CDATA[evalHelper(expr.getTail().getHead(), environment)]]></insertedText>
  </DocumentChange>
  <Command __id="10184" _type="MoveCaretCommand" caretOffset="966" date="Tue Nov 21 16:13:20 EST 2023" docOffset="966" starttimestamp="1700582044267" timestamp="19155975" />
  <Command __id="10185" _type="MoveCaretCommand" caretOffset="966" date="Tue Nov 21 16:13:20 EST 2023" docOffset="966" starttimestamp="1700582044267" timestamp="19155975" />
  <Command __id="10187" _type="InsertStringCommand" date="Tue Nov 21 16:13:21 EST 2023" starttimestamp="1700582044267" timestamp="19157156" timestamp2="19157156">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="10188" _type="InsertStringCommand" date="Tue Nov 21 16:13:21 EST 2023" starttimestamp="1700582044267" timestamp="19157156" timestamp2="19157156">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="10189" _type="MoveCaretCommand" caretOffset="912" date="Tue Nov 21 16:13:22 EST 2023" docOffset="912" starttimestamp="1700582044267" timestamp="19157974" />
  <Command __id="10190" _type="MoveCaretCommand" caretOffset="912" date="Tue Nov 21 16:13:22 EST 2023" docOffset="912" starttimestamp="1700582044267" timestamp="19157974" />
  <Command __id="10191" _type="MoveCaretCommand" caretOffset="905" date="Tue Nov 21 16:13:23 EST 2023" docOffset="905" starttimestamp="1700582044267" timestamp="19158747" />
  <Command __id="10192" _type="MoveCaretCommand" caretOffset="905" date="Tue Nov 21 16:13:23 EST 2023" docOffset="905" starttimestamp="1700582044267" timestamp="19158747" />
  <Command __id="10193" _type="MoveCaretCommand" caretOffset="862" date="Tue Nov 21 16:13:24 EST 2023" docOffset="862" starttimestamp="1700582044267" timestamp="19160409" />
  <Command __id="10194" _type="MoveCaretCommand" caretOffset="862" date="Tue Nov 21 16:13:24 EST 2023" docOffset="862" starttimestamp="1700582044267" timestamp="19160409" />
  <Command __id="10195" _type="SelectTextCommand" caretOffset="867" date="Tue Nov 21 16:13:24 EST 2023" end="867" start="857" starttimestamp="1700582044267" timestamp="19160565" />
  <Command __id="10196" _type="SelectTextCommand" caretOffset="867" date="Tue Nov 21 16:13:24 EST 2023" end="867" start="857" starttimestamp="1700582044267" timestamp="19160565" />
  <Command __id="10197" _type="CopyCommand" date="Tue Nov 21 16:13:24 EST 2023" starttimestamp="1700582044267" timestamp="19160674" />
  <Command __id="10198" _type="MoveCaretCommand" caretOffset="1062" date="Tue Nov 21 16:13:25 EST 2023" docOffset="1062" starttimestamp="1700582044267" timestamp="19161318" />
  <Command __id="10199" _type="MoveCaretCommand" caretOffset="1062" date="Tue Nov 21 16:13:25 EST 2023" docOffset="1062" starttimestamp="1700582044267" timestamp="19161319" />
  <Command __id="10201" _type="PasteCommand" date="Tue Nov 21 16:13:25 EST 2023" starttimestamp="1700582044267" timestamp="19161494" />
  <Command __id="10202" _type="MoveCaretCommand" caretOffset="798" date="Tue Nov 21 16:13:25 EST 2023" docOffset="798" starttimestamp="1700582044267" timestamp="19161687" />
  <Command __id="10203" _type="MoveCaretCommand" caretOffset="798" date="Tue Nov 21 16:13:25 EST 2023" docOffset="798" starttimestamp="1700582044267" timestamp="19161687" />
  <Command __id="10209" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:13:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19166652" type="Run" />
  <Command __id="10210" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:13:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19166652" type="Run" />
  <Command __id="10215" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:13:43 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19179577" type="Run" />
  <Command __id="10216" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:13:43 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19179577" type="Run" />
  <Command __id="10217" _type="ShellCommand" date="Tue Nov 21 16:13:46 EST 2023" starttimestamp="1700582044267" timestamp="19182083" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10218" _type="ShellCommand" date="Tue Nov 21 16:13:47 EST 2023" starttimestamp="1700582044267" timestamp="19183417" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10219" _type="MoveCaretCommand" caretOffset="664" date="Tue Nov 21 16:13:48 EST 2023" docOffset="664" starttimestamp="1700582044267" timestamp="19184028" />
  <Command __id="10220" _type="MoveCaretCommand" caretOffset="664" date="Tue Nov 21 16:13:48 EST 2023" docOffset="664" starttimestamp="1700582044267" timestamp="19184028" />
  <Command __id="10222" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 16:13:49 EST 2023" starttimestamp="1700582044267" timestamp="19184773" />
  <Command __id="10224" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 16:13:49 EST 2023" starttimestamp="1700582044267" timestamp="19185032" />
  <Command __id="10226" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 16:13:49 EST 2023" starttimestamp="1700582044267" timestamp="19185186" />
  <Command __id="10227" _type="MoveCaretCommand" caretOffset="583" date="Tue Nov 21 16:13:50 EST 2023" docOffset="583" starttimestamp="1700582044267" timestamp="19185790" />
  <Command __id="10228" _type="MoveCaretCommand" caretOffset="583" date="Tue Nov 21 16:13:50 EST 2023" docOffset="583" starttimestamp="1700582044267" timestamp="19185790" />
  <Command __id="10230" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 16:13:50 EST 2023" starttimestamp="1700582044267" timestamp="19185906" />
  <Command __id="10231" _type="MoveCaretCommand" caretOffset="582" date="Tue Nov 21 16:13:50 EST 2023" docOffset="582" starttimestamp="1700582044267" timestamp="19186162" />
  <Command __id="10232" _type="MoveCaretCommand" caretOffset="582" date="Tue Nov 21 16:13:50 EST 2023" docOffset="582" starttimestamp="1700582044267" timestamp="19186163" />
  <Command __id="10233" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 16:13:50 EST 2023" starttimestamp="1700582044267" timestamp="19186381" />
  <Command __id="10234" _type="EclipseCommand" commandID="" date="Tue Nov 21 16:13:50 EST 2023" starttimestamp="1700582044267" timestamp="19186482" />
  <Command __id="10235" _type="EclipseCommand" commandID="" date="Tue Nov 21 16:13:50 EST 2023" starttimestamp="1700582044267" timestamp="19186490" />
  <Command __id="10238" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:13:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19190175" type="Run" />
  <Command __id="10239" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:13:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19190175" type="Run" />
  <Command __id="10240" _type="ShellCommand" date="Tue Nov 21 16:13:54 EST 2023" starttimestamp="1700582044267" timestamp="19190471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10241" _type="ShellCommand" date="Tue Nov 21 16:13:56 EST 2023" starttimestamp="1700582044267" timestamp="19192569" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10242" _type="PasteCommand" date="Tue Nov 21 16:13:57 EST 2023" starttimestamp="1700582044267" timestamp="19192746" />
  <Command __id="10243" _type="ConsoleOutput" date="Tue Nov 21 16:13:57 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19193237" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"expr: (QUOTE (+ 1 2))¶exprTail: ((+ 1 2))¶exprHead: QUOTE¶exprTailHead: (+ 1 2)¶expr: (+ 1 2)¶exprTail: (1 2)¶exprHead: +¶exprTailHead: 1¶3"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10244" _type="ShellCommand" date="Tue Nov 21 16:13:57 EST 2023" starttimestamp="1700582044267" timestamp="19193713" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10245" _type="ShellCommand" date="Tue Nov 21 16:14:00 EST 2023" starttimestamp="1700582044267" timestamp="19196277" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10246" _type="PasteCommand" date="Tue Nov 21 16:14:00 EST 2023" starttimestamp="1700582044267" timestamp="19196483" />
  <Command __id="10247" _type="ConsoleOutput" date="Tue Nov 21 16:14:00 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19196678" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10248" _type="ShellCommand" date="Tue Nov 21 16:14:01 EST 2023" starttimestamp="1700582044267" timestamp="19197045" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10249" _type="ShellCommand" date="Tue Nov 21 16:14:03 EST 2023" starttimestamp="1700582044267" timestamp="19199207" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10250" _type="PasteCommand" date="Tue Nov 21 16:14:03 EST 2023" starttimestamp="1700582044267" timestamp="19199388" />
  <Command __id="10251" _type="ConsoleOutput" date="Tue Nov 21 16:14:03 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19199635" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"3¶")]]]></diff>
  </Command>
  <Command __id="10252" _type="ShellCommand" date="Tue Nov 21 16:14:04 EST 2023" starttimestamp="1700582044267" timestamp="19200340" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10253" _type="ShellCommand" date="Tue Nov 21 16:14:04 EST 2023" starttimestamp="1700582044267" timestamp="19200606" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10254" _type="ShellCommand" date="Tue Nov 21 16:14:05 EST 2023" starttimestamp="1700582044267" timestamp="19200919" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10255" _type="ShellCommand" date="Tue Nov 21 16:14:05 EST 2023" starttimestamp="1700582044267" timestamp="19201320" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10256" _type="ShellCommand" date="Tue Nov 21 16:14:05 EST 2023" starttimestamp="1700582044267" timestamp="19201522" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10262" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:14:25 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19221580" type="Run" />
  <Command __id="10263" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Nov 21 16:14:25 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19221580" type="Run" />
  <DocumentChange __id="10186" _type="Insert" date="Tue Nov 21 16:13:21 EST 2023" docASTNodeCount="206" docActiveCodeLength="1216" docExpressionCount="162" docLength="1216" length="1" offset="966" starttimestamp="1700582044267" timestamp="19157153">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="10200" _type="Insert" date="Tue Nov 21 16:13:25 EST 2023" docASTNodeCount="207" docActiveCodeLength="1226" docExpressionCount="163" docLength="1226" length="10" offset="1062" starttimestamp="1700582044267" timestamp="19161492">
    <text><![CDATA[expression]]></text>
  </DocumentChange>
  <DocumentChange __id="10221" _type="Delete" date="Tue Nov 21 16:13:49 EST 2023" docASTNodeCount="172" docActiveCodeLength="1053" docExpressionCount="131" docLength="1053" endLine="25" length="173" offset="626" repeat="3" startLine="22" starttimestamp="1700582044267" timestamp="19184767" timestamp2="19185184">
    <text><![CDATA[		System.out.println("exprTail: " + expr.getTail());
		System.out.println("exprHead: " + expr.getHead());
		System.out.println("exprTailHead: " + expr.getTail().getHead());
]]></text>
  </DocumentChange>
  <DocumentChange __id="10229" _type="Delete" date="Tue Nov 21 16:13:50 EST 2023" docASTNodeCount="163" docActiveCodeLength="1014" docExpressionCount="123" docLength="1014" endLine="19" length="39" offset="545" startLine="18" starttimestamp="1700582044267" timestamp="19185905">
    <text><![CDATA[		System.out.println("expr: " + expr);
]]></text>
  </DocumentChange>
  <Command __id="10264" _type="MoveCaretCommand" caretOffset="453" date="Tue Nov 21 16:14:27 EST 2023" docOffset="453" starttimestamp="1700582044267" timestamp="19223455" />
  <Command __id="10265" _type="MoveCaretCommand" caretOffset="453" date="Tue Nov 21 16:14:27 EST 2023" docOffset="453" starttimestamp="1700582044267" timestamp="19223455" />
  <Command __id="10267" _type="MoveCaretCommand" caretOffset="566" date="Tue Nov 21 16:14:29 EST 2023" docOffset="683" starttimestamp="1700582044267" timestamp="19224952" />
  <Command __id="10268" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue Nov 21 16:14:31 EST 2023" starttimestamp="1700582044267" timestamp="19227053" />
  <Command __id="10269" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 16:14:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19227162" type="Run" />
  <Command __id="10270" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 16:14:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19227162" type="Run" />
  <Command __id="10271" _type="ShellCommand" date="Tue Nov 21 16:14:31 EST 2023" starttimestamp="1700582044267" timestamp="19227608" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10272" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230115" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(“ONE” . 1)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10273" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230116" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10274" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230117" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10275" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230117" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10276" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230133" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10277" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230136" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10278" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230138" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10279" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230139" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10280" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230139" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10281" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230142" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10282" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230143" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10283" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230143" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10284" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230144" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10285" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230146" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10286" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230146" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10287" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230148" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10288" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230150" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10289" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230150" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10290" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230151" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10291" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230153" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10292" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230153" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶"), Diff(DELETE,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10293" _type="ConsoleOutput" date="Tue Nov 21 16:14:34 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19230155" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringDeepCheckerAdvanced,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10294" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233418" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanc"), Diff(INSERT,"execution time (ms):0¶Test Result:TestLispFileProvid"), Diff(EQUAL,"ed,100.0% complete,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,¶")]]]></diff>
  </Command>
  <Command __id="10295" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233421" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(2 . 3)
(5)
(5)
(5)
(5)
(5)
(5)
(5)
(1 2)
(1 2)
(1 2)
(1 2)
(1 2)
(1 2)
(1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶Test Result:T"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/t"), Diff(EQUAL,"est"), Diff(DELETE,"L"), Diff(INSERT,".l"), Diff(EQUAL,"isp"), Diff(DELETE,"FileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,""¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(1 2)¶(1 2)¶(1 2)¶(1 2)¶(1 2)¶(1 2)¶(1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10296" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233422" type="ConsoleOutput">
    <outputString><![CDATA[(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(2 . 3)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(5)¶(1 2)¶(1 2)¶(1 2)¶(1 2"), Diff(INSERT,"(3 4)¶(3 4)¶(3 4)¶(3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶("), Diff(DELETE,"1 2"), Diff(INSERT,"3 4"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="10297" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233422" type="ConsoleOutput">
    <outputString><![CDATA[3
3
3
3
3
3
3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)¶(3 4)"), Diff(INSERT,"3¶3¶3¶3¶3¶3¶3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10298" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233422" type="ConsoleOutput">
    <outputString><![CDATA[7
7
7
7
7
7
7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10299" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233422" type="ConsoleOutput">
    <outputString><![CDATA[2
2
2
2
2
2
2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10300" _type="LocalChecksRawCommand" date="Tue Nov 21 16:14:37 EST 2023" starttimestamp="1700582044267" timestamp="19233423">
    <CSVRow><![CDATA[245,Tue Nov 21 16:14:34 EST 2023,57,3,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced+ ListToStringCheckerBasic ListToStringDeepCheckerAdvanced+ ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(15.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(5.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10302" _type="LocalChecksRawCommand" date="Tue Nov 21 16:14:37 EST 2023" starttimestamp="1700582044267" timestamp="19233423">
    <CSVRow><![CDATA[245,Tue Nov 21 16:14:34 EST 2023,57,3,A5ToStringSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced+ ListToStringCheckerBasic ListToStringDeepCheckerAdvanced+ ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(15.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(5.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10301" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233423" type="ConsoleOutput">
    <outputString><![CDATA[3
3
3
3
3
3
3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10303" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233423" type="ConsoleOutput">
    <outputString><![CDATA[1
1
1
1
1
1
1
NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3¶3¶3¶3¶3¶3¶3"), Diff(INSERT,"1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10304" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233424" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1¶1¶1¶1¶1¶1¶1¶"), Diff(EQUAL,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="10305" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233424" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(INSERT,"T¶T¶T¶T¶T¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10306" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233424" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶T¶T¶T¶T¶T¶T¶")]]]></diff>
  </Command>
  <Command __id="10307" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233424" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T¶T¶T¶T¶T¶T¶T"), Diff(INSERT,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10308" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233425" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
NIL
NIL
NIL
NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶")]]]></diff>
  </Command>
  <Command __id="10309" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233425" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL"), Diff(INSERT,"T¶T¶T¶T¶T¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10310" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233426" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
NIL
NIL
NIL
NIL
NIL
NIL
NIL
2
2
2
2
2
2
2
4
4
4
4
4
4
4
NIL
NIL
NIL
NIL
NIL
NIL
NIL
1
1
1
1
1
1
1
NIL
NIL
NIL
NIL
NIL
NIL
NIL
2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶T¶T¶T¶T¶T¶T¶"), Diff(INSERT,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶2¶2¶2¶2¶2¶2¶4¶4¶4¶4¶4¶4¶4¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶1¶1¶1¶1¶1¶1¶1¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶")]]]></diff>
  </Command>
  <Command __id="10311" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233427" type="ConsoleOutput">
    <outputString><![CDATA[T
T
T
T
T
T
T
T
T
T
T
T
T
T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶T¶T¶T¶T¶T¶T¶"), Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2¶2¶2¶2¶2¶2¶2¶4¶4¶4¶4¶4¶4¶4¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶1¶1¶1¶1¶1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶"), Diff(DELETE,"NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶NIL¶2"), Diff(INSERT,"T¶T¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10312" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233427" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T¶T"), Diff(INSERT,"est execution time (ms):13"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10313" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233428" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):13"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10314" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233428" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10315" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233430" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10316" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233431" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10317" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233432" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10318" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233434" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="10319" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233434" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:ListTestedChecker,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="10320" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233435" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10321" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233435" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10322" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233437" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10323" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233437" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10324" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233438" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10325" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233439" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10326" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233441" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10327" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233442" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10328" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233442" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10329" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233443" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10330" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233444" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10331" _type="ConsoleOutput" date="Tue Nov 21 16:14:37 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19233445" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10332" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236511" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:AndTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:Cond"), Diff(INSERT,"execution time (ms):1¶"), Diff(EQUAL,"Test"), Diff(DELETE,"ed"), Diff(INSERT," "), Diff(EQUAL,"Result"), Diff(DELETE,"s"), Diff(INSERT,":AndTested"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10333" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236512" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:AndTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10334" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236513" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"And"), Diff(INSERT,"Not"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10335" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236514" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10336" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236517" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10337" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236518" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10338" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236519" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10339" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236520" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10340" _type="ConsoleOutput" date="Tue Nov 21 16:14:40 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19236521" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10341" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238132" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:O"), Diff(INSERT,"execution time (ms):1¶Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:Greate"), Diff(EQUAL,"rTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="10342" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238133" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="10343" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238133" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10344" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238135" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:LessTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="10345" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238136" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10346" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238137" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10347" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238137" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10348" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238139" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10349" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238139" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10350" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238142" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LorETestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10351" _type="ConsoleOutput" date="Tue Nov 21 16:14:42 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19238143" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LorETested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="10352" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241251" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10353" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241254" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ComparatorEvaluatorCodeReuse,50.0% complete,5.0,10.0,Partial model class code reuse 

Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):0
Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):4"), Diff(INSERT,"Test Result:ComparatorEvaluatorCodeReuse,50.0% complete,5.0,10.0,Partial model class code reuse ¶¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):0¶Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10354" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241255" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ComparatorEvaluatorCodeReuse,50.0% complete,5.0,10.0,Partial model class code reuse ¶¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):0¶Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10355" _type="LocalChecksRawCommand" date="Tue Nov 21 16:14:45 EST 2023" starttimestamp="1700582044267" timestamp="19241255">
    <CSVRow><![CDATA[248,Tue Nov 21 16:14:42 EST 2023,57,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,3,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10356" _type="LocalChecksRawCommand" date="Tue Nov 21 16:14:45 EST 2023" starttimestamp="1700582044267" timestamp="19241255">
    <CSVRow><![CDATA[248,Tue Nov 21 16:14:42 EST 2023,57,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,3,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10357" _type="LocalChecksRawCommand" date="Tue Nov 21 16:14:45 EST 2023" starttimestamp="1700582044267" timestamp="19241255">
    <CSVRow><![CDATA[249,Tue Nov 21 16:14:45 EST 2023,57,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,4,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10358" _type="LocalChecksRawCommand" date="Tue Nov 21 16:14:45 EST 2023" starttimestamp="1700582044267" timestamp="19241255">
    <CSVRow><![CDATA[249,Tue Nov 21 16:14:45 EST 2023,57,0,LispInterpreterLoadRelationSuite,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride ComparatorEvaluatorCodeReuse F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,4,true,GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker LorETestedChecker LorETestedTwoResultsChecker , , ,GorETestedChecker-(10.0/10.0) GorETestedTwoResultsChecker-(10.0/10.0) GreaterTestedChecker-(10.0/10.0) GreaterTestedTwoResultsChecker-(10.0/10.0) LessTestedChecker-(10.0/10.0) LessTestedTwoResultsChecker-(10.0/10.0) LorETestedChecker-(10.0/10.0) LorETestedTwoResultsChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10359" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241255" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10360" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241256" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10361" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241257" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10362" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241257" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10363" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241258" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10364" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241260" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:MainCallsSkeletonMain,0.0% complete,0.0,2.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:Main"), Diff(DELETE,"SetsExpressionFactory"), Diff(INSERT,"CallsSkeletonMain"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="10365" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241260" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0¶Test Result:MainCallsSkeletonMain,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10366" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241261" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsReadAllLines,0.0% complete,0.0,0.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadCallsReadAllLines,0.0% complete,0.0,0.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10367" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241261" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsReadAllLines,0.0% complete,0.0,0.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10368" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241262" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10369" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241262" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10370" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241263" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10371" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241263" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10372" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241264" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10373" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241264" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotCallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10374" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241265" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10375" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241265" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotCallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10376" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241267" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶"), Diff(EQUAL,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10377" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241267" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LTECalls"), Diff(DELETE,"T"), Diff(INSERT,"Nil"), Diff(EQUAL,"AtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10378" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241268" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10379" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241268" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10380" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241269" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10381" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241269" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10382" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241269" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10383" _type="ConsoleOutput" date="Tue Nov 21 16:14:45 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19241270" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10384" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243229" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages


Test execution time (ms):1
Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ToStringAsListHelperIsRecursive"), Diff(INSERT,"¶Test execution time (ms):1¶Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5Encapsulation"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10385" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243231" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):1¶Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5Encapsulation"), Diff(INSERT,"Test Result:A5NoHiddenFields"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10386" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243233" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):1
Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:A5No"), Diff(DELETE,"HiddenFields"), Diff(INSERT,"nPublicAccessModifiersMatched"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1¶Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10387" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243233" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10388" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243234" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10389" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243234" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10390" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243235" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10391" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243235" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10392" _type="ConsoleOutput" date="Tue Nov 21 16:14:47 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19243236" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10393" _type="ShellCommand" date="Tue Nov 21 16:15:25 EST 2023" starttimestamp="1700582044267" timestamp="19280827" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10394" _type="MoveCaretCommand" caretOffset="992" date="Tue Nov 21 16:15:25 EST 2023" docOffset="1109" starttimestamp="1700582044267" timestamp="19280895" />
  <Command __id="10395" _type="MoveCaretCommand" caretOffset="992" date="Tue Nov 21 16:15:25 EST 2023" docOffset="1109" starttimestamp="1700582044267" timestamp="19280895" />
  <Command __id="10396" _type="ShellCommand" date="Tue Nov 21 16:15:26 EST 2023" starttimestamp="1700582044267" timestamp="19282063" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10397" _type="ShellCommand" date="Tue Nov 21 16:15:29 EST 2023" starttimestamp="1700582044267" timestamp="19284855" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10398" _type="ShellCommand" date="Tue Nov 21 16:15:29 EST 2023" starttimestamp="1700582044267" timestamp="19285485" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10399" _type="ShellCommand" date="Tue Nov 21 16:15:29 EST 2023" starttimestamp="1700582044267" timestamp="19285707" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10400" _type="ShellCommand" date="Tue Nov 21 16:15:30 EST 2023" starttimestamp="1700582044267" timestamp="19285850" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10404" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 16:16:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19315885" type="Run" />
  <Command __id="10405" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 16:16:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19315885" type="Run" />
  <Command __id="10406" _type="LocalChecksRawCommand" date="Tue Nov 21 16:16:00 EST 2023" starttimestamp="1700582044267" timestamp="19315886">
    <CSVRow><![CDATA[252,Tue Nov 21 16:15:43 EST 2023,57,0,A5GeneralStyle,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ,ComparatorEvaluatorCodeReuse ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,7,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10407" _type="LocalChecksRawCommand" date="Tue Nov 21 16:16:00 EST 2023" starttimestamp="1700582044267" timestamp="19315886">
    <CSVRow><![CDATA[252,Tue Nov 21 16:15:43 EST 2023,57,0,A5GeneralStyle,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ,ComparatorEvaluatorCodeReuse ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,138,7,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="10408" _type="ShellCommand" date="Tue Nov 21 16:16:00 EST 2023" starttimestamp="1700582044267" timestamp="19316189" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10409" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321351" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10410" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321352" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10411" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321356" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10412" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321358" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10413" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321359" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):7¶")]]]></diff>
  </Command>
  <Command __id="10414" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321375" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10415" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321376" type="ConsoleOutput">
    <outputString><![CDATA[(2 . 3)
(5)
(1 2)
(3 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(2 . 3)¶(5)¶(1 2)¶(3 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10416" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321377" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2 . 3)¶(5)¶(1 2)¶(3 4)"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10417" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321377" type="ConsoleOutput">
    <outputString><![CDATA[7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10418" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321378" type="ConsoleOutput">
    <outputString><![CDATA[2
3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"7"), Diff(INSERT,"2¶3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10419" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321378" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶3"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10420" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321379" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10421" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321379" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="10422" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321379" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10423" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321379" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="10424" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321379" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10425" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321379" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="10426" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10427" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="10428" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10429" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[2
4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2¶4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10430" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶4"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10431" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10432" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10433" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321380" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10434" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321381" type="ConsoleOutput">
    <outputString><![CDATA[NIL
T
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"NIL¶T¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10435" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321385" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
Test Result:LoadChecker,100.0% complete,0.0,0.0,

Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):33¶Test Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶"), Diff(DELETE,"T"), Diff(EQUAL,"¶T"), Diff(INSERT,"est execution time (ms):34"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10436" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321386" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):33¶Test Result:Loa"), Diff(INSERT,"Result:GreaterTeste"), Diff(EQUAL,"dChecker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):34¶")]]]></diff>
  </Command>
  <Command __id="10437" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321387" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10438" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321388" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10439" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321388" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10440" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321389" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10441" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321390" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10442" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321391" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10443" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321392" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10444" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321392" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10445" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321393" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10446" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321394" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10447" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321394" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10448" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321395" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10449" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321396" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10450" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321397" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10451" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321403" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:AndTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:NotTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1¶Test Result:AndTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:NotTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10452" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321404" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1¶Test Result:AndTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:AndTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:NotTestedChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0"), Diff(INSERT,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10453" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321404" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotTestedTwoResultsChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10454" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321404" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:OrTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:OrTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10455" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321406" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:OrTestedTwoResultsChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:OrTested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10456" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321407" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Or"), Diff(INSERT,"Cons"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="10457" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321407" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10458" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321408" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10459" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321408" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10460" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321409" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10461" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321409" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10462" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321410" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10463" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321411" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10464" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321414" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:CondTestedChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="10465" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321414" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:Con"), Diff(DELETE,"d"), Diff(INSERT,"s"), Diff(EQUAL,"Tested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="10466" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321414" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10467" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321415" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10468" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321416" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10469" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321416" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10470" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321417" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10471" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321417" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10472" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321418" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10473" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321418" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10474" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321421" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:CondTestedResultsChecker,100.0% complete,20.0,20.0,"), Diff(INSERT,"(5 . 2)¶(5 . 2)¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10475" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321422" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)¶(5 . 2)¶Test execution time (ms):2"), Diff(INSERT,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10476" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321423" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10477" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321423" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10478" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321424" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10479" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321427" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"BaseCase"), Diff(EQUAL,"ListToStringChecker"), Diff(INSERT,"Basic"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶")]]]></diff>
  </Command>
  <Command __id="10480" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321429" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2¶Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,""a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10481" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321429" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10482" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321430" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10483" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321431" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,100.0% complete,15.0,15.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10484" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321432" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10485" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321432" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10486" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321434" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
("a" (1 . 2) (1 T))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10487" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321434" type="ConsoleOutput">
    <outputString><![CDATA[("a" (1 . 2) (1 T))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("a" (1 . 2) (1 T))¶"), Diff(DELETE,"("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))¶("a" (1 . 2) (1 T))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10488" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321435" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("a" (1 . 2) (1 T))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringDeepCheckerAdvanced,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10489" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321436" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,100.0% complete,5.0,5.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10490" _type="ConsoleOutput" date="Tue Nov 21 16:16:05 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19321438" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ComparatorEvaluatorCodeReuse,50.0% complete,5.0,10.0,Partial model class code reuse 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ComparatorEvaluatorCodeReuse,50.0% complete,5.0,10.0,Partial model class code reuse "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10491" _type="ShellCommand" date="Tue Nov 21 16:16:07 EST 2023" starttimestamp="1700582044267" timestamp="19323152" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10492" _type="ShellCommand" date="Tue Nov 21 16:16:29 EST 2023" starttimestamp="1700582044267" timestamp="19345184" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10493" _type="ConsoleOutput" date="Tue Nov 21 16:16:46 EST 2023" overflow="false" starttimestamp="1700582044267" timestamp="19361892" type="ConsoleOutput">
    <outputString><![CDATA[Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):1
Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ComparatorEvaluatorCodeReuse,5"), Diff(INSERT,"Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶Test Result:MainCallsOperationRegisterer,"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,"), Diff(DELETE,"10"), Diff(INSERT,"2"), Diff(EQUAL,".0,"), Diff(DELETE,"Partial model class code reuse "), Diff(INSERT,"No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="10494" _type="ShellCommand" date="Tue Nov 21 16:16:51 EST 2023" starttimestamp="1700582044267" timestamp="19367022" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10495" _type="ShellCommand" date="Tue Nov 21 16:16:57 EST 2023" starttimestamp="1700582044267" timestamp="19373245" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10496" _type="ShellCommand" date="Tue Nov 21 16:16:58 EST 2023" starttimestamp="1700582044267" timestamp="19374243" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10497" _type="ShellCommand" date="Tue Nov 21 16:17:01 EST 2023" starttimestamp="1700582044267" timestamp="19377366" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10498" _type="ShellCommand" date="Tue Nov 21 16:17:17 EST 2023" starttimestamp="1700582044267" timestamp="19393456" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10499" _type="EclipseCommand" commandID="org.eclipse.ui.file.properties" date="Tue Nov 21 16:17:17 EST 2023" starttimestamp="1700582044267" timestamp="19393458" />
  <Command __id="10500" _type="ShellCommand" date="Tue Nov 21 16:17:20 EST 2023" starttimestamp="1700582044267" timestamp="19396436" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10500" _type="ShellCommand" date="Tue Nov 21 16:17:20 EST 2023" starttimestamp="1700582044267" timestamp="19396436" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10501" _type="ShellCommand" date="Tue Nov 21 16:17:23 EST 2023" starttimestamp="1700582044267" timestamp="19398944" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10502" _type="EclipseCommand" commandID="org.eclipse.ui.file.properties" date="Tue Nov 21 16:17:23 EST 2023" starttimestamp="1700582044267" timestamp="19398948" />
  <Command __id="10266" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 16:14:29 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700582044267" timestamp="19224906">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
