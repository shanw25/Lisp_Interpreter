<Events startTimestamp="1701878487122" logVersion="1.0.0.202308221630">
  <Command __id="1" _type="ShellCommand" date="Wed Dec 06 11:01:27 EST 2023" starttimestamp="1701878487122" timestamp="80" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2" _type="MoveCaretCommand" caretOffset="502" date="Wed Dec 06 11:01:27 EST 2023" docOffset="785" starttimestamp="1701878487122" timestamp="222" />
  <Command __id="3" _type="ShellCommand" date="Wed Dec 06 11:01:28 EST 2023" starttimestamp="1701878487122" timestamp="1514" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4" _type="EclipseCommand" commandID="org.eclipse.oomph.setup.donate" date="Wed Dec 06 11:01:32 EST 2023" starttimestamp="1701878487122" timestamp="5837" />
  <Command __id="6" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Wed Dec 06 11:02:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="55220" type="Run" />
  <Command __id="7" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Wed Dec 06 11:02:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="55220" type="Run" />
  <Command __id="8" _type="ShellCommand" date="Wed Dec 06 11:02:22 EST 2023" starttimestamp="1701878487122" timestamp="55780" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60530" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="10" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60540" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="11" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60542" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):8
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):6¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):8¶Test Result:MainClass"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="12" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60567" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):37
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"37"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="13" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60569" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):38
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="14" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60570" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):38¶")]]]></diff>
  </Command>
  <Command __id="15" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60571" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="16" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60572" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="17" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60574" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="18" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60575" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="19" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60576" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="20" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60578" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="21" _type="ConsoleOutput" date="Wed Dec 06 11:02:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="60581" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:VariableArgument"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="22" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62172" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"VariableArgumentOr"), Diff(INSERT,"LispLambda"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="23" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62175" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:LispLambdaChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="24" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62176" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="25" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62178" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="26" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62180" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="27" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62181" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="28" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62182" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="29" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62183" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="30" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62184" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="31" _type="ConsoleOutput" date="Wed Dec 06 11:02:29 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="62186" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="32" _type="ConsoleOutput" date="Wed Dec 06 11:02:32 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="65432" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLambda"), Diff(INSERT,"Greater"), Diff(EQUAL,"Checker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="33" _type="ConsoleOutput" date="Wed Dec 06 11:02:32 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="65434" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:Greater"), Diff(INSERT,"OrEqual"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="34" _type="ConsoleOutput" date="Wed Dec 06 11:02:32 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="65436" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"GreaterOrEqual"), Diff(INSERT,"Less"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="35" _type="ConsoleOutput" date="Wed Dec 06 11:02:32 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="65438" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="36" _type="ConsoleOutput" date="Wed Dec 06 11:02:32 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="65439" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="37" _type="ConsoleOutput" date="Wed Dec 06 11:02:34 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="67632" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="38" _type="ConsoleOutput" date="Wed Dec 06 11:02:34 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="67635" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:DerivedSafeChecker,100.0% complete,30.0,30.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:DerivedSafeChecker,100.0% complete,30.0,30.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="39" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70370" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:CondChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"DerivedSafe"), Diff(INSERT,"Cond"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="40" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70374" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:QuoteChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"A6Extra"), Diff(EQUAL,"CondChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0¶Test Result:QuoteChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="41" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70375" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:QuoteChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="42" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70376" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:EvalChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="43" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70377" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"List"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="44" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70380" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="45" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70380" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker2,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListChecker2,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="46" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70381" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListChecker2,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="47" _type="ConsoleOutput" date="Wed Dec 06 11:02:37 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="70383" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CombinationChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CombinationChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="48" _type="ConsoleOutput" date="Wed Dec 06 11:02:39 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="72430" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LispSetqChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Combination"), Diff(INSERT,"LispSetq"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="49" _type="ConsoleOutput" date="Wed Dec 06 11:02:39 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="72432" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispSetqChecker2,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:LispSetqChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="50" _type="ConsoleOutput" date="Wed Dec 06 11:02:39 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="72432" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker,100.0% complete,15.0,15.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"isp"), Diff(INSERT,"oad"), Diff(EQUAL,"SetqChecker"), Diff(DELETE,"2"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="51" _type="ConsoleOutput" date="Wed Dec 06 11:02:39 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="72435" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker2,100.0% complete,15.0,15.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LoadSetqChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,15.0,15.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="52" _type="ConsoleOutput" date="Wed Dec 06 11:02:39 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="72436" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LoadSetqChecker"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",100.0% complete,15.0,15.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="53" _type="ConsoleOutput" date="Wed Dec 06 11:02:43 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="76348" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (25)
 |- index (24)
  |~ OperationRegistererImpl.java (49)
  |~ CondEvaluator.java (34)
  |~ ClassRegistryImpl.java (157)
  |~ BasicExpressionEvaluatorImpl.java (34)
  |~ SetqEvaluator.java (22)
  |~ index.java (20)
  |~ LoadEvaluator.java (51)
  |~ LesserEqualEvaluator.java (19)
  |~ AndEvaluator.java (27)
  |~ ListEvaluator.java (25)
  |~ FuncallEvaluator.java (23)
  |~ OrEvaluator.java (30)
  |~ GreaterEvaluator.java (18)
  |~ GreaterEqualEvaluator.java (18)
  |~ ArithmeticEvaluatorHelper.java (58)
  |~ BasicExpressionImpl.java (57)
  |~ NotEvaluator.java (23)
  |~ EvalEvaluator.java (16)
  |~ LambdaEvaluator.java (42)
  |~ LesserEvaluator.java (21)
  |~ IdentifierAtomImpl.java (28)
  |~ RunF23A5Tests.java (28)
  |~ QuoteEvaluator.java (16)
  |~ EnvironmentImpl.java (54)

Attempting to match to the structure:
|- .* (19)
 |- [a-z]?.*[Ll]ogical.* (3)
  |~ AndEval.*.java (0)
  |~ OrEval.*.java (0)
  |~ NotEval.*.java (0)
 |- [a-z]?.*[Rr]elational.* (4)
  |~ G.*T.*Eval.*.java (0)
  |~ L.*T.*Eval.*.java (0)
  |~ G.*T.*E.*Eval.*.java (0)
  |~ L.*T.*E.*Eval.*.java (0)
 |- [a-z]?.*[Ee]xpression.* (5)
  |~ QuoteEval.*.java (0)
  |~ EvalEval.*.java (0)
  |~ CondEval.*.java (0)
  |~ LoadEval.*.java (0)
  |~ ListEval.*.java (0)
 |- [a-z]?.*[Ff]unctional.* (3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadSetqChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (25)¶ |- index (24)¶  |~ OperationRegistererImpl.java (49)¶  |~ CondEvaluator.java (34)¶  |~ ClassRegistryImpl.java (157)¶  |~ BasicExpressionEvaluatorImpl.java (34)¶  |~ SetqEvaluator.java (22)¶  |~ index.java (20)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (27)¶  |~ ListEvaluator.java (25)¶  |~ FuncallEvaluator.java (23)¶  |~ OrEvaluator.java (30)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (58)¶  |~ BasicExpressionImpl.java (57)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (16)¶  |~ LambdaEvaluator.java (42)¶  |~ LesserEvaluator.java (21)¶  |~ IdentifierAtomImpl.java (28)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (16)¶  |~ EnvironmentImpl.java (54)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="54" _type="ConsoleOutput" date="Wed Dec 06 11:02:43 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="76357" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):30
Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (25)¶ |- index (24)¶  |~ OperationRegistererImpl.java (49)¶  |~ CondEvaluator.java (34)¶  |~ ClassRegistryImpl.java (157)¶  |~ BasicExpressionEvaluatorImpl.java (34)¶  |~ SetqEvaluator.java (22)¶  |~ index.java (20)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (27)¶  |~ ListEvaluator.java (25)¶  |~ FuncallEvaluator.java (23)¶  |~ OrEvaluator.java (30)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (58)¶  |~ BasicExpressionImpl.java (57)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (16)¶  |~ LambdaEvaluator.java (42)¶  |~ LesserEvaluator.java (21)¶  |~ IdentifierAtomImpl.java (28)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (16)¶  |~ EnvironmentImpl.java (54)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)"), Diff(INSERT,"Test execution time (ms):30¶Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="55" _type="ConsoleOutput" date="Wed Dec 06 11:02:43 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="76359" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Wed Dec 06 11:02:43 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):30¶Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(INSERT,"Building symbol table and running first pass checks:Wed Dec 06 11:02:43 EST 2023"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="56" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77020" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:38
Running second pass checks Wed Dec 06 11:02:44 EST 2023
Start O(n2) inter- and intra class method calls:Wed Dec 06 11:02:44 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:38¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Wed Dec 06 11:02:44 EST 2023¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Wed Dec 06 11:02:4"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EST 2023¶")]]]></diff>
  </Command>
  <Command __id="57" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77031" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Wed Dec 06 11:02:44 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:38¶Running second pass checks Wed Dec 06 11:02:44 EST 2023¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Wed Dec 06 11:02:44 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="58" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77449" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Wed Dec 06 11:02:44 EST 2023
Generating checks:Wed Dec 06 11:02:44 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Wed Dec 06 11:02:44 EST 2023¶Generating check"), Diff(EQUAL,"s:Wed Dec 06 11:02:44 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="59" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77455" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Wed Dec 06 11:02:44 EST 2023
Generating externals:Wed Dec 06 11:02:44 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Wed Dec 06 11:02:44 EST 2023¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Wed Dec 06 11:02:44 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="60" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77491" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Wed Dec 06 11:02:44 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"Generating checks:Wed Dec 06 11:02:44 EST 2023¶"), Diff(EQUAL,"Generating externals:Wed Dec 06 11:02:44 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="61" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77517" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1170
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Wed Dec 06 11:02:44 EST 2023"), Diff(INSERT,"¶Test execution time (ms):1170"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="62" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77520" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,index/EnvironmentImpl.java:1: No method in class index.EnvironmentImpl:[@NestedLexicalEnvironment] has not made expected call main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment. [MissingMethodCall]

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1170"), Diff(INSERT,"Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,index/EnvironmentImpl.java:1: No method in class index.EnvironmentImpl:[@NestedLexicalEnvironment] has not made expected call main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment. [MissingMethodCall]¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="63" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77540" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,index/EnvironmentImpl.java:1: No method in class index.EnvironmentImpl:[@NestedLexicalEnvironment] has not made expected call main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment. [MissingMethodCall]¶"), Diff(INSERT,"execution time (ms):22"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="64" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77542" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):22"), Diff(INSERT,"Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="65" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77548" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,¶"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="66" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77548" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="67" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77552" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="68" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77553" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="69" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77556" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="70" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77558" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="71" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77563" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="72" _type="ConsoleOutput" date="Wed Dec 06 11:02:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="77564" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LambdaCallsLambdaFactory,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:LambdaCallsLambdaFactory,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="79" _type="ShellCommand" date="Wed Dec 06 11:03:08 EST 2023" starttimestamp="1701878487122" timestamp="101184" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="80" _type="EclipseCommand" commandID="org.eclipse.ui.ide.showInSystemExplorer" date="Wed Dec 06 11:03:13 EST 2023" starttimestamp="1701878487122" timestamp="106689" />
  <Command __id="81" _type="ShellCommand" date="Wed Dec 06 11:03:13 EST 2023" starttimestamp="1701878487122" timestamp="106730" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:01:27 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="68">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.BasicLambda;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			Lambda lambda;
			if(!(temp.getClass().equals(BasicLambda.class))) {
				lambda = (Lambda)temp.eval(environment);
			}else {
				lambda = (Lambda)temp;
			}
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="82" _type="ShellCommand" date="Wed Dec 06 11:10:49 EST 2023" starttimestamp="1701878487122" timestamp="562738" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="84" _type="SelectTextCommand" caretOffset="165" date="Wed Dec 06 11:10:51 EST 2023" end="165" start="137" starttimestamp="1701878487122" timestamp="564177" />
  <Command __id="85" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Dec 06 11:10:53 EST 2023" starttimestamp="1701878487122" timestamp="565950" />
  <Command __id="86" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:10:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="566074" type="Run" />
  <Command __id="87" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:10:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="566074" type="Run" />
  <Command __id="88" _type="ShellCommand" date="Wed Dec 06 11:10:53 EST 2023" starttimestamp="1701878487122" timestamp="566405" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="89" _type="ShellCommand" date="Wed Dec 06 11:11:00 EST 2023" starttimestamp="1701878487122" timestamp="573287" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="91" _type="PasteCommand" date="Wed Dec 06 11:11:00 EST 2023" starttimestamp="1701878487122" timestamp="573742" />
  <Command __id="93" _type="UndoCommand" date="Wed Dec 06 11:11:01 EST 2023" starttimestamp="1701878487122" timestamp="574558" />
  <Command __id="94" _type="ConsoleOutput" date="Wed Dec 06 11:11:03 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="575908" type="ConsoleOutput">
    <outputString><![CDATA[(setq y 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LambdaCallsLambdaFactory,100.0% complete,2.0,2.0,"), Diff(INSERT,"(setq y 5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="95" _type="PasteCommand" date="Wed Dec 06 11:11:03 EST 2023" starttimestamp="1701878487122" timestamp="575913" />
  <Command __id="96" _type="ConsoleOutput" date="Wed Dec 06 11:11:03 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="575917" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq y 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="97" _type="ShellCommand" date="Wed Dec 06 11:11:03 EST 2023" starttimestamp="1701878487122" timestamp="576809" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="98" _type="ShellCommand" date="Wed Dec 06 11:11:07 EST 2023" starttimestamp="1701878487122" timestamp="580247" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="99" _type="PasteCommand" date="Wed Dec 06 11:11:07 EST 2023" starttimestamp="1701878487122" timestamp="580529" />
  <Command __id="100" _type="ConsoleOutput" date="Wed Dec 06 11:11:07 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="580532" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"LAMBDA (X) (* X Y)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="101" _type="ShellCommand" date="Wed Dec 06 11:11:08 EST 2023" starttimestamp="1701878487122" timestamp="581156" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="102" _type="ShellCommand" date="Wed Dec 06 11:11:11 EST 2023" starttimestamp="1701878487122" timestamp="584078" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="103" _type="PasteCommand" date="Wed Dec 06 11:11:11 EST 2023" starttimestamp="1701878487122" timestamp="584323" />
  <Command __id="104" _type="ExceptionCommand" date="Wed Dec 06 11:11:11 EST 2023" starttimestamp="1701878487122" timestamp="584330" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '*' must both evaluate to numbers
	at main.lisp.evaluator.basic.ProductEvaluator.eval(ProductEvaluator.java:51)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="105" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:11:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="584332" type="Run" />
  <Command __id="106" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:11:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="584332" type="Run" />
  <Command __id="113" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:11:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="616026" type="Run" />
  <Command __id="114" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:11:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="616026" type="Run" />
  <Command __id="115" _type="ShellCommand" date="Wed Dec 06 11:11:44 EST 2023" starttimestamp="1701878487122" timestamp="616901" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="116" _type="ShellCommand" date="Wed Dec 06 11:11:44 EST 2023" starttimestamp="1701878487122" timestamp="617711" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="117" _type="ConsoleInput" date="Wed Dec 06 11:11:48 EST 2023" starttimestamp="1701878487122" timestamp="621046" type="Exception">
    <outputString><![CDATA[(setq y 5)
]]></outputString>
  </Command>
  <Command __id="118" _type="ConsoleOutput" date="Wed Dec 06 11:11:48 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="621058" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (* X Y)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="119" _type="ShellCommand" date="Wed Dec 06 11:11:49 EST 2023" starttimestamp="1701878487122" timestamp="621910" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="120" _type="ShellCommand" date="Wed Dec 06 11:11:53 EST 2023" starttimestamp="1701878487122" timestamp="626054" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="121" _type="PasteCommand" date="Wed Dec 06 11:11:53 EST 2023" starttimestamp="1701878487122" timestamp="626309" />
  <Command __id="122" _type="ConsoleInput" date="Wed Dec 06 11:11:57 EST 2023" starttimestamp="1701878487122" timestamp="630379" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) (* x y))+
]]></outputString>
  </Command>
  <Command __id="123" _type="ConsoleOutput" date="Wed Dec 06 11:11:57 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="630385" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (+ X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"LAMBDA (X) (+ X Y)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="124" _type="ShellCommand" date="Wed Dec 06 11:11:59 EST 2023" starttimestamp="1701878487122" timestamp="632092" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="125" _type="ShellCommand" date="Wed Dec 06 11:12:00 EST 2023" starttimestamp="1701878487122" timestamp="633384" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="131" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:12:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="656249" type="Run" />
  <Command __id="132" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:12:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="656250" type="Run" />
  <Command __id="133" _type="ConsoleInput" date="Wed Dec 06 11:12:27 EST 2023" starttimestamp="1701878487122" timestamp="659907" type="Exception">
    <outputString><![CDATA[(setq a 2)
]]></outputString>
  </Command>
  <Command __id="134" _type="ConsoleOutput" date="Wed Dec 06 11:12:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="659918" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.basic.SumEvaluator.eval(SumEvaluator.java:51)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="135" _type="ConsoleInput" date="Wed Dec 06 11:12:27 EST 2023" starttimestamp="1701878487122" timestamp="660207" type="Exception">
    <outputString><![CDATA[a
]]></outputString>
  </Command>
  <Command __id="136" _type="ConsoleOutput" date="Wed Dec 06 11:12:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="660211" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="137" _type="ShellCommand" date="Wed Dec 06 11:12:28 EST 2023" starttimestamp="1701878487122" timestamp="661857" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="138" _type="ShellCommand" date="Wed Dec 06 11:12:30 EST 2023" starttimestamp="1701878487122" timestamp="663198" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="139" _type="PasteCommand" date="Wed Dec 06 11:12:30 EST 2023" starttimestamp="1701878487122" timestamp="663492" />
  <Command __id="140" _type="ShellCommand" date="Wed Dec 06 11:12:47 EST 2023" starttimestamp="1701878487122" timestamp="679981" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="141" _type="ShellCommand" date="Wed Dec 06 11:13:09 EST 2023" starttimestamp="1701878487122" timestamp="702163" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="142" _type="ShellCommand" date="Wed Dec 06 11:13:10 EST 2023" starttimestamp="1701878487122" timestamp="703185" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="143" _type="ShellCommand" date="Wed Dec 06 11:13:14 EST 2023" starttimestamp="1701878487122" timestamp="707086" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="144" _type="PasteCommand" date="Wed Dec 06 11:13:14 EST 2023" starttimestamp="1701878487122" timestamp="707571" />
  <Command __id="145" _type="ConsoleInput" date="Wed Dec 06 11:13:15 EST 2023" starttimestamp="1701878487122" timestamp="708756" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) (* x y)))
]]></outputString>
  </Command>
  <Command __id="146" _type="ConsoleOutput" date="Wed Dec 06 11:13:15 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="708762" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"LAMBDA (X) (* X Y)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="147" _type="ConsoleInput" date="Wed Dec 06 11:13:21 EST 2023" starttimestamp="1701878487122" timestamp="714390" type="Exception">
    <outputString><![CDATA[(setq y 6)
]]></outputString>
  </Command>
  <Command __id="148" _type="ConsoleOutput" date="Wed Dec 06 11:13:21 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="714396" type="ConsoleOutput">
    <outputString><![CDATA[6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (* X Y)"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="83" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:10:51 EST 2023" docASTNodeCount="96" docActiveCodeLength="627" docExpressionCount="69" docLength="627" projectName="Assignment5" starttimestamp="1701878487122" timestamp="564062">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.IdentifierAtomFactory;
import main.lisp.evaluator.ExpressionEvaluatorFactory;
import main.lisp.evaluator.environment.EnvironmentFactory;

public class index {

	public static void main(String[] args) {
		ExpressionEvaluatorFactory.setClass(BasicExpressionEvaluatorImpl.class);
		IdentifierAtomFactory.setClass(IdentifierAtomImpl.class);
		EnvironmentFactory.setClass(EnvironmentImpl.class);
		OperationRegistererImpl.registerAll();
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="90" _type="Replace" date="Wed Dec 06 11:11:00 EST 2023" docASTNodeCount="99" docActiveCodeLength="610" docExpressionCount="73" docLength="610" endLine="11" insertionLength="11" int_docASTNodeCount="95" int_docActiveCodeLength="599" int_docExpressionCount="68" int_docLength="599" length="28" offset="353" startLine="11" starttimestamp="1701878487122" timestamp="573729">
    <deletedText><![CDATA[BasicExpressionEvaluatorImpl]]></deletedText>
    <insertedText><![CDATA[(setq y 5)
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="92" _type="Replace" date="Wed Dec 06 11:11:01 EST 2023" docASTNodeCount="96" docActiveCodeLength="627" docExpressionCount="69" docLength="627" endLine="12" insertionLength="28" int_docASTNodeCount="95" int_docActiveCodeLength="599" int_docExpressionCount="68" int_docLength="599" length="11" offset="353" startLine="11" starttimestamp="1701878487122" timestamp="574536">
    <deletedText><![CDATA[(setq y 5)
]]></deletedText>
    <insertedText><![CDATA[BasicExpressionEvaluatorImpl]]></insertedText>
  </DocumentChange>
  <Command __id="149" _type="ConsoleInput" date="Wed Dec 06 11:13:25 EST 2023" starttimestamp="1701878487122" timestamp="717928" type="Exception">
    <outputString><![CDATA[(funcall f 2)
]]></outputString>
  </Command>
  <Command __id="150" _type="ExceptionCommand" date="Wed Dec 06 11:13:25 EST 2023" starttimestamp="1701878487122" timestamp="717934" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '*' must both evaluate to numbers
	at main.lisp.evaluator.basic.ProductEvaluator.eval(ProductEvaluator.java:51)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="151" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:13:25 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="717941" type="Run" />
  <Command __id="152" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:13:25 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="717941" type="Run" />
  <Command __id="155" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:13:48 EST 2023" projectName="null" starttimestamp="1701878487122" timestamp="740897">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="156" _type="ShellCommand" date="Wed Dec 06 11:13:48 EST 2023" starttimestamp="1701878487122" timestamp="740909" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="157" _type="MoveCaretCommand" caretOffset="0" date="Wed Dec 06 11:13:48 EST 2023" docOffset="0" starttimestamp="1701878487122" timestamp="740972" />
  <Command __id="158" _type="ShellCommand" date="Wed Dec 06 11:13:48 EST 2023" starttimestamp="1701878487122" timestamp="741858" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="161" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:13:51 EST 2023" projectName="null" starttimestamp="1701878487122" timestamp="744224">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="165" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:13:53 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="746033">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="164" _type="ShellCommand" date="Wed Dec 06 11:13:52 EST 2023" starttimestamp="1701878487122" timestamp="745306" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="166" _type="SelectTextCommand" caretOffset="894" date="Wed Dec 06 11:13:53 EST 2023" end="894" start="781" starttimestamp="1701878487122" timestamp="746080" />
  <Command __id="168" _type="SelectTextCommand" caretOffset="771" date="Wed Dec 06 11:13:55 EST 2023" end="771" start="731" starttimestamp="1701878487122" timestamp="748641" />
  <Command __id="169" _type="MoveCaretCommand" caretOffset="822" date="Wed Dec 06 11:14:54 EST 2023" docOffset="1105" starttimestamp="1701878487122" timestamp="807470" />
  <Command __id="170" _type="MoveCaretCommand" caretOffset="822" date="Wed Dec 06 11:14:54 EST 2023" docOffset="1105" starttimestamp="1701878487122" timestamp="807471" />
  <Command __id="171" _type="ShellCommand" date="Wed Dec 06 11:15:07 EST 2023" starttimestamp="1701878487122" timestamp="819879" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="172" _type="ShellCommand" date="Wed Dec 06 11:15:10 EST 2023" starttimestamp="1701878487122" timestamp="823246" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="173" _type="MoveCaretCommand" caretOffset="587" date="Wed Dec 06 11:15:10 EST 2023" docOffset="870" starttimestamp="1701878487122" timestamp="823323" />
  <Command __id="174" _type="MoveCaretCommand" caretOffset="587" date="Wed Dec 06 11:15:10 EST 2023" docOffset="870" starttimestamp="1701878487122" timestamp="823323" />
  <Command __id="175" _type="ShellCommand" date="Wed Dec 06 11:15:11 EST 2023" starttimestamp="1701878487122" timestamp="824453" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="167" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:13:55 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="748612">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="176" _type="ShellCommand" date="Wed Dec 06 11:15:13 EST 2023" starttimestamp="1701878487122" timestamp="826686" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="177" _type="MoveCaretCommand" caretOffset="725" date="Wed Dec 06 11:15:13 EST 2023" docOffset="1008" starttimestamp="1701878487122" timestamp="826737" />
  <Command __id="178" _type="MoveCaretCommand" caretOffset="725" date="Wed Dec 06 11:15:13 EST 2023" docOffset="1008" starttimestamp="1701878487122" timestamp="826737" />
  <Command __id="179" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:15:41 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701878487122" timestamp="854799">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.environment.AbstractEnvironment;
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class EnvironmentImpl extends AbstractEnvironment{

	public EnvironmentImpl() {
		super();
	}

	public EnvironmentImpl(Environment parent) {
		super(parent);
	}

	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		put(arg0, arg1);
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		
	}

	@Override
	public Environment copy() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		Optional<SExpression> retVal = get(arg0);
		return retVal;
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Environment newChild() {
		return new EnvironmentImpl(this);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="180" _type="MoveCaretCommand" caretOffset="493" date="Wed Dec 06 11:15:41 EST 2023" docOffset="729" starttimestamp="1701878487122" timestamp="854858" />
  <Command __id="182" _type="MoveCaretCommand" caretOffset="478" date="Wed Dec 06 11:15:46 EST 2023" docOffset="647" starttimestamp="1701878487122" timestamp="858998" />
  <Command __id="183" _type="MoveCaretCommand" caretOffset="441" date="Wed Dec 06 11:15:46 EST 2023" docOffset="610" starttimestamp="1701878487122" timestamp="859796" />
  <Command __id="181" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:15:46 EST 2023" docASTNodeCount="107" docActiveCodeLength="650" docExpressionCount="70" docLength="650" projectName="Assignment5" starttimestamp="1701878487122" timestamp="858953">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.scanner.tokens.Token;
import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class IdentifierAtomImpl extends IdentifierAtom{

    public IdentifierAtomImpl(String string) {
        super(string);
    }
    
    public IdentifierAtomImpl(Token token) {
        super(token);
     }

    @Override
    public SExpression eval(Environment var1){
        Optional<SExpression> retVal = var1.lookup(this);
        if(retVal.isPresent()) {
            return retVal.get();
        }
        return this;
    }
}
]]></snapshot>
  </Command>
  <Command __id="184" _type="MoveCaretCommand" caretOffset="408" date="Wed Dec 06 11:15:52 EST 2023" docOffset="577" starttimestamp="1701878487122" timestamp="865575" />
  <Command __id="186" _type="MoveCaretCommand" caretOffset="493" date="Wed Dec 06 11:15:56 EST 2023" docOffset="729" starttimestamp="1701878487122" timestamp="869180" />
  <Command __id="187" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:00 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="873350" />
  <Command __id="188" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:01 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="874093" />
  <Command __id="189" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:03 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="876699" />
  <Command __id="190" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:04 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="877070" />
  <Command __id="191" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:04 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="877473" />
  <Command __id="192" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:04 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="877766" />
  <Command __id="193" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:04 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="877866" />
  <Command __id="194" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:05 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="878166" />
  <Command __id="195" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:05 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="878481" />
  <Command __id="196" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:06 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="879647" />
  <Command __id="197" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:07 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="880144" />
  <Command __id="198" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:07 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="880757" />
  <Command __id="199" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:08 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="881071" />
  <Command __id="200" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:09 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="881991" />
  <Command __id="201" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:10 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="883745" />
  <Command __id="202" _type="ShellCommand" date="Wed Dec 06 11:16:15 EST 2023" starttimestamp="1701878487122" timestamp="888372" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="203" _type="ShellCommand" date="Wed Dec 06 11:16:31 EST 2023" starttimestamp="1701878487122" timestamp="904873" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="204" _type="MoveCaretCommand" caretOffset="614" date="Wed Dec 06 11:16:35 EST 2023" docOffset="850" starttimestamp="1701878487122" timestamp="908713" />
  <Command __id="205" _type="ShellCommand" date="Wed Dec 06 11:16:37 EST 2023" starttimestamp="1701878487122" timestamp="910861" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="206" _type="ShellCommand" date="Wed Dec 06 11:16:42 EST 2023" starttimestamp="1701878487122" timestamp="915478" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="207" _type="ShellCommand" date="Wed Dec 06 11:16:43 EST 2023" starttimestamp="1701878487122" timestamp="916306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="208" _type="ShellCommand" date="Wed Dec 06 11:16:49 EST 2023" starttimestamp="1701878487122" timestamp="921911" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="209" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:50 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="923156" />
  <Command __id="210" _type="ShellCommand" date="Wed Dec 06 11:16:50 EST 2023" starttimestamp="1701878487122" timestamp="923438" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="211" _type="ShellCommand" date="Wed Dec 06 11:16:51 EST 2023" starttimestamp="1701878487122" timestamp="924341" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="212" _type="MoveCaretCommand" caretOffset="592" date="Wed Dec 06 11:16:51 EST 2023" docOffset="828" starttimestamp="1701878487122" timestamp="924845" />
  <Command __id="213" _type="SelectTextCommand" caretOffset="595" date="Wed Dec 06 11:16:52 EST 2023" end="595" start="591" starttimestamp="1701878487122" timestamp="924983" />
  <Command __id="214" _type="ShellCommand" date="Wed Dec 06 11:16:52 EST 2023" starttimestamp="1701878487122" timestamp="925645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="215" _type="ShellCommand" date="Wed Dec 06 11:16:54 EST 2023" starttimestamp="1701878487122" timestamp="927585" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="216" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 11:16:55 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="928080" />
  <Command __id="218" _type="InsertStringCommand" date="Wed Dec 06 11:16:55 EST 2023" starttimestamp="1701878487122" timestamp="928869" timestamp2="928869">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="219" _type="ShellCommand" date="Wed Dec 06 11:16:56 EST 2023" starttimestamp="1701878487122" timestamp="929102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="220" _type="ShellCommand" date="Wed Dec 06 11:16:58 EST 2023" starttimestamp="1701878487122" timestamp="931349" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="222" _type="InsertStringCommand" date="Wed Dec 06 11:16:59 EST 2023" starttimestamp="1701878487122" timestamp="931997" timestamp2="931997">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="224" _type="InsertStringCommand" date="Wed Dec 06 11:16:59 EST 2023" starttimestamp="1701878487122" timestamp="932085" timestamp2="932085">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="226" _type="InsertStringCommand" date="Wed Dec 06 11:16:59 EST 2023" starttimestamp="1701878487122" timestamp="932200" timestamp2="932200">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="228" _type="InsertStringCommand" date="Wed Dec 06 11:16:59 EST 2023" starttimestamp="1701878487122" timestamp="932711" timestamp2="932711">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="230" _type="InsertStringCommand" date="Wed Dec 06 11:17:00 EST 2023" starttimestamp="1701878487122" timestamp="932939" timestamp2="932939">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="232" _type="InsertStringCommand" date="Wed Dec 06 11:17:00 EST 2023" starttimestamp="1701878487122" timestamp="933031" timestamp2="933031">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="233" _type="ShellCommand" date="Wed Dec 06 11:17:00 EST 2023" starttimestamp="1701878487122" timestamp="933518" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="234" _type="ShellCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934074" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="236" _type="InsertStringCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934253" timestamp2="934253">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="238" _type="InsertStringCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934358" timestamp2="934358">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="240" _type="InsertStringCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934489" timestamp2="934489">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="242" _type="InsertStringCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934578" timestamp2="934578">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="244" _type="InsertStringCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934697" timestamp2="934697">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="246" _type="InsertStringCommand" date="Wed Dec 06 11:17:01 EST 2023" starttimestamp="1701878487122" timestamp="934863" timestamp2="934863">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="248" _type="InsertStringCommand" date="Wed Dec 06 11:17:02 EST 2023" starttimestamp="1701878487122" timestamp="935054" timestamp2="935054">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="250" _type="InsertStringCommand" date="Wed Dec 06 11:17:02 EST 2023" starttimestamp="1701878487122" timestamp="935150" timestamp2="935150">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="251" _type="ShellCommand" date="Wed Dec 06 11:17:03 EST 2023" starttimestamp="1701878487122" timestamp="936005" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="252" _type="ShellCommand" date="Wed Dec 06 11:17:03 EST 2023" starttimestamp="1701878487122" timestamp="936583" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="254" _type="InsertStringCommand" date="Wed Dec 06 11:17:04 EST 2023" starttimestamp="1701878487122" timestamp="937209" timestamp2="937209">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="256" _type="InsertStringCommand" date="Wed Dec 06 11:17:04 EST 2023" starttimestamp="1701878487122" timestamp="937347" timestamp2="937347">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="258" _type="InsertStringCommand" date="Wed Dec 06 11:17:04 EST 2023" starttimestamp="1701878487122" timestamp="937466" timestamp2="937466">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="260" _type="InsertStringCommand" date="Wed Dec 06 11:17:04 EST 2023" starttimestamp="1701878487122" timestamp="937599" timestamp2="937599">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="261" _type="ShellCommand" date="Wed Dec 06 11:17:05 EST 2023" starttimestamp="1701878487122" timestamp="937929" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="185" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:15:56 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701878487122" timestamp="869138">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="217" _type="Insert" date="Wed Dec 06 11:16:55 EST 2023" docASTNodeCount="182" docActiveCodeLength="1016" docExpressionCount="110" docLength="1084" length="3" offset="833" starttimestamp="1701878487122" timestamp="928864">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="221" _type="Insert" date="Wed Dec 06 11:16:59 EST 2023" docASTNodeCount="178" docActiveCodeLength="1030" docExpressionCount="110" docLength="1098" length="14" offset="836" repeat="14" starttimestamp="1701878487122" timestamp="931994" timestamp2="935148">
    <text><![CDATA[retVal == null]]></text>
  </DocumentChange>
  <DocumentChange __id="253" _type="Insert" date="Wed Dec 06 11:17:04 EST 2023" docASTNodeCount="186" docActiveCodeLength="1034" docExpressionCount="114" docLength="1102" length="4" offset="850" repeat="4" starttimestamp="1701878487122" timestamp="937206" timestamp2="937596">
    <text><![CDATA[ && ]]></text>
  </DocumentChange>
  <DocumentChange __id="265" _type="Insert" date="Wed Dec 06 11:17:07 EST 2023" docASTNodeCount="188" docActiveCodeLength="1036" docExpressionCount="115" docLength="1104" length="2" offset="854" repeat="2" starttimestamp="1701878487122" timestamp="940318" timestamp2="940474">
    <text><![CDATA[et]]></text>
  </DocumentChange>
  <DocumentChange __id="269" _type="Delete" date="Wed Dec 06 11:17:08 EST 2023" docASTNodeCount="186" docActiveCodeLength="1034" docExpressionCount="114" docLength="1102" endLine="39" length="2" offset="854" repeat="2" startLine="39" starttimestamp="1701878487122" timestamp="940915" timestamp2="941033">
    <text><![CDATA[et]]></text>
  </DocumentChange>
  <Command __id="262" _type="ShellCommand" date="Wed Dec 06 11:17:05 EST 2023" starttimestamp="1701878487122" timestamp="938508" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="263" _type="ShellCommand" date="Wed Dec 06 11:17:06 EST 2023" starttimestamp="1701878487122" timestamp="939185" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="264" _type="ShellCommand" date="Wed Dec 06 11:17:07 EST 2023" starttimestamp="1701878487122" timestamp="939915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="266" _type="InsertStringCommand" date="Wed Dec 06 11:17:07 EST 2023" starttimestamp="1701878487122" timestamp="940321" timestamp2="940321">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="268" _type="InsertStringCommand" date="Wed Dec 06 11:17:07 EST 2023" starttimestamp="1701878487122" timestamp="940476" timestamp2="940476">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:08 EST 2023" starttimestamp="1701878487122" timestamp="940922" />
  <Command __id="272" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:08 EST 2023" starttimestamp="1701878487122" timestamp="941036" />
  <Command __id="274" _type="InsertStringCommand" date="Wed Dec 06 11:17:09 EST 2023" starttimestamp="1701878487122" timestamp="942658" timestamp2="942658">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="276" _type="InsertStringCommand" date="Wed Dec 06 11:17:09 EST 2023" starttimestamp="1701878487122" timestamp="942745" timestamp2="942745">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="278" _type="InsertStringCommand" date="Wed Dec 06 11:17:09 EST 2023" starttimestamp="1701878487122" timestamp="942834" timestamp2="942834">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="280" _type="InsertStringCommand" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="942879" timestamp2="942879">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="282" _type="InsertStringCommand" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="943017" timestamp2="943017">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="284" _type="InsertStringCommand" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="943074" timestamp2="943074">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="285" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Dec 06 11:17:10 EST 2023" start_end="START" starttimestamp="1701878487122" timestamp="943100" />
  <Command __id="286" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Dec 06 11:17:10 EST 2023" start_end="END" starttimestamp="1701878487122" timestamp="943183" />
  <Command __id="288" _type="InsertStringCommand" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="943231" timestamp2="943231">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="290" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="943602" />
  <Command __id="292" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="943719" />
  <Command __id="294" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:10 EST 2023" starttimestamp="1701878487122" timestamp="943840" />
  <Command __id="296" _type="InsertStringCommand" date="Wed Dec 06 11:17:11 EST 2023" starttimestamp="1701878487122" timestamp="944117" timestamp2="944117">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="297" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Dec 06 11:17:11 EST 2023" start_end="START" starttimestamp="1701878487122" timestamp="944124" />
  <Command __id="302" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Dec 06 11:17:12 EST 2023" start_end="END" starttimestamp="1701878487122" timestamp="945352" />
  <Command __id="304" _type="InsertStringCommand" date="Wed Dec 06 11:17:12 EST 2023" starttimestamp="1701878487122" timestamp="945366" timestamp2="945366">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="305" _type="ShellCommand" date="Wed Dec 06 11:17:13 EST 2023" starttimestamp="1701878487122" timestamp="946417" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="306" _type="ShellCommand" date="Wed Dec 06 11:17:14 EST 2023" starttimestamp="1701878487122" timestamp="946988" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="308" _type="InsertStringCommand" date="Wed Dec 06 11:17:14 EST 2023" starttimestamp="1701878487122" timestamp="947488" timestamp2="947488">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="310" _type="InsertStringCommand" date="Wed Dec 06 11:17:14 EST 2023" starttimestamp="1701878487122" timestamp="947739" timestamp2="947739">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="312" _type="InsertStringCommand" date="Wed Dec 06 11:17:15 EST 2023" starttimestamp="1701878487122" timestamp="948329" timestamp2="948329">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="314" _type="InsertStringCommand" date="Wed Dec 06 11:17:15 EST 2023" starttimestamp="1701878487122" timestamp="948687" timestamp2="948687">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="316" _type="InsertStringCommand" date="Wed Dec 06 11:17:15 EST 2023" starttimestamp="1701878487122" timestamp="948865" timestamp2="948865">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="318" _type="InsertStringCommand" date="Wed Dec 06 11:17:16 EST 2023" starttimestamp="1701878487122" timestamp="949017" timestamp2="949017">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="320" _type="InsertStringCommand" date="Wed Dec 06 11:17:16 EST 2023" starttimestamp="1701878487122" timestamp="949158" timestamp2="949158">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="322" _type="InsertStringCommand" date="Wed Dec 06 11:17:16 EST 2023" starttimestamp="1701878487122" timestamp="949276" timestamp2="949276">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="324" _type="InsertStringCommand" date="Wed Dec 06 11:17:17 EST 2023" starttimestamp="1701878487122" timestamp="949890" timestamp2="949890">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="326" _type="InsertStringCommand" date="Wed Dec 06 11:17:17 EST 2023" starttimestamp="1701878487122" timestamp="950184" timestamp2="950184">
    <data><![CDATA[?]]></data>
  </Command>
  <DocumentChange __id="273" _type="Insert" date="Wed Dec 06 11:17:09 EST 2023" docASTNodeCount="190" docActiveCodeLength="1041" docExpressionCount="117" docLength="1109" length="7" offset="854" repeat="7" starttimestamp="1701878487122" timestamp="942655" timestamp2="943229">
    <text><![CDATA[thiss.g]]></text>
  </DocumentChange>
  <DocumentChange __id="289" _type="Delete" date="Wed Dec 06 11:17:10 EST 2023" docASTNodeCount="188" docActiveCodeLength="1038" docExpressionCount="115" docLength="1106" endLine="39" length="3" offset="858" repeat="3" startLine="39" starttimestamp="1701878487122" timestamp="943598" timestamp2="943837">
    <text><![CDATA[s.g]]></text>
  </DocumentChange>
  <DocumentChange __id="295" _type="Insert" date="Wed Dec 06 11:17:11 EST 2023" docASTNodeCount="190" docActiveCodeLength="1043" docExpressionCount="117" docLength="1111" length="5" offset="858" repeat="5" starttimestamp="1701878487122" timestamp="944113" timestamp2="944913">
    <text><![CDATA[.getP]]></text>
  </DocumentChange>
  <DocumentChange __id="303" _type="Replace" date="Wed Dec 06 11:17:12 EST 2023" docASTNodeCount="190" docActiveCodeLength="1050" docExpressionCount="117" docLength="1118" endLine="39" insertionLength="11" int_docASTNodeCount="188" int_docActiveCodeLength="1039" int_docExpressionCount="116" int_docLength="1107" length="4" offset="859" startLine="39" starttimestamp="1701878487122" timestamp="945360">
    <deletedText><![CDATA[getP]]></deletedText>
    <insertedText><![CDATA[getParent()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="307" _type="Insert" date="Wed Dec 06 11:17:14 EST 2023" docASTNodeCount="192" docActiveCodeLength="1060" docExpressionCount="119" docLength="1128" length="10" offset="870" repeat="10" starttimestamp="1701878487122" timestamp="947484" timestamp2="950182">
    <text><![CDATA[ != null ?]]></text>
  </DocumentChange>
  <DocumentChange __id="328" _type="Insert" date="Wed Dec 06 11:17:21 EST 2023" docASTNodeCount="192" docActiveCodeLength="1067" docExpressionCount="119" docLength="1135" length="7" offset="836" repeat="7" starttimestamp="1701878487122" timestamp="954425" timestamp2="955054">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <Command __id="327" _type="MoveCaretCommand" caretOffset="600" date="Wed Dec 06 11:17:20 EST 2023" docOffset="836" starttimestamp="1701878487122" timestamp="953761" />
  <Command __id="329" _type="InsertStringCommand" date="Wed Dec 06 11:17:21 EST 2023" starttimestamp="1701878487122" timestamp="954426" timestamp2="954426">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="331" _type="InsertStringCommand" date="Wed Dec 06 11:17:21 EST 2023" starttimestamp="1701878487122" timestamp="954552" timestamp2="954552">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="333" _type="InsertStringCommand" date="Wed Dec 06 11:17:21 EST 2023" starttimestamp="1701878487122" timestamp="954647" timestamp2="954647">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="335" _type="InsertStringCommand" date="Wed Dec 06 11:17:21 EST 2023" starttimestamp="1701878487122" timestamp="954769" timestamp2="954769">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="337" _type="InsertStringCommand" date="Wed Dec 06 11:17:21 EST 2023" starttimestamp="1701878487122" timestamp="954842" timestamp2="954842">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="339" _type="InsertStringCommand" date="Wed Dec 06 11:17:22 EST 2023" starttimestamp="1701878487122" timestamp="954948" timestamp2="954948">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="341" _type="InsertStringCommand" date="Wed Dec 06 11:17:22 EST 2023" starttimestamp="1701878487122" timestamp="955058" timestamp2="955058">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="343" _type="InsertStringCommand" date="Wed Dec 06 11:17:24 EST 2023" starttimestamp="1701878487122" timestamp="957193" timestamp2="957193">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="344" _type="MoveCaretCommand" caretOffset="650" date="Wed Dec 06 11:17:25 EST 2023" docOffset="886" starttimestamp="1701878487122" timestamp="957976" />
  <Command __id="346" _type="InsertStringCommand" date="Wed Dec 06 11:17:25 EST 2023" starttimestamp="1701878487122" timestamp="958132" timestamp2="958132">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="347" _type="MoveCaretCommand" caretOffset="653" date="Wed Dec 06 11:17:25 EST 2023" docOffset="889" starttimestamp="1701878487122" timestamp="958389" />
  <Command __id="349" _type="InsertStringCommand" date="Wed Dec 06 11:17:26 EST 2023" starttimestamp="1701878487122" timestamp="959095" timestamp2="959095">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="350" _type="ShellCommand" date="Wed Dec 06 11:17:26 EST 2023" starttimestamp="1701878487122" timestamp="959711" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="351" _type="ShellCommand" date="Wed Dec 06 11:17:28 EST 2023" starttimestamp="1701878487122" timestamp="961097" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="353" _type="InsertStringCommand" date="Wed Dec 06 11:17:28 EST 2023" starttimestamp="1701878487122" timestamp="961769" timestamp2="961769">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="355" _type="InsertStringCommand" date="Wed Dec 06 11:17:28 EST 2023" starttimestamp="1701878487122" timestamp="961838" timestamp2="961838">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="357" _type="InsertStringCommand" date="Wed Dec 06 11:17:29 EST 2023" starttimestamp="1701878487122" timestamp="961897" timestamp2="961897">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="359" _type="InsertStringCommand" date="Wed Dec 06 11:17:29 EST 2023" starttimestamp="1701878487122" timestamp="961984" timestamp2="961984">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="361" _type="InsertStringCommand" date="Wed Dec 06 11:17:29 EST 2023" starttimestamp="1701878487122" timestamp="962110" timestamp2="962110">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="362" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Dec 06 11:17:29 EST 2023" start_end="START" starttimestamp="1701878487122" timestamp="962116" />
  <Command __id="367" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Dec 06 11:17:30 EST 2023" start_end="END" starttimestamp="1701878487122" timestamp="963141" />
  <Command __id="369" _type="InsertStringCommand" date="Wed Dec 06 11:17:30 EST 2023" starttimestamp="1701878487122" timestamp="963154" timestamp2="963154">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="371" _type="InsertStringCommand" date="Wed Dec 06 11:17:30 EST 2023" starttimestamp="1701878487122" timestamp="963421" timestamp2="963421">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="372" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Dec 06 11:17:30 EST 2023" start_end="START" starttimestamp="1701878487122" timestamp="963428" />
  <Command __id="373" _type="ShellCommand" date="Wed Dec 06 11:17:31 EST 2023" starttimestamp="1701878487122" timestamp="964302" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="374" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Dec 06 11:17:31 EST 2023" start_end="END" starttimestamp="1701878487122" timestamp="964326" />
  <Command __id="375" _type="ShellCommand" date="Wed Dec 06 11:17:34 EST 2023" starttimestamp="1701878487122" timestamp="967544" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="377" _type="InsertStringCommand" date="Wed Dec 06 11:17:35 EST 2023" starttimestamp="1701878487122" timestamp="968251" timestamp2="968251">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="379" _type="InsertStringCommand" date="Wed Dec 06 11:17:35 EST 2023" starttimestamp="1701878487122" timestamp="968488" timestamp2="968488">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="381" _type="InsertStringCommand" date="Wed Dec 06 11:17:35 EST 2023" starttimestamp="1701878487122" timestamp="968636" timestamp2="968636">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="383" _type="InsertStringCommand" date="Wed Dec 06 11:17:35 EST 2023" starttimestamp="1701878487122" timestamp="968832" timestamp2="968832">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="385" _type="InsertStringCommand" date="Wed Dec 06 11:17:36 EST 2023" starttimestamp="1701878487122" timestamp="969131" timestamp2="969131">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="387" _type="InsertStringCommand" date="Wed Dec 06 11:17:36 EST 2023" starttimestamp="1701878487122" timestamp="969205" timestamp2="969205">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="389" _type="InsertStringCommand" date="Wed Dec 06 11:17:36 EST 2023" starttimestamp="1701878487122" timestamp="969795" timestamp2="969795">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="390" _type="ShellCommand" date="Wed Dec 06 11:17:37 EST 2023" starttimestamp="1701878487122" timestamp="970261" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="391" _type="ShellCommand" date="Wed Dec 06 11:17:38 EST 2023" starttimestamp="1701878487122" timestamp="971069" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="393" _type="InsertStringCommand" date="Wed Dec 06 11:17:38 EST 2023" starttimestamp="1701878487122" timestamp="971613" timestamp2="971613">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="395" _type="InsertStringCommand" date="Wed Dec 06 11:17:38 EST 2023" starttimestamp="1701878487122" timestamp="971671" timestamp2="971671">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="397" _type="InsertStringCommand" date="Wed Dec 06 11:17:39 EST 2023" starttimestamp="1701878487122" timestamp="971892" timestamp2="971892">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="399" _type="InsertStringCommand" date="Wed Dec 06 11:17:39 EST 2023" starttimestamp="1701878487122" timestamp="972161" timestamp2="972161">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="401" _type="InsertStringCommand" date="Wed Dec 06 11:17:39 EST 2023" starttimestamp="1701878487122" timestamp="972333" timestamp2="972333">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="403" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:39 EST 2023" starttimestamp="1701878487122" timestamp="972733" />
  <Command __id="404" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Dec 06 11:17:41 EST 2023" starttimestamp="1701878487122" timestamp="974164" />
  <Command __id="406" _type="InsertStringCommand" date="Wed Dec 06 11:17:41 EST 2023" starttimestamp="1701878487122" timestamp="974586" timestamp2="974586">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="408" _type="InsertStringCommand" date="Wed Dec 06 11:17:41 EST 2023" starttimestamp="1701878487122" timestamp="974764" timestamp2="974764">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="410" _type="InsertStringCommand" date="Wed Dec 06 11:17:42 EST 2023" starttimestamp="1701878487122" timestamp="974894" timestamp2="974894">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="411" _type="ShellCommand" date="Wed Dec 06 11:17:42 EST 2023" starttimestamp="1701878487122" timestamp="975661" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="412" _type="ShellCommand" date="Wed Dec 06 11:17:43 EST 2023" starttimestamp="1701878487122" timestamp="976347" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="414" _type="InsertStringCommand" date="Wed Dec 06 11:17:43 EST 2023" starttimestamp="1701878487122" timestamp="976785" timestamp2="976785">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="416" _type="InsertStringCommand" date="Wed Dec 06 11:17:44 EST 2023" starttimestamp="1701878487122" timestamp="976916" timestamp2="976916">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="418" _type="InsertStringCommand" date="Wed Dec 06 11:17:44 EST 2023" starttimestamp="1701878487122" timestamp="977032" timestamp2="977032">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="420" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:44 EST 2023" starttimestamp="1701878487122" timestamp="977396" />
  <Command __id="422" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:44 EST 2023" starttimestamp="1701878487122" timestamp="977515" />
  <Command __id="424" _type="InsertStringCommand" date="Wed Dec 06 11:17:44 EST 2023" starttimestamp="1701878487122" timestamp="977606" timestamp2="977606">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Dec 06 11:17:45 EST 2023" starttimestamp="1701878487122" timestamp="978099" />
  <Command __id="428" _type="InsertStringCommand" date="Wed Dec 06 11:17:45 EST 2023" starttimestamp="1701878487122" timestamp="978205" timestamp2="978205">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="430" _type="InsertStringCommand" date="Wed Dec 06 11:17:45 EST 2023" starttimestamp="1701878487122" timestamp="978302" timestamp2="978302">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="432" _type="InsertStringCommand" date="Wed Dec 06 11:17:45 EST 2023" starttimestamp="1701878487122" timestamp="978629" timestamp2="978629">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="434" _type="InsertStringCommand" date="Wed Dec 06 11:17:45 EST 2023" starttimestamp="1701878487122" timestamp="978806" timestamp2="978806">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="436" _type="InsertStringCommand" date="Wed Dec 06 11:17:46 EST 2023" starttimestamp="1701878487122" timestamp="978913" timestamp2="978913">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="438" _type="InsertStringCommand" date="Wed Dec 06 11:17:46 EST 2023" starttimestamp="1701878487122" timestamp="979088" timestamp2="979088">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="451" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Wed Dec 06 11:17:58 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="991450" type="Run" />
  <Command __id="452" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Wed Dec 06 11:17:58 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="991450" type="Run" />
  <Command __id="453" _type="ShellCommand" date="Wed Dec 06 11:17:58 EST 2023" starttimestamp="1701878487122" timestamp="991795" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="454" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998081" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"6"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="455" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998082" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="456" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998088" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="457" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998088" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="458" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998089" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="459" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998090" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="460" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998118" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):35"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="461" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998119" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):36
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="462" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998121" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶¶"), Diff(DELETE,"Test execution time (ms):36¶")]]]></diff>
  </Command>
  <Command __id="463" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998121" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="464" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998122" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="465" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998123" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="466" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998124" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="467" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998125" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="468" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998125" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="469" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998126" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="470" _type="ConsoleOutput" date="Wed Dec 06 11:18:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="998129" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="471" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999116" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentOr"), Diff(INSERT,"execution time (ms):1¶Test Result:LispLambda"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="472" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999117" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:LispLambdaChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="473" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999118" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="474" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999123" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="475" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999124" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"isp"), Diff(INSERT,"oad"), Diff(EQUAL,"LambdaChecker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="476" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999125" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="477" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999126" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="478" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999128" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="479" _type="ConsoleOutput" date="Wed Dec 06 11:18:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="999129" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="480" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:06 EST 2023" starttimestamp="1701878487122" timestamp="999134">
    <CSVRow><![CDATA[184,Wed Dec 06 11:18:06 EST 2023,53,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,1,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 , , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="481" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:06 EST 2023" starttimestamp="1701878487122" timestamp="999134">
    <CSVRow><![CDATA[184,Wed Dec 06 11:18:06 EST 2023,53,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,1,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 , , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="482" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001773" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLambda"), Diff(INSERT,"Greater"), Diff(EQUAL,"Checker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="483" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001775" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test Result:GreaterChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="484" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001776" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="485" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001776" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="486" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001779" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="487" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001780" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="488" _type="ConsoleOutput" date="Wed Dec 06 11:18:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1001782" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="489" _type="ConsoleOutput" date="Wed Dec 06 11:18:11 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1003958" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="490" _type="ConsoleOutput" date="Wed Dec 06 11:18:11 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1003960" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:DerivedSafeChecker,100.0% complete,30.0,30.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:DerivedSafeChecker,100.0% complete,30.0,30.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="491" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006015" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:CondChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"DerivedSafe"), Diff(INSERT,"Cond"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="492" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006018" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:CondChecker,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="493" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006018" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="494" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006019" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="495" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006020" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="496" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006021" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="497" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006022" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="498" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006023" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="499" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006024" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="500" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006025" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="501" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006026" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="502" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006027" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="503" _type="ConsoleOutput" date="Wed Dec 06 11:18:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1006029" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CombinationChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CombinationChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="504" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007800" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LispSetqChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Combination"), Diff(INSERT,"LispSetq"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="505" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007802" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:LispSetqChecker2,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:LispSetqChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="506" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007803" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:LispSetqChecker2,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="507" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007804" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadSetqChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="508" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007805" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadSetqChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="509" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007807" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadSetqChecker2,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="510" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007808" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadSetqChecker2,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="511" _type="ConsoleOutput" date="Wed Dec 06 11:18:14 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1007809" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadSetqChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="512" _type="ConsoleOutput" date="Wed Dec 06 11:18:17 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1010648" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (25)
 |- index (24)
  |~ OperationRegistererImpl.java (49)
  |~ CondEvaluator.java (34)
  |~ ClassRegistryImpl.java (157)
  |~ BasicExpressionEvaluatorImpl.java (34)
  |~ SetqEvaluator.java (22)
  |~ index.java (20)
  |~ LoadEvaluator.java (51)
  |~ LesserEqualEvaluator.java (19)
  |~ AndEvaluator.java (27)
  |~ ListEvaluator.java (25)
  |~ FuncallEvaluator.java (23)
  |~ OrEvaluator.java (30)
  |~ GreaterEvaluator.java (18)
  |~ GreaterEqualEvaluator.java (18)
  |~ ArithmeticEvaluatorHelper.java (58)
  |~ BasicExpressionImpl.java (57)
  |~ NotEvaluator.java (23)
  |~ EvalEvaluator.java (16)
  |~ LambdaEvaluator.java (42)
  |~ LesserEvaluator.java (21)
  |~ IdentifierAtomImpl.java (28)
  |~ RunF23A5Tests.java (28)
  |~ QuoteEvaluator.java (16)
  |~ EnvironmentImpl.java (54)

Attempting to match to the structure:
|- .* (19)
 |- [a-z]?.*[Ll]ogical.* (3)
  |~ AndEval.*.java (0)
  |~ OrEval.*.java (0)
  |~ NotEval.*.java (0)
 |- [a-z]?.*[Rr]elational.* (4)
  |~ G.*T.*Eval.*.java (0)
  |~ L.*T.*Eval.*.java (0)
  |~ G.*T.*E.*Eval.*.java (0)
  |~ L.*T.*E.*Eval.*.java (0)
 |- [a-z]?.*[Ee]xpression.* (5)
  |~ QuoteEval.*.java (0)
  |~ EvalEval.*.java (0)
  |~ CondEval.*.java (0)
  |~ LoadEval.*.java (0)
  |~ ListEval.*.java (0)
 |- [a-z]?.*[Ff]unctional.* (3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadSetqChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (25)¶ |- index (24)¶  |~ OperationRegistererImpl.java (49)¶  |~ CondEvaluator.java (34)¶  |~ ClassRegistryImpl.java (157)¶  |~ BasicExpressionEvaluatorImpl.java (34)¶  |~ SetqEvaluator.java (22)¶  |~ index.java (20)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (27)¶  |~ ListEvaluator.java (25)¶  |~ FuncallEvaluator.java (23)¶  |~ OrEvaluator.java (30)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (58)¶  |~ BasicExpressionImpl.java (57)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (16)¶  |~ LambdaEvaluator.java (42)¶  |~ LesserEvaluator.java (21)¶  |~ IdentifierAtomImpl.java (28)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (16)¶  |~ EnvironmentImpl.java (54)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="514" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[185,Wed Dec 06 11:18:08 EST 2023,53,0,RelationalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,2,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="515" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[185,Wed Dec 06 11:18:08 EST 2023,53,0,RelationalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,2,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="516" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[186,Wed Dec 06 11:18:11 EST 2023,53,0,A6FuncallSocialDistanceSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,3,true,DerivedSafeChecker , , ,DerivedSafeChecker-(30.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="517" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[186,Wed Dec 06 11:18:11 EST 2023,53,0,A6FuncallSocialDistanceSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,3,true,DerivedSafeChecker , , ,DerivedSafeChecker-(30.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="518" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[187,Wed Dec 06 11:18:13 EST 2023,53,0,A6BasicOperationSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,4,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(10.0/10.0) CombinationChecker-(10.0/10.0) CondChecker-(10.0/10.0) EvalChecker-(10.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="519" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[187,Wed Dec 06 11:18:13 EST 2023,53,0,A6BasicOperationSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,4,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(10.0/10.0) CombinationChecker-(10.0/10.0) CondChecker-(10.0/10.0) EvalChecker-(10.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="520" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[188,Wed Dec 06 11:18:14 EST 2023,53,0,LispSetqSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,5,true,LispSetqChecker LispSetqChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 , , ,LispSetqChecker-(10.0/10.0) LispSetqChecker2-(10.0/10.0) LoadSetqChecker-(15.0/15.0) LoadSetqChecker2-(15.0/15.0) LoadSetqChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="521" _type="LocalChecksRawCommand" date="Wed Dec 06 11:18:17 EST 2023" starttimestamp="1701878487122" timestamp="1010651">
    <CSVRow><![CDATA[188,Wed Dec 06 11:18:14 EST 2023,53,0,LispSetqSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker EnvironmentCallsGetParent FuncallCallsExpressionFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,90,5,true,LispSetqChecker LispSetqChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 , , ,LispSetqChecker-(10.0/10.0) LispSetqChecker2-(10.0/10.0) LoadSetqChecker-(15.0/15.0) LoadSetqChecker2-(15.0/15.0) LoadSetqChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="513" _type="ConsoleOutput" date="Wed Dec 06 11:18:17 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1010652" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):36
Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (25)¶ |- index (24)¶  |~ OperationRegistererImpl.java (49)¶  |~ CondEvaluator.java (34)¶  |~ ClassRegistryImpl.java (157)¶  |~ BasicExpressionEvaluatorImpl.java (34)¶  |~ SetqEvaluator.java (22)¶  |~ index.java (20)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (27)¶  |~ ListEvaluator.java (25)¶  |~ FuncallEvaluator.java (23)¶  |~ OrEvaluator.java (30)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (58)¶  |~ BasicExpressionImpl.java (57)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (16)¶  |~ LambdaEvaluator.java (42)¶  |~ LesserEvaluator.java (21)¶  |~ IdentifierAtomImpl.java (28)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (16)¶  |~ EnvironmentImpl.java (54)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)"), Diff(INSERT,"Test execution time (ms):36¶Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="522" _type="ConsoleOutput" date="Wed Dec 06 11:18:17 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1010660" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Wed Dec 06 11:18:17 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):36¶Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(INSERT,"Building symbol table and running first pass checks:Wed Dec 06 11:18:17 EST 2023"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="523" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011311" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:38
Running second pass checks Wed Dec 06 11:18:18 EST 2023
Start O(n2) inter- and intra class method calls:Wed Dec 06 11:18:18 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:38¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Wed Dec 06 11:18:18 EST 2023¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Wed Dec 06 11:18:1"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EST 2023¶")]]]></diff>
  </Command>
  <Command __id="524" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011321" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Wed Dec 06 11:18:18 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:38¶Running second pass checks Wed Dec 06 11:18:18 EST 2023¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Wed Dec 06 11:18:18 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="525" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011714" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Wed Dec 06 11:18:18 EST 2023
Generating checks:Wed Dec 06 11:18:18 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Wed Dec 06 11:18:18 EST 2023¶Generating check"), Diff(EQUAL,"s:Wed Dec 06 11:18:18 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="526" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011721" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Wed Dec 06 11:18:18 EST 2023
Generating externals:Wed Dec 06 11:18:18 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Wed Dec 06 11:18:18 EST 2023¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Wed Dec 06 11:18:18 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="527" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011752" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Wed Dec 06 11:18:18 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"Generating checks:Wed Dec 06 11:18:18 EST 2023¶"), Diff(EQUAL,"Generating externals:Wed Dec 06 11:18:18 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="528" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011762" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1112
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Wed Dec 06 11:18:18 EST 2023"), Diff(INSERT,"Test execution time (ms):1112"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="529" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011763" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsGetParent,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1112"), Diff(INSERT,"Result:EnvironmentCallsGetParent,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="530" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011769" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsGetParent,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="531" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011770" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="532" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011776" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="533" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011776" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="534" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011781" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="535" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011782" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="536" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011785" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="537" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011786" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="538" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011790" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="539" _type="ConsoleOutput" date="Wed Dec 06 11:18:18 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1011791" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LambdaCallsLambdaFactory,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:LambdaCallsLambdaFactory,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="781" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val]]></CSVRow>
  </Command>
  <Command __id="782" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]]]></CSVRow>
  </Command>
  <Command __id="783" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="784" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="785" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="786" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="787" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="788" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="789" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="790" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="791" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="792" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="793" _type="CheckStyleCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020585">
    <CSVRow><![CDATA[131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="548" _type="ConsoleOutput" date="Wed Dec 06 11:18:27 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1020622" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"190"), Diff(INSERT,"56"), Diff(EQUAL,"6)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"585"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"1538"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:1"), Diff(DELETE,"406"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1357"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"2"), Diff(EQUAL,"78)¶	at "), Diff(DELETE,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"27"), Diff(INSERT,"5"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"640"), Diff(INSERT,"29"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"501"), Diff(INSERT,"7"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRun"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"321"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRun"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"491"), Diff(INSERT,"5"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"448"), Diff(INSERT,"26"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRun"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"2307"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Componen"), Diff(INSERT,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(EQUAL,"t.java:"), Diff(DELETE,"4843"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"721"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"715"), Diff(INSERT,"191"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(INSERT,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(EQUAL,"Access"), Diff(INSERT,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"ava.security.ProtectionDomain$JavaSecurity"), Diff(INSERT,"dk.internal.reflect.DelegatingMethod"), Diff(EQUAL,"Access"), Diff(INSERT,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"95"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(INSERT,"base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"743"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"270"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMetho"), Diff(EQUAL,"d.java:2"), Diff(DELETE,"03"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"09"), Diff(INSERT,"444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThrea"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicComman"), Diff(EQUAL,"d.java:"), Diff(INSERT,"6"), Diff(EQUAL,"9"), Diff(DELETE,"0"), Diff(EQUAL,")¶"), Diff(DELETE,"¶Test execution time (ms):3¶")]]]></diff>
  </Command>
  <Command __id="794" _type="ExceptionCommand" date="Wed Dec 06 11:18:27 EST 2023" starttimestamp="1701878487122" timestamp="1020628" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):3
Test Result:LispIsListChecker4,0.0% complete,0.0,15.0,Expected strings:NILactual string 

java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="795" _type="ShellCommand" date="Wed Dec 06 11:18:34 EST 2023" starttimestamp="1701878487122" timestamp="1027732" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="796" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Wed Dec 06 11:18:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1027734" type="Run" />
  <Command __id="797" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Wed Dec 06 11:18:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1027734" type="Run" />
  <Command __id="798" _type="MoveCaretCommand" caretOffset="697" date="Wed Dec 06 11:18:35 EST 2023" docOffset="933" starttimestamp="1701878487122" timestamp="1028817" />
  <Command __id="799" _type="MoveCaretCommand" caretOffset="651" date="Wed Dec 06 11:18:36 EST 2023" docOffset="887" starttimestamp="1701878487122" timestamp="1029242" />
  <Command __id="800" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 11:18:36 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="1029547" />
  <Command __id="801" _type="MoveCaretCommand" caretOffset="553" date="Wed Dec 06 11:18:36 EST 2023" docOffset="789" starttimestamp="1701878487122" timestamp="1029801" />
  <Command __id="802" _type="MoveCaretCommand" caretOffset="697" date="Wed Dec 06 11:18:37 EST 2023" docOffset="933" starttimestamp="1701878487122" timestamp="1030051" />
  <Command __id="803" _type="MoveCaretCommand" caretOffset="553" date="Wed Dec 06 11:18:37 EST 2023" docOffset="789" starttimestamp="1701878487122" timestamp="1030293" />
  <Command __id="804" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 11:18:37 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="1030494" />
  <Command __id="805" _type="MoveCaretCommand" caretOffset="553" date="Wed Dec 06 11:18:37 EST 2023" docOffset="789" starttimestamp="1701878487122" timestamp="1030774" />
  <Command __id="806" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 11:18:38 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="1031020" />
  <Command __id="807" _type="MoveCaretCommand" caretOffset="553" date="Wed Dec 06 11:18:38 EST 2023" docOffset="789" starttimestamp="1701878487122" timestamp="1031318" />
  <Command __id="808" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 11:18:38 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="1031527" />
  <Command __id="823" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:18:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1043617" type="Run" />
  <Command __id="824" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:18:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1043617" type="Run" />
  <Command __id="825" _type="ShellCommand" date="Wed Dec 06 11:18:51 EST 2023" starttimestamp="1701878487122" timestamp="1043971" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="826" _type="ShellCommand" date="Wed Dec 06 11:19:07 EST 2023" starttimestamp="1701878487122" timestamp="1060827" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="827" _type="ConsoleOutput" date="Wed Dec 06 11:19:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1061587" type="ConsoleOutput">
    <outputString><![CDATA[(setq y 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69"), Diff(INSERT,"(setq y 5"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="828" _type="PasteCommand" date="Wed Dec 06 11:19:08 EST 2023" starttimestamp="1701878487122" timestamp="1061591" />
  <Command __id="829" _type="ConsoleOutput" date="Wed Dec 06 11:19:08 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1061599" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq y 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="830" _type="ShellCommand" date="Wed Dec 06 11:19:09 EST 2023" starttimestamp="1701878487122" timestamp="1062331" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="831" _type="ShellCommand" date="Wed Dec 06 11:19:11 EST 2023" starttimestamp="1701878487122" timestamp="1064508" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="832" _type="PasteCommand" date="Wed Dec 06 11:19:11 EST 2023" starttimestamp="1701878487122" timestamp="1064712" />
  <Command __id="833" _type="ConsoleOutput" date="Wed Dec 06 11:19:11 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1064715" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"LAMBDA (X) (* X Y)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="834" _type="ShellCommand" date="Wed Dec 06 11:19:12 EST 2023" starttimestamp="1701878487122" timestamp="1065121" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="835" _type="ShellCommand" date="Wed Dec 06 11:19:14 EST 2023" starttimestamp="1701878487122" timestamp="1067541" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="342" _type="Insert" date="Wed Dec 06 11:17:24 EST 2023" docASTNodeCount="182" docActiveCodeLength="1068" docExpressionCount="110" docLength="1136" length="1" offset="843" starttimestamp="1701878487122" timestamp="957191">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="345" _type="Insert" date="Wed Dec 06 11:17:25 EST 2023" docASTNodeCount="193" docActiveCodeLength="1069" docExpressionCount="120" docLength="1137" length="1" offset="886" starttimestamp="1701878487122" timestamp="958129">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="348" _type="Insert" date="Wed Dec 06 11:17:26 EST 2023" docASTNodeCount="193" docActiveCodeLength="1070" docExpressionCount="120" docLength="1138" length="1" offset="889" starttimestamp="1701878487122" timestamp="959092">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="352" _type="Insert" date="Wed Dec 06 11:17:28 EST 2023" docASTNodeCount="180" docActiveCodeLength="1079" docExpressionCount="109" docLength="1147" length="9" offset="890" repeat="9" starttimestamp="1701878487122" timestamp="961765" timestamp2="962643">
    <text><![CDATA[this.getP]]></text>
  </DocumentChange>
  <DocumentChange __id="368" _type="Replace" date="Wed Dec 06 11:17:30 EST 2023" docASTNodeCount="180" docActiveCodeLength="1086" docExpressionCount="109" docLength="1154" endLine="39" insertionLength="11" int_docASTNodeCount="182" int_docActiveCodeLength="1075" int_docExpressionCount="110" int_docLength="1143" length="4" offset="895" startLine="39" starttimestamp="1701878487122" timestamp="963145">
    <deletedText><![CDATA[getP]]></deletedText>
    <insertedText><![CDATA[getParent()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="370" _type="Insert" date="Wed Dec 06 11:17:30 EST 2023" docASTNodeCount="182" docActiveCodeLength="1087" docExpressionCount="110" docLength="1155" length="1" offset="906" starttimestamp="1701878487122" timestamp="963416">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="376" _type="Insert" date="Wed Dec 06 11:17:35 EST 2023" docASTNodeCount="180" docActiveCodeLength="1100" docExpressionCount="109" docLength="1168" length="13" offset="907" repeat="12" starttimestamp="1701878487122" timestamp="968247" timestamp2="972329">
    <text><![CDATA[loopup(arg00)]]></text>
  </DocumentChange>
  <DocumentChange __id="402" _type="Delete" date="Wed Dec 06 11:17:39 EST 2023" docASTNodeCount="180" docActiveCodeLength="1099" docExpressionCount="109" docLength="1167" endLine="39" length="1" offset="918" startLine="39" starttimestamp="1701878487122" timestamp="972729">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="405" _type="Insert" date="Wed Dec 06 11:17:41 EST 2023" docASTNodeCount="201" docActiveCodeLength="1105" docExpressionCount="128" docLength="1173" length="6" offset="919" repeat="6" starttimestamp="1701878487122" timestamp="974581" timestamp2="977029">
    <text><![CDATA[ : rre]]></text>
  </DocumentChange>
  <DocumentChange __id="419" _type="Delete" date="Wed Dec 06 11:17:44 EST 2023" docASTNodeCount="201" docActiveCodeLength="1103" docExpressionCount="128" docLength="1171" endLine="39" length="2" offset="923" repeat="2" startLine="39" starttimestamp="1701878487122" timestamp="977392" timestamp2="977512">
    <text><![CDATA[re]]></text>
  </DocumentChange>
  <DocumentChange __id="423" _type="Insert" date="Wed Dec 06 11:17:44 EST 2023" docASTNodeCount="201" docActiveCodeLength="1104" docExpressionCount="128" docLength="1172" length="1" offset="923" starttimestamp="1701878487122" timestamp="977602">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="425" _type="Delete" date="Wed Dec 06 11:17:45 EST 2023" docASTNodeCount="201" docActiveCodeLength="1103" docExpressionCount="128" docLength="1171" endLine="39" length="1" offset="923" startLine="39" starttimestamp="1701878487122" timestamp="978096">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="427" _type="Insert" date="Wed Dec 06 11:17:45 EST 2023" docASTNodeCount="201" docActiveCodeLength="1109" docExpressionCount="128" docLength="1177" length="6" offset="923" repeat="6" starttimestamp="1701878487122" timestamp="978202" timestamp2="979084">
    <text><![CDATA[etVal;]]></text>
  </DocumentChange>
  <DocumentChange __id="440" _type="Delete" date="Wed Dec 06 11:17:48 EST 2023" docASTNodeCount="201" docActiveCodeLength="1108" docExpressionCount="128" docLength="1176" endLine="39" length="1" offset="910" startLine="39" starttimestamp="1701878487122" timestamp="981381">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="442" _type="Insert" date="Wed Dec 06 11:17:48 EST 2023" docASTNodeCount="201" docActiveCodeLength="1109" docExpressionCount="128" docLength="1177" length="1" offset="910" starttimestamp="1701878487122" timestamp="981569">
    <text><![CDATA[k]]></text>
  </DocumentChange>
  <DocumentChange __id="446" _type="Delete" date="Wed Dec 06 11:17:50 EST 2023" docASTNodeCount="199" docActiveCodeLength="1092" docExpressionCount="127" docLength="1160" endLine="41" length="17" offset="930" startLine="40" starttimestamp="1701878487122" timestamp="983507">
    <text><![CDATA[		return retVal;
]]></text>
  </DocumentChange>
  <Command __id="836" _type="PasteCommand" date="Wed Dec 06 11:19:16 EST 2023" starttimestamp="1701878487122" timestamp="1069029" />
  <Command __id="837" _type="ConsoleOutput" date="Wed Dec 06 11:19:16 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1069570" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '*' must both evaluate to numbers
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (* X Y)"), Diff(INSERT,"Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '*' must both evaluate to numbers"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="838" _type="ConsoleOutput" date="Wed Dec 06 11:19:16 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1069573" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.basic.ProductEvaluator.eval(ProductEvaluator.java:51)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '*' must both evaluate to numbers"), Diff(INSERT,"	at main.lisp.evaluator.basic.ProductEvaluator.eval(ProductEvaluator.java:51)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="839" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:19:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1069574" type="Run" />
  <Command __id="840" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:19:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1069574" type="Run" />
  <Command __id="843" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:20:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1116863" type="Run" />
  <Command __id="844" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:20:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1116863" type="Run" />
  <Command __id="845" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:04 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1116989" type="Run" />
  <Command __id="846" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:04 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1117005" type="Run" />
  <Command __id="847" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:04 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1117140" type="Run" />
  <Command __id="848" _type="ShellCommand" date="Wed Dec 06 11:20:05 EST 2023" starttimestamp="1701878487122" timestamp="1118151" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="849" _type="ShellCommand" date="Wed Dec 06 11:20:06 EST 2023" starttimestamp="1701878487122" timestamp="1119237" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="852" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:13 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1126079" type="Run" />
  <Command __id="853" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Wed Dec 06 11:20:13 EST 2023" starttimestamp="1701878487122" timestamp="1126079" />
  <Command __id="854" _type="ConsoleOutput" date="Wed Dec 06 11:20:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1126109" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.basic.ProductEvaluator.eval(ProductEvaluator.java:51)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="855" _type="ShellCommand" date="Wed Dec 06 11:20:15 EST 2023" starttimestamp="1701878487122" timestamp="1128422" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="860" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:21 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1134039" type="Run" />
  <Command __id="861" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Wed Dec 06 11:20:21 EST 2023" starttimestamp="1701878487122" timestamp="1134039" />
  <Command __id="862" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:22 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1134991" type="Run" />
  <Command __id="863" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Wed Dec 06 11:20:22 EST 2023" starttimestamp="1701878487122" timestamp="1134991" />
  <Command __id="864" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:22 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1135705" type="Run" />
  <Command __id="865" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Wed Dec 06 11:20:22 EST 2023" starttimestamp="1701878487122" timestamp="1135705" />
  <Command __id="866" _type="ConsoleOutput" date="Wed Dec 06 11:20:22 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1135737" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"LAMBDA (X) (* X Y)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="867" _type="ShellCommand" date="Wed Dec 06 11:20:23 EST 2023" starttimestamp="1701878487122" timestamp="1136744" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="873" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1145212" type="Run" />
  <Command __id="874" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Dec 06 11:20:40 EST 2023" starttimestamp="1701878487122" timestamp="1153417" />
  <Command __id="875" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:40 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1153423" type="Run" />
  <Command __id="876" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Dec 06 11:20:41 EST 2023" starttimestamp="1701878487122" timestamp="1154442" />
  <Command __id="877" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1154446" type="Run" />
  <Command __id="878" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Dec 06 11:20:42 EST 2023" starttimestamp="1701878487122" timestamp="1154968" />
  <Command __id="879" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1154973" type="Run" />
  <Command __id="880" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Dec 06 11:20:44 EST 2023" starttimestamp="1701878487122" timestamp="1157674" />
  <Command __id="881" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:44 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1157678" type="Run" />
  <Command __id="882" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Dec 06 11:20:47 EST 2023" starttimestamp="1701878487122" timestamp="1160478" />
  <Command __id="883" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1160482" type="Run" />
  <Command __id="886" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:20:51 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1163976" type="Run" />
  <Command __id="898" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:21:24 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1197693" type="Run" />
  <Command __id="899" _type="ShellCommand" date="Wed Dec 06 11:21:26 EST 2023" starttimestamp="1701878487122" timestamp="1199280" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="900" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:21:26 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1199374" type="Run" />
  <Command __id="901" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:21:27 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1199927" type="Run" />
  <Command __id="841" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:19:58 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1111353">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="902" _type="ShellCommand" date="Wed Dec 06 11:21:32 EST 2023" starttimestamp="1701878487122" timestamp="1205231" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="903" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:21:40 EST 2023" docASTNodeCount="233" docActiveCodeLength="1329" docExpressionCount="157" docLength="1329" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1213565">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import java.util.ArrayList;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.SExpression;

public class LambdaEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		SExpression body = expr.getTail();
		IdentifierAtom ids[] = {};
		if(expr.getHead() instanceof NilAtom) {
			return LambdaFactory.newInstance(ids, body);
		}
        ids = extractIdentifiers(expr.getHead());
        return LambdaFactory.newInstance(ids, body);
	}

    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {
        ArrayList<IdentifierAtom> ids = new ArrayList<>();
        while(!(expr instanceof NilAtom)) {
            ids.add((IdentifierAtom) expr.getHead());
            expr = expr.getTail();
        }
        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];
        for(IdentifierAtom id : ids) {
            idArray[ids.indexOf(id)] = id;
        }
        return idArray;
    }
}]]></snapshot>
  </Command>
  <Command __id="904" _type="MoveCaretCommand" caretOffset="497" date="Wed Dec 06 11:21:40 EST 2023" docOffset="755" starttimestamp="1701878487122" timestamp="1213601" />
  <Command __id="911" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:22:19 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1252839" type="Run" />
  <Command __id="921" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:22:35 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1268450" type="Run" />
  <Command __id="924" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:22:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1274443" type="Run" />
  <Command __id="905" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:21:49 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1222847">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="915" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:22:25 EST 2023" projectName="null" starttimestamp="1701878487122" timestamp="1257939">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="918" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:22:27 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1260002">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="927" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:22:49 EST 2023" projectName="null" starttimestamp="1701878487122" timestamp="1282715">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="931" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Dec 06 11:22:52 EST 2023" starttimestamp="1701878487122" timestamp="1285690" />
  <Command __id="932" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:22:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1285695" type="Run" />
  <Command __id="933" _type="ExceptionCommand" date="Wed Dec 06 11:22:52 EST 2023" starttimestamp="1701878487122" timestamp="1285703" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Arguments for operator '*' must both evaluate to numbers
	at main.lisp.evaluator.basic.ProductEvaluator.eval(ProductEvaluator.java:51)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="934" _type="ConsoleOutput" date="Wed Dec 06 11:22:52 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1285704" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (* X Y"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="935" _type="ConsoleOutput" date="Wed Dec 06 11:22:52 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1285708" type="ConsoleOutput">
    <outputString><![CDATA[
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp."), Diff(DELETE,"evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpression"), Diff(INSERT,"interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazy"), Diff(EQUAL,"Evaluat"), Diff(DELETE,"orImpl"), Diff(INSERT,"ion"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"9"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at main.lisp."), Diff(DELETE,"parser."), Diff(INSERT,"interpre"), Diff(EQUAL,"ter"), Diff(DELETE,"ms"), Diff(EQUAL,".Basic"), Diff(DELETE,"Expression.eval(BasicExpression"), Diff(INSERT,"LispInterpreterController.run(BasicLispInterpreterController"), Diff(EQUAL,".java:2"), Diff(DELETE,"6"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.FuncallEvaluator.evalHelper(FuncallEvaluator"), Diff(INSERT,"main.Main.main(Main"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"1)¶	at index."), Diff(DELETE,"FuncallEvaluator.eval(FuncallEvaluator"), Diff(INSERT,"index.main(index"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="936" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:22:52 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1285712" type="Debug" />
  <Command __id="937" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:22:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1285712" type="Run" />
  <Command __id="938" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 11:22:52 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="1285712" type="Debug" />
  <Command __id="939" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:22:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1285712" type="Run" />
  <Command __id="941" _type="MoveCaretCommand" caretOffset="781" date="Wed Dec 06 11:22:59 EST 2023" docOffset="1064" starttimestamp="1701878487122" timestamp="1292320" />
  <Command __id="942" _type="ShellCommand" date="Wed Dec 06 11:23:20 EST 2023" starttimestamp="1701878487122" timestamp="1313461" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="943" _type="ShellCommand" date="Wed Dec 06 11:23:22 EST 2023" starttimestamp="1701878487122" timestamp="1315730" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="944" _type="MoveCaretCommand" caretOffset="898" date="Wed Dec 06 11:23:22 EST 2023" docOffset="1181" starttimestamp="1701878487122" timestamp="1315793" />
  <Command __id="945" _type="MoveCaretCommand" caretOffset="898" date="Wed Dec 06 11:23:22 EST 2023" docOffset="1181" starttimestamp="1701878487122" timestamp="1315793" />
  <Command __id="946" _type="ShellCommand" date="Wed Dec 06 11:23:28 EST 2023" starttimestamp="1701878487122" timestamp="1321020" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="948" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:23:44 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1337607" type="Run" />
  <Command __id="949" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 11:23:44 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1337608" type="Run" />
  <Command __id="950" _type="ConsoleInput" date="Wed Dec 06 11:23:48 EST 2023" starttimestamp="1701878487122" timestamp="1341788" type="Exception">
    <outputString><![CDATA[(setq x 2)
]]></outputString>
  </Command>
  <Command __id="951" _type="ConsoleOutput" date="Wed Dec 06 11:23:48 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1341799" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="952" _type="ConsoleInput" date="Wed Dec 06 11:23:52 EST 2023" starttimestamp="1701878487122" timestamp="1345390" type="Exception">
    <outputString><![CDATA[(* x 2)
]]></outputString>
  </Command>
  <Command __id="953" _type="ConsoleOutput" date="Wed Dec 06 11:23:52 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="1345395" type="ConsoleOutput">
    <outputString><![CDATA[4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="954" _type="ShellCommand" date="Wed Dec 06 11:24:11 EST 2023" starttimestamp="1701878487122" timestamp="1363994" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="940" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:22:59 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1292284">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="955" _type="ShellCommand" date="Wed Dec 06 11:24:14 EST 2023" starttimestamp="1701878487122" timestamp="1367279" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="956" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:25:17 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1430624">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;


public class FuncallEvaluator implements Evaluator{

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
    }
    public static SExpression evalHelper(SExpression expr, Environment environment) {
    	SExpression tt = expr.getHead().eval(environment);
        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());
        return expression.eval(environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="957" _type="MoveCaretCommand" caretOffset="345" date="Wed Dec 06 11:25:17 EST 2023" docOffset="558" starttimestamp="1701878487122" timestamp="1430664" />
  <Command __id="958" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:25:18 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1431685">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="959" _type="MoveCaretCommand" caretOffset="898" date="Wed Dec 06 11:25:18 EST 2023" docOffset="1181" starttimestamp="1701878487122" timestamp="1431740" />
  <Command __id="960" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:25:21 EST 2023" docASTNodeCount="67" docActiveCodeLength="372" docExpressionCount="47" docLength="372" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1434764">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class QuoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(expr.getTail().isAtom()) {
			return expr.getTail();
		}
		return expr.getTail().getHead();
	}
}
]]></snapshot>
  </Command>
  <Command __id="961" _type="MoveCaretCommand" caretOffset="0" date="Wed Dec 06 11:25:21 EST 2023" docOffset="0" starttimestamp="1701878487122" timestamp="1434823" />
  <Command __id="962" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:25:30 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1443137">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BasicOperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());
	}
	
	public static void registerLogic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());
	}
	
	public static void registerAdvance() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());
	}
	

	@Override
	public void registerOperations() {
		registerAll();
	}
	
	public static void registerAll() {
		registerBasic();
		registerArithmetic();
		registerLogic();
		registerAdvance();
	}

}
]]></snapshot>
  </Command>
  <Command __id="963" _type="MoveCaretCommand" caretOffset="0" date="Wed Dec 06 11:25:30 EST 2023" docOffset="0" starttimestamp="1701878487122" timestamp="1443201" />
  <Command __id="965" _type="SelectTextCommand" caretOffset="165" date="Wed Dec 06 11:25:34 EST 2023" end="165" start="137" starttimestamp="1701878487122" timestamp="1447067" />
  <Command __id="964" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:25:34 EST 2023" docASTNodeCount="96" docActiveCodeLength="627" docExpressionCount="69" docLength="627" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1447013">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.IdentifierAtomFactory;import main.lisp.evaluator.ExpressionEvaluatorFactory;import main.lisp.evaluator.environment.EnvironmentFactory;public class index {	public static void main(String[] args) {		ExpressionEvaluatorFactory.setClass(BasicExpressionEvaluatorImpl.class);		IdentifierAtomFactory.setClass(IdentifierAtomImpl.class);		EnvironmentFactory.setClass(EnvironmentImpl.class);		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="966" _type="MoveCaretCommand" caretOffset="274" date="Wed Dec 06 11:25:35 EST 2023" docOffset="490" starttimestamp="1701878487122" timestamp="1448103" />
  <Command __id="968" _type="MoveCaretCommand" caretOffset="0" date="Wed Dec 06 11:25:40 EST 2023" docOffset="0" starttimestamp="1701878487122" timestamp="1453373" />
  <Command __id="969" _type="InsertStringCommand" date="Wed Dec 06 11:25:47 EST 2023" starttimestamp="1701878487122" timestamp="1460844" timestamp2="1460844">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="967" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:25:40 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1453318">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;	
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;
import gradingTools.comp524f23.assignment6.ClassRegistryA6;

public class ClassRegistryImpl implements ClassRegistryA6 {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return AndEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return OperationRegistererImpl.class;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return NotEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return OrEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

	@Override
	public Class<? extends SExpression> getFunctionCallingSExpression() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");
	}

	@Override
	public Class<? extends Evaluator> getFunctionEvaluator() {
		return FuncallEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLetEvaluator() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");
	}

	@Override
	public Class<? extends Evaluator> getBasicFuncallEvaluator() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");
	}

	@Override
	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {
		return IdentifierAtomImpl.class;
	}

	@Override
	public Class<? extends SExpression> getLambdaCallingSExpression() {
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLambdaEvaluator() {
		return LambdaEvaluator.class;
	}

	@Override
	public Class<? extends Environment> getNestedLexicalEnvironment() {
		// TODO Auto-generated method stub
		return EnvironmentImpl.class;
	}

	@Override
	public Class<? extends Evaluator> getSetqEvaluator() {
		return SetqEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");
	}

}
]]></snapshot>
  </Command>
  <Command __id="970" _type="MoveCaretCommand" caretOffset="3408" date="Wed Dec 06 11:25:56 EST 2023" docOffset="3644" starttimestamp="1701878487122" timestamp="1469446" />
  <Command __id="972" _type="MoveCaretCommand" caretOffset="274" date="Wed Dec 06 11:26:03 EST 2023" docOffset="490" starttimestamp="1701878487122" timestamp="1476212" />
  <Command __id="973" _type="ShellCommand" date="Wed Dec 06 11:26:04 EST 2023" starttimestamp="1701878487122" timestamp="1477375" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="974" _type="BalloonCommand" date="Wed Dec 06 12:15:59 EST 2023" message="*******************************************
Worked 15 minutes(fixed)/24 minutes(context based) from
Wed Dec 06 11:01:27 EST 2023 to Wed Dec 06 11:26:04 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 1 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java
Number of insert: 92
Number of delete: 27
" starttimestamp="1701878487122" timestamp="4472404">
    <fineGrainedWorkTime><![CDATA[24]]></fineGrainedWorkTime>
    <insert><![CDATA[92]]></insert>
    <startTime><![CDATA[1701878487190]]></startTime>
    <endTime><![CDATA[1701879964497]]></endTime>
    <workTime><![CDATA[15]]></workTime>
    <delete><![CDATA[27]]></delete>
  </Command>
  <Command __id="975" _type="ShellCommand" date="Wed Dec 06 12:20:43 EST 2023" starttimestamp="1701878487122" timestamp="4756425" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="976" _type="MoveCaretCommand" caretOffset="98" date="Wed Dec 06 12:20:53 EST 2023" docOffset="314" starttimestamp="1701878487122" timestamp="4766563" />
  <Command __id="977" _type="ShellCommand" date="Wed Dec 06 12:20:56 EST 2023" starttimestamp="1701878487122" timestamp="4769393" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="971" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 11:26:03 EST 2023" docASTNodeCount="96" docActiveCodeLength="627" docExpressionCount="69" docLength="627" projectName="Assignment5" starttimestamp="1701878487122" timestamp="1476166">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.IdentifierAtomFactory;import main.lisp.evaluator.ExpressionEvaluatorFactory;import main.lisp.evaluator.environment.EnvironmentFactory;public class index {	public static void main(String[] args) {		ExpressionEvaluatorFactory.setClass(BasicExpressionEvaluatorImpl.class);		IdentifierAtomFactory.setClass(IdentifierAtomImpl.class);		EnvironmentFactory.setClass(EnvironmentImpl.class);		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="978" _type="ShellCommand" date="Wed Dec 06 12:21:45 EST 2023" starttimestamp="1701878487122" timestamp="4818635" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="979" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 12:21:52 EST 2023" docASTNodeCount="107" docActiveCodeLength="650" docExpressionCount="70" docLength="650" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4825822">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        if(retVal.isPresent()) {            return retVal.get();        }        return this;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="980" _type="MoveCaretCommand" caretOffset="408" date="Wed Dec 06 12:21:52 EST 2023" docOffset="577" starttimestamp="1701878487122" timestamp="4825864" />
  <Command __id="981" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 12:21:54 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4827125">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {    	SExpression tt = expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="982" _type="MoveCaretCommand" caretOffset="345" date="Wed Dec 06 12:21:54 EST 2023" docOffset="558" starttimestamp="1701878487122" timestamp="4827169" />
  <Command __id="983" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 12:21:57 EST 2023" docASTNodeCount="199" docActiveCodeLength="1092" docExpressionCount="127" docLength="1160" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4830162">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return"), Diff(INSERT," (retVal == null && this.getParent() != null) ? this.getParent().lookup(arg0) :"), Diff(EQUAL," retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.environment.AbstractEnvironment;
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class EnvironmentImpl extends AbstractEnvironment{

	public EnvironmentImpl() {
		super();
	}

	public EnvironmentImpl(Environment parent) {
		super(parent);
	}

	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		put(arg0, arg1);
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		
	}

	@Override
	public Environment copy() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		Optional<SExpression> retVal = get(arg0);
		return (retVal == null && this.getParent() != null) ? this.getParent().lookup(arg0) : retVal;
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Environment newChild() {
		return new EnvironmentImpl(this);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="984" _type="MoveCaretCommand" caretOffset="657" date="Wed Dec 06 12:21:57 EST 2023" docOffset="893" starttimestamp="1701878487122" timestamp="4830201" />
  <Command __id="986" _type="MoveCaretCommand" caretOffset="898" date="Wed Dec 06 12:22:01 EST 2023" docOffset="1181" starttimestamp="1701878487122" timestamp="4834391" />
  <Command __id="991" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:22:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4856168" type="Run" />
  <Command __id="992" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:22:23 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4856279" type="Run" />
  <Command __id="993" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:22:23 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4856295" type="Run" />
  <Command __id="994" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:22:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4856452" type="Run" />
  <Command __id="1002" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:22:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4869625" type="Run" />
  <Command __id="1003" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:22:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4869625" type="Run" />
  <Command __id="1004" _type="ConsoleInput" date="Wed Dec 06 12:22:40 EST 2023" starttimestamp="1701878487122" timestamp="4873633" type="Exception">
    <outputString><![CDATA[(setq a 2)
]]></outputString>
  </Command>
  <Command __id="1005" _type="ConsoleOutput" date="Wed Dec 06 12:22:40 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="4873644" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A¶"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="1006" _type="ConsoleInput" date="Wed Dec 06 12:23:05 EST 2023" starttimestamp="1701878487122" timestamp="4898793" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) (+ x a)))
]]></outputString>
  </Command>
  <Command __id="1007" _type="ConsoleOutput" date="Wed Dec 06 12:23:05 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="4898801" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (+ X A)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"LAMBDA (X) (+ X A)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1008" _type="ConsoleInput" date="Wed Dec 06 12:23:13 EST 2023" starttimestamp="1701878487122" timestamp="4906187" type="Exception">
    <outputString><![CDATA[(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="1009" _type="ConsoleOutput" date="Wed Dec 06 12:23:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="4906199" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '+' must both evaluate to numbers
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (+ X A)"), Diff(INSERT,"Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '+' must both evaluate to numbers"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1011" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:13 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4906204" type="Debug" />
  <Command __id="1012" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:23:13 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4906204" type="Run" />
  <Command __id="1013" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:13 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4906204" type="Debug" />
  <Command __id="1014" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:23:13 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4906204" type="Run" />
  <Command __id="1010" _type="ConsoleOutput" date="Wed Dec 06 12:23:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="4906205" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.basic.SumEvaluator.eval(SumEvaluator.java:51)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.IllegalStateException: Arguments for operator '+' must both evaluate to numbers"), Diff(INSERT,"	at main.lisp.evaluator.basic.SumEvaluator.eval(SumEvaluator.java:51)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:29)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:31)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1015" _type="CopyCommand" date="Wed Dec 06 12:23:20 EST 2023" starttimestamp="1701878487122" timestamp="4913060" />
  <Command __id="1016" _type="ShellCommand" date="Wed Dec 06 12:23:20 EST 2023" starttimestamp="1701878487122" timestamp="4913371" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1017" _type="ShellCommand" date="Wed Dec 06 12:23:21 EST 2023" starttimestamp="1701878487122" timestamp="4914026" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1018" _type="ShellCommand" date="Wed Dec 06 12:23:21 EST 2023" starttimestamp="1701878487122" timestamp="4914698" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1019" _type="ShellCommand" date="Wed Dec 06 12:23:22 EST 2023" starttimestamp="1701878487122" timestamp="4915602" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1020" _type="ShellCommand" date="Wed Dec 06 12:23:24 EST 2023" starttimestamp="1701878487122" timestamp="4916957" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1022" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:23:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4923009" type="Run" />
  <Command __id="1023" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:23:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4923009" type="Run" />
  <Command __id="1024" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:30 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4923119" type="Run" />
  <Command __id="1025" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:30 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4923131" type="Run" />
  <Command __id="1026" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:30 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4923273" type="Run" />
  <Command __id="1035" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4935204" type="Run" />
  <Command __id="1036" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Wed Dec 06 12:23:42 EST 2023" starttimestamp="1701878487122" timestamp="4935204" />
  <Command __id="1037" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4935585" type="Run" />
  <Command __id="1038" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:23:43 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4936222" type="Run" />
  <Command __id="1039" _type="ConsoleOutput" date="Wed Dec 06 12:23:43 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="4936238" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (+ X A)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"LAMBDA (X) (+ X A)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1049" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:24:07 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="4960275" type="Run" />
  <Command __id="1050" _type="ShellCommand" date="Wed Dec 06 12:24:08 EST 2023" starttimestamp="1701878487122" timestamp="4961193" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1059" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:24:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5001030" type="Run" />
  <Command __id="985" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 12:22:01 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4834344">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1052" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 12:24:34 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" projectName="Assignment5" starttimestamp="1701878487122" timestamp="4986962">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.BasicLambda;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(BasicLambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1070" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:25:28 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5040976" type="Run" />
  <Command __id="1072" _type="MoveCaretCommand" caretOffset="657" date="Wed Dec 06 12:25:38 EST 2023" docOffset="893" starttimestamp="1701878487122" timestamp="5051560" />
  <Command __id="1073" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 12:25:42 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="5055108" />
  <Command __id="1074" _type="MoveCaretCommand" caretOffset="673" date="Wed Dec 06 12:25:43 EST 2023" docOffset="909" starttimestamp="1701878487122" timestamp="5055976" />
  <Command __id="1075" _type="MoveCaretCommand" caretOffset="664" date="Wed Dec 06 12:25:43 EST 2023" docOffset="900" starttimestamp="1701878487122" timestamp="5056442" />
  <Command __id="1076" _type="MoveCaretCommand" caretOffset="659" date="Wed Dec 06 12:25:44 EST 2023" docOffset="895" starttimestamp="1701878487122" timestamp="5056994" />
  <Command __id="1077" _type="MoveCaretCommand" caretOffset="656" date="Wed Dec 06 12:25:44 EST 2023" docOffset="892" starttimestamp="1701878487122" timestamp="5057787" />
  <Command __id="1078" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:25:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5058171" type="Run" />
  <Command __id="1079" _type="MoveCaretCommand" caretOffset="903" date="Wed Dec 06 12:25:47 EST 2023" docOffset="1139" starttimestamp="1701878487122" timestamp="5060276" />
  <Command __id="1080" _type="MoveCaretCommand" caretOffset="913" date="Wed Dec 06 12:25:48 EST 2023" docOffset="1149" starttimestamp="1701878487122" timestamp="5061013" />
  <Command __id="1081" _type="MoveCaretCommand" caretOffset="905" date="Wed Dec 06 12:25:48 EST 2023" docOffset="1141" starttimestamp="1701878487122" timestamp="5061475" />
  <Command __id="1082" _type="MoveCaretCommand" caretOffset="912" date="Wed Dec 06 12:25:49 EST 2023" docOffset="1148" starttimestamp="1701878487122" timestamp="5061962" />
  <Command __id="1083" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:25:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5062364" type="Run" />
  <Command __id="1084" _type="MoveCaretCommand" caretOffset="910" date="Wed Dec 06 12:25:49 EST 2023" docOffset="1146" starttimestamp="1701878487122" timestamp="5062742" />
  <Command __id="1085" _type="MoveCaretCommand" caretOffset="908" date="Wed Dec 06 12:25:50 EST 2023" docOffset="1144" starttimestamp="1701878487122" timestamp="5063576" />
  <Command __id="1086" _type="MoveCaretCommand" caretOffset="914" date="Wed Dec 06 12:25:51 EST 2023" docOffset="1150" starttimestamp="1701878487122" timestamp="5064193" />
  <Command __id="1087" _type="MoveCaretCommand" caretOffset="909" date="Wed Dec 06 12:25:51 EST 2023" docOffset="1145" starttimestamp="1701878487122" timestamp="5064728" />
  <Command __id="1088" _type="MoveCaretCommand" caretOffset="912" date="Wed Dec 06 12:25:55 EST 2023" docOffset="1148" starttimestamp="1701878487122" timestamp="5068762" />
  <Command __id="1089" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 12:26:00 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="5073569" />
  <Command __id="1090" _type="MoveCaretCommand" caretOffset="912" date="Wed Dec 06 12:26:01 EST 2023" docOffset="1148" starttimestamp="1701878487122" timestamp="5074245" />
  <Command __id="1091" _type="MoveCaretCommand" caretOffset="916" date="Wed Dec 06 12:26:02 EST 2023" docOffset="1152" starttimestamp="1701878487122" timestamp="5075227" />
  <Command __id="1092" _type="MoveCaretCommand" caretOffset="880" date="Wed Dec 06 12:26:03 EST 2023" docOffset="1116" starttimestamp="1701878487122" timestamp="5075924" />
  <Command __id="1093" _type="MoveCaretCommand" caretOffset="913" date="Wed Dec 06 12:26:03 EST 2023" docOffset="1149" starttimestamp="1701878487122" timestamp="5076377" />
  <Command __id="1094" _type="MoveCaretCommand" caretOffset="916" date="Wed Dec 06 12:26:03 EST 2023" docOffset="1152" starttimestamp="1701878487122" timestamp="5076876" />
  <Command __id="1095" _type="MoveCaretCommand" caretOffset="696" date="Wed Dec 06 12:26:06 EST 2023" docOffset="932" starttimestamp="1701878487122" timestamp="5079212" />
  <Command __id="1096" _type="MoveCaretCommand" caretOffset="660" date="Wed Dec 06 12:26:06 EST 2023" docOffset="896" starttimestamp="1701878487122" timestamp="5079661" />
  <Command __id="1097" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 12:26:15 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="5088517" />
  <Command __id="1098" _type="MoveCaretCommand" caretOffset="690" date="Wed Dec 06 12:26:16 EST 2023" docOffset="926" starttimestamp="1701878487122" timestamp="5088959" />
  <Command __id="1099" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 12:26:16 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="5089525" />
  <Command __id="1100" _type="MoveCaretCommand" caretOffset="597" date="Wed Dec 06 12:26:17 EST 2023" docOffset="833" starttimestamp="1701878487122" timestamp="5090045" />
  <Command __id="1101" _type="MoveCaretCommand" caretOffset="553" date="Wed Dec 06 12:26:17 EST 2023" docOffset="789" starttimestamp="1701878487122" timestamp="5090627" />
  <Command __id="1106" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:26:36 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5109154" type="Run" />
  <Command __id="1107" _type="ShellCommand" date="Wed Dec 06 12:26:42 EST 2023" starttimestamp="1701878487122" timestamp="5114891" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1108" _type="ShellCommand" date="Wed Dec 06 12:26:46 EST 2023" starttimestamp="1701878487122" timestamp="5119639" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1109" _type="MoveCaretCommand" caretOffset="768" date="Wed Dec 06 12:26:46 EST 2023" docOffset="1004" starttimestamp="1701878487122" timestamp="5119683" />
  <Command __id="1110" _type="ShellCommand" date="Wed Dec 06 12:26:49 EST 2023" starttimestamp="1701878487122" timestamp="5122392" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1111" _type="ShellCommand" date="Wed Dec 06 12:26:50 EST 2023" starttimestamp="1701878487122" timestamp="5123484" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1112" _type="ShellCommand" date="Wed Dec 06 12:26:55 EST 2023" starttimestamp="1701878487122" timestamp="5128699" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1117" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:17 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5150662" type="Run" />
  <Command __id="1118" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:18 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5151386" type="Run" />
  <Command __id="1119" _type="ShellCommand" date="Wed Dec 06 12:27:22 EST 2023" starttimestamp="1701878487122" timestamp="5155153" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1120" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:22 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5155173" type="Run" />
  <Command __id="1123" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5165753" type="Run" />
  <Command __id="1126" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5171017" type="Run" />
  <Command __id="1128" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181601" type="Run" />
  <Command __id="1129" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181621" type="Run" />
  <Command __id="1130" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181622" type="Run" />
  <Command __id="1131" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181622" type="Run" />
  <Command __id="1132" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181740" type="Run" />
  <Command __id="1133" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181743" type="Run" />
  <Command __id="1134" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181744" type="Run" />
  <Command __id="1135" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:48 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5181744" type="Run" />
  <Command __id="1137" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5185420" type="Run" />
  <Command __id="1138" _type="SelectTextCommand" caretOffset="618" date="Wed Dec 06 12:27:54 EST 2023" end="622" start="618" starttimestamp="1701878487122" timestamp="5187534" />
  <Command __id="1139" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Wed Dec 06 12:27:56 EST 2023" starttimestamp="1701878487122" timestamp="5189233" />
  <Command __id="1140" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:56 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5189242" type="Debug" />
  <Command __id="1141" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:27:56 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5189242" type="Run" />
  <Command __id="1142" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:27:56 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5189242" type="Debug" />
  <Command __id="1143" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:27:56 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5189242" type="Run" />
  <Command __id="1144" _type="MoveCaretCommand" caretOffset="623" date="Wed Dec 06 12:27:57 EST 2023" docOffset="859" starttimestamp="1701878487122" timestamp="5190099" />
  <Command __id="1145" _type="MoveCaretCommand" caretOffset="623" date="Wed Dec 06 12:27:57 EST 2023" docOffset="859" starttimestamp="1701878487122" timestamp="5190234" />
  <Command __id="1071" _type="DiffBasedFileOpenCommand" date="Wed Dec 06 12:25:38 EST 2023" docASTNodeCount="199" docActiveCodeLength="1092" docExpressionCount="127" docLength="1160" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5051518">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return (retVal == null && this.getParent() != null) ? this.getParent().lookup(arg0) : retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1147" _type="Replace" date="Wed Dec 06 12:27:59 EST 2023" docASTNodeCount="196" docActiveCodeLength="1085" docExpressionCount="124" docLength="1153" endLine="39" insertionLength="1" int_docASTNodeCount="197" int_docActiveCodeLength="1084" int_docExpressionCount="125" int_docLength="1152" length="8" offset="850" startLine="39" starttimestamp="1701878487122" timestamp="5192045">
    <deletedText><![CDATA[ == null]]></deletedText>
    <insertedText><![CDATA[.]]></insertedText>
  </DocumentChange>
  <Command __id="1146" _type="SelectTextCommand" caretOffset="614" date="Wed Dec 06 12:27:58 EST 2023" end="622" start="614" starttimestamp="1701878487122" timestamp="5191400" />
  <Command __id="1148" _type="InsertStringCommand" date="Wed Dec 06 12:27:59 EST 2023" starttimestamp="1701878487122" timestamp="5192055" timestamp2="5192055">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1149" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Dec 06 12:27:59 EST 2023" start_end="START" starttimestamp="1701878487122" timestamp="5192066" />
  <Command __id="1153" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Dec 06 12:28:02 EST 2023" start_end="END" starttimestamp="1701878487122" timestamp="5195746" />
  <Command __id="1155" _type="InsertStringCommand" date="Wed Dec 06 12:28:02 EST 2023" starttimestamp="1701878487122" timestamp="5195753" timestamp2="5195753">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1161" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:28:10 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5203063" type="Run" />
  <Command __id="1162" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:28:10 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5203063" type="Run" />
  <Command __id="1163" _type="ConsoleInput" date="Wed Dec 06 12:28:15 EST 2023" starttimestamp="1701878487122" timestamp="5208457" type="Exception">
    <outputString><![CDATA[(setq a 2)
]]></outputString>
  </Command>
  <Command __id="1164" _type="ConsoleOutput" date="Wed Dec 06 12:28:15 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5208468" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (+ X A)"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1165" _type="PasteCommand" date="Wed Dec 06 12:28:16 EST 2023" starttimestamp="1701878487122" timestamp="5209212" />
  <Command __id="1166" _type="ConsoleOutput" date="Wed Dec 06 12:28:16 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5209586" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (+ X A)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"LAMBDA (X) (+ X A)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1169" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:28:23 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5216731" type="Debug" />
  <Command __id="1170" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:28:23 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5216731" type="Run" />
  <Command __id="1171" _type="ProgramExecutionEvent" className="(Unknown)" date="Wed Dec 06 12:28:23 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701878487122" timestamp="5216731" type="Debug" />
  <Command __id="1172" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:28:23 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5216732" type="Run" />
  <Command __id="1173" _type="ShellCommand" date="Wed Dec 06 12:28:26 EST 2023" starttimestamp="1701878487122" timestamp="5219102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1175" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:28:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5223913" type="Run" />
  <Command __id="1176" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:28:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5223913" type="Run" />
  <Command __id="1177" _type="ConsoleOutput" date="Wed Dec 06 12:28:31 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5224589" type="ConsoleOutput">
    <outputString><![CDATA[(setq y 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"(setq y 5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1178" _type="PasteCommand" date="Wed Dec 06 12:28:31 EST 2023" starttimestamp="1701878487122" timestamp="5224592" />
  <Command __id="1179" _type="ConsoleOutput" date="Wed Dec 06 12:28:31 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5224597" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq y 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1180" _type="ShellCommand" date="Wed Dec 06 12:28:32 EST 2023" starttimestamp="1701878487122" timestamp="5225287" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1181" _type="ShellCommand" date="Wed Dec 06 12:28:32 EST 2023" starttimestamp="1701878487122" timestamp="5225652" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1182" _type="ShellCommand" date="Wed Dec 06 12:28:33 EST 2023" starttimestamp="1701878487122" timestamp="5226031" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1183" _type="ShellCommand" date="Wed Dec 06 12:28:35 EST 2023" starttimestamp="1701878487122" timestamp="5228247" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1184" _type="ConsoleOutput" date="Wed Dec 06 12:28:35 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5228502" type="ConsoleOutput">
    <outputString><![CDATA[(setq f (lambda (x) (* x y)))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"(setq f (lambda (x) (* x y)))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1185" _type="PasteCommand" date="Wed Dec 06 12:28:35 EST 2023" starttimestamp="1701878487122" timestamp="5228505" />
  <Command __id="1186" _type="ConsoleOutput" date="Wed Dec 06 12:28:35 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5228510" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq f (lambda (x) (* x y))"), Diff(INSERT,"LAMBDA (X) (* X Y"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1187" _type="ShellCommand" date="Wed Dec 06 12:28:36 EST 2023" starttimestamp="1701878487122" timestamp="5228957" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1188" _type="ShellCommand" date="Wed Dec 06 12:28:38 EST 2023" starttimestamp="1701878487122" timestamp="5231191" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1189" _type="PasteCommand" date="Wed Dec 06 12:28:38 EST 2023" starttimestamp="1701878487122" timestamp="5231466" />
  <Command __id="1190" _type="ConsoleOutput" date="Wed Dec 06 12:28:38 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5231472" type="ConsoleOutput">
    <outputString><![CDATA[10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (* X Y)"), Diff(INSERT,"10"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1191" _type="ShellCommand" date="Wed Dec 06 12:28:39 EST 2023" starttimestamp="1701878487122" timestamp="5232073" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1192" _type="ShellCommand" date="Wed Dec 06 12:28:50 EST 2023" starttimestamp="1701878487122" timestamp="5243690" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1193" _type="ShellCommand" date="Wed Dec 06 12:28:51 EST 2023" starttimestamp="1701878487122" timestamp="5244211" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1194" _type="ShellCommand" date="Wed Dec 06 12:28:53 EST 2023" starttimestamp="1701878487122" timestamp="5246606" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1195" _type="PasteCommand" date="Wed Dec 06 12:28:54 EST 2023" starttimestamp="1701878487122" timestamp="5247342" />
  <Command __id="1196" _type="ConsoleOutput" date="Wed Dec 06 12:28:54 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5247348" type="ConsoleOutput">
    <outputString><![CDATA[6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"10"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1197" _type="ShellCommand" date="Wed Dec 06 12:28:55 EST 2023" starttimestamp="1701878487122" timestamp="5248135" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1198" _type="ShellCommand" date="Wed Dec 06 12:28:59 EST 2023" starttimestamp="1701878487122" timestamp="5252156" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1199" _type="PasteCommand" date="Wed Dec 06 12:28:59 EST 2023" starttimestamp="1701878487122" timestamp="5252420" />
  <Command __id="1200" _type="ConsoleOutput" date="Wed Dec 06 12:28:59 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5252424" type="ConsoleOutput">
    <outputString><![CDATA[12
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1201" _type="ShellCommand" date="Wed Dec 06 12:29:00 EST 2023" starttimestamp="1701878487122" timestamp="5252879" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1207" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:30:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5318571" type="Run" />
  <Command __id="1208" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:30:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5318571" type="Run" />
  <Command __id="1209" _type="ConsoleOutput" date="Wed Dec 06 12:30:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5319374" type="ConsoleOutput">
    <outputString><![CDATA[(setq y 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"12"), Diff(INSERT,"(setq y 5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1210" _type="PasteCommand" date="Wed Dec 06 12:30:06 EST 2023" starttimestamp="1701878487122" timestamp="5319376" />
  <Command __id="1211" _type="ConsoleOutput" date="Wed Dec 06 12:30:06 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5319380" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq y 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1212" _type="ShellCommand" date="Wed Dec 06 12:30:06 EST 2023" starttimestamp="1701878487122" timestamp="5319796" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1213" _type="ShellCommand" date="Wed Dec 06 12:30:09 EST 2023" starttimestamp="1701878487122" timestamp="5322525" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1214" _type="PasteCommand" date="Wed Dec 06 12:30:09 EST 2023" starttimestamp="1701878487122" timestamp="5322829" />
  <Command __id="1215" _type="ConsoleOutput" date="Wed Dec 06 12:30:09 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5322834" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"LAMBDA (X) (* X Y)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1216" _type="ShellCommand" date="Wed Dec 06 12:30:10 EST 2023" starttimestamp="1701878487122" timestamp="5323200" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1217" _type="ShellCommand" date="Wed Dec 06 12:30:13 EST 2023" starttimestamp="1701878487122" timestamp="5326007" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1218" _type="PasteCommand" date="Wed Dec 06 12:30:13 EST 2023" starttimestamp="1701878487122" timestamp="5326300" />
  <Command __id="1219" _type="ConsoleOutput" date="Wed Dec 06 12:30:13 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5326305" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (Y) (FUNCALL F Y)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA ("), Diff(DELETE,"X"), Diff(INSERT,"Y"), Diff(EQUAL,") ("), Diff(DELETE,"* X"), Diff(INSERT,"FUNCALL F"), Diff(EQUAL," Y)¶")]]]></diff>
  </Command>
  <Command __id="1220" _type="ShellCommand" date="Wed Dec 06 12:30:13 EST 2023" starttimestamp="1701878487122" timestamp="5326797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1221" _type="ShellCommand" date="Wed Dec 06 12:30:16 EST 2023" starttimestamp="1701878487122" timestamp="5329071" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1222" _type="PasteCommand" date="Wed Dec 06 12:30:16 EST 2023" starttimestamp="1701878487122" timestamp="5329366" />
  <Command __id="1223" _type="ConsoleOutput" date="Wed Dec 06 12:30:16 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5329374" type="ConsoleOutput">
    <outputString><![CDATA[4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (Y) (FUNCALL F Y)"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1224" _type="ShellCommand" date="Wed Dec 06 12:30:17 EST 2023" starttimestamp="1701878487122" timestamp="5329894" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1230" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:30:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5369748" type="Run" />
  <Command __id="1231" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 12:30:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="5369748" type="Run" />
  <Command __id="1232" _type="ConsoleOutput" date="Wed Dec 06 12:30:57 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5370491" type="ConsoleOutput">
    <outputString><![CDATA[(setq x 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"4"), Diff(INSERT,"(setq x 5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1233" _type="PasteCommand" date="Wed Dec 06 12:30:57 EST 2023" starttimestamp="1701878487122" timestamp="5370493" />
  <Command __id="1234" _type="ConsoleOutput" date="Wed Dec 06 12:30:57 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5370498" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq x 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1235" _type="ShellCommand" date="Wed Dec 06 12:30:58 EST 2023" starttimestamp="1701878487122" timestamp="5370976" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1236" _type="ShellCommand" date="Wed Dec 06 12:31:00 EST 2023" starttimestamp="1701878487122" timestamp="5373416" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1237" _type="ConsoleOutput" date="Wed Dec 06 12:31:00 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5373760" type="ConsoleOutput">
    <outputString><![CDATA[
   (lambda (x) 
      (lambda (y) (* x y))
   )
)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"¶   (lambda (x) ¶      (lambda (y) (* x y))¶   )¶)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1238" _type="PasteCommand" date="Wed Dec 06 12:31:00 EST 2023" starttimestamp="1701878487122" timestamp="5373761" />
  <Command __id="1239" _type="ConsoleOutput" date="Wed Dec 06 12:31:00 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5373765" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (LAMBDA (Y) (* X Y))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶   (lambda (x) ¶      (lambda"), Diff(INSERT,"LAMBDA (X) (LAMBDA"), Diff(EQUAL," ("), Diff(DELETE,"y"), Diff(INSERT,"Y"), Diff(EQUAL,") (* "), Diff(DELETE,"x y"), Diff(INSERT,"X Y"), Diff(EQUAL,"))¶"), Diff(DELETE,"   )¶)¶")]]]></diff>
  </Command>
  <Command __id="1240" _type="ShellCommand" date="Wed Dec 06 12:31:01 EST 2023" starttimestamp="1701878487122" timestamp="5374489" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1241" _type="ShellCommand" date="Wed Dec 06 12:31:04 EST 2023" starttimestamp="1701878487122" timestamp="5377385" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1242" _type="PasteCommand" date="Wed Dec 06 12:31:04 EST 2023" starttimestamp="1701878487122" timestamp="5377668" />
  <Command __id="1243" _type="ConsoleOutput" date="Wed Dec 06 12:31:04 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5377676" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (Y) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) ("), Diff(EQUAL,"LAMBDA (Y) (* X Y)"), Diff(DELETE,")"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1244" _type="ShellCommand" date="Wed Dec 06 12:31:05 EST 2023" starttimestamp="1701878487122" timestamp="5378168" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1245" _type="ShellCommand" date="Wed Dec 06 12:31:07 EST 2023" starttimestamp="1701878487122" timestamp="5380538" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1246" _type="PasteCommand" date="Wed Dec 06 12:31:07 EST 2023" starttimestamp="1701878487122" timestamp="5380781" />
  <Command __id="1247" _type="ConsoleOutput" date="Wed Dec 06 12:31:07 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="5380788" type="ConsoleOutput">
    <outputString><![CDATA[15
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (Y) (* X Y)"), Diff(INSERT,"15"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1248" _type="ShellCommand" date="Wed Dec 06 12:31:08 EST 2023" starttimestamp="1701878487122" timestamp="5381276" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1249" _type="ShellCommand" date="Wed Dec 06 12:31:22 EST 2023" starttimestamp="1701878487122" timestamp="5395486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1250" _type="ShellCommand" date="Wed Dec 06 12:31:34 EST 2023" starttimestamp="1701878487122" timestamp="5407761" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1251" _type="ShellCommand" date="Wed Dec 06 12:31:47 EST 2023" starttimestamp="1701878487122" timestamp="5419981" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1252" _type="ShellCommand" date="Wed Dec 06 12:31:50 EST 2023" starttimestamp="1701878487122" timestamp="5423209" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1253" _type="ShellCommand" date="Wed Dec 06 12:46:08 EST 2023" starttimestamp="1701878487122" timestamp="6281872" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1254" _type="ShellCommand" date="Wed Dec 06 12:46:12 EST 2023" starttimestamp="1701878487122" timestamp="6285660" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1255" _type="ShellCommand" date="Wed Dec 06 12:46:58 EST 2023" starttimestamp="1701878487122" timestamp="6331688" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1256" _type="ShellCommand" date="Wed Dec 06 12:47:01 EST 2023" starttimestamp="1701878487122" timestamp="6334401" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1257" _type="BalloonCommand" date="Wed Dec 06 13:15:59 EST 2023" message="*******************************************
Worked 7 minutes(fixed)/31 minutes(context based) from
Wed Dec 06 12:15:59 EST 2023 to Wed Dec 06 12:47:01 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 1 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java
Number of insert: 3
Number of delete: 0
" starttimestamp="1701878487122" timestamp="8072317">
    <fineGrainedWorkTime><![CDATA[31]]></fineGrainedWorkTime>
    <insert><![CDATA[3]]></insert>
    <startTime><![CDATA[1701882959526]]></startTime>
    <endTime><![CDATA[1701884821523]]></endTime>
    <workTime><![CDATA[7]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="1263" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 13:24:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="8585366" type="Run" />
  <Command __id="1264" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 13:24:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="8585367" type="Run" />
  <Command __id="1265" _type="ConsoleOutput" date="Wed Dec 06 13:24:33 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8586349" type="ConsoleOutput">
    <outputString><![CDATA[(setq x 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"15"), Diff(INSERT,"(setq x 5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1266" _type="PasteCommand" date="Wed Dec 06 13:24:33 EST 2023" starttimestamp="1701878487122" timestamp="8586351" />
  <Command __id="1267" _type="ConsoleOutput" date="Wed Dec 06 13:24:33 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8586356" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq x 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1268" _type="ShellCommand" date="Wed Dec 06 13:24:34 EST 2023" starttimestamp="1701878487122" timestamp="8587227" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1269" _type="ShellCommand" date="Wed Dec 06 13:24:34 EST 2023" starttimestamp="1701878487122" timestamp="8587651" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1270" _type="ConsoleInput" date="Wed Dec 06 13:24:35 EST 2023" starttimestamp="1701878487122" timestamp="8588011" type="Exception">
    <outputString><![CDATA[x
]]></outputString>
  </Command>
  <Command __id="1271" _type="ConsoleOutput" date="Wed Dec 06 13:24:35 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8588016" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="1272" _type="ShellCommand" date="Wed Dec 06 13:24:35 EST 2023" starttimestamp="1701878487122" timestamp="8588220" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1273" _type="ShellCommand" date="Wed Dec 06 13:24:38 EST 2023" starttimestamp="1701878487122" timestamp="8591359" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1274" _type="ConsoleOutput" date="Wed Dec 06 13:24:38 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8591658" type="ConsoleOutput">
    <outputString><![CDATA[
   (lambda (x) 
      (lambda (y) (* x y))
   )
)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"¶   (lambda (x) ¶      (lambda (y) (* x y))¶   )¶)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1275" _type="PasteCommand" date="Wed Dec 06 13:24:38 EST 2023" starttimestamp="1701878487122" timestamp="8591662" />
  <Command __id="1276" _type="ConsoleOutput" date="Wed Dec 06 13:24:38 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8591668" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (LAMBDA (Y) (* X Y))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶   (lambda (x) ¶      (lambda"), Diff(INSERT,"LAMBDA (X) (LAMBDA"), Diff(EQUAL," ("), Diff(DELETE,"y"), Diff(INSERT,"Y"), Diff(EQUAL,") (* "), Diff(DELETE,"x y"), Diff(INSERT,"X Y"), Diff(EQUAL,"))¶"), Diff(DELETE,"   )¶)¶")]]]></diff>
  </Command>
  <Command __id="1277" _type="ShellCommand" date="Wed Dec 06 13:24:39 EST 2023" starttimestamp="1701878487122" timestamp="8592570" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1278" _type="ShellCommand" date="Wed Dec 06 13:24:40 EST 2023" starttimestamp="1701878487122" timestamp="8593307" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1279" _type="ShellCommand" date="Wed Dec 06 13:24:41 EST 2023" starttimestamp="1701878487122" timestamp="8594425" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1280" _type="ShellCommand" date="Wed Dec 06 13:24:44 EST 2023" starttimestamp="1701878487122" timestamp="8596924" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1281" _type="PasteCommand" date="Wed Dec 06 13:24:44 EST 2023" starttimestamp="1701878487122" timestamp="8597225" />
  <Command __id="1282" _type="ConsoleOutput" date="Wed Dec 06 13:24:44 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8597228" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (Y) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) ("), Diff(EQUAL,"LAMBDA (Y) (* X Y)"), Diff(DELETE,")"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1283" _type="ConsoleInput" date="Wed Dec 06 13:24:46 EST 2023" starttimestamp="1701878487122" timestamp="8599769" type="Exception">
    <outputString><![CDATA[(setq timesGenerator    (setq twice (funcall timesGenerator 2))twice
]]></outputString>
  </Command>
  <Command __id="1284" _type="ConsoleOutput" date="Wed Dec 06 13:24:46 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8599774" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (Y) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (Y) (* X Y)¶")]]]></diff>
  </Command>
  <Command __id="1285" _type="ConsoleInput" date="Wed Dec 06 13:24:58 EST 2023" starttimestamp="1701878487122" timestamp="8611399" type="Exception">
    <outputString><![CDATA[x
]]></outputString>
  </Command>
  <Command __id="1286" _type="ConsoleOutput" date="Wed Dec 06 13:24:58 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8611408" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (Y) (* X Y)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1287" _type="ShellCommand" date="Wed Dec 06 13:25:18 EST 2023" starttimestamp="1701878487122" timestamp="8631720" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1288" _type="ShellCommand" date="Wed Dec 06 13:25:41 EST 2023" starttimestamp="1701878487122" timestamp="8654464" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1289" _type="ShellCommand" date="Wed Dec 06 13:25:54 EST 2023" starttimestamp="1701878487122" timestamp="8667868" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1290" _type="ShellCommand" date="Wed Dec 06 13:25:55 EST 2023" starttimestamp="1701878487122" timestamp="8668570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1291" _type="ShellCommand" date="Wed Dec 06 13:25:57 EST 2023" starttimestamp="1701878487122" timestamp="8670259" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1292" _type="ShellCommand" date="Wed Dec 06 13:26:05 EST 2023" starttimestamp="1701878487122" timestamp="8677915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1293" _type="CopyCommand" date="Wed Dec 06 13:26:17 EST 2023" starttimestamp="1701878487122" timestamp="8690435" />
  <Command __id="1294" _type="PasteCommand" date="Wed Dec 06 13:26:18 EST 2023" starttimestamp="1701878487122" timestamp="8691633" />
  <Command __id="1295" _type="ConsoleOutput" date="Wed Dec 06 13:26:19 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8692785" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (LAMBDA (Y) (* X Y))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"LAMBDA (X) (LAMBDA (Y) (* X Y))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1296" _type="ShellCommand" date="Wed Dec 06 13:26:26 EST 2023" starttimestamp="1701878487122" timestamp="8699261" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1302" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Wed Dec 06 13:27:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="8782086" type="Run" />
  <Command __id="1303" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Wed Dec 06 13:27:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701878487122" timestamp="8782087" type="Run" />
  <Command __id="1304" _type="ConsoleOutput" date="Wed Dec 06 13:27:49 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8782663" type="ConsoleOutput">
    <outputString><![CDATA[(setq f (lambda (x) (* x y)))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) (LAMBDA"), Diff(INSERT,"(setq f (lambda"), Diff(EQUAL," ("), Diff(DELETE,"Y"), Diff(INSERT,"x"), Diff(EQUAL,") (* "), Diff(DELETE,"X Y"), Diff(INSERT,"x y)"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="1305" _type="PasteCommand" date="Wed Dec 06 13:27:49 EST 2023" starttimestamp="1701878487122" timestamp="8782666" />
  <Command __id="1306" _type="ConsoleOutput" date="Wed Dec 06 13:27:49 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8782669" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq f (lambda (x) (* x y))"), Diff(INSERT,"LAMBDA (X) (* X Y"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1307" _type="ShellCommand" date="Wed Dec 06 13:27:50 EST 2023" starttimestamp="1701878487122" timestamp="8783284" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1308" _type="ShellCommand" date="Wed Dec 06 13:27:53 EST 2023" starttimestamp="1701878487122" timestamp="8786192" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1309" _type="PasteCommand" date="Wed Dec 06 13:27:53 EST 2023" starttimestamp="1701878487122" timestamp="8786505" />
  <Command __id="1310" _type="ConsoleOutput" date="Wed Dec 06 13:27:53 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8786510" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (Y) (FUNCALL F Y)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA ("), Diff(DELETE,"X"), Diff(INSERT,"Y"), Diff(EQUAL,") ("), Diff(DELETE,"* X"), Diff(INSERT,"FUNCALL F"), Diff(EQUAL," Y)¶")]]]></diff>
  </Command>
  <Command __id="1311" _type="ConsoleInput" date="Wed Dec 06 13:27:59 EST 2023" starttimestamp="1701878487122" timestamp="8792433" type="Exception">
    <outputString><![CDATA[(setq g (lambda (y) (funcall f y)))gg
]]></outputString>
  </Command>
  <Command __id="1312" _type="ConsoleOutput" date="Wed Dec 06 13:27:59 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8792439" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (Y) (FUNCALL F Y)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (Y) (FUNCALL F Y)¶")]]]></diff>
  </Command>
  <Command __id="1313" _type="ConsoleInput" date="Wed Dec 06 13:28:04 EST 2023" starttimestamp="1701878487122" timestamp="8797273" type="Exception">
    <outputString><![CDATA[f
]]></outputString>
  </Command>
  <Command __id="1314" _type="ConsoleOutput" date="Wed Dec 06 13:28:04 EST 2023" overflow="false" starttimestamp="1701878487122" timestamp="8797280" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) (* X Y)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA ("), Diff(DELETE,"Y"), Diff(INSERT,"X"), Diff(EQUAL,") ("), Diff(DELETE,"FUNCALL F"), Diff(INSERT,"* X"), Diff(EQUAL," Y)¶")]]]></diff>
  </Command>
  <Command __id="1315" _type="ShellCommand" date="Wed Dec 06 13:28:07 EST 2023" starttimestamp="1701878487122" timestamp="8799974" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1316" _type="ShellCommand" date="Wed Dec 06 13:28:08 EST 2023" starttimestamp="1701878487122" timestamp="8801117" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1317" _type="ShellCommand" date="Wed Dec 06 13:28:08 EST 2023" starttimestamp="1701878487122" timestamp="8801554" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1318" _type="ShellCommand" date="Wed Dec 06 13:28:09 EST 2023" starttimestamp="1701878487122" timestamp="8802113" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1319" _type="ShellCommand" date="Wed Dec 06 13:28:16 EST 2023" starttimestamp="1701878487122" timestamp="8809292" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1320" _type="ShellCommand" date="Wed Dec 06 13:33:27 EST 2023" starttimestamp="1701878487122" timestamp="9120040" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1321" _type="ShellCommand" date="Wed Dec 06 13:33:31 EST 2023" starttimestamp="1701878487122" timestamp="9124279" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1322" _type="ShellCommand" date="Wed Dec 06 13:35:01 EST 2023" starttimestamp="1701878487122" timestamp="9213905" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1323" _type="ShellCommand" date="Wed Dec 06 13:35:03 EST 2023" starttimestamp="1701878487122" timestamp="9215912" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1324" _type="ShellCommand" date="Wed Dec 06 13:42:29 EST 2023" starttimestamp="1701878487122" timestamp="9662200" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1325" _type="ShellCommand" date="Wed Dec 06 13:42:32 EST 2023" starttimestamp="1701878487122" timestamp="9665628" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1326" _type="ShellCommand" date="Wed Dec 06 13:44:38 EST 2023" starttimestamp="1701878487122" timestamp="9791835" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1327" _type="ShellCommand" date="Wed Dec 06 13:45:18 EST 2023" starttimestamp="1701878487122" timestamp="9831297" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1328" _type="ShellCommand" date="Wed Dec 06 13:45:20 EST 2023" starttimestamp="1701878487122" timestamp="9833443" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1329" _type="ShellCommand" date="Wed Dec 06 13:45:28 EST 2023" starttimestamp="1701878487122" timestamp="9841830" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1330" _type="ShellCommand" date="Wed Dec 06 14:07:49 EST 2023" starttimestamp="1701878487122" timestamp="11181937" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1331" _type="ShellCommand" date="Wed Dec 06 14:07:51 EST 2023" starttimestamp="1701878487122" timestamp="11184306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1332" _type="ShellCommand" date="Wed Dec 06 14:08:17 EST 2023" starttimestamp="1701878487122" timestamp="11210474" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1333" _type="ShellCommand" date="Wed Dec 06 14:08:18 EST 2023" starttimestamp="1701878487122" timestamp="11211389" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1333" _type="ShellCommand" date="Wed Dec 06 14:08:18 EST 2023" starttimestamp="1701878487122" timestamp="11211389" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1334" _type="ShellCommand" date="Wed Dec 06 14:10:27 EST 2023" starttimestamp="1701878487122" timestamp="11340261" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1335" _type="ShellCommand" date="Wed Dec 06 14:10:29 EST 2023" starttimestamp="1701878487122" timestamp="11342539" type="ECLIPSE_CLOSED" />
  <DocumentChange __id="1150" _type="Insert" date="Wed Dec 06 12:28:02 EST 2023" docASTNodeCount="199" docActiveCodeLength="1088" docExpressionCount="127" docLength="1156" length="3" offset="851" repeat="3" starttimestamp="1701878487122" timestamp="5194913" timestamp2="5195546">
    <text><![CDATA[isE]]></text>
  </DocumentChange>
  <DocumentChange __id="1154" _type="Replace" date="Wed Dec 06 12:28:02 EST 2023" docASTNodeCount="199" docActiveCodeLength="1094" docExpressionCount="127" docLength="1162" endLine="39" insertionLength="9" int_docASTNodeCount="196" int_docActiveCodeLength="1085" int_docExpressionCount="124" int_docLength="1153" length="3" offset="851" startLine="39" starttimestamp="1701878487122" timestamp="5195748">
    <deletedText><![CDATA[isE]]></deletedText>
    <insertedText><![CDATA[isEmpty()]]></insertedText>
  </DocumentChange>
</Events>
