<Events startTimestamp="1700502560600" logVersion="1.0.0.202308221630">
  <Command __id="17" _type="ShellCommand" date="Mon Nov 20 12:50:23 EST 2023" starttimestamp="1700502560600" timestamp="62949" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="32" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:52:34 EST 2023" starttimestamp="1700502560600" timestamp="193799" />
  <Command __id="33" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:52:34 EST 2023" starttimestamp="1700502560600" timestamp="193803" />
  <Command __id="34" _type="ShellCommand" date="Mon Nov 20 12:52:41 EST 2023" starttimestamp="1700502560600" timestamp="201194" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="35" _type="ShellCommand" date="Mon Nov 20 12:52:49 EST 2023" starttimestamp="1700502560600" timestamp="208777" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="36" _type="ShellCommand" date="Mon Nov 20 12:52:51 EST 2023" starttimestamp="1700502560600" timestamp="210895" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="37" _type="ShellCommand" date="Mon Nov 20 12:54:08 EST 2023" starttimestamp="1700502560600" timestamp="287635" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="39" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:17 EST 2023" starttimestamp="1700502560600" timestamp="296588" />
  <Command __id="40" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:17 EST 2023" starttimestamp="1700502560600" timestamp="296589" />
  <Command __id="41" _type="ShellCommand" date="Mon Nov 20 12:54:17 EST 2023" starttimestamp="1700502560600" timestamp="296603" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="42" _type="ShellCommand" date="Mon Nov 20 12:54:20 EST 2023" starttimestamp="1700502560600" timestamp="299446" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="43" _type="ShellCommand" date="Mon Nov 20 12:54:21 EST 2023" starttimestamp="1700502560600" timestamp="300653" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="44" _type="ShellCommand" date="Mon Nov 20 12:54:24 EST 2023" starttimestamp="1700502560600" timestamp="303836" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="45" _type="ShellCommand" date="Mon Nov 20 12:54:30 EST 2023" starttimestamp="1700502560600" timestamp="310086" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="46" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:30 EST 2023" starttimestamp="1700502560600" timestamp="310112" />
  <Command __id="47" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:30 EST 2023" starttimestamp="1700502560600" timestamp="310119" />
  <Command __id="49" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 12:54:30 EST 2023" docOffset="0" starttimestamp="1700502560600" timestamp="310319" />
  <Command __id="50" _type="MoveCaretCommand" caretOffset="110" date="Mon Nov 20 12:54:31 EST 2023" docOffset="110" starttimestamp="1700502560600" timestamp="311111" />
  <Command __id="51" _type="MoveCaretCommand" caretOffset="34" date="Mon Nov 20 12:54:32 EST 2023" docOffset="34" starttimestamp="1700502560600" timestamp="311645" />
  <Command __id="52" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 12:54:32 EST 2023" docOffset="14" starttimestamp="1700502560600" timestamp="312058" />
  <Command __id="54" _type="InsertStringCommand" date="Mon Nov 20 12:54:33 EST 2023" starttimestamp="1700502560600" timestamp="312564" timestamp2="312564">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="56" _type="InsertStringCommand" date="Mon Nov 20 12:54:33 EST 2023" starttimestamp="1700502560600" timestamp="312642" timestamp2="312642">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="57" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 12:54:33 EST 2023" starttimestamp="1700502560600" timestamp="312969" />
  <Command __id="59" _type="InsertStringCommand" date="Mon Nov 20 12:54:33 EST 2023" starttimestamp="1700502560600" timestamp="313323" timestamp2="313323">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="61" _type="InsertStringCommand" date="Mon Nov 20 12:54:34 EST 2023" starttimestamp="1700502560600" timestamp="313409" timestamp2="313409">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="63" _type="InsertStringCommand" date="Mon Nov 20 12:54:34 EST 2023" starttimestamp="1700502560600" timestamp="313522" timestamp2="313522">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="65" _type="InsertStringCommand" date="Mon Nov 20 12:54:34 EST 2023" starttimestamp="1700502560600" timestamp="313681" timestamp2="313681">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="67" _type="InsertStringCommand" date="Mon Nov 20 12:54:34 EST 2023" starttimestamp="1700502560600" timestamp="313710" timestamp2="313710">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="69" _type="InsertStringCommand" date="Mon Nov 20 12:54:34 EST 2023" starttimestamp="1700502560600" timestamp="313828" timestamp2="313828">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="71" _type="InsertStringCommand" date="Mon Nov 20 12:54:34 EST 2023" starttimestamp="1700502560600" timestamp="313877" timestamp2="313877">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="73" _type="InsertStringCommand" date="Mon Nov 20 12:54:35 EST 2023" starttimestamp="1700502560600" timestamp="314595" timestamp2="314595">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="75" _type="InsertStringCommand" date="Mon Nov 20 12:54:35 EST 2023" starttimestamp="1700502560600" timestamp="314685" timestamp2="314685">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="77" _type="InsertStringCommand" date="Mon Nov 20 12:54:35 EST 2023" starttimestamp="1700502560600" timestamp="314774" timestamp2="314774">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="79" _type="InsertStringCommand" date="Mon Nov 20 12:54:35 EST 2023" starttimestamp="1700502560600" timestamp="314829" timestamp2="314829">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="81" _type="InsertStringCommand" date="Mon Nov 20 12:54:35 EST 2023" starttimestamp="1700502560600" timestamp="314968" timestamp2="314968">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="82" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 12:54:35 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="314998" />
  <Command __id="83" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:54:35 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="315043" />
  <Command __id="85" _type="InsertStringCommand" date="Mon Nov 20 12:54:35 EST 2023" starttimestamp="1700502560600" timestamp="315187" timestamp2="315187">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="87" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:54:36 EST 2023" starttimestamp="1700502560600" timestamp="315450" />
  <Command __id="89" _type="InsertStringCommand" date="Mon Nov 20 12:54:36 EST 2023" starttimestamp="1700502560600" timestamp="315611" timestamp2="315611">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="91" _type="InsertStringCommand" date="Mon Nov 20 12:54:36 EST 2023" starttimestamp="1700502560600" timestamp="315814" timestamp2="315814">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="93" _type="InsertStringCommand" date="Mon Nov 20 12:54:36 EST 2023" starttimestamp="1700502560600" timestamp="315874" timestamp2="315874">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="95" _type="InsertStringCommand" date="Mon Nov 20 12:54:36 EST 2023" starttimestamp="1700502560600" timestamp="315916" timestamp2="315916">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="97" _type="InsertStringCommand" date="Mon Nov 20 12:54:37 EST 2023" starttimestamp="1700502560600" timestamp="316706" timestamp2="316706">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="98" _type="MoveCaretCommand" caretOffset="138" date="Mon Nov 20 12:54:38 EST 2023" docOffset="138" starttimestamp="1700502560600" timestamp="317560" />
  <Command __id="99" _type="MoveCaretCommand" caretOffset="134" date="Mon Nov 20 12:54:39 EST 2023" docOffset="134" starttimestamp="1700502560600" timestamp="319223" />
  <Command __id="100" _type="SelectTextCommand" caretOffset="99" date="Mon Nov 20 12:54:42 EST 2023" end="133" start="99" starttimestamp="1700502560600" timestamp="321445" />
  <Command __id="102" _type="InsertStringCommand" date="Mon Nov 20 12:54:42 EST 2023" starttimestamp="1700502560600" timestamp="321702" timestamp2="321702">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:54:42 EST 2023" starttimestamp="1700502560600" timestamp="321997" />
  <Command __id="106" _type="InsertStringCommand" date="Mon Nov 20 12:54:42 EST 2023" starttimestamp="1700502560600" timestamp="322173" timestamp2="322173">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="108" _type="InsertStringCommand" date="Mon Nov 20 12:54:42 EST 2023" starttimestamp="1700502560600" timestamp="322341" timestamp2="322341">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="110" _type="InsertStringCommand" date="Mon Nov 20 12:54:43 EST 2023" starttimestamp="1700502560600" timestamp="322435" timestamp2="322435">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="112" _type="InsertStringCommand" date="Mon Nov 20 12:54:43 EST 2023" starttimestamp="1700502560600" timestamp="322482" timestamp2="322482">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="114" _type="InsertStringCommand" date="Mon Nov 20 12:54:43 EST 2023" starttimestamp="1700502560600" timestamp="322692" timestamp2="322692">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="115" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 12:54:43 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="322695" />
  <Command __id="116" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:54:45 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="324858" />
  <Command __id="118" _type="InsertStringCommand" date="Mon Nov 20 12:54:45 EST 2023" starttimestamp="1700502560600" timestamp="324884" timestamp2="324884">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="119" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:54:46 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="326285" />
  <Command __id="120" _type="MoveCaretCommand" caretOffset="115" date="Mon Nov 20 12:54:46 EST 2023" docOffset="115" starttimestamp="1700502560600" timestamp="326385" />
  <Command __id="121" _type="MoveCaretCommand" caretOffset="119" date="Mon Nov 20 12:54:48 EST 2023" docOffset="119" starttimestamp="1700502560600" timestamp="327964" />
  <Command __id="122" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 12:54:48 EST 2023" starttimestamp="1700502560600" timestamp="328096" />
  <Command __id="123" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:48 EST 2023" starttimestamp="1700502560600" timestamp="328196" />
  <Command __id="124" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:48 EST 2023" starttimestamp="1700502560600" timestamp="328203" />
  <Command __id="125" _type="MoveCaretCommand" caretOffset="116" date="Mon Nov 20 12:54:50 EST 2023" docOffset="116" starttimestamp="1700502560600" timestamp="330239" />
  <Command __id="127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:54:51 EST 2023" starttimestamp="1700502560600" timestamp="330490" />
  <Command __id="128" _type="MoveCaretCommand" caretOffset="118" date="Mon Nov 20 12:54:51 EST 2023" docOffset="118" starttimestamp="1700502560600" timestamp="331118" />
  <Command __id="129" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 12:54:51 EST 2023" starttimestamp="1700502560600" timestamp="331242" />
  <Command __id="130" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:51 EST 2023" starttimestamp="1700502560600" timestamp="331343" />
  <Command __id="131" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:54:51 EST 2023" starttimestamp="1700502560600" timestamp="331349" />
  <Command __id="132" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 12:54:54 EST 2023" starttimestamp="1700502560600" timestamp="334245" />
  <Command __id="133" _type="ProgramExecutionEvent" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:54:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="334358" type="Run" />
  <Command __id="134" _type="RunCommand" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:54:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="334358" type="Run" />
  <Command __id="135" _type="ExceptionCommand" date="Mon Nov 20 12:54:55 EST 2023" starttimestamp="1700502560600" timestamp="334600" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="136" _type="ConsoleOutput" date="Mon Nov 20 12:54:55 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="334601" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main)
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="138" _type="ProgramExecutionEvent" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:54:55 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700502560600" timestamp="334605" type="Run" />
  <Command __id="139" _type="ProgramExecutionEvent" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:54:55 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700502560600" timestamp="334605" type="Run" />
  <Command __id="137" _type="ConsoleOutput" date="Mon Nov 20 12:54:55 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="334612" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at main.main.main(main.java:8)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main"), Diff(INSERT,"	at java.base/java.lang.ClassLoader.defineClass1(Native Method)¶	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)¶	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)¶	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)¶	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)¶	at main.main.main(main.java:8"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="140" _type="ShellCommand" date="Mon Nov 20 12:55:04 EST 2023" starttimestamp="1700502560600" timestamp="343640" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="141" _type="ShellCommand" date="Mon Nov 20 12:55:09 EST 2023" starttimestamp="1700502560600" timestamp="348990" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="142" _type="MoveCaretCommand" caretOffset="114" date="Mon Nov 20 12:55:10 EST 2023" docOffset="114" starttimestamp="1700502560600" timestamp="349989" />
  <Command __id="143" _type="MoveCaretCommand" caretOffset="115" date="Mon Nov 20 12:55:11 EST 2023" docOffset="115" starttimestamp="1700502560600" timestamp="350617" />
  <Command __id="144" _type="SelectTextCommand" caretOffset="99" date="Mon Nov 20 12:55:13 EST 2023" end="115" start="99" starttimestamp="1700502560600" timestamp="352590" />
  <Command __id="146" _type="InsertStringCommand" date="Mon Nov 20 12:55:13 EST 2023" starttimestamp="1700502560600" timestamp="353212" timestamp2="353212">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="148" _type="InsertStringCommand" date="Mon Nov 20 12:55:13 EST 2023" starttimestamp="1700502560600" timestamp="353305" timestamp2="353305">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="150" _type="InsertStringCommand" date="Mon Nov 20 12:55:13 EST 2023" starttimestamp="1700502560600" timestamp="353389" timestamp2="353389">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="152" _type="InsertStringCommand" date="Mon Nov 20 12:55:14 EST 2023" starttimestamp="1700502560600" timestamp="353437" timestamp2="353437">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="154" _type="InsertStringCommand" date="Mon Nov 20 12:55:14 EST 2023" starttimestamp="1700502560600" timestamp="353612" timestamp2="353612">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="155" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 12:55:14 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="353618" />
  <Command __id="160" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:55:17 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="356467" />
  <Command __id="162" _type="InsertStringCommand" date="Mon Nov 20 12:55:17 EST 2023" starttimestamp="1700502560600" timestamp="356502" timestamp2="356502">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="163" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:55:19 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="359244" />
  <Command __id="164" _type="MoveCaretCommand" caretOffset="118" date="Mon Nov 20 12:55:19 EST 2023" docOffset="118" starttimestamp="1700502560600" timestamp="359314" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 12:49:20 EST 2023" docASTNodeCount="869" docActiveCodeLength="7064" docExpressionCount="486" docLength="19430" projectName="Assignment0_1" starttimestamp="1700502560600" timestamp="51">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment0_1/src/ConcurrentOddNumbers.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[import static trace.grader.basics.GraderBasicsTraceUtility.printProperty;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import util.misc.ThreadSupport;



/** 
 * If N is the supplied argument, this code uses the fork-join model to generate 
 * N random numbers and identify the odd numbers in this list and their count.
 * 
 * If is not supplied, then a default value of 6 is assumed.
 * 
 * The comments in the class explain the Java thread API features
 * used in this program. which include: 
 * the interface Runnable,  
 * the class Thread, 
 * the Thread constructor,
 * the Thread instance methods start() and join(),
 * the synchronized keyword in a method declaration.
 * 
 * As you will see, this file actually has not only the main class 
 * ConcurrentOddNumbers, but also four other inner classes, OddNumbersWorkerCode, 
 * OddNumbersDispatcherCode, OddNumbersRepository, and OddNumbersUtil.  
 * Hopefully, this separation of concerns make the code more understandable. 

 * The code has three bugs in the following methods, 
 * which you should fix in the order below:
 * 1.	forkAndJoinThreads in class OddNumbersDispatcherCode .
 * 2.	fairThreadRemainderSize in class fairThreadRemainderSize.
 * 3.	incrementTotalOddNumbers in OddNumbersSharedRepository. 
 *      The fix for the bug in this is actually identified � 
 *      your task is to understand why it is a fix.
 *  
 */
public class ConcurrentOddNumbers {
	static int[] randomNumbers; // input list populated based on main argument
	
	/**
	 * 
	 * In general, a thread is an independent unit of steps, coded in its
	 * root method.
	 * 
	 * The steps in its root method can can be executed while other threads are 
	 * executing their root methods. 
	 * 
	 * A thread has its own stack to service the calls made by its root method.
	 * 
	 * In the physical world, a thread corresponds to an actor and its 
	 * root method is the script followed by the actor.
	 * 
	 * The main() method of a class is  executed by a Java created thread, 
	 * called the Main thread. 
	 * 
	 * All methods called directly or indirectly by the main() method are executed
	 * by this thread.
	 * 
	 * The main() method is always at the root of the thread's stack,
	 * and thus, is called the root method of the thread.
	 * 
	 * Other methods such as the dispatcher methods get pushed on top of the
	 * stack when they are called and popped when they return.
	 *  
	 * A thread starts when when its root method is called and terminates
	 * when the root method ends. 
	 * 
	 * In between the start and stop, a stack of calls can be serviced
	 * by a thread.
	 *  
	 * This stack grows and shrinks, as different methods are called.
	 * 
	 * In this example, for instance, some example stack snapshots are: 
	 * ConcurrentOddNumbers.main()->OddNumnbersUtil.fillRandomNumbers
	 * ConcurrentOddNumbers.main()->OddNumnbersUtil.fillRandomNumbers->OddNumbersUtil.generateRandomNumbers 
	 * ConcurrentOddNumbers.main()->ConcurrentOddNumbers.fillOddNumbers()
	 * 
	 */
	public static void main(String[] args) {
		// Trace the start of this method and associated thread
		printProperty("main() called with arguments", 
				Arrays.toString(args));
		
		// Ask the util class to generate a sequence of random numbers
		randomNumbers = OddNumbersUtil.fillRandomNumbers(args); 
		
		// Ask the dispatcher class to "fork" and "join" child threads to identify 
		// which of the  generated numbers are odd.	
		// This code will create worker threads that can work independently
		// of the thread that called main()
		OddNumbersDispatcherCode.fillOddNumbers(randomNumbers);
		
		// Ask the util class to print the odd numbers
		OddNumbersUtil.printOddNumbers(); 
		
		// Trace the end of this method and associated thread
		printProperty("main() terminates with arguments", Arrays.toString(args));
	}
}

/**
 * The Main thread is created automatically by the JVM.
 * 
 * What if an existing thread wants to create new thread, which is required in the
 * fork-join and other forms of concurrency?
 * 
 * In Java, a non-Main thread must execute a parameterless instance 
 * root method called run() in a class that implements the Java Runnable interface.
 * 
 * The following is such a Runnable class, which represents the code executed by
 * each forked worker thread.
 * 
 * Different worker threads are bound to different Runnable instances of this class. 
 * 
 * This binding is done by the dispatcher class defined later.
 * 
 */
class OddNumbersWorkerCode implements Runnable {
	int[] inputList;
	int startIndex, stopIndex;
	
	/**
	 * Unlike the main() method, the run() method does not take parameters.
	 * 
	 * Any parameters needed by it are passed as parameters to the constructor(s) 
	 * of the enclosing Runnable class.
	 * 
	 * In this example, these indicate the list of generated random numbers,
	 * and the portion of this list that this instance of Runnable must process.
	 */
	public OddNumbersWorkerCode(int[] anInputList, int aStartIndex, int aStopIndex) {
		inputList = anInputList;
		startIndex = aStartIndex;
		stopIndex = aStopIndex;
	}
	
	/**
	 * This is an instance method that becomes the root method of a new thread.
	 * It is executed when we start the associated thread.
	 * How to associate itwith a new thread is shown in the next class.
	 */
	@Override
	public void run() {
		printProperty("run() called to start processing subsequence",  
				startIndex + "-" + stopIndex );
		
		// The run method just delegates work to another method.
		fillOddNumbers(inputList, startIndex, stopIndex);
		
		printProperty("run() terminates to end processing of subsequence",  
				startIndex + "-" + stopIndex );
	}	
	/** 
	 * The code executed by this method is a typical iteration loop executed
	 * by worker threads. It finds all odd numbers in the subsequence of the
	 * anInputList between whose indices are >= aStartIndex and < aStopIndex. 
	 */	
	public static void fillOddNumbers(int[] anInputList, 
					int aStartIndex, int aStopIndex) {
		int aNumberOfOddNumbers = 0;		
		for (int index = aStartIndex; index < aStopIndex; index++) {
			// trace the input processed by this iteration
			printProperty("Index", index);
			int aNumber = anInputList[index];
			printProperty("Number", aNumber);
			
			// compute and trace the result computed by this iteration
			boolean isOdd = OddNumbersUtil.isOddNumber(aNumber);
			printProperty("Is Odd", isOdd);
			
			// deposit the result in a shared repository
			if (isOdd) {			
				OddNumbersRepository.addOddNumber(aNumber);
				// This repository is shared with other worker threads and the
				// dispatcher (Main) thread.
				
				aNumberOfOddNumbers++; // updating a local variable
			}			
		}
		
		// This is the number of odd numbers found by the thread that
		// executes this loop. The total number computed by all threads
		// is in the shared repository
		printProperty("Num Odd Numbers", aNumberOfOddNumbers);
	}
}

/**
 * This class contains contains "dispatching" code executed by main().
 * 
 * This code creates the worker threads, associates them with Runnable instances, 
 * starts them, waits for them to finish, and prints the results. 
 * 
 * When the Main thread executes this code,
 * it becomes the dispatching thread in the fork-join model,
 * dispatching work to forked child threads.
 *
 */
class OddNumbersDispatcherCode {	
	
	public static final int NUM_THREADS = 4; // number of forked threads is fixed
	
	// A thread is represented in Java by an instance of the Thread class.
	// So this array keeps track of the worker threads created.
	private static Thread[] threads = new Thread[NUM_THREADS];
	
	// These are the Runnable instances to be bound to the threads above.
	// There is a one to one correspondence between a thread and a Runnable
	private static Runnable[] runnables = 
			new Runnable[NUM_THREADS]; // Code executed by each thread 
	
	/**
	 * This is the method called by main(), and it delegates its work to other methods
	 */
	static void fillOddNumbers(int[] anInputList) {
		OddNumbersRepository.reset(); // initialize the shared repository
		OddNumbersDispatcherCode.concurrentFillOddNumbers(anInputList);
	}	
	
	public static void concurrentFillOddNumbers(int[] anInputList) {
		createRunnables(anInputList); // First create the runnables
		forkAndJoinThreads(); // Next create, start, and join threads
	}
	
	/**
	 * 
	 * The goal of this method to make a set of worker threads execute concurrently,
	 * and then make the forking dispatcher thread  wait for all of them to finish. 
	 * 
	 * In this program you know threads are running concurrently if 
	 *   1. multiple threads produce output.
	 * 	 2. thread output is interleaved or mixed, that is, before a thread finishes 
	 *      its output, one or more of other threads produce output. 
	 * 
	 * In sequential execution, either one thread produces all output, or between
	 * the first and last output of a thread, no other thread produces output.
	 * 
	 * The method is buggy in that it does not quite meet this goal. You need to
	 * find and fix the bug(s) in it. 
	 * 
	 */
	private static void forkAndJoinThreads() {
		// runnable index is also a thread index
		for (int aThreadIndex = 0; aThreadIndex < threads.length; aThreadIndex++) {			
			forkThread(aThreadIndex);
//			joinThread(aThreadIndex);
		}
		for (int aThreadIndex = 0; aThreadIndex < threads.length; aThreadIndex++) {			
//			forkThread(aThreadIndex);
			joinThread(aThreadIndex);
		}
	}
	
	private static void forkThread (int aThreadIndex) {
		// The call new Thread(aRunnable) creates a new thread object and
		// binds it to the Runnable constructor argument. 
		threads[aThreadIndex] = new Thread(runnables[aThreadIndex]);	
					
		printProperty("Starting", OddNumbersUtil.threadName(threads[aThreadIndex]));			 
					threads[aThreadIndex].start(); 
		// The call t.start() starts the thread represented by t, that is, 
		// creates a new stack, and executes the run() method of the 
		// Runnable instance bound to t.
	}
	
	private static void joinThread (int aThreadIndex) {
		try {
			printProperty(
					"Stopping execution until the following thread terminates",
					OddNumbersUtil.threadName(threads[aThreadIndex]));
			threads[aThreadIndex].join(); 
			// t.join blocks the calling thread until t finishes,
			// that is, stops the caller from executing the next instruction
			// until t finishes executing its run method. 
			
			// This blocking akin to a readLine input call blocking the caller 
			// until the user types a line. 
			
			// Thus, this call reduces the concurrency in the system, as it
			// makes the joining thread wait until the joined thread t finishes.				
			// In other words, even though the joining thread *exists* concurrently
			// with the joined thread, it is not allowed to execute concurrently 
			// with it. 
			
			// If t has finished executing when t.join() is called, the call
			// does not block the joining thread.
			
			// A thread can join multiple threads, one at a time, by
			// making a series of such calls on each of these threads
			printProperty(
					"Resuming execution as the following thread has terminated", 
					OddNumbersUtil.threadName(threads[aThreadIndex]));
		} catch (InterruptedException e) {				
			e.printStackTrace();
			// The joined thread may be interrupted while the joiner thread
			// is waiting for it to finish. If this happens the joiner
			// unblocks, and services an InterruptedException.
		}		
	}
	
	/**
	 * This method decomposes the work of processing the random numbers 
	 * into a bunch of Runnable instances, one for each worker thread
	 * to be started. 
	 * 
	 * A decomposed work unit is a subsequence of the input random number sequence.
	 *  
	 * It is represented by the start and end indices of this portion.	  
	 * 
	 */
	private static void createRunnables(int[] randomNumbers) {
		int aStartIndex = 0;
		for (int aThreadIndex = 0; aThreadIndex < NUM_THREADS; aThreadIndex++) {
			int aProblemSize = threadProblemSize(aThreadIndex, randomNumbers.length);
			int aStopIndex = aStartIndex + aProblemSize;
			runnables[aThreadIndex] = 
			 new OddNumbersWorkerCode(randomNumbers, aStartIndex, aStopIndex);
			aStartIndex = aStopIndex; // next thread's start is this thread's stop
		}		
	}	
	
	/**
	 * This method determines how many elements of the input list, whose size is, 
	 * aProblemSize, will be processed by the thread whose index in the 
	 * thread array is aThreadIndex.
	 *   
	 * The problem may not be evenly divided among the threads. The thread index is
	 * used to determine which threads do extra work.
	 * 
	 */
	private static int threadProblemSize(int aThreadIndex, int aProblemSize) {
		// Following is the size if the problem can be eveny divided among the threads
		int aMinimumProblemSize = aProblemSize / NUM_THREADS;
		
		// This is the remaining work
		int aRemainder = aProblemSize % NUM_THREADS;
		
		return aMinimumProblemSize + 
			// calculate out how much of the remaining work is done by this thread
			fairThreadRemainderSize(aThreadIndex, aRemainder);
	}		
	
	/**
	 * The goal of this method, as its name suggests, is to divide aRemainder items
	 * work fairly among the available threads, that is,
	 * the differences in the	sizes of the portions is as small as possible.
	 * 
	 * aRemainder is expected to be between 0 and NUM_THREADS - 1;
	 * 
	 * This method is buggy.
	 *
	 */
	private static int fairThreadRemainderSize(int aThreadIndex, int aRemainder) {
		if (aThreadIndex < aRemainder) {
			return 1;
		} else {
			return 0;
		}
	}
}

/**
 * This class represents the data  modified by
 * the worker threads that is output by the dispatcher Main thread. 
 * 
 * Thus, the dispatcher Main thread is the consumer of this information and 
 * the worker threads are the producers of it.
 */
class OddNumbersRepository {
	static List<Integer> oddNumbers;  // variable length output list
	static int totalNumberOddNumbers;
	
	/**
	 * The values must be reset before workers start modifying them. 
	 */
	public static void reset() {
		totalNumberOddNumbers = 0;
		oddNumbers = new ArrayList();
	}
	
	/**
	 * These two static methods are called by the dispatcher thread	
	 */
	public static List<Integer> getOddNumbers() {
		return oddNumbers;
	}	
	public static int getTotalNumberOddNumbers() {
		return totalNumberOddNumbers;
	}
	
	/**
	 * This is a static method that is called by the run methods of 
	 * all worker threads.
	 * 
	 * A method that can be executed by multiple threads is called a shared
	 * method.
	 * 
	 * Such a method can be synchronized or not based on whether
	 * it has the synchronized keyword in its header.
	 * 
	 * Only one synchronized static method of a class can be executed at any time
	 * by any thread.  
	 * The current synchronized method invocation locks the class.
	 * 
	 * Only one synchronized instance method of an object can be executed at any time
	 * by any thread. 
	 * The current synchronized method invocation locks the instance. 
	 * The same instance method can be executed on some other unlocked instance.  
	 * 
	 * Threads that try to execute synchronized methods in locked classes/instances 
	 * wait in queues until the classes/instances are unlocked.
	 * 
	 * Such waiting makes the code safe in that global variables (those not declared
	 * in the method) do not become inconsistent.
	 *
	 * Should this method be synchronized? The answer is yes.
	 * 
	 * To understand this answer, start by looking at the commented code below. 
	 * If you have not done so already, fix the problem with forkAndJoinThreads.
	 * Look at the output of this method and the final results? 
	 * Do they make	sense?
	 * 
	 * Next uncomment the first line in the header to make it synchronized, 
	 * and run the program again.
	 * 
	 * Again, look at the outputs above. Does this now make sense?
	 */
	 synchronized
	 static void incrementTotalOddNumbers() {
		// Here we are simulating register-based increments, if you do not know
		// how that works, think of aRegister as a temporary variable
		 
		int aRegister = totalNumberOddNumbers; // Simulate load memory to register
		printProperty("Loaded total numer of odd numbers", totalNumberOddNumbers);
		
	
		// Before the incremented register is saved to memory, 
				// another concurrent thread may also load
				// the same value for totalNumberOddNumbers in its local register variable.
				// What problems can this cause if the method is not synchronized?	
				
				aRegister++; // increment register		
				
				ThreadSupport.sleep(10);
				// The above sleep call will block the current thread for 10 ms and let
				// some other thread execute before the save operation occurs
				// This call simulates a CPU switching execution to another thread.
		
				totalNumberOddNumbers = aRegister; // Simulate save register to memory
				printProperty("Saved total numer of odd numbers", totalNumberOddNumbers);


	}	
	
	 static void addOddNumber(int aNumber) {
		incrementTotalOddNumbers();
		oddNumbers.add(aNumber);
	}	
}

/**
 * Ignore this class, it has no concurrency concept
 */
class OddNumbersUtil {
	public static final int MAX_RANDOM_NUMBER = 1000;
	public static final int DEFAULT_INPUT_LENGTH = 6;
	static void printOddNumbers() {
		printProperty("Total Num Odd Numbers",  
				OddNumbersRepository.getTotalNumberOddNumbers());
		printProperty("Odd Numbers",
				OddNumbersRepository.getOddNumbers());
	}
	public static int firstArgToInteger(String[] args) {
		// If nothing was passed on the command line, then print error and exit
		
		if (args.length < 1) {
			System.err.println("No argument supplied to the main class, assuming default value of " + DEFAULT_INPUT_LENGTH);
			return DEFAULT_INPUT_LENGTH;
			//System.exit(0);;
		} 
		// Convert the first command line argument to an integer, exit if error
		try {
			return Integer.parseInt(args[0]);
		} catch (Exception ex) {
			System.err.println("Cannot convert argument on command line to integer");
			System.exit(1);
		}
		return -1;
	}
	static int[] fillRandomNumbers(String[] args) {
		int aNumRandomNumbers = firstArgToInteger(args); // get the number from arguments
		int[] aRandomNumbers = generateRandomNumbers(aNumRandomNumbers);
		printProperty("Random Numbers", 
				Arrays.toString(aRandomNumbers));
		return aRandomNumbers;
	}
	private static int[] generateRandomNumbers(int aNumRandomNumbers) {
		int[] retVal = new int[aNumRandomNumbers];
		for (int index = 0; index < retVal.length; index++) {
			double aRandomDouble = Math.random(); // number between 0 and 1
			int aRandomInteger = (int) (aRandomDouble * MAX_RANDOM_NUMBER);
			retVal[index] = aRandomInteger;
		}
		return retVal;
	}

	public static String threadName(Thread aThread) {
		return "Thread " + aThread.getId();
	}

	public static boolean isOddNumber(int aNumber) {
		return aNumber % 2 == 1;
	}	
	
}



]]></snapshot>
  </Command>
  <Command __id="48" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 12:54:30 EST 2023" docASTNodeCount="17" docActiveCodeLength="88" docExpressionCount="5" docLength="122" projectName="Assignment5" starttimestamp="1700502560600" timestamp="310226">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/main/main.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

public class main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="53" _type="Insert" date="Mon Nov 20 12:54:33 EST 2023" docASTNodeCount="21" docActiveCodeLength="103" docExpressionCount="8" docLength="137" length="15" offset="14" repeat="15" starttimestamp="1700502560600" timestamp="312559" timestamp2="315185">
    <text><![CDATA[
import main.m
]]></text>
  </DocumentChange>
  <DocumentChange __id="86" _type="Delete" date="Mon Nov 20 12:54:36 EST 2023" docASTNodeCount="17" docActiveCodeLength="102" docExpressionCount="5" docLength="136" endLine="2" length="1" offset="27" startLine="2" starttimestamp="1700502560600" timestamp="315442">
    <text><![CDATA[m]]></text>
  </DocumentChange>
  <DocumentChange __id="88" _type="Insert" date="Mon Nov 20 12:54:36 EST 2023" docASTNodeCount="21" docActiveCodeLength="107" docExpressionCount="8" docLength="141" length="5" offset="27" repeat="5" starttimestamp="1700502560600" timestamp="315608" timestamp2="316703">
    <text><![CDATA[Main;]]></text>
  </DocumentChange>
  <DocumentChange __id="101" _type="Replace" date="Mon Nov 20 12:54:42 EST 2023" docASTNodeCount="23" docActiveCodeLength="108" docExpressionCount="9" docLength="108" endLine="7" insertionLength="1" int_docASTNodeCount="21" int_docActiveCodeLength="107" int_docExpressionCount="8" int_docLength="107" length="34" offset="99" startLine="7" starttimestamp="1700502560600" timestamp="321695">
    <deletedText><![CDATA[// TODO Auto-generated method stub]]></deletedText>
    <insertedText><![CDATA[m]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="103" _type="Delete" date="Mon Nov 20 12:54:42 EST 2023" docASTNodeCount="21" docActiveCodeLength="107" docExpressionCount="8" docLength="107" endLine="7" length="1" offset="99" startLine="7" starttimestamp="1700502560600" timestamp="321996">
    <text><![CDATA[m]]></text>
  </DocumentChange>
  <DocumentChange __id="105" _type="Insert" date="Mon Nov 20 12:54:42 EST 2023" docASTNodeCount="23" docActiveCodeLength="112" docExpressionCount="9" docLength="112" length="5" offset="99" repeat="5" starttimestamp="1700502560600" timestamp="322172" timestamp2="322691">
    <text><![CDATA[Main.]]></text>
  </DocumentChange>
  <DocumentChange __id="117" _type="Insert" date="Mon Nov 20 12:54:45 EST 2023" docASTNodeCount="26" docActiveCodeLength="123" docExpressionCount="12" docLength="123" length="11" offset="104" starttimestamp="1700502560600" timestamp="324861">
    <text><![CDATA[main(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="126" _type="Delete" date="Mon Nov 20 12:54:51 EST 2023" docASTNodeCount="26" docActiveCodeLength="122" docExpressionCount="12" docLength="122" endLine="8" length="1" offset="115" startLine="7" starttimestamp="1700502560600" timestamp="330481">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="145" _type="Replace" date="Mon Nov 20 12:55:13 EST 2023" docASTNodeCount="23" docActiveCodeLength="107" docExpressionCount="9" docLength="107" endLine="7" insertionLength="1" int_docASTNodeCount="21" int_docActiveCodeLength="106" int_docExpressionCount="8" int_docLength="106" length="16" offset="99" startLine="7" starttimestamp="1700502560600" timestamp="353201">
    <deletedText><![CDATA[Main.main(args);]]></deletedText>
    <insertedText><![CDATA[m]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="147" _type="Insert" date="Mon Nov 20 12:55:13 EST 2023" docASTNodeCount="25" docActiveCodeLength="115" docExpressionCount="11" docLength="115" length="8" offset="100" repeat="8" starttimestamp="1700502560600" timestamp="353304" timestamp2="354720">
    <text><![CDATA[ain.Main]]></text>
  </DocumentChange>
  <DocumentChange __id="161" _type="Replace" date="Mon Nov 20 12:55:17 EST 2023" docASTNodeCount="26" docActiveCodeLength="122" docExpressionCount="12" docLength="122" endLine="7" insertionLength="11" int_docASTNodeCount="23" int_docActiveCodeLength="111" int_docExpressionCount="9" int_docLength="111" length="4" offset="104" startLine="7" starttimestamp="1700502560600" timestamp="356471">
    <deletedText><![CDATA[Main]]></deletedText>
    <insertedText><![CDATA[main(args);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="166" _type="Delete" date="Mon Nov 20 12:55:22 EST 2023" docASTNodeCount="21" docActiveCodeLength="106" docExpressionCount="8" docLength="106" endLine="7" length="16" offset="99" startLine="7" starttimestamp="1700502560600" timestamp="361469">
    <text><![CDATA[main.main(args);]]></text>
  </DocumentChange>
  <Command __id="165" _type="SelectTextCommand" caretOffset="99" date="Mon Nov 20 12:55:21 EST 2023" end="115" start="99" starttimestamp="1700502560600" timestamp="361316" />
  <Command __id="167" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:55:22 EST 2023" starttimestamp="1700502560600" timestamp="361475" />
  <Command __id="169" _type="InsertStringCommand" date="Mon Nov 20 12:55:22 EST 2023" starttimestamp="1700502560600" timestamp="361768" timestamp2="361768">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="171" _type="InsertStringCommand" date="Mon Nov 20 12:55:22 EST 2023" starttimestamp="1700502560600" timestamp="361966" timestamp2="361966">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="173" _type="InsertStringCommand" date="Mon Nov 20 12:55:22 EST 2023" starttimestamp="1700502560600" timestamp="362068" timestamp2="362068">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="175" _type="InsertStringCommand" date="Mon Nov 20 12:55:22 EST 2023" starttimestamp="1700502560600" timestamp="362129" timestamp2="362129">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="177" _type="InsertStringCommand" date="Mon Nov 20 12:55:23 EST 2023" starttimestamp="1700502560600" timestamp="362826" timestamp2="362826">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="178" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 12:55:23 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="362831" />
  <Command __id="179" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:55:24 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="363782" />
  <Command __id="181" _type="InsertStringCommand" date="Mon Nov 20 12:55:24 EST 2023" starttimestamp="1700502560600" timestamp="363790" timestamp2="363790">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="183" _type="InsertStringCommand" date="Mon Nov 20 12:55:25 EST 2023" starttimestamp="1700502560600" timestamp="364974" timestamp2="364974">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="184" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 12:55:26 EST 2023" starttimestamp="1700502560600" timestamp="365617" />
  <Command __id="186" _type="InsertStringCommand" date="Mon Nov 20 12:55:26 EST 2023" starttimestamp="1700502560600" timestamp="365918" timestamp2="365918">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="187" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 12:55:26 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="365923" />
  <Command __id="188" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:55:29 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="368911" />
  <Command __id="190" _type="InsertStringCommand" date="Mon Nov 20 12:55:29 EST 2023" starttimestamp="1700502560600" timestamp="368944" timestamp2="368944">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="191" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 12:55:30 EST 2023" starttimestamp="1700502560600" timestamp="370047" />
  <Command __id="192" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 12:55:30 EST 2023" starttimestamp="1700502560600" timestamp="370199" />
  <Command __id="193" _type="MoveCaretCommand" caretOffset="129" date="Mon Nov 20 12:55:31 EST 2023" docOffset="129" starttimestamp="1700502560600" timestamp="370807" />
  <Command __id="194" _type="MoveCaretCommand" caretOffset="122" date="Mon Nov 20 12:55:33 EST 2023" docOffset="122" starttimestamp="1700502560600" timestamp="373164" />
  <Command __id="195" _type="InsertStringCommand" date="Mon Nov 20 12:55:34 EST 2023" starttimestamp="1700502560600" timestamp="373509" timestamp2="373509">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="196" _type="MoveCaretCommand" caretOffset="123" date="Mon Nov 20 12:55:34 EST 2023" docOffset="123" starttimestamp="1700502560600" timestamp="374058" />
  <Command __id="197" _type="InsertStringCommand" date="Mon Nov 20 12:55:34 EST 2023" starttimestamp="1700502560600" timestamp="374284" timestamp2="374284">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="198" _type="InsertStringCommand" date="Mon Nov 20 12:55:35 EST 2023" starttimestamp="1700502560600" timestamp="375167" timestamp2="375167">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="199" _type="SelectTextCommand" caretOffset="99" date="Mon Nov 20 12:55:37 EST 2023" end="123" start="99" starttimestamp="1700502560600" timestamp="377307" />
  <Command __id="201" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:55:38 EST 2023" starttimestamp="1700502560600" timestamp="377509" />
  <Command __id="202" _type="ShellCommand" date="Mon Nov 20 12:55:38 EST 2023" starttimestamp="1700502560600" timestamp="377720" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="168" _type="Insert" date="Mon Nov 20 12:55:22 EST 2023" docASTNodeCount="25" docActiveCodeLength="119" docExpressionCount="11" docLength="119" length="13" offset="99" repeat="8" starttimestamp="1700502560600" timestamp="361765" timestamp2="365915">
    <text><![CDATA[Main.class().]]></text>
  </DocumentChange>
  <DocumentChange __id="189" _type="Insert" date="Mon Nov 20 12:55:29 EST 2023" docASTNodeCount="28" docActiveCodeLength="130" docExpressionCount="14" docLength="130" length="11" offset="112" starttimestamp="1700502560600" timestamp="368917">
    <text><![CDATA[main(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="200" _type="Delete" date="Mon Nov 20 12:55:38 EST 2023" docASTNodeCount="21" docActiveCodeLength="106" docExpressionCount="8" docLength="106" endLine="7" length="24" offset="99" startLine="7" starttimestamp="1700502560600" timestamp="377503">
    <text><![CDATA[Main.class().main(args);]]></text>
  </DocumentChange>
  <Command __id="203" _type="ShellCommand" date="Mon Nov 20 12:56:36 EST 2023" starttimestamp="1700502560600" timestamp="435946" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="205" _type="InsertStringCommand" date="Mon Nov 20 12:56:37 EST 2023" starttimestamp="1700502560600" timestamp="437286" timestamp2="437286">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="207" _type="InsertStringCommand" date="Mon Nov 20 12:56:38 EST 2023" starttimestamp="1700502560600" timestamp="437504" timestamp2="437504">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="209" _type="InsertStringCommand" date="Mon Nov 20 12:56:38 EST 2023" starttimestamp="1700502560600" timestamp="437587" timestamp2="437587">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="211" _type="InsertStringCommand" date="Mon Nov 20 12:56:38 EST 2023" starttimestamp="1700502560600" timestamp="437642" timestamp2="437642">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="213" _type="InsertStringCommand" date="Mon Nov 20 12:56:38 EST 2023" starttimestamp="1700502560600" timestamp="437819" timestamp2="437819">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="214" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 12:56:38 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="437821" />
  <Command __id="215" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:56:39 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="439309" />
  <Command __id="217" _type="InsertStringCommand" date="Mon Nov 20 12:56:39 EST 2023" starttimestamp="1700502560600" timestamp="439340" timestamp2="439340">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="218" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 12:56:40 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="440351" />
  <Command __id="219" _type="MoveCaretCommand" caretOffset="122" date="Mon Nov 20 12:56:41 EST 2023" docOffset="122" starttimestamp="1700502560600" timestamp="440419" />
  <Command __id="220" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 12:56:41 EST 2023" starttimestamp="1700502560600" timestamp="440868" />
  <Command __id="221" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:56:41 EST 2023" starttimestamp="1700502560600" timestamp="440970" />
  <Command __id="222" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:56:41 EST 2023" starttimestamp="1700502560600" timestamp="440979" />
  <Command __id="223" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 12:56:44 EST 2023" starttimestamp="1700502560600" timestamp="443970" />
  <Command __id="224" _type="ProgramExecutionEvent" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:56:44 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="444080" type="Run" />
  <Command __id="225" _type="RunCommand" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:56:44 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="444080" type="Run" />
  <Command __id="226" _type="ExceptionCommand" date="Mon Nov 20 12:56:44 EST 2023" starttimestamp="1700502560600" timestamp="444145" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="227" _type="ConsoleOutput" date="Mon Nov 20 12:56:44 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="444147" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.ClassLoader.defineClass1(Native Method)¶	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)¶	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)¶	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)¶	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)¶	at main.main.main(main.java:8"), Diff(INSERT,"Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="228" _type="ProgramExecutionEvent" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:56:44 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700502560600" timestamp="444147" type="Run" />
  <Command __id="229" _type="ProgramExecutionEvent" className="/Assignment5/src/main/main.java" date="Mon Nov 20 12:56:44 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700502560600" timestamp="444147" type="Run" />
  <Command __id="230" _type="ConsoleOutput" date="Mon Nov 20 12:56:44 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="444153" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at main.main.main(main.java:8)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.NoClassDefFoundError: main/main (wrong name: main/Main"), Diff(INSERT,"	at java.base/java.lang.ClassLoader.defineClass1(Native Method)¶	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)¶	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)¶	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)¶	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)¶	at main.main.main(main.java:8"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <DocumentChange __id="204" _type="Insert" date="Mon Nov 20 12:56:37 EST 2023" docASTNodeCount="26" docActiveCodeLength="122" docExpressionCount="12" docLength="122" length="16" offset="99" repeat="6" starttimestamp="1700502560600" timestamp="437284" timestamp2="439313">
    <text><![CDATA[Main.main(args);]]></text>
  </DocumentChange>
  <Command __id="233" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 12:56:49 EST 2023" projectName="null" starttimestamp="1700502560600" timestamp="448892">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="237" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 12:56:52 EST 2023" projectName="null" starttimestamp="1700502560600" timestamp="452070">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="247" _type="ShellCommand" date="Mon Nov 20 12:57:12 EST 2023" starttimestamp="1700502560600" timestamp="471400" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="249" _type="MoveCaretCommand" caretOffset="28" date="Mon Nov 20 12:57:13 EST 2023" docOffset="28" starttimestamp="1700502560600" timestamp="472684" />
  <Command __id="250" _type="MoveCaretCommand" caretOffset="75" date="Mon Nov 20 12:57:14 EST 2023" docOffset="75" starttimestamp="1700502560600" timestamp="473584" />
  <Command __id="251" _type="MoveCaretCommand" caretOffset="115" date="Mon Nov 20 12:57:14 EST 2023" docOffset="115" starttimestamp="1700502560600" timestamp="474337" />
  <Command __id="252" _type="SelectTextCommand" caretOffset="99" date="Mon Nov 20 12:57:17 EST 2023" end="115" start="99" starttimestamp="1700502560600" timestamp="476634" />
  <Command __id="253" _type="ShellCommand" date="Mon Nov 20 12:57:17 EST 2023" starttimestamp="1700502560600" timestamp="476875" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="254" _type="ShellCommand" date="Mon Nov 20 12:57:20 EST 2023" starttimestamp="1700502560600" timestamp="479915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="255" _type="ShellCommand" date="Mon Nov 20 12:57:21 EST 2023" starttimestamp="1700502560600" timestamp="481292" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="256" _type="ShellCommand" date="Mon Nov 20 12:57:22 EST 2023" starttimestamp="1700502560600" timestamp="481710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="257" _type="MoveCaretCommand" caretOffset="109" date="Mon Nov 20 12:57:23 EST 2023" docOffset="109" starttimestamp="1700502560600" timestamp="482789" />
  <Command __id="258" _type="ShellCommand" date="Mon Nov 20 12:57:23 EST 2023" starttimestamp="1700502560600" timestamp="483173" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="259" _type="ShellCommand" date="Mon Nov 20 12:57:30 EST 2023" starttimestamp="1700502560600" timestamp="489643" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="260" _type="MoveCaretCommand" caretOffset="29" date="Mon Nov 20 12:57:31 EST 2023" docOffset="29" starttimestamp="1700502560600" timestamp="491161" />
  <Command __id="261" _type="SelectTextCommand" caretOffset="103" date="Mon Nov 20 12:57:33 EST 2023" end="115" start="103" starttimestamp="1700502560600" timestamp="492781" />
  <Command __id="262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:33 EST 2023" starttimestamp="1700502560600" timestamp="493025" />
  <Command __id="263" _type="InsertStringCommand" date="Mon Nov 20 12:57:33 EST 2023" starttimestamp="1700502560600" timestamp="493234" timestamp2="493234">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="264" _type="InsertStringCommand" date="Mon Nov 20 12:57:33 EST 2023" starttimestamp="1700502560600" timestamp="493272" timestamp2="493272">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:34 EST 2023" starttimestamp="1700502560600" timestamp="493793" />
  <Command __id="266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:34 EST 2023" starttimestamp="1700502560600" timestamp="494241" />
  <Command __id="267" _type="InsertStringCommand" date="Mon Nov 20 12:57:35 EST 2023" starttimestamp="1700502560600" timestamp="494439" timestamp2="494439">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="268" _type="InsertStringCommand" date="Mon Nov 20 12:57:36 EST 2023" starttimestamp="1700502560600" timestamp="495828" timestamp2="495828">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="269" _type="InsertStringCommand" date="Mon Nov 20 12:57:37 EST 2023" starttimestamp="1700502560600" timestamp="496984" timestamp2="496984">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="270" _type="InsertStringCommand" date="Mon Nov 20 12:57:45 EST 2023" starttimestamp="1700502560600" timestamp="504552" timestamp2="504552">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="271" _type="InsertStringCommand" date="Mon Nov 20 12:57:45 EST 2023" starttimestamp="1700502560600" timestamp="505081" timestamp2="505081">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="272" _type="InsertStringCommand" date="Mon Nov 20 12:57:45 EST 2023" starttimestamp="1700502560600" timestamp="505278" timestamp2="505278">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="273" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:46 EST 2023" starttimestamp="1700502560600" timestamp="505703" />
  <Command __id="274" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:46 EST 2023" starttimestamp="1700502560600" timestamp="505842" />
  <Command __id="275" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:46 EST 2023" starttimestamp="1700502560600" timestamp="505971" />
  <Command __id="276" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:46 EST 2023" starttimestamp="1700502560600" timestamp="506116" />
  <Command __id="277" _type="InsertStringCommand" date="Mon Nov 20 12:57:47 EST 2023" starttimestamp="1700502560600" timestamp="506623" timestamp2="506623">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="278" _type="InsertStringCommand" date="Mon Nov 20 12:57:47 EST 2023" starttimestamp="1700502560600" timestamp="507025" timestamp2="507025">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="279" _type="InsertStringCommand" date="Mon Nov 20 12:57:47 EST 2023" starttimestamp="1700502560600" timestamp="507176" timestamp2="507176">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="280" _type="InsertStringCommand" date="Mon Nov 20 12:57:47 EST 2023" starttimestamp="1700502560600" timestamp="507348" timestamp2="507348">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="281" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:48 EST 2023" starttimestamp="1700502560600" timestamp="508159" />
  <Command __id="282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:48 EST 2023" starttimestamp="1700502560600" timestamp="508298" />
  <Command __id="283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:49 EST 2023" starttimestamp="1700502560600" timestamp="508436" />
  <Command __id="284" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 12:57:49 EST 2023" starttimestamp="1700502560600" timestamp="508566" />
  <Command __id="285" _type="InsertStringCommand" date="Mon Nov 20 12:57:50 EST 2023" starttimestamp="1700502560600" timestamp="509436" timestamp2="509436">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="286" _type="MoveCaretCommand" caretOffset="99" date="Mon Nov 20 12:57:56 EST 2023" docOffset="99" starttimestamp="1700502560600" timestamp="516108" />
  <Command __id="287" _type="MoveCaretCommand" caretOffset="99" date="Mon Nov 20 12:58:02 EST 2023" docOffset="99" starttimestamp="1700502560600" timestamp="522043" />
  <Command __id="288" _type="InsertStringCommand" date="Mon Nov 20 12:58:03 EST 2023" starttimestamp="1700502560600" timestamp="522694" timestamp2="522694">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="289" _type="InsertStringCommand" date="Mon Nov 20 12:58:03 EST 2023" starttimestamp="1700502560600" timestamp="522934" timestamp2="522934">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="290" _type="InsertStringCommand" date="Mon Nov 20 12:58:03 EST 2023" starttimestamp="1700502560600" timestamp="523023" timestamp2="523023">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="291" _type="InsertStringCommand" date="Mon Nov 20 12:58:03 EST 2023" starttimestamp="1700502560600" timestamp="523090" timestamp2="523090">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="292" _type="InsertStringCommand" date="Mon Nov 20 12:58:03 EST 2023" starttimestamp="1700502560600" timestamp="523291" timestamp2="523291">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="293" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 12:58:05 EST 2023" starttimestamp="1700502560600" timestamp="524661" />
  <Command __id="294" _type="InsertStringCommand" date="Mon Nov 20 12:58:05 EST 2023" starttimestamp="1700502560600" timestamp="524918" timestamp2="524918">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="296" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:58:08 EST 2023" starttimestamp="1700502560600" timestamp="527463" />
  <Command __id="297" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:58:08 EST 2023" starttimestamp="1700502560600" timestamp="527472" />
  <Command __id="298" _type="ShellCommand" date="Mon Nov 20 12:58:10 EST 2023" starttimestamp="1700502560600" timestamp="529506" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="299" _type="ShellCommand" date="Mon Nov 20 12:58:42 EST 2023" starttimestamp="1700502560600" timestamp="561989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="301" _type="ShellCommand" date="Mon Nov 20 12:58:58 EST 2023" starttimestamp="1700502560600" timestamp="577746" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="302" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:58:58 EST 2023" starttimestamp="1700502560600" timestamp="577753" />
  <Command __id="303" _type="EclipseCommand" commandID="" date="Mon Nov 20 12:58:58 EST 2023" starttimestamp="1700502560600" timestamp="577760" />
  <Command __id="305" _type="MoveCaretCommand" caretOffset="122" date="Mon Nov 20 12:58:59 EST 2023" docOffset="122" starttimestamp="1700502560600" timestamp="578419" />
  <Command __id="306" _type="MoveCaretCommand" caretOffset="122" date="Mon Nov 20 12:58:59 EST 2023" docOffset="122" starttimestamp="1700502560600" timestamp="578424" />
  <Command __id="307" _type="MoveCaretCommand" caretOffset="119" date="Mon Nov 20 12:59:00 EST 2023" docOffset="119" starttimestamp="1700502560600" timestamp="579615" />
  <Command __id="308" _type="MoveCaretCommand" caretOffset="119" date="Mon Nov 20 12:59:00 EST 2023" docOffset="119" starttimestamp="1700502560600" timestamp="579615" />
  <Command __id="309" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 12:59:02 EST 2023" starttimestamp="1700502560600" timestamp="582283" />
  <Command __id="310" _type="ProgramExecutionEvent" className="/Assignment5/src/index/main.java" date="Mon Nov 20 12:59:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="582400" type="Run" />
  <Command __id="311" _type="RunCommand" className="/Assignment5/src/index/main.java" date="Mon Nov 20 12:59:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="582400" type="Run" />
  <Command __id="312" _type="EclipseCommand" commandID="org.eclipse.eclemma.ui.localJavaShortcut.coverage" date="Mon Nov 20 12:59:11 EST 2023" starttimestamp="1700502560600" timestamp="591322" />
  <Command __id="313" _type="RunCommand" className="/Assignment5/src/index/main.java" date="Mon Nov 20 12:59:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="591423" type="Run" />
  <Command __id="314" _type="MoveCaretCommand" caretOffset="123" date="Mon Nov 20 12:59:13 EST 2023" docOffset="123" starttimestamp="1700502560600" timestamp="593022" />
  <Command __id="315" _type="MoveCaretCommand" caretOffset="123" date="Mon Nov 20 12:59:13 EST 2023" docOffset="123" starttimestamp="1700502560600" timestamp="593022" />
  <Command __id="316" _type="MoveCaretCommand" caretOffset="120" date="Mon Nov 20 12:59:14 EST 2023" docOffset="120" starttimestamp="1700502560600" timestamp="593806" />
  <Command __id="317" _type="MoveCaretCommand" caretOffset="120" date="Mon Nov 20 12:59:14 EST 2023" docOffset="120" starttimestamp="1700502560600" timestamp="593806" />
  <Command __id="318" _type="MoveCaretCommand" caretOffset="99" date="Mon Nov 20 12:59:15 EST 2023" docOffset="99" starttimestamp="1700502560600" timestamp="595352" />
  <Command __id="319" _type="MoveCaretCommand" caretOffset="99" date="Mon Nov 20 12:59:15 EST 2023" docOffset="99" starttimestamp="1700502560600" timestamp="595353" />
  <Command __id="320" _type="ShellCommand" date="Mon Nov 20 12:59:18 EST 2023" starttimestamp="1700502560600" timestamp="598325" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="321" _type="ShellCommand" date="Mon Nov 20 12:59:19 EST 2023" starttimestamp="1700502560600" timestamp="598429" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="323" _type="MoveCaretCommand" caretOffset="115" date="Mon Nov 20 12:59:20 EST 2023" docOffset="115" starttimestamp="1700502560600" timestamp="599615" />
  <Command __id="324" _type="MoveCaretCommand" caretOffset="115" date="Mon Nov 20 12:59:20 EST 2023" docOffset="115" starttimestamp="1700502560600" timestamp="599616" />
  <Command __id="326" _type="UndoCommand" date="Mon Nov 20 12:59:20 EST 2023" starttimestamp="1700502560600" timestamp="599760" />
  <Command __id="327" _type="MoveCaretCommand" caretOffset="116" date="Mon Nov 20 12:59:21 EST 2023" docOffset="116" starttimestamp="1700502560600" timestamp="600943" />
  <Command __id="328" _type="MoveCaretCommand" caretOffset="116" date="Mon Nov 20 12:59:21 EST 2023" docOffset="116" starttimestamp="1700502560600" timestamp="600944" />
  <Command __id="329" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 12:59:23 EST 2023" starttimestamp="1700502560600" timestamp="603094" />
  <Command __id="330" _type="RunCommand" className="/Assignment5/src/index/main.java" date="Mon Nov 20 12:59:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="603194" type="Run" />
  <Command __id="331" _type="ShellCommand" date="Mon Nov 20 12:59:27 EST 2023" starttimestamp="1700502560600" timestamp="607321" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="332" _type="ShellCommand" date="Mon Nov 20 12:59:30 EST 2023" starttimestamp="1700502560600" timestamp="609801" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="333" _type="ShellCommand" date="Mon Nov 20 12:59:33 EST 2023" starttimestamp="1700502560600" timestamp="612885" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="334" _type="ShellCommand" date="Mon Nov 20 12:59:43 EST 2023" starttimestamp="1700502560600" timestamp="622490" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="335" _type="ConsoleOutput" date="Mon Nov 20 12:59:43 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="623013" type="ConsoleOutput">
    <outputString><![CDATA[5
(+ 4 5)
.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.ClassLoader.defineClass1(Native Method)¶	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)¶	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)¶	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)¶	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)¶	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)¶	at main.main.main(main.java:8)"), Diff(INSERT,"5¶(+ 4 5)¶."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="336" _type="PasteCommand" date="Mon Nov 20 12:59:43 EST 2023" starttimestamp="1700502560600" timestamp="623016" />
  <Command __id="337" _type="ConsoleOutput" date="Mon Nov 20 12:59:43 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="623024" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"5¶"), Diff(DELETE,"(+ 4 5)¶.¶")]]]></diff>
  </Command>
  <Command __id="338" _type="ConsoleOutput" date="Mon Nov 20 12:59:43 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="623027" type="ConsoleOutput">
    <outputString><![CDATA[9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="339" _type="ProgramExecutionEvent" className="/Assignment5/src/index/main.java" date="Mon Nov 20 12:59:43 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700502560600" timestamp="623044" type="Run" />
  <Command __id="340" _type="ProgramExecutionEvent" className="/Assignment5/src/index/main.java" date="Mon Nov 20 12:59:43 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700502560600" timestamp="623044" type="Run" />
  <Command __id="341" _type="ShellCommand" date="Mon Nov 20 12:59:47 EST 2023" starttimestamp="1700502560600" timestamp="626429" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="342" _type="ShellCommand" date="Mon Nov 20 13:00:24 EST 2023" starttimestamp="1700502560600" timestamp="663629" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="343" _type="MoveCaretCommand" caretOffset="123" date="Mon Nov 20 13:00:27 EST 2023" docOffset="123" starttimestamp="1700502560600" timestamp="666460" />
  <Command __id="344" _type="MoveCaretCommand" caretOffset="123" date="Mon Nov 20 13:00:27 EST 2023" docOffset="123" starttimestamp="1700502560600" timestamp="666461" />
  <Command __id="345" _type="ShellCommand" date="Mon Nov 20 13:00:34 EST 2023" starttimestamp="1700502560600" timestamp="673862" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="346" _type="PasteCommand" date="Mon Nov 20 13:00:46 EST 2023" starttimestamp="1700502560600" timestamp="686150" />
  <Command __id="347" _type="ShellCommand" date="Mon Nov 20 13:01:04 EST 2023" starttimestamp="1700502560600" timestamp="704135" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="348" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:01:04 EST 2023" starttimestamp="1700502560600" timestamp="704159" />
  <Command __id="349" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:01:04 EST 2023" starttimestamp="1700502560600" timestamp="704167" />
  <Command __id="351" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 13:01:04 EST 2023" docOffset="0" starttimestamp="1700502560600" timestamp="704334" />
  <Command __id="248" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 12:57:13 EST 2023" docASTNodeCount="26" docActiveCodeLength="122" docExpressionCount="12" docLength="122" projectName="Assignment5" starttimestamp="1700502560600" timestamp="472633">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/main/main.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package main;import main.Main;public class main {	public static void main(String[] args) {		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="304" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 12:58:58 EST 2023" docASTNodeCount="26" docActiveCodeLength="123" docExpressionCount="12" docLength="123" projectName="Assignment5" starttimestamp="1700502560600" timestamp="578384">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;

public class main {

	public static void main(String[] args) {
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="322" _type="Delete" date="Mon Nov 20 12:59:19 EST 2023" docASTNodeCount="25" docActiveCodeLength="118" docExpressionCount="12" docLength="118" endLine="6" length="5" offset="71" startLine="6" starttimestamp="1700502560600" timestamp="598439">
    <text><![CDATA[void ]]></text>
  </DocumentChange>
  <DocumentChange __id="325" _type="Insert" date="Mon Nov 20 12:59:20 EST 2023" docASTNodeCount="26" docActiveCodeLength="123" docExpressionCount="12" docLength="123" length="5" offset="71" starttimestamp="1700502560600" timestamp="599757">
    <text><![CDATA[void ]]></text>
  </DocumentChange>
  <Command __id="350" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 13:01:04 EST 2023" docASTNodeCount="10" docActiveCodeLength="78" docExpressionCount="5" docLength="78" projectName="Assignment5" starttimestamp="1700502560600" timestamp="704250">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistry.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class ClassRegistry implements main.ClassRegistry {

}
]]></snapshot>
  </Command>
  <Command __id="352" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 13:01:06 EST 2023" docOffset="15" starttimestamp="1700502560600" timestamp="706399" />
  <Command __id="354" _type="InsertStringCommand" date="Mon Nov 20 13:01:11 EST 2023" starttimestamp="1700502560600" timestamp="710743" timestamp2="710743">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="356" _type="InsertStringCommand" date="Mon Nov 20 13:01:11 EST 2023" starttimestamp="1700502560600" timestamp="710869" timestamp2="710869">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="357" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 13:01:12 EST 2023" starttimestamp="1700502560600" timestamp="711456" />
  <Command __id="359" _type="InsertStringCommand" date="Mon Nov 20 13:01:12 EST 2023" starttimestamp="1700502560600" timestamp="711944" timestamp2="711944">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="361" _type="InsertStringCommand" date="Mon Nov 20 13:01:12 EST 2023" starttimestamp="1700502560600" timestamp="712042" timestamp2="712042">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="363" _type="InsertStringCommand" date="Mon Nov 20 13:01:12 EST 2023" starttimestamp="1700502560600" timestamp="712123" timestamp2="712123">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="365" _type="InsertStringCommand" date="Mon Nov 20 13:01:12 EST 2023" starttimestamp="1700502560600" timestamp="712287" timestamp2="712287">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="367" _type="InsertStringCommand" date="Mon Nov 20 13:01:12 EST 2023" starttimestamp="1700502560600" timestamp="712343" timestamp2="712343">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="369" _type="InsertStringCommand" date="Mon Nov 20 13:01:13 EST 2023" starttimestamp="1700502560600" timestamp="712509" timestamp2="712509">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="371" _type="InsertStringCommand" date="Mon Nov 20 13:01:13 EST 2023" starttimestamp="1700502560600" timestamp="712620" timestamp2="712620">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="373" _type="InsertStringCommand" date="Mon Nov 20 13:01:13 EST 2023" starttimestamp="1700502560600" timestamp="713057" timestamp2="713057">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="375" _type="InsertStringCommand" date="Mon Nov 20 13:01:13 EST 2023" starttimestamp="1700502560600" timestamp="713169" timestamp2="713169">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="377" _type="InsertStringCommand" date="Mon Nov 20 13:01:13 EST 2023" starttimestamp="1700502560600" timestamp="713264" timestamp2="713264">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="379" _type="InsertStringCommand" date="Mon Nov 20 13:01:13 EST 2023" starttimestamp="1700502560600" timestamp="713314" timestamp2="713314">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="381" _type="InsertStringCommand" date="Mon Nov 20 13:01:14 EST 2023" starttimestamp="1700502560600" timestamp="713440" timestamp2="713440">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="382" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 13:01:14 EST 2023" start_end="START" starttimestamp="1700502560600" timestamp="713446" />
  <Command __id="383" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 13:01:14 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="713451" />
  <Command __id="385" _type="InsertStringCommand" date="Mon Nov 20 13:01:14 EST 2023" starttimestamp="1700502560600" timestamp="713859" timestamp2="713859">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="387" _type="InsertStringCommand" date="Mon Nov 20 13:01:14 EST 2023" starttimestamp="1700502560600" timestamp="714027" timestamp2="714027">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="389" _type="InsertStringCommand" date="Mon Nov 20 13:01:14 EST 2023" starttimestamp="1700502560600" timestamp="714089" timestamp2="714089">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="391" _type="InsertStringCommand" date="Mon Nov 20 13:01:14 EST 2023" starttimestamp="1700502560600" timestamp="714164" timestamp2="714164">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="393" _type="InsertStringCommand" date="Mon Nov 20 13:01:14 EST 2023" starttimestamp="1700502560600" timestamp="714338" timestamp2="714338">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="395" _type="InsertStringCommand" date="Mon Nov 20 13:01:16 EST 2023" starttimestamp="1700502560600" timestamp="715421" timestamp2="715421">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="397" _type="InsertStringCommand" date="Mon Nov 20 13:01:16 EST 2023" starttimestamp="1700502560600" timestamp="715668" timestamp2="715668">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="399" _type="InsertStringCommand" date="Mon Nov 20 13:01:16 EST 2023" starttimestamp="1700502560600" timestamp="716293" timestamp2="716293">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="401" _type="InsertStringCommand" date="Mon Nov 20 13:01:17 EST 2023" starttimestamp="1700502560600" timestamp="716413" timestamp2="716413">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="403" _type="InsertStringCommand" date="Mon Nov 20 13:01:17 EST 2023" starttimestamp="1700502560600" timestamp="716479" timestamp2="716479">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="405" _type="InsertStringCommand" date="Mon Nov 20 13:01:17 EST 2023" starttimestamp="1700502560600" timestamp="716640" timestamp2="716640">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="407" _type="InsertStringCommand" date="Mon Nov 20 13:01:17 EST 2023" starttimestamp="1700502560600" timestamp="716797" timestamp2="716797">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="409" _type="InsertStringCommand" date="Mon Nov 20 13:01:17 EST 2023" starttimestamp="1700502560600" timestamp="716881" timestamp2="716881">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="410" _type="MoveCaretCommand" caretOffset="105" date="Mon Nov 20 13:01:18 EST 2023" docOffset="105" starttimestamp="1700502560600" timestamp="717518" />
  <Command __id="411" _type="MoveCaretCommand" caretOffset="41" date="Mon Nov 20 13:01:20 EST 2023" docOffset="41" starttimestamp="1700502560600" timestamp="720187" />
  <Command __id="413" _type="InsertStringCommand" date="Mon Nov 20 13:01:21 EST 2023" starttimestamp="1700502560600" timestamp="720561" timestamp2="720561">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="414" _type="MoveCaretCommand" caretOffset="105" date="Mon Nov 20 13:01:21 EST 2023" docOffset="105" starttimestamp="1700502560600" timestamp="721054" />
  <DocumentChange __id="353" _type="Insert" date="Mon Nov 20 13:01:11 EST 2023" docASTNodeCount="14" docActiveCodeLength="105" docExpressionCount="8" docLength="105" length="27" offset="15" repeat="27" starttimestamp="1700502560600" timestamp="710742" timestamp2="716880">
    <text><![CDATA[
import main.ClassRegistry
]]></text>
  </DocumentChange>
  <DocumentChange __id="412" _type="Insert" date="Mon Nov 20 13:01:21 EST 2023" docASTNodeCount="14" docActiveCodeLength="106" docExpressionCount="8" docLength="106" length="1" offset="41" starttimestamp="1700502560600" timestamp="720561">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="417" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 13:01:39 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="738998" />
  <Command __id="418" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Mon Nov 20 13:01:39 EST 2023" start_end="END" starttimestamp="1700502560600" timestamp="738998" />
  <Command __id="419" _type="ShellCommand" date="Mon Nov 20 13:01:39 EST 2023" starttimestamp="1700502560600" timestamp="739083" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="420" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Nov 20 13:01:39 EST 2023" starttimestamp="1700502560600" timestamp="739085" />
  <Command __id="421" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:01:39 EST 2023" starttimestamp="1700502560600" timestamp="739091" />
  <Command __id="422" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:01:39 EST 2023" starttimestamp="1700502560600" timestamp="739097" />
  <Command __id="423" _type="MoveCaretCommand" caretOffset="113" date="Mon Nov 20 13:01:41 EST 2023" docOffset="113" starttimestamp="1700502560600" timestamp="740540" />
  <Command __id="424" _type="MoveCaretCommand" caretOffset="116" date="Mon Nov 20 13:01:41 EST 2023" docOffset="116" starttimestamp="1700502560600" timestamp="740972" />
  <Command __id="425" _type="MoveCaretCommand" caretOffset="110" date="Mon Nov 20 13:01:42 EST 2023" docOffset="110" starttimestamp="1700502560600" timestamp="742196" />
  <Command __id="426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:43 EST 2023" starttimestamp="1700502560600" timestamp="742429" />
  <Command __id="427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:43 EST 2023" starttimestamp="1700502560600" timestamp="742517" />
  <Command __id="428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:43 EST 2023" starttimestamp="1700502560600" timestamp="742648" />
  <Command __id="429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:43 EST 2023" starttimestamp="1700502560600" timestamp="742779" />
  <Command __id="430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:43 EST 2023" starttimestamp="1700502560600" timestamp="742922" />
  <Command __id="431" _type="MoveCaretCommand" caretOffset="111" date="Mon Nov 20 13:01:44 EST 2023" docOffset="111" starttimestamp="1700502560600" timestamp="743479" />
  <Command __id="432" _type="MoveCaretCommand" caretOffset="42" date="Mon Nov 20 13:01:45 EST 2023" docOffset="42" starttimestamp="1700502560600" timestamp="745089" />
  <Command __id="433" _type="MoveCaretCommand" caretOffset="108" date="Mon Nov 20 13:01:46 EST 2023" docOffset="108" starttimestamp="1700502560600" timestamp="745571" />
  <Command __id="434" _type="MoveCaretCommand" caretOffset="92" date="Mon Nov 20 13:01:47 EST 2023" docOffset="92" starttimestamp="1700502560600" timestamp="746529" />
  <Command __id="435" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:47 EST 2023" starttimestamp="1700502560600" timestamp="746790" />
  <Command __id="436" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:47 EST 2023" starttimestamp="1700502560600" timestamp="746861" />
  <Command __id="437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:47 EST 2023" starttimestamp="1700502560600" timestamp="746980" />
  <Command __id="438" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:47 EST 2023" starttimestamp="1700502560600" timestamp="747100" />
  <Command __id="439" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:01:47 EST 2023" starttimestamp="1700502560600" timestamp="747242" />
  <Command __id="440" _type="MoveCaretCommand" caretOffset="106" date="Mon Nov 20 13:01:48 EST 2023" docOffset="106" starttimestamp="1700502560600" timestamp="747729" />
  <Command __id="441" _type="ShellCommand" date="Mon Nov 20 13:01:51 EST 2023" starttimestamp="1700502560600" timestamp="751227" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="442" _type="ShellCommand" date="Mon Nov 20 13:01:51 EST 2023" starttimestamp="1700502560600" timestamp="751298" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="443" _type="MoveCaretCommand" caretOffset="350" date="Mon Nov 20 13:01:55 EST 2023" docOffset="350" starttimestamp="1700502560600" timestamp="755053" />
  <Command __id="444" _type="MoveCaretCommand" caretOffset="1573" date="Mon Nov 20 13:01:58 EST 2023" docOffset="1573" starttimestamp="1700502560600" timestamp="758015" />
  <Command __id="445" _type="MoveCaretCommand" caretOffset="1569" date="Mon Nov 20 13:01:59 EST 2023" docOffset="1569" starttimestamp="1700502560600" timestamp="758449" />
  <Command __id="446" _type="ShellCommand" date="Mon Nov 20 13:01:59 EST 2023" starttimestamp="1700502560600" timestamp="759345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="447" _type="ShellCommand" date="Mon Nov 20 13:02:09 EST 2023" starttimestamp="1700502560600" timestamp="768994" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="448" _type="ShellCommand" date="Mon Nov 20 13:02:09 EST 2023" starttimestamp="1700502560600" timestamp="769334" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="449" _type="ShellCommand" date="Mon Nov 20 13:02:10 EST 2023" starttimestamp="1700502560600" timestamp="769542" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="450" _type="MoveCaretCommand" caretOffset="1569" date="Mon Nov 20 13:02:19 EST 2023" docOffset="1569" starttimestamp="1700502560600" timestamp="778825" />
  <Command __id="451" _type="SelectTextCommand" caretOffset="1557" date="Mon Nov 20 13:02:20 EST 2023" end="1569" start="1557" starttimestamp="1700502560600" timestamp="780082" />
  <Command __id="452" _type="ShellCommand" date="Mon Nov 20 13:02:23 EST 2023" starttimestamp="1700502560600" timestamp="782922" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="453" _type="ShellCommand" date="Mon Nov 20 13:02:28 EST 2023" starttimestamp="1700502560600" timestamp="787639" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="454" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="788667" timestamp2="788667">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="455" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="788734" timestamp2="788734">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="456" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="788898" timestamp2="788898">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="457" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="788999" timestamp2="788999">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="458" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="789028" timestamp2="789028">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="459" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="789169" timestamp2="789169">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="460" _type="InsertStringCommand" date="Mon Nov 20 13:02:29 EST 2023" starttimestamp="1700502560600" timestamp="789265" timestamp2="789265">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="461" _type="InsertStringCommand" date="Mon Nov 20 13:02:31 EST 2023" starttimestamp="1700502560600" timestamp="790411" timestamp2="790411">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="462" _type="InsertStringCommand" date="Mon Nov 20 13:02:31 EST 2023" starttimestamp="1700502560600" timestamp="790487" timestamp2="790487">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="463" _type="InsertStringCommand" date="Mon Nov 20 13:02:31 EST 2023" starttimestamp="1700502560600" timestamp="790570" timestamp2="790570">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="464" _type="InsertStringCommand" date="Mon Nov 20 13:02:31 EST 2023" starttimestamp="1700502560600" timestamp="790648" timestamp2="790648">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="465" _type="InsertStringCommand" date="Mon Nov 20 13:02:32 EST 2023" starttimestamp="1700502560600" timestamp="791604" timestamp2="791604">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="466" _type="InsertStringCommand" date="Mon Nov 20 13:02:33 EST 2023" starttimestamp="1700502560600" timestamp="792668" timestamp2="792668">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="467" _type="InsertStringCommand" date="Mon Nov 20 13:02:34 EST 2023" starttimestamp="1700502560600" timestamp="793538" timestamp2="793538">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="468" _type="MoveCaretCommand" caretOffset="1742" date="Mon Nov 20 13:02:34 EST 2023" docOffset="1742" starttimestamp="1700502560600" timestamp="794171" />
  <Command __id="469" _type="MoveCaretCommand" caretOffset="1590" date="Mon Nov 20 13:02:35 EST 2023" docOffset="1590" starttimestamp="1700502560600" timestamp="795165" />
  <Command __id="470" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 13:02:36 EST 2023" starttimestamp="1700502560600" timestamp="795545" />
  <Command __id="471" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:02:36 EST 2023" starttimestamp="1700502560600" timestamp="795642" />
  <Command __id="472" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:02:36 EST 2023" starttimestamp="1700502560600" timestamp="795652" />
  <Command __id="473" _type="ShellCommand" date="Mon Nov 20 13:02:37 EST 2023" starttimestamp="1700502560600" timestamp="797217" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="474" _type="ShellCommand" date="Mon Nov 20 13:02:39 EST 2023" starttimestamp="1700502560600" timestamp="799262" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="475" _type="ShellCommand" date="Mon Nov 20 13:02:40 EST 2023" starttimestamp="1700502560600" timestamp="799769" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="479" _type="CopyCommand" date="Mon Nov 20 13:03:01 EST 2023" starttimestamp="1700502560600" timestamp="821097" />
  <Command __id="480" _type="PasteCommand" date="Mon Nov 20 13:03:03 EST 2023" starttimestamp="1700502560600" timestamp="822720" />
  <Command __id="481" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:03:03 EST 2023" starttimestamp="1700502560600" timestamp="822819" />
  <Command __id="482" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:03:03 EST 2023" starttimestamp="1700502560600" timestamp="822826" />
  <Command __id="477" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 13:02:55 EST 2023" docASTNodeCount="90" docActiveCodeLength="716" docExpressionCount="56" docLength="1108" projectName="Assignment2" starttimestamp="1700502560600" timestamp="814498">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment2/src/main/RunF23A2Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment2.F23Assignment2Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A2Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment2Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="484" _type="ShellCommand" date="Mon Nov 20 13:03:12 EST 2023" starttimestamp="1700502560600" timestamp="831940" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="485" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Nov 20 13:03:12 EST 2023" starttimestamp="1700502560600" timestamp="831943" />
  <Command __id="486" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:03:12 EST 2023" starttimestamp="1700502560600" timestamp="831976" />
  <Command __id="487" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:03:12 EST 2023" starttimestamp="1700502560600" timestamp="831983" />
  <Command __id="488" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 13:03:14 EST 2023" docASTNodeCount="248" docActiveCodeLength="1578" docExpressionCount="119" docLength="2088" projectName="Assignment5" starttimestamp="1700502560600" timestamp="833988">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryClass.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryClass implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return main.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="489" _type="MoveCaretCommand" caretOffset="1590" date="Mon Nov 20 13:03:14 EST 2023" docOffset="1590" starttimestamp="1700502560600" timestamp="834048" />
  <Command __id="491" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 13:03:16 EST 2023" docOffset="0" starttimestamp="1700502560600" timestamp="835578" />
  <Command __id="492" _type="MoveCaretCommand" caretOffset="127" date="Mon Nov 20 13:03:20 EST 2023" docOffset="127" starttimestamp="1700502560600" timestamp="839540" />
  <Command __id="490" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 13:03:16 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700502560600" timestamp="835509">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment2.F23Assignment2Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment2Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="493" _type="MoveCaretCommand" caretOffset="111" date="Mon Nov 20 13:03:22 EST 2023" docOffset="111" starttimestamp="1700502560600" timestamp="841515" />
  <Command __id="494" _type="MoveCaretCommand" caretOffset="112" date="Mon Nov 20 13:03:22 EST 2023" docOffset="112" starttimestamp="1700502560600" timestamp="842135" />
  <DocumentChange __id="495" _type="Delete" date="Mon Nov 20 13:03:24 EST 2023" docASTNodeCount="90" docActiveCodeLength="716" docExpressionCount="56" docLength="1108" endLine="3" length="1" offset="111" startLine="3" starttimestamp="1700502560600" timestamp="843537">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <Command __id="496" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:03:24 EST 2023" starttimestamp="1700502560600" timestamp="843542" />
  <DocumentChange __id="497" _type="Insert" date="Mon Nov 20 13:03:24 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" length="1" offset="111" starttimestamp="1700502560600" timestamp="843609">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <Command __id="498" _type="InsertStringCommand" date="Mon Nov 20 13:03:24 EST 2023" starttimestamp="1700502560600" timestamp="843610" timestamp2="843610">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="499" _type="MoveCaretCommand" caretOffset="127" date="Mon Nov 20 13:03:25 EST 2023" docOffset="127" starttimestamp="1700502560600" timestamp="844594" />
  <DocumentChange __id="500" _type="Delete" date="Mon Nov 20 13:03:25 EST 2023" docASTNodeCount="90" docActiveCodeLength="716" docExpressionCount="56" docLength="1108" endLine="3" length="1" offset="126" startLine="3" starttimestamp="1700502560600" timestamp="844623">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <Command __id="501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:03:25 EST 2023" starttimestamp="1700502560600" timestamp="844626" />
  <Command __id="503" _type="InsertStringCommand" date="Mon Nov 20 13:03:25 EST 2023" starttimestamp="1700502560600" timestamp="844706" timestamp2="844706">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="504" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 13:03:25 EST 2023" docOffset="187" starttimestamp="1700502560600" timestamp="845074" />
  <Command __id="505" _type="MoveCaretCommand" caretOffset="1086" date="Mon Nov 20 13:03:27 EST 2023" docOffset="1086" starttimestamp="1700502560600" timestamp="847160" />
  <Command __id="507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 13:03:28 EST 2023" starttimestamp="1700502560600" timestamp="847507" />
  <Command __id="509" _type="InsertStringCommand" date="Mon Nov 20 13:03:28 EST 2023" starttimestamp="1700502560600" timestamp="847600" timestamp2="847600">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="510" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 13:03:28 EST 2023" docOffset="1106" starttimestamp="1700502560600" timestamp="847936" />
  <Command __id="511" _type="MoveCaretCommand" caretOffset="461" date="Mon Nov 20 13:03:29 EST 2023" docOffset="461" starttimestamp="1700502560600" timestamp="848993" />
  <Command __id="512" _type="MoveCaretCommand" caretOffset="401" date="Mon Nov 20 13:03:30 EST 2023" docOffset="401" starttimestamp="1700502560600" timestamp="850087" />
  <Command __id="513" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 13:03:30 EST 2023" starttimestamp="1700502560600" timestamp="850270" />
  <Command __id="514" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:03:30 EST 2023" starttimestamp="1700502560600" timestamp="850369" />
  <Command __id="515" _type="EclipseCommand" commandID="" date="Mon Nov 20 13:03:30 EST 2023" starttimestamp="1700502560600" timestamp="850375" />
  <Command __id="516" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 13:03:35 EST 2023" starttimestamp="1700502560600" timestamp="855054" />
  <Command __id="517" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 13:03:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="855189" type="Run" />
  <Command __id="518" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 13:03:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700502560600" timestamp="855190" type="Run" />
  <Command __id="519" _type="ShellCommand" date="Mon Nov 20 13:03:36 EST 2023" starttimestamp="1700502560600" timestamp="855707" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="520" _type="ShellCommand" date="Mon Nov 20 13:03:40 EST 2023" starttimestamp="1700502560600" timestamp="859642" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="521" _type="ShellCommand" date="Mon Nov 20 13:03:40 EST 2023" starttimestamp="1700502560600" timestamp="860161" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="522" _type="ConsoleOutput" date="Mon Nov 20 13:03:53 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="872438" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"9"), Diff(INSERT,"Test execution time (ms):18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="523" _type="ConsoleOutput" date="Mon Nov 20 13:03:53 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="872441" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):18"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="524" _type="ConsoleOutput" date="Mon Nov 20 13:03:53 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="872442" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="525" _type="ConsoleOutput" date="Mon Nov 20 13:03:55 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="875268" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"MainClass"), Diff(INSERT,"TestLispFile"), Diff(EQUAL,"Provided,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,0.0,0.0,"), Diff(INSERT,"No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="526" _type="ConsoleOutput" date="Mon Nov 20 13:04:02 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="881979" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):3¶Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="527" _type="ConsoleOutput" date="Mon Nov 20 13:04:02 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="881984" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="528" _type="ConsoleOutput" date="Mon Nov 20 13:04:02 EST 2023" overflow="false" starttimestamp="1700502560600" timestamp="882061" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunne"), Diff(EQUAL,"r.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"4"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtual"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"144"), Diff(EQUAL,"4"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"78"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"158"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"58"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"268"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"31"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContex"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Componen"), Diff(EQUAL,"t.java:"), Diff(DELETE,"52"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvir"), Diff(INSERT,"java.desktop/javax.swing.JComp"), Diff(EQUAL,"on"), Diff(DELETE,"m"), Diff(EQUAL,"ent."), Diff(DELETE,"getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvir"), Diff(INSERT,"processMouseEvent(JComp"), Diff(EQUAL,"on"), Diff(DELETE,"m"), Diff(EQUAL,"ent.java:"), Diff(DELETE,"6"), Diff(INSERT,"334"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationCheck"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"23"), Diff(INSERT,"501"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"11"), Diff(INSERT,"232"), Diff(EQUAL,"1)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"556"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"7"), Diff(INSERT,"72"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"8"), Diff(INSERT,"15"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"74"), Diff(EQUAL,"5"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"85"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="529" _type="ExceptionCommand" date="Mon Nov 20 13:04:02 EST 2023" starttimestamp="1700502560600" timestamp="882072" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):36
Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:49)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="532" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 13:04:09 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700502560600" timestamp="888933" type="Run" />
  <Command __id="533" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 13:04:09 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700502560600" timestamp="888933" type="Run" />
  <Command __id="534" _type="ShellCommand" date="Mon Nov 20 13:04:21 EST 2023" starttimestamp="1700502560600" timestamp="901127" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="535" _type="ShellCommand" date="Mon Nov 20 13:04:22 EST 2023" starttimestamp="1700502560600" timestamp="901616" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="536" _type="ShellCommand" date="Mon Nov 20 13:04:55 EST 2023" starttimestamp="1700502560600" timestamp="935123" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="537" _type="MoveCaretCommand" caretOffset="887" date="Mon Nov 20 13:04:57 EST 2023" docOffset="887" starttimestamp="1700502560600" timestamp="936959" />
  <Command __id="538" _type="ShellCommand" date="Mon Nov 20 13:04:58 EST 2023" starttimestamp="1700502560600" timestamp="937910" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="539" _type="ShellCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995607" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="540" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[0,Mon Nov 20 13:03:53 EST 2023,3,3,LispInterpreterRequiredClassesSuite,ClassRegistryProvided+ MainClassProvided+ , , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,0,0,true,ClassRegistryProvided MainClassProvided , , ,ClassRegistryProvided-(0.0/0.0) MainClassProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="541" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[0,Mon Nov 20 13:03:53 EST 2023,3,3,LispInterpreterRequiredClassesSuite,ClassRegistryProvided+ MainClassProvided+ , , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,0,0,true,ClassRegistryProvided MainClassProvided , , ,ClassRegistryProvided-(0.0/0.0) MainClassProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="542" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[1,Mon Nov 20 13:03:55 EST 2023,3,0,TestLispFileProvided,ClassRegistryProvided MainClassProvided , ,TestLispFileProvided+ ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,0,1,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="543" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[1,Mon Nov 20 13:03:55 EST 2023,3,0,TestLispFileProvided,ClassRegistryProvided MainClassProvided , ,TestLispFileProvided+ ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,0,1,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="544" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[2,Mon Nov 20 13:04:02 EST 2023,3,0,A5AssignmentSpecificSourceChecks,ClassRegistryProvided MainClassProvided , ,AndTestedChecker+ AndTestedTwoResultsChecker+ BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker+ ComparatorEvaluatorCodeReuse+ CondTestedChecker+ CondTestedResultsChecker+ ConsTestedChecker+ ConsTestedTwoResultsChecker+ EvalTestedChecker+ EvalTestedTwoResultsChecker+ GorETestedChecker+ GorETestedTwoResultsChecker+ GreaterTestedChecker+ GreaterTestedTwoResultsChecker+ LTECallsNilAtomFactory+ LTECallsTAtomFactory+ LessTestedChecker+ LessTestedTwoResultsChecker+ ListTestedChecker+ ListTestedTwoResultsChecker+ ListToStringCheckerAdvanced+ ListToStringCheckerBasic+ ListToStringDeepCheckerAdvanced+ ListToStringDeepCheckerBasic+ LoadCallsInterpreterModelSingleton+ LoadCallsNewInput+ LoadCallsNilAtomFactory+ LoadCallsReadAllLines+ LoadCallsTAtomFactory+ LoadChecker+ LorETestedChecker+ LorETestedTwoResultsChecker+ MainCallsOperationRegisterer+ MainCallsSkeletonMain+ MainSetsExpressionFactory+ NotCallsNilAtomFactory+ NotCallsTAtomFactory+ NotTestedChecker+ NotTestedTwoResultsChecker+ OrTestedChecker+ OrTestedTwoResultsChecker+ QuoteTestedChecker+ QuoteTestedTwoResultsChecker+ TestLispFileProvided ToStringAsListCallsHelper+ ToStringAsListHelperIsRecursive+ ToStringCallsToStringAsList+ ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,0,2,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="545" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[2,Mon Nov 20 13:04:02 EST 2023,3,0,A5AssignmentSpecificSourceChecks,ClassRegistryProvided MainClassProvided , ,AndTestedChecker+ AndTestedTwoResultsChecker+ BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker+ ComparatorEvaluatorCodeReuse+ CondTestedChecker+ CondTestedResultsChecker+ ConsTestedChecker+ ConsTestedTwoResultsChecker+ EvalTestedChecker+ EvalTestedTwoResultsChecker+ GorETestedChecker+ GorETestedTwoResultsChecker+ GreaterTestedChecker+ GreaterTestedTwoResultsChecker+ LTECallsNilAtomFactory+ LTECallsTAtomFactory+ LessTestedChecker+ LessTestedTwoResultsChecker+ ListTestedChecker+ ListTestedTwoResultsChecker+ ListToStringCheckerAdvanced+ ListToStringCheckerBasic+ ListToStringDeepCheckerAdvanced+ ListToStringDeepCheckerBasic+ LoadCallsInterpreterModelSingleton+ LoadCallsNewInput+ LoadCallsNilAtomFactory+ LoadCallsReadAllLines+ LoadCallsTAtomFactory+ LoadChecker+ LorETestedChecker+ LorETestedTwoResultsChecker+ MainCallsOperationRegisterer+ MainCallsSkeletonMain+ MainSetsExpressionFactory+ NotCallsNilAtomFactory+ NotCallsTAtomFactory+ NotTestedChecker+ NotTestedTwoResultsChecker+ OrTestedChecker+ OrTestedTwoResultsChecker+ QuoteTestedChecker+ QuoteTestedTwoResultsChecker+ TestLispFileProvided ToStringAsListCallsHelper+ ToStringAsListHelperIsRecursive+ ToStringCallsToStringAsList+ ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,0,2,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="546" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[3,Mon Nov 20 13:04:05 EST 2023,3,0,A5GeneralStyle,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited+ A5CommonSignaturesAreInherited+ A5Encapsulation+ A5NoHiddenFields+ A5NoStarImports+ A5NonPublicAccessModifiersMatched+ A5PackageDeclarations+ A5PublicMethodsOverride+ AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings+ GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,0,3,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="547" _type="LocalChecksRawCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="995653">
    <CSVRow><![CDATA[3,Mon Nov 20 13:04:05 EST 2023,3,0,A5GeneralStyle,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited+ A5CommonSignaturesAreInherited+ A5Encapsulation+ A5NoHiddenFields+ A5NoStarImports+ A5NonPublicAccessModifiersMatched+ A5PackageDeclarations+ A5PublicMethodsOverride+ AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings+ GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,0,3,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="548" _type="ShellCommand" date="Mon Nov 20 13:05:56 EST 2023" starttimestamp="1700502560600" timestamp="996286" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="502" _type="Insert" date="Mon Nov 20 13:03:25 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" length="1" offset="126" starttimestamp="1700502560600" timestamp="844704">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="506" _type="Delete" date="Mon Nov 20 13:03:28 EST 2023" docASTNodeCount="90" docActiveCodeLength="716" docExpressionCount="56" docLength="1108" endLine="25" length="1" offset="1085" startLine="25" starttimestamp="1700502560600" timestamp="847505">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="508" _type="Insert" date="Mon Nov 20 13:03:28 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" length="1" offset="1085" starttimestamp="1700502560600" timestamp="847599">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <Command __id="549" _type="ShellCommand" date="Mon Nov 20 13:12:39 EST 2023" starttimestamp="1700502560600" timestamp="1398719" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="550" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 13:12:41 EST 2023" docASTNodeCount="248" docActiveCodeLength="1578" docExpressionCount="119" docLength="2088" projectName="Assignment5" starttimestamp="1700502560600" timestamp="1400853">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryClass.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryClass implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return main.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="551" _type="MoveCaretCommand" caretOffset="1590" date="Mon Nov 20 13:12:41 EST 2023" docOffset="1590" starttimestamp="1700502560600" timestamp="1400918" />
  <Command __id="552" _type="InsertStringCommand" date="Mon Nov 20 13:12:42 EST 2023" starttimestamp="1700502560600" timestamp="1401716" timestamp2="1401716">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="553" _type="InsertStringCommand" date="Mon Nov 20 13:12:42 EST 2023" starttimestamp="1700502560600" timestamp="1401716" timestamp2="1401716">
    <data><![CDATA[f]]></data>
  </Command>
  <DocumentChange __id="554" _type="Insert" date="Mon Nov 20 13:12:42 EST 2023" docASTNodeCount="248" docActiveCodeLength="1580" docExpressionCount="119" docLength="2090" length="2" offset="1590" repeat="2" starttimestamp="1700502560600" timestamp="1402007" timestamp2="1402078">
    <text><![CDATA[is]]></text>
  </DocumentChange>
  <Command __id="555" _type="InsertStringCommand" date="Mon Nov 20 13:12:42 EST 2023" starttimestamp="1700502560600" timestamp="1402011" timestamp2="1402011">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="556" _type="InsertStringCommand" date="Mon Nov 20 13:12:42 EST 2023" starttimestamp="1700502560600" timestamp="1402011" timestamp2="1402011">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="558" _type="InsertStringCommand" date="Mon Nov 20 13:12:42 EST 2023" starttimestamp="1700502560600" timestamp="1402080" timestamp2="1402080">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="559" _type="InsertStringCommand" date="Mon Nov 20 13:12:42 EST 2023" starttimestamp="1700502560600" timestamp="1402080" timestamp2="1402080">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="580" _type="MoveCaretCommand" caretOffset="1488" date="Mon Nov 20 13:12:45 EST 2023" docOffset="1488" starttimestamp="1700502560600" timestamp="1404858" />
  <Command __id="581" _type="ShellCommand" date="Mon Nov 20 13:12:47 EST 2023" starttimestamp="1700502560600" timestamp="1406543" type="ECLIPSE_CLOSED" />
  <DocumentChange __id="560" _type="Delete" date="Mon Nov 20 13:12:43 EST 2023" docASTNodeCount="248" docActiveCodeLength="1578" docExpressionCount="119" docLength="2088" endLine="75" length="2" offset="1590" repeat="2" startLine="75" starttimestamp="1700502560600" timestamp="1402585" timestamp2="1402675">
    <text><![CDATA[is]]></text>
  </DocumentChange>
</Events>
