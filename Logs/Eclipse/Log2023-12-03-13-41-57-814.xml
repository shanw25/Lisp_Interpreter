<Events startTimestamp="1701628917814" logVersion="1.0.0.202308221630">
  <Command __id="19" _type="ShellCommand" date="Sun Dec 03 14:22:30 EST 2023" starttimestamp="1701628917814" timestamp="2432674" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="21" _type="ShellCommand" date="Sun Dec 03 14:22:41 EST 2023" starttimestamp="1701628917814" timestamp="2443664" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="22" _type="ShellCommand" date="Sun Dec 03 14:22:55 EST 2023" starttimestamp="1701628917814" timestamp="2457360" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="23" _type="ShellCommand" date="Sun Dec 03 14:23:05 EST 2023" starttimestamp="1701628917814" timestamp="2467630" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="25" _type="ShellCommand" date="Sun Dec 03 14:23:40 EST 2023" starttimestamp="1701628917814" timestamp="2502288" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="27" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:23:54 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="2516675" />
  <Command __id="28" _type="MoveCaretCommand" caretOffset="183" date="Sun Dec 03 14:23:55 EST 2023" docOffset="300" starttimestamp="1701628917814" timestamp="2517565" />
  <Command __id="29" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 14:23:55 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="2517838" />
  <Command __id="30" _type="MoveCaretCommand" caretOffset="248" date="Sun Dec 03 14:23:55 EST 2023" docOffset="365" starttimestamp="1701628917814" timestamp="2518084" />
  <Command __id="31" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 14:23:56 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="2518435" />
  <Command __id="32" _type="MoveCaretCommand" caretOffset="248" date="Sun Dec 03 14:23:56 EST 2023" docOffset="365" starttimestamp="1701628917814" timestamp="2518667" />
  <Command __id="33" _type="MoveCaretCommand" caretOffset="251" date="Sun Dec 03 14:23:56 EST 2023" docOffset="368" starttimestamp="1701628917814" timestamp="2518927" />
  <Command __id="34" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 14:23:57 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="2519198" />
  <Command __id="35" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 14:23:57 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="2519390" />
  <Command __id="36" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 14:23:57 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="2519833" />
  <Command __id="37" _type="MoveCaretCommand" caretOffset="248" date="Sun Dec 03 14:23:57 EST 2023" docOffset="365" starttimestamp="1701628917814" timestamp="2520107" />
  <Command __id="38" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 14:23:58 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="2520422" />
  <Command __id="39" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 14:23:58 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="2520642" />
  <Command __id="40" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 14:23:58 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="2520840" />
  <Command __id="41" _type="MoveCaretCommand" caretOffset="248" date="Sun Dec 03 14:23:58 EST 2023" docOffset="365" starttimestamp="1701628917814" timestamp="2521021" />
  <Command __id="42" _type="SelectTextCommand" caretOffset="112" date="Sun Dec 03 14:24:01 EST 2023" end="112" start="111" starttimestamp="1701628917814" timestamp="2523925" />
  <Command __id="44" _type="InsertStringCommand" date="Sun Dec 03 14:24:02 EST 2023" starttimestamp="1701628917814" timestamp="2524783" timestamp2="2524783">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="45" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 14:24:02 EST 2023" docOffset="186" starttimestamp="1701628917814" timestamp="2524873" />
  <Command __id="46" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 14:24:03 EST 2023" starttimestamp="1701628917814" timestamp="2525555" />
  <Command __id="47" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:24:03 EST 2023" starttimestamp="1701628917814" timestamp="2525880" />
  <Command __id="48" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:24:03 EST 2023" starttimestamp="1701628917814" timestamp="2526007" />
  <Command __id="49" _type="MoveCaretCommand" caretOffset="61" date="Sun Dec 03 14:24:06 EST 2023" docOffset="61" starttimestamp="1701628917814" timestamp="2529102" />
  <Command __id="50" _type="SelectTextCommand" caretOffset="126" date="Sun Dec 03 14:24:11 EST 2023" end="127" start="126" starttimestamp="1701628917814" timestamp="2533637" />
  <Command __id="52" _type="InsertStringCommand" date="Sun Dec 03 14:24:11 EST 2023" starttimestamp="1701628917814" timestamp="2533782" timestamp2="2533782">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="53" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 14:24:11 EST 2023" docOffset="186" starttimestamp="1701628917814" timestamp="2533932" />
  <Command __id="54" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 14:24:13 EST 2023" starttimestamp="1701628917814" timestamp="2535611" />
  <Command __id="55" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:24:13 EST 2023" starttimestamp="1701628917814" timestamp="2535709" />
  <Command __id="56" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:24:13 EST 2023" starttimestamp="1701628917814" timestamp="2535719" />
  <Command __id="57" _type="MoveCaretCommand" caretOffset="264" date="Sun Dec 03 14:24:13 EST 2023" docOffset="264" starttimestamp="1701628917814" timestamp="2536085" />
  <Command __id="58" _type="SelectTextCommand" caretOffset="1085" date="Sun Dec 03 14:24:17 EST 2023" end="1086" start="1085" starttimestamp="1701628917814" timestamp="2539966" />
  <Command __id="60" _type="InsertStringCommand" date="Sun Dec 03 14:24:17 EST 2023" starttimestamp="1701628917814" timestamp="2540132" timestamp2="2540132">
    <data><![CDATA[6]]></data>
  </Command>
  <Command __id="61" _type="MoveCaretCommand" caretOffset="523" date="Sun Dec 03 14:24:18 EST 2023" docOffset="523" starttimestamp="1701628917814" timestamp="2540358" />
  <Command __id="62" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 14:24:18 EST 2023" starttimestamp="1701628917814" timestamp="2540676" />
  <Command __id="63" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:24:18 EST 2023" starttimestamp="1701628917814" timestamp="2540777" />
  <Command __id="64" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:24:18 EST 2023" starttimestamp="1701628917814" timestamp="2540787" />
  <Command __id="65" _type="MoveCaretCommand" caretOffset="264" date="Sun Dec 03 14:24:18 EST 2023" docOffset="264" starttimestamp="1701628917814" timestamp="2541155" />
  <Command __id="66" _type="SelectTextCommand" caretOffset="15" date="Sun Dec 03 14:24:27 EST 2023" end="15" start="0" starttimestamp="1701628917814" timestamp="2549441" />
  <Command __id="67" _type="ShellCommand" date="Sun Dec 03 14:24:29 EST 2023" starttimestamp="1701628917814" timestamp="2551884" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="68" _type="ShellCommand" date="Sun Dec 03 14:24:58 EST 2023" starttimestamp="1701628917814" timestamp="2580759" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="69" _type="EclipseCommand" commandID="org.eclipse.ui.window.preferences" date="Sun Dec 03 14:24:58 EST 2023" starttimestamp="1701628917814" timestamp="2580765" />
  <Command __id="70" _type="ShellCommand" date="Sun Dec 03 14:24:58 EST 2023" starttimestamp="1701628917814" timestamp="2580812" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="71" _type="ShellCommand" date="Sun Dec 03 14:25:08 EST 2023" starttimestamp="1701628917814" timestamp="2590873" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="72" _type="ShellCommand" date="Sun Dec 03 14:25:08 EST 2023" starttimestamp="1701628917814" timestamp="2590899" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="73" _type="ShellCommand" date="Sun Dec 03 14:25:32 EST 2023" starttimestamp="1701628917814" timestamp="2614744" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="75" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:26:03 EST 2023" starttimestamp="1701628917814" timestamp="2645791" />
  <Command __id="76" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:26:03 EST 2023" starttimestamp="1701628917814" timestamp="2645792" />
  <Command __id="77" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:26:04 EST 2023" starttimestamp="1701628917814" timestamp="2646382" />
  <Command __id="78" _type="ShellCommand" date="Sun Dec 03 14:26:04 EST 2023" starttimestamp="1701628917814" timestamp="2646394" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="79" _type="EclipseCommand" commandID="org.eclipse.ui.file.properties" date="Sun Dec 03 14:26:04 EST 2023" starttimestamp="1701628917814" timestamp="2646398" />
  <Command __id="80" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:26:04 EST 2023" starttimestamp="1701628917814" timestamp="2646428" />
  <Command __id="81" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:26:09 EST 2023" starttimestamp="1701628917814" timestamp="2651564" />
  <Command __id="82" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:26:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2651669" type="Run" />
  <Command __id="83" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:26:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2651669" type="Run" />
  <Command __id="84" _type="ShellCommand" date="Sun Dec 03 14:26:10 EST 2023" starttimestamp="1701628917814" timestamp="2652432" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="85" _type="ConsoleOutput" date="Sun Dec 03 14:26:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2663516" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="86" _type="ConsoleOutput" date="Sun Dec 03 14:26:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2663522" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="87" _type="ConsoleOutput" date="Sun Dec 03 14:26:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2663526" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):8
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):6¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):8¶Test Result:MainClass"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="88" _type="ConsoleOutput" date="Sun Dec 03 14:26:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2663553" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):37
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"37"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="89" _type="ExceptionCommand" date="Sun Dec 03 14:26:21 EST 2023" starttimestamp="1701628917814" timestamp="2663556" type="Exception">
    <exceptionString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="90" _type="ConsoleOutput" date="Sun Dec 03 14:26:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2663566" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):37"), Diff(INSERT,"	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="91" _type="ExceptionCommand" date="Sun Dec 03 14:26:21 EST 2023" starttimestamp="1701628917814" timestamp="2663571" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="92" _type="ExceptionCommand" date="Sun Dec 03 14:26:24 EST 2023" starttimestamp="1701628917814" timestamp="2666334" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.lazy.basic.LazyCarEvaluator.eval(LazyCarEvaluator.java:23)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment4.lazy.AbstractEvaluatorAndResultChecker.compareOutput(AbstractEvaluatorAndResultChecker.java:11)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="93" _type="ExceptionCommand" date="Sun Dec 03 14:26:24 EST 2023" starttimestamp="1701628917814" timestamp="2666341" type="Exception">
    <exceptionString><![CDATA[Test Result:ListMToNCarNormalEval,0.0% complete,0.0,20.0,Expected strings:"NORMAL"
2actual string "NORMAL"

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.basic.LazyCarEvaluator.lazyEval(LazyCarEvaluator.java:46)
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:30)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment4.lazy.AbstractEvaluatorAndResultChecker.compareOutput(AbstractEvaluatorAndResultChecker.java:11)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="94" _type="ExceptionCommand" date="Sun Dec 03 14:26:24 EST 2023" starttimestamp="1701628917814" timestamp="2666344" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):6
Test Result:ListMToNCarLazyEval,0.0% complete,0.0,15.0,Expected strings:"LAZY"
2actual string "LAZY"

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.basic.LazyCdrEvaluator.lazyEval(LazyCdrEvaluator.java:49)
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:30)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment4.lazy.ListMToNCdrLazyEval.compareOutput(ListMToNCdrLazyEval.java:52)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="95" _type="ConsoleOutput" date="Sun Dec 03 14:26:24 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2666346" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶"), Diff(INSERT,"	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶")]]]></diff>
  </Command>
  <Command __id="96" _type="ExceptionCommand" date="Sun Dec 03 14:26:24 EST 2023" starttimestamp="1701628917814" timestamp="2666347" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.basic.LazyCdrEvaluator.lazyEval(LazyCdrEvaluator.java:49)
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:30)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.basic.LazyCarEvaluator.lazyEval(LazyCarEvaluator.java:46)
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:30)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.basic.LazyCarEvaluator.lazyEval(LazyCarEvaluator.java:46)
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:30)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment4.lazy.AbstractEvaluatorAndResultChecker.compareOutput(AbstractEvaluatorAndResultChecker.java:11)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="97" _type="ConsoleOutput" date="Sun Dec 03 14:26:24 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2666349" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶"), Diff(DELETE,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶")]]]></diff>
  </Command>
  <Command __id="98" _type="ConsoleOutput" date="Sun Dec 03 14:26:24 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2666414" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"78"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/java."), Diff(DELETE,"lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1444"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:2"), Diff(DELETE,"77"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,"EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"3342"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(INSERT,"EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"226"), Diff(INSERT,"11"), Diff(EQUAL,"3)¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"EventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(INSERT,"Thread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"2321"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component.java:4843)¶	at java.desktop/java.awt.Lightweigh"), Diff(INSERT,"Thread.pumpEvents(Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"4918"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)"), Diff(INSERT,"EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="99" _type="ConsoleOutput" date="Sun Dec 03 14:26:24 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2666425" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListMToNCarCdrLazyEval,0.0% complete,0.0,15.0,Expected strings:"LAZY"
3actual string "LAZY"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4"), Diff(INSERT,"Test Result:ListMToNCarCdrLazyEval,0.0% complete,0.0,15.0,Expected strings:"LAZY"¶3actual string "LAZY""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="100" _type="ExceptionCommand" date="Sun Dec 03 14:26:25 EST 2023" starttimestamp="1701628917814" timestamp="2667701" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="101" _type="ConsoleOutput" date="Sun Dec 03 14:26:25 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2667709" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListMToNCarCdrLazyEval,0.0% complete,0.0,15.0,Expected strings:"LAZY"¶3actual string "LAZY""), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)¶	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="102" _type="ExceptionCommand" date="Sun Dec 03 14:26:25 EST 2023" starttimestamp="1701628917814" timestamp="2667712" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="103" _type="ConsoleOutput" date="Sun Dec 03 14:26:27 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2669206" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)¶	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(INSERT,"Test execution time (ms):1¶Test Result:GreaterChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="104" _type="ConsoleOutput" date="Sun Dec 03 14:26:27 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2669209" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LessChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Greater"), Diff(INSERT,"Less"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"Greater"), Diff(INSERT,"Less"), Diff(EQUAL,"OrEqualChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="105" _type="ExceptionCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670216" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:32)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="106" _type="ExceptionCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670222" type="Exception">
    <exceptionString><![CDATA[Test Result:LispLambdaChecker,0.0% complete,0.0,10.0,Expected strings:3actual string 

java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:32)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="107" _type="ExceptionCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670224" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:32)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="108" _type="ConsoleOutput" date="Sun Dec 03 14:26:28 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2670228" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:LispLambdaChecker3,0.0% complete,0.0,10.0,Expected strings:25actual string 


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"¶Test Result:L"), Diff(DELETE,"essOrEqual"), Diff(INSERT,"ispLambda"), Diff(EQUAL,"Checker"), Diff(INSERT,"3"), Diff(EQUAL,","), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(INSERT,"Expected strings:25actual string ¶¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="109" _type="ConsoleOutput" date="Sun Dec 03 14:26:28 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2670234" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,0.0% complete,0.0,15.0,Expecting in test file a call to LAMBDA takes 0 parameters with result 42


Test execution time (ms):0
Test Result:LoadLambdaChecker2,0.0% complete,0.0,15.0,Expecting in test file a call to LAMBDA takes 1 parameters with result 42


Test execution time (ms):0
Test Result:LoadLambdaChecker3,0.0% complete,0.0,15.0,Expecting in test file a call to LAMBDA takes 2 parameters with result 42
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"Test Result:LoadLambdaChecker,0.0% complete,0.0,15.0,Expecting in test file a call to LAMBDA takes 0 parameters with result 42¶¶¶Test execution time (ms):0¶Test Result:LoadLambdaChecker2,0.0% complete,0.0,15.0,Expecting in test file a call to LAMBDA takes 1 parameters with result 42¶"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:L"), Diff(DELETE,"isp"), Diff(INSERT,"oad"), Diff(EQUAL,"LambdaChecker3,0.0% complete,0.0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,Expect"), Diff(DELETE,"ed strings:25actual string ¶¶¶Test execution time (ms):0"), Diff(INSERT,"ing in test file a call to LAMBDA takes 2 parameters with result 42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="110" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[0,Sun Dec 03 14:26:21 EST 2023,5,5,BasicFunctionExpressionSuite,ClassRegistryProvided+ LoadLispChecker+ MainClassProvided+ TestLispFileProvided+ , ,PlusGeneratorChecker+ TimesGeneratorChecker+ ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,0,true,PlusGeneratorChecker TimesGeneratorChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,PlusGeneratorChecker TimesGeneratorChecker ,PlusGeneratorChecker-(0.0/50.0) TimesGeneratorChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="111" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[0,Sun Dec 03 14:26:21 EST 2023,5,5,BasicFunctionExpressionSuite,ClassRegistryProvided+ LoadLispChecker+ MainClassProvided+ TestLispFileProvided+ , ,PlusGeneratorChecker+ TimesGeneratorChecker+ ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,0,true,PlusGeneratorChecker TimesGeneratorChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,PlusGeneratorChecker TimesGeneratorChecker ,PlusGeneratorChecker-(0.0/50.0) TimesGeneratorChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="112" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[1,Sun Dec 03 14:26:23 EST 2023,5,0,BasicFunctionExpressionSuite,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,1,true,PlusGeneratorChecker TimesGeneratorChecker , ,PlusGeneratorChecker TimesGeneratorChecker ,PlusGeneratorChecker-(0.0/50.0) TimesGeneratorChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="113" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[1,Sun Dec 03 14:26:23 EST 2023,5,0,BasicFunctionExpressionSuite,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,1,true,PlusGeneratorChecker TimesGeneratorChecker , ,PlusGeneratorChecker TimesGeneratorChecker ,PlusGeneratorChecker-(0.0/50.0) TimesGeneratorChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="114" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[2,Sun Dec 03 14:26:24 EST 2023,5,0,LazinessSensitiveFunSuite,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,ListMToNCarCdrLazyEval+ ListMToNCarLazyEval+ ListMToNCarNormalEval+ ListMToNCdrLazyEval+ PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,2,true,ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval , ,ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval ,ListMToNCarCdrLazyEval-(0.0/15.0) ListMToNCarLazyEval-(0.0/15.0) ListMToNCarNormalEval-(0.0/20.0) ListMToNCdrLazyEval-(0.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="115" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[2,Sun Dec 03 14:26:24 EST 2023,5,0,LazinessSensitiveFunSuite,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,ListMToNCarCdrLazyEval+ ListMToNCarLazyEval+ ListMToNCarNormalEval+ ListMToNCdrLazyEval+ PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,2,true,ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval , ,ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval ,ListMToNCarCdrLazyEval-(0.0/15.0) ListMToNCarLazyEval-(0.0/15.0) ListMToNCarNormalEval-(0.0/20.0) ListMToNCdrLazyEval-(0.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="116" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[3,Sun Dec 03 14:26:25 EST 2023,5,0,BasicCurrySuite,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,CurryOnceChecker+ CurryTwiceChecker+ CurryTwoArgsChecker+ ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,3,true,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ,CurryOnceChecker-(0.0/20.0) CurryTwiceChecker-(0.0/20.0) CurryTwoArgsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="117" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[3,Sun Dec 03 14:26:25 EST 2023,5,0,BasicCurrySuite,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,CurryOnceChecker+ CurryTwiceChecker+ CurryTwoArgsChecker+ ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LessChecker LessOrEqualChecker LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,3,true,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ,CurryOnceChecker-(0.0/20.0) CurryTwiceChecker-(0.0/20.0) CurryTwoArgsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="118" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[4,Sun Dec 03 14:26:27 EST 2023,11,6,RelationalSuite,ClassRegistryProvided GreaterChecker+ GreaterOrEqualChecker+ LessChecker+ LessOrEqualChecker+ LoadLispChecker MainClassProvided TestLispFileProvided , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,4,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="119" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:28 EST 2023" starttimestamp="1701628917814" timestamp="2670265">
    <CSVRow><![CDATA[4,Sun Dec 03 14:26:27 EST 2023,11,6,RelationalSuite,ClassRegistryProvided GreaterChecker+ GreaterOrEqualChecker+ LessChecker+ LessOrEqualChecker+ LoadLispChecker MainClassProvided TestLispFileProvided , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicAndChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 NotChecker ProjectStructureOrganizesEvaluators QuoteChecker VariableArgumentAndChecker VariableArgumentOrChecker ,0,4,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="120" _type="ConsoleOutput" date="Sun Dec 03 14:26:29 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2671558" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:BasicAndChecker,100.0% complete,10.0,10.0,


Test execution time (ms):1
Test Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker,0.0% complete,0.0,15.0,Expecting in test file a call to LAMBDA takes 0 parameters with result 42¶¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"LoadLambda"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker"), Diff(DELETE,"2"), Diff(EQUAL,","), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,"), Diff(DELETE,"Expecting in test file a call to LAMBDA takes 1 parameters with result 42"), Diff(EQUAL,"¶¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"LoadLambda"), Diff(INSERT,"BasicOr"), Diff(EQUAL,"Checker"), Diff(DELETE,"3"), Diff(EQUAL,",0.0% complete,0.0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,Expect"), Diff(DELETE,"ing in test file a call to LAMBDA takes 2 parameters with result 42"), Diff(INSERT,"ed strings:6actual string (= 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="121" _type="ConsoleOutput" date="Sun Dec 03 14:26:29 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2671562" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:NotChecker,100.0% complete,10.0,10.0,


Test execution time (ms):0
Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"BasicAnd"), Diff(INSERT,"Not"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"BasicOr"), Diff(INSERT,"VariableArgumentAnd"), Diff(EQUAL,"Checker,0.0% complete,0.0,10.0,Expected strings:"), Diff(DELETE,"6"), Diff(INSERT,"2"), Diff(EQUAL,"actual string "), Diff(DELETE,"(= 1 2)"), Diff(INSERT,"3¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="122" _type="ConsoleOutput" date="Sun Dec 03 14:26:29 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2671563" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:VariableArgumentOrChecker,0.0% complete,0.0,10.0,Expected strings:Tactual string (/= 1 1)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:NotChecker,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:VariableArgument"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,0.0% complete,0.0,10.0,Expected strings:"), Diff(DELETE,"2"), Diff(INSERT,"T"), Diff(EQUAL,"actual string "), Diff(DELETE,"3¶"), Diff(INSERT,"(/= 1 1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="123" _type="ExceptionCommand" date="Sun Dec 03 14:26:33 EST 2023" starttimestamp="1701628917814" timestamp="2676161" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'SETQ'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="124" _type="ExceptionCommand" date="Sun Dec 03 14:26:33 EST 2023" starttimestamp="1701628917814" timestamp="2676173" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'LET'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="125" _type="ConsoleOutput" date="Sun Dec 03 14:26:33 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2676182" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:VariableArgumentOrChecker,0.0% complete,0.0,10.0,Expected strings:Tactual string (/= 1 1"), Diff(INSERT,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="126" _type="ExceptionCommand" date="Sun Dec 03 14:26:35 EST 2023" starttimestamp="1701628917814" timestamp="2677368" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="127" _type="ExceptionCommand" date="Sun Dec 03 14:26:35 EST 2023" starttimestamp="1701628917814" timestamp="2677373" type="Exception">
    <exceptionString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="128" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677376" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶"), Diff(EQUAL,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶"), Diff(INSERT,"	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶")]]]></diff>
  </Command>
  <Command __id="129" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677384" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶"), Diff(EQUAL,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶"), Diff(DELETE,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶")]]]></diff>
  </Command>
  <Command __id="130" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677394" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶"), Diff(EQUAL,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶"), Diff(INSERT,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶")]]]></diff>
  </Command>
  <Command __id="131" _type="ExceptionCommand" date="Sun Dec 03 14:26:35 EST 2023" starttimestamp="1701628917814" timestamp="2677406" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="132" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677415" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="133" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677432" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶"), Diff(DELETE,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="134" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677442" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶"), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="135" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677451" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶"), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶"), Diff(DELETE,"	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="136" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677459" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶"), Diff(EQUAL,"	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶"), Diff(INSERT,"	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶")]]]></diff>
  </Command>
  <Command __id="137" _type="ExceptionCommand" date="Sun Dec 03 14:26:35 EST 2023" starttimestamp="1701628917814" timestamp="2677468" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="138" _type="ExceptionCommand" date="Sun Dec 03 14:26:35 EST 2023" starttimestamp="1701628917814" timestamp="2677482" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="139" _type="ConsoleOutput" date="Sun Dec 03 14:26:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2677494" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶"), Diff(EQUAL,"	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶"), Diff(DELETE,"	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶")]]]></diff>
  </Command>
  <Command __id="140" _type="ConsoleOutput" date="Sun Dec 03 14:26:37 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2679413" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:CondChecker,0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)


Test execution time (ms):1
Test Result:A6ExtraCondChecker,0.0% complete,0.0,10.0,Expected strings:NIL
NIL
T
23
NILactual string NIL
NIL
NIL
NIL
NIL


Test execution time (ms):0
Test Result:QuoteChecker,0.0% complete,0.0,10.0,Expected strings:(QUOTE (+ 3 4))actual string ((QUOTE (+ 3 4)))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressi"), Diff(INSERT,"¶Test execution time (ms):1¶Test Result:C"), Diff(EQUAL,"on"), Diff(INSERT,"d"), Diff(EQUAL,"Checker"), Diff(DELETE,".compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843"), Diff(INSERT,",0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)¶¶¶Test execution time (ms):1¶Test Result:A6ExtraCondChecker,0.0% complete,0.0,10.0,Expected strings:NIL¶NIL¶T¶23¶NILactual string NIL¶NIL¶NIL¶NIL¶NIL¶¶¶Test execution time (ms):0¶Test Result:QuoteChecker,0.0% complete,0.0,10.0,Expected strings:(QUOTE (+ 3 4))actual string ((QUOTE (+ 3 4))"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="141" _type="ExceptionCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679416" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.eval(EvalEvaluator.java:13)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:24)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.Evaluator.lazyEval(Evaluator.java:27)
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:30)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="142" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679417">
    <CSVRow><![CDATA[6,Sun Dec 03 14:26:29 EST 2023,14,3,LogicalSuite,BasicAndChecker+ ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker LoadLispChecker MainClassProvided NotChecker+ TestLispFileProvided , ,BasicOrChecker+ CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker TimesGeneratorChecker VariableArgumentAndChecker+ VariableArgumentOrChecker+ ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicLetTest CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators QuoteChecker ,0,6,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(0.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="143" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[6,Sun Dec 03 14:26:29 EST 2023,14,3,LogicalSuite,BasicAndChecker+ ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker LoadLispChecker MainClassProvided NotChecker+ TestLispFileProvided , ,BasicOrChecker+ CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker TimesGeneratorChecker VariableArgumentAndChecker+ VariableArgumentOrChecker+ ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride BasicLetTest CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators QuoteChecker ,0,6,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(0.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="144" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[7,Sun Dec 03 14:26:33 EST 2023,14,0,A6LetSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,BasicLetTest+ BasicOrChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker LetLambdaAndFunctionTest+ LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators QuoteChecker ,0,7,true,BasicLetTest LetLambdaAndFunctionTest , ,BasicLetTest LetLambdaAndFunctionTest ,BasicLetTest-(0.0/10.0) LetLambdaAndFunctionTest-(0.0/40.0) , ,]]></CSVRow>
  </Command>
  <Command __id="145" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[7,Sun Dec 03 14:26:33 EST 2023,14,0,A6LetSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,BasicLetTest+ BasicOrChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker LetLambdaAndFunctionTest+ LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride CombinationChecker CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators QuoteChecker ,0,7,true,BasicLetTest LetLambdaAndFunctionTest , ,BasicLetTest LetLambdaAndFunctionTest ,BasicLetTest-(0.0/10.0) LetLambdaAndFunctionTest-(0.0/40.0) , ,]]></CSVRow>
  </Command>
  <Command __id="146" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[8,Sun Dec 03 14:26:35 EST 2023,14,0,A6FuncallSocialDistanceSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,BasicLetTest BasicOrChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker+ LetLambdaAndFunctionTest LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride CombinationChecker CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators QuoteChecker ,0,8,true,DerivedSafeChecker , , ,DerivedSafeChecker-(0.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="147" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[8,Sun Dec 03 14:26:35 EST 2023,14,0,A6FuncallSocialDistanceSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,BasicLetTest BasicOrChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker+ LetLambdaAndFunctionTest LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6ExtraCondChecker A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride CombinationChecker CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators QuoteChecker ,0,8,true,DerivedSafeChecker , , ,DerivedSafeChecker-(0.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="148" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[9,Sun Dec 03 14:26:37 EST 2023,17,3,A6BasicOperationSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker+ ListChecker2+ LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker+ BasicLetTest BasicOrChecker CombinationChecker+ CondChecker+ CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EvalChecker+ LetLambdaAndFunctionTest LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker QuoteChecker+ TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride EnvironmentCallsGetParent EnvironmentCallsPut F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators ,0,9,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(0.0/10.0) CombinationChecker-(0.0/10.0) CondChecker-(0.0/10.0) EvalChecker-(0.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="149" _type="LocalChecksRawCommand" date="Sun Dec 03 14:26:37 EST 2023" starttimestamp="1701628917814" timestamp="2679418">
    <CSVRow><![CDATA[9,Sun Dec 03 14:26:37 EST 2023,17,3,A6BasicOperationSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker+ ListChecker2+ LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker+ BasicLetTest BasicOrChecker CombinationChecker+ CondChecker+ CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EvalChecker+ LetLambdaAndFunctionTest LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 PlusGeneratorChecker QuoteChecker+ TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride EnvironmentCallsGetParent EnvironmentCallsPut F21A6NoCheckstyleWarnings FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 ProjectStructureOrganizesEvaluators ,0,9,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(0.0/10.0) CombinationChecker-(0.0/10.0) CondChecker-(0.0/10.0) EvalChecker-(0.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="150" _type="ExceptionCommand" date="Sun Dec 03 14:26:39 EST 2023" starttimestamp="1701628917814" timestamp="2681317" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'SETQ'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="151" _type="ExceptionCommand" date="Sun Dec 03 14:26:39 EST 2023" starttimestamp="1701628917814" timestamp="2681325" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'SETQ'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="152" _type="ConsoleOutput" date="Sun Dec 03 14:26:40 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2682402" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (19)
 |- index (18)
  |~ OperationRegistererImpl.java (43)
  |~ CondEvaluator.java (30)
  |~ ClassRegistryImpl.java (100)
  |~ index.java (14)
  |~ LoadEvaluator.java (51)
  |~ LesserEqualEvaluator.java (19)
  |~ AndEvaluator.java (31)
  |~ ListEvaluator.java (24)
  |~ OrEvaluator.java (31)
  |~ GreaterEvaluator.java (18)
  |~ GreaterEqualEvaluator.java (18)
  |~ ArithmeticEvaluatorHelper.java (60)
  |~ BasicExpressionImpl.java (58)
  |~ NotEvaluator.java (23)
  |~ EvalEvaluator.java (31)
  |~ LesserEvaluator.java (21)
  |~ RunF23A5Tests.java (28)
  |~ QuoteEvaluator.java (14)

Attempting to match to the structure:
|- .* (19)
 |- [a-z]?.*[Ll]ogical.* (3)
  |~ AndEval.*.java (0)
  |~ OrEval.*.java (0)
  |~ NotEval.*.java (0)
 |- [a-z]?.*[Rr]elational.* (4)
  |~ G.*T.*Eval.*.java (0)
  |~ L.*T.*Eval.*.java (0)
  |~ G.*T.*E.*Eval.*.java (0)
  |~ L.*T.*E.*Eval.*.java (0)
 |- [a-z]?.*[Ee]xpression.* (5)
  |~ QuoteEval.*.java (0)
  |~ EvalEval.*.java (0)
  |~ CondEval.*.java (0)
  |~ LoadEval.*.java (0)
  |~ ListEval.*.java (0)
 |- [a-z]?.*[Ff]unctional.* (3)
  |~ FuncallEval.*.java (0)
  |~ LambdaEval.*.java (0)
  |~ SetqEval.*.java (0)


Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Test execution time (ms):1¶Test Result:CondChecker,0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)¶¶¶Test execution time (ms):1¶Test Result:A6ExtraCondChecker,0.0% complete,0.0,10.0,Expected strings:NIL¶NIL¶T¶23¶NILactual string NIL¶NIL¶NIL¶NIL¶NIL¶¶¶Test execution time (ms):0¶Test Result:QuoteChecker,0.0% complete,0.0,10.0,Expected strings:(QUOTE (+ 3 4))actual string ((QUOTE (+ 3 4)))"), Diff(INSERT,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (19)¶ |- index (18)¶  |~ OperationRegistererImpl.java (43)¶  |~ CondEvaluator.java (30)¶  |~ ClassRegistryImpl.java (100)¶  |~ index.java (14)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (31)¶  |~ ListEvaluator.java (24)¶  |~ OrEvaluator.java (31)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (60)¶  |~ BasicExpressionImpl.java (58)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (31)¶  |~ LesserEvaluator.java (21)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (14)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)¶  |~ FuncallEval.*.java (0)¶  |~ LambdaEval.*.java (0)¶  |~ SetqEval.*.java (0)¶¶¶Test execution time (ms):30"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="153" _type="ConsoleOutput" date="Sun Dec 03 14:26:40 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2682405" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (19)¶ |- index (18)¶  |~ OperationRegistererImpl.java (43)¶  |~ CondEvaluator.java (30)¶  |~ ClassRegistryImpl.java (100)¶  |~ index.java (14)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (31)¶  |~ ListEvaluator.java (24)¶  |~ OrEvaluator.java (31)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (60)¶  |~ BasicExpressionImpl.java (58)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (31)¶  |~ LesserEvaluator.java (21)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (14)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)¶  |~ FuncallEval.*.java (0)¶  |~ LambdaEval.*.java (0)¶  |~ SetqEval.*.java (0)¶¶¶Test execution time (ms):30"), Diff(INSERT,"Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="154" _type="ConsoleOutput" date="Sun Dec 03 14:26:40 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2682408" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Dec 03 14:26:40 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Dec 03 14:26:40 EST 2023"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="155" _type="ConsoleOutput" date="Sun Dec 03 14:26:40 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683039" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:27
Running second pass checks Sun Dec 03 14:26:40 EST 2023
Start O(n2) inter- and intra class method calls:Sun Dec 03 14:26:40 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:27¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sun Dec 03 14:26:40 EST 2023¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sun Dec 03 14:26:40 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="156" _type="ConsoleOutput" date="Sun Dec 03 14:26:40 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683049" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Dec 03 14:26:40 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:27¶Running second pass checks Sun Dec 03 14:26:40 EST 2023¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Dec 03 14:26:40 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="157" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683387" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Dec 03 14:26:41 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass check"), Diff(EQUAL,"s:Sun Dec 03 14:26:4"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," EST 2023¶")]]]></diff>
  </Command>
  <Command __id="158" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683389" type="ConsoleOutput">
    <outputString><![CDATA[Generating checks:Sun Dec 03 14:26:41 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Sun Dec 03 14:26:41 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="159" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683402" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Sun Dec 03 14:26:41 EST 2023
Generating externals:Sun Dec 03 14:26:41 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Finished "), Diff(EQUAL,"Generating checks:Sun Dec 03 14:26:41 EST 2023¶"), Diff(INSERT,"Generating externals:Sun Dec 03 14:26:41 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="160" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683421" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Dec 03 14:26:41 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"Generating checks:Sun Dec 03 14:26:41 EST 2023¶"), Diff(EQUAL,"Generating externals:Sun Dec 03 14:26:41 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="161" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683442" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1044
Test Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*NestedLexicalEnvironment(.*) main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Dec 03 14:26:41 EST 2023"), Diff(INSERT,"¶Test execution time (ms):1044¶Test Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*NestedLexicalEnvironment(.*) main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="162" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683456" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):16
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"044¶Test Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*NestedLexicalEnvironment(.*) main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="163" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683458" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsPut,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*NestedLexicalEnvironment(.*) main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):16"), Diff(INSERT,"Result:EnvironmentCallsPut,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*NestedLexicalEnvironment(.*) main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="164" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683473" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):15
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsPut,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*NestedLexicalEnvironment(.*) main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(INSERT,"execution time (ms):15"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="165" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683474" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):15"), Diff(INSERT,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="166" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683489" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):15
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(INSERT,"execution time (ms):15"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="167" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683491" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsEnvironmentLookup,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*IdentifierAtomWithLookup(.*) main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):15"), Diff(INSERT,"Result:IdentifierCallsEnvironmentLookup,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*IdentifierAtomWithLookup(.*) main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="168" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683497" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):5
Test Result:IdentifierCallsOptionalGet,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*IdentifierAtomWithLookup(.*) java.util.Optional!get:->Object(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):5¶"), Diff(EQUAL,"Test Result:IdentifierCalls"), Diff(DELETE,"EnvironmentLookup"), Diff(INSERT,"OptionalGet"), Diff(EQUAL,",0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*IdentifierAtomWithLookup(.*) "), Diff(DELETE,"main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional"), Diff(INSERT,"java.util.Optional!get:->Object"), Diff(EQUAL,"(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶¶")]]]></diff>
  </Command>
  <Command __id="169" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683502" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"5¶Test Result:IdentifierCallsOptionalGet,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*IdentifierAtomWithLookup(.*) java.util.Optional!get:->Object(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="170" _type="ConsoleOutput" date="Sun Dec 03 14:26:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2683503" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LambdaCallsLambdaFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*LambdaEvaluator(.*) main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom\[\];main.lisp.parser.terms.SExpression-\>Lambda(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:LambdaCallsLambdaFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*LambdaEvaluator(.*) main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom\[\];main.lisp.parser.terms.SExpression-\>Lambda(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="171" _type="ShellCommand" date="Sun Dec 03 14:27:25 EST 2023" starttimestamp="1701628917814" timestamp="2727650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="292" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]]]></CSVRow>
  </Command>
  <Command __id="293" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index]]></CSVRow>
  </Command>
  <Command __id="294" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run]]></CSVRow>
  </Command>
  <Command __id="295" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a]]></CSVRow>
  </Command>
  <Command __id="296" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests]]></CSVRow>
  </Command>
  <Command __id="297" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max]]></CSVRow>
  </Command>
  <Command __id="298" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed]]></CSVRow>
  </Command>
  <Command __id="299" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces]]></CSVRow>
  </Command>
  <Command __id="300" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max]]></CSVRow>
  </Command>
  <Command __id="301" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces]]></CSVRow>
  </Command>
  <Command __id="302" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process]]></CSVRow>
  </Command>
  <Command __id="303" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time]]></CSVRow>
  </Command>
  <Command __id="304" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out]]></CSVRow>
  </Command>
  <Command __id="305" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args]]></CSVRow>
  </Command>
  <Command __id="306" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr]]></CSVRow>
  </Command>
  <Command __id="307" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index]]></CSVRow>
  </Command>
  <Command __id="308" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote]]></CSVRow>
  </Command>
  <Command __id="309" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment]]></CSVRow>
  </Command>
  <Command __id="310" _type="CheckStyleCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2728680">
    <CSVRow><![CDATA[20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]]]></CSVRow>
  </Command>
  <Command __id="311" _type="ShellCommand" date="Sun Dec 03 14:27:26 EST 2023" starttimestamp="1701628917814" timestamp="2729155" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="312" _type="ShellCommand" date="Sun Dec 03 14:27:27 EST 2023" starttimestamp="1701628917814" timestamp="2729592" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="313" _type="ExceptionCommand" date="Sun Dec 03 14:27:33 EST 2023" starttimestamp="1701628917814" timestamp="2735618" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="314" _type="ExceptionCommand" date="Sun Dec 03 14:27:38 EST 2023" starttimestamp="1701628917814" timestamp="2740524" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="315" _type="ExceptionCommand" date="Sun Dec 03 14:27:38 EST 2023" starttimestamp="1701628917814" timestamp="2740533" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):3
Test Result:LispIsListChecker3,0.0% complete,0.0,15.0,Expected strings:NILactual string 

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="316" _type="ExceptionCommand" date="Sun Dec 03 14:27:38 EST 2023" starttimestamp="1701628917814" timestamp="2740536" type="Exception">
    <exceptionString><![CDATA[Test Result:LispToStringChecker,0.0% complete,0.0,15.0,Expected strings:"(1)"actual string 

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="317" _type="ExceptionCommand" date="Sun Dec 03 14:27:38 EST 2023" starttimestamp="1701628917814" timestamp="2740545" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.lazyEval(BasicExpressionEvaluator.java:28)
	at main.lisp.parser.terms.BasicExpression.lazyEval(BasicExpression.java:31)
	at main.lisp.evaluator.lazy.BasicThunk.eval(BasicThunk.java:22)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:87)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="319" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:28:03 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2765234" type="Run" />
  <Command __id="320" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:28:03 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2765234" type="Run" />
  <Command __id="321" _type="ShellCommand" date="Sun Dec 03 14:28:11 EST 2023" starttimestamp="1701628917814" timestamp="2773926" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="322" _type="ShellCommand" date="Sun Dec 03 14:29:22 EST 2023" starttimestamp="1701628917814" timestamp="2845142" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="323" _type="ShellCommand" date="Sun Dec 03 14:29:24 EST 2023" starttimestamp="1701628917814" timestamp="2847098" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="324" _type="ShellCommand" date="Sun Dec 03 14:29:25 EST 2023" starttimestamp="1701628917814" timestamp="2848060" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="325" _type="MoveCaretCommand" caretOffset="1109" date="Sun Dec 03 14:29:25 EST 2023" docOffset="1109" starttimestamp="1701628917814" timestamp="2848111" />
  <Command __id="326" _type="ShellCommand" date="Sun Dec 03 14:29:32 EST 2023" starttimestamp="1701628917814" timestamp="2854989" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="327" _type="ShellCommand" date="Sun Dec 03 14:30:13 EST 2023" starttimestamp="1701628917814" timestamp="2895607" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="328" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:30:16 EST 2023" starttimestamp="1701628917814" timestamp="2898421" />
  <Command __id="329" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:30:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2898545" type="Run" />
  <Command __id="330" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:30:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2898545" type="Run" />
  <Command __id="331" _type="ShellCommand" date="Sun Dec 03 14:30:16 EST 2023" starttimestamp="1701628917814" timestamp="2898857" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="332" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904406" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LambdaCallsLambdaFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*LambdaEvaluator(.*) main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom\[\];main.lisp.parser.terms.SExpression-\>Lambda(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="333" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904409" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="334" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904413" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="335" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904414" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="336" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904414" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="337" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904416" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="338" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904443" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):34"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="339" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904444" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):36
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="340" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904446" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):36¶")]]]></diff>
  </Command>
  <Command __id="341" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904447" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="342" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904448" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="343" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904449" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="344" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904451" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:NotChecker,100.0% complete,10.0,10.0,¶¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="345" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904451" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Not"), Diff(INSERT,"VariableArgumentAnd"), Diff(EQUAL,"Checker,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"¶¶¶Test execution time (ms):0"), Diff(INSERT,"Expected strings:2actual string 3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="346" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904452" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="347" _type="ConsoleOutput" date="Sun Dec 03 14:30:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2904453" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentOrChecker,0.0% complete,0.0,10.0,Expected strings:Tactual string (/= 1 1)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:VariableArgumentOrChecker,0.0% complete,0.0,10.0,Expected strings:Tactual string (/= 1 1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="348" _type="ConsoleOutput" date="Sun Dec 03 14:30:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2913425" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentO"), Diff(INSERT,"execution time (ms):2¶Test Result:Greate"), Diff(EQUAL,"rChecker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Expected strings:Tactual string (/= 1 1)"), Diff(INSERT,"¶¶Test execution time (ms):1¶Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="349" _type="ConsoleOutput" date="Sun Dec 03 14:30:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2913427" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2¶Test Result:GreaterChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:GreaterOrEqual"), Diff(INSERT,"Result:Less"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="350" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[12,Sun Dec 03 14:27:33 EST 2023,17,0,LispIsListChecker,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker+ LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ,0,12,false, , , ,LispIsListChecker-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="351" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[12,Sun Dec 03 14:27:33 EST 2023,17,0,LispIsListChecker,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker+ LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ,0,12,false, , , ,LispIsListChecker-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="352" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[13,Sun Dec 03 14:27:35 EST 2023,17,0,LispLambdaSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ,0,13,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 , , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="353" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[13,Sun Dec 03 14:27:35 EST 2023,17,0,LispLambdaSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ,0,13,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 , , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="354" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[14,Sun Dec 03 14:27:38 EST 2023,17,0,LispToStringSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2+ LispIsListChecker3+ LispIsListChecker4+ LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker+ LispToStringChecker2+ LispToStringChecker3+ LispToStringChecker4+ ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,0,14,true,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided , ,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided ,LispIsListChecker-(0.0/15.0) LispIsListChecker2-(0.0/15.0) LispIsListChecker3-(0.0/15.0) LispIsListChecker4-(0.0/15.0) LispToStringChecker-(0.0/15.0) LispToStringChecker2-(0.0/15.0) LispToStringChecker3-(0.0/15.0) LispToStringChecker4-(0.0/15.0) LoadLispChecker-(0.0/0.0) TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="355" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[14,Sun Dec 03 14:27:38 EST 2023,17,0,LispToStringSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2+ LispIsListChecker3+ LispIsListChecker4+ LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker+ LispToStringChecker2+ LispToStringChecker3+ LispToStringChecker4+ ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,0,14,true,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided , ,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided ,LispIsListChecker-(0.0/15.0) LispIsListChecker2-(0.0/15.0) LispIsListChecker3-(0.0/15.0) LispIsListChecker4-(0.0/15.0) LispToStringChecker-(0.0/15.0) LispToStringChecker2-(0.0/15.0) LispToStringChecker3-(0.0/15.0) LispToStringChecker4-(0.0/15.0) LoadLispChecker-(0.0/0.0) TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="356" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[15,Sun Dec 03 14:27:39 EST 2023,17,0,LispToStringSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,0,15,true,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided , ,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided ,LispIsListChecker-(0.0/15.0) LispIsListChecker2-(0.0/15.0) LispIsListChecker3-(0.0/15.0) LispIsListChecker4-(0.0/15.0) LispToStringChecker-(0.0/15.0) LispToStringChecker2-(0.0/15.0) LispToStringChecker3-(0.0/15.0) LispToStringChecker4-(0.0/15.0) LoadLispChecker-(0.0/0.0) TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="357" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[15,Sun Dec 03 14:27:39 EST 2023,17,0,LispToStringSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,0,15,true,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided , ,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided ,LispIsListChecker-(0.0/15.0) LispIsListChecker2-(0.0/15.0) LispIsListChecker3-(0.0/15.0) LispIsListChecker4-(0.0/15.0) LispToStringChecker-(0.0/15.0) LispToStringChecker2-(0.0/15.0) LispToStringChecker3-(0.0/15.0) LispToStringChecker4-(0.0/15.0) LoadLispChecker-(0.0/0.0) TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="358" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[16,Sun Dec 03 14:30:22 EST 2023,17,0,LogicalSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,1,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(0.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="359" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[16,Sun Dec 03 14:30:22 EST 2023,17,0,LogicalSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,1,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(0.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="360" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[17,Sun Dec 03 14:30:26 EST 2023,17,0,LogicalSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,1,1,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(0.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="361" _type="LocalChecksRawCommand" date="Sun Dec 03 14:30:31 EST 2023" starttimestamp="1701628917814" timestamp="2913429">
    <CSVRow><![CDATA[17,Sun Dec 03 14:30:26 EST 2023,17,0,LogicalSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,1,1,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(0.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="362" _type="ConsoleOutput" date="Sun Dec 03 14:30:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2913430" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:Less"), Diff(INSERT,"OrEqual"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="363" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923615" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="364" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923621" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="365" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923622" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶"), Diff(EQUAL,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶"), Diff(DELETE,"	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶")]]]></diff>
  </Command>
  <Command __id="366" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923625" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶"), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶"), Diff(INSERT,"	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="367" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923626" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶"), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶"), Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="368" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923661" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(INSERT,"27"), Diff(EQUAL,"7"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"57"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Contai"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"88"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:5"), Diff(DELETE,"8"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"68"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"484"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"348"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"219"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1906"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1585"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1531"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1406"), Diff(INSERT,"742"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="369" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923671" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="370" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923680" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="371" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923687" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="372" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923693" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶"), Diff(EQUAL,"	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶"), Diff(DELETE,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶")]]]></diff>
  </Command>
  <Command __id="373" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923698" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="374" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923707" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶"), Diff(DELETE,"	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶")]]]></diff>
  </Command>
  <Command __id="375" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923713" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶"), Diff(EQUAL,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶"), Diff(INSERT,"	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶")]]]></diff>
  </Command>
  <Command __id="376" _type="ConsoleOutput" date="Sun Dec 03 14:30:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="2923719" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶"), Diff(EQUAL,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶"), Diff(INSERT,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶")]]]></diff>
  </Command>
  <Command __id="377" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923726" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="378" _type="ExceptionCommand" date="Sun Dec 03 14:30:41 EST 2023" starttimestamp="1701628917814" timestamp="2923739" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="385" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:30:57 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2939549" type="Run" />
  <Command __id="386" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:30:57 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2939549" type="Run" />
  <Command __id="387" _type="ShellCommand" date="Sun Dec 03 14:30:57 EST 2023" starttimestamp="1701628917814" timestamp="2939552" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="388" _type="MoveCaretCommand" caretOffset="415" date="Sun Dec 03 14:30:58 EST 2023" docOffset="415" starttimestamp="1701628917814" timestamp="2941011" />
  <Command __id="389" _type="ShellCommand" date="Sun Dec 03 14:31:01 EST 2023" starttimestamp="1701628917814" timestamp="2943400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="26" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:23:54 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2516483">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="43" _type="Replace" date="Sun Dec 03 14:24:02 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" endLine="3" insertionLength="1" int_docASTNodeCount="90" int_docActiveCodeLength="716" int_docExpressionCount="56" int_docLength="1108" length="1" offset="111" startLine="3" starttimestamp="1701628917814" timestamp="2524773">
    <deletedText><![CDATA[5]]></deletedText>
    <insertedText><![CDATA[6]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="51" _type="Replace" date="Sun Dec 03 14:24:11 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" endLine="3" insertionLength="1" int_docASTNodeCount="90" int_docActiveCodeLength="716" int_docExpressionCount="56" int_docLength="1108" length="1" offset="126" startLine="3" starttimestamp="1701628917814" timestamp="2533774">
    <deletedText><![CDATA[5]]></deletedText>
    <insertedText><![CDATA[6]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="59" _type="Replace" date="Sun Dec 03 14:24:17 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" endLine="25" insertionLength="1" int_docASTNodeCount="90" int_docActiveCodeLength="716" int_docExpressionCount="56" int_docLength="1108" length="1" offset="1085" startLine="25" starttimestamp="1701628917814" timestamp="2540128">
    <deletedText><![CDATA[5]]></deletedText>
    <insertedText><![CDATA[6]]></insertedText>
  </DocumentChange>
  <Command __id="390" _type="ShellCommand" date="Sun Dec 03 14:31:45 EST 2023" starttimestamp="1701628917814" timestamp="2987464" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="392" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:31:52 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="2994657" />
  <Command __id="393" _type="MoveCaretCommand" caretOffset="446" date="Sun Dec 03 14:31:53 EST 2023" docOffset="566" starttimestamp="1701628917814" timestamp="2995956" />
  <Command __id="396" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:32:01 EST 2023" starttimestamp="1701628917814" timestamp="3003915" />
  <Command __id="397" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:32:01 EST 2023" starttimestamp="1701628917814" timestamp="3003916" />
  <Command __id="398" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 14:32:01 EST 2023" docOffset="557" starttimestamp="1701628917814" timestamp="3004181" />
  <Command __id="399" _type="ShellCommand" date="Sun Dec 03 14:32:28 EST 2023" starttimestamp="1701628917814" timestamp="3030604" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="400" _type="LocalChecksRawCommand" date="Sun Dec 03 14:32:28 EST 2023" starttimestamp="1701628917814" timestamp="3030605">
    <CSVRow><![CDATA[21,Sun Dec 03 14:30:54 EST 2023,17,0,A6BasicOperationSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,1,5,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(0.0/10.0) CombinationChecker-(0.0/10.0) CondChecker-(0.0/10.0) EvalChecker-(0.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="401" _type="LocalChecksRawCommand" date="Sun Dec 03 14:32:28 EST 2023" starttimestamp="1701628917814" timestamp="3030605">
    <CSVRow><![CDATA[21,Sun Dec 03 14:30:54 EST 2023,17,0,A6BasicOperationSuite,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,1,5,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(0.0/10.0) CombinationChecker-(0.0/10.0) CondChecker-(0.0/10.0) EvalChecker-(0.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="402" _type="ShellCommand" date="Sun Dec 03 14:32:29 EST 2023" starttimestamp="1701628917814" timestamp="3031542" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="403" _type="ShellCommand" date="Sun Dec 03 14:32:30 EST 2023" starttimestamp="1701628917814" timestamp="3032710" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="404" _type="ShellCommand" date="Sun Dec 03 14:32:36 EST 2023" starttimestamp="1701628917814" timestamp="3038391" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="405" _type="ShellCommand" date="Sun Dec 03 14:32:38 EST 2023" starttimestamp="1701628917814" timestamp="3040238" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="406" _type="ShellCommand" date="Sun Dec 03 14:32:52 EST 2023" starttimestamp="1701628917814" timestamp="3054407" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="407" _type="MoveCaretCommand" caretOffset="373" date="Sun Dec 03 14:32:52 EST 2023" docOffset="493" starttimestamp="1701628917814" timestamp="3054432" />
  <Command __id="408" _type="MoveCaretCommand" caretOffset="477" date="Sun Dec 03 14:32:53 EST 2023" docOffset="597" starttimestamp="1701628917814" timestamp="3055336" />
  <Command __id="409" _type="ShellCommand" date="Sun Dec 03 14:32:54 EST 2023" starttimestamp="1701628917814" timestamp="3056772" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="410" _type="ShellCommand" date="Sun Dec 03 14:33:07 EST 2023" starttimestamp="1701628917814" timestamp="3069384" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="411" _type="ShellCommand" date="Sun Dec 03 14:33:07 EST 2023" starttimestamp="1701628917814" timestamp="3069860" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="412" _type="ShellCommand" date="Sun Dec 03 14:33:08 EST 2023" starttimestamp="1701628917814" timestamp="3070462" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="413" _type="ShellCommand" date="Sun Dec 03 14:33:08 EST 2023" starttimestamp="1701628917814" timestamp="3070944" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="391" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:31:52 EST 2023" docASTNodeCount="124" docActiveCodeLength="705" docExpressionCount="82" docLength="705" projectName="Assignment5" starttimestamp="1701628917814" timestamp="2994586">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return new NilAtom();
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}else {
			return evalHelper(expr.getTail().getHead(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="414" _type="ShellCommand" date="Sun Dec 03 14:34:01 EST 2023" starttimestamp="1701628917814" timestamp="3124005" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="417" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:34:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3129597" type="Run" />
  <Command __id="418" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:34:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3129597" type="Run" />
  <Command __id="419" _type="ShellCommand" date="Sun Dec 03 14:34:07 EST 2023" starttimestamp="1701628917814" timestamp="3129943" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="420" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134664" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):1¶Test Result:CondChecker,0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)¶¶¶Test execution time (ms):2¶Test Result:A6ExtraCondChecker,0.0% complete,0.0,10.0,Expected strings:NIL¶NIL¶T¶23¶NILactual string NIL¶NIL¶NIL¶NIL¶NIL¶¶¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="421" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134665" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="422" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134670" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="423" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134671" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="424" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134672" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="425" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134672" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="426" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="427" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134707" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"39"), Diff(INSERT,"40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="428" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶¶"), Diff(DELETE,"Test execution time (ms):40¶")]]]></diff>
  </Command>
  <Command __id="429" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134709" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="430" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134710" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="431" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134710" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="432" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134712" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="433" _type="ConsoleOutput" date="Sun Dec 03 14:34:12 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3134716" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3


Test execution time (ms):1
Test Result:VariableArgumentOrChecker,0.0% complete,0.0,10.0,Expected strings:Tactual string (/= 1 1)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:NotChecker,10"), Diff(INSERT,"¶Test execution time (ms):0¶Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3¶¶¶Test execution time (ms):1¶Test Result:VariableArgumentOrChecker,"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(INSERT,"Expected strings:Tactual string (/= 1 1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="437" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:34:38 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3161076" type="Run" />
  <Command __id="438" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:34:38 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3161076" type="Run" />
  <Command __id="439" _type="SelectTextCommand" caretOffset="709" date="Sun Dec 03 14:34:39 EST 2023" end="710" start="709" starttimestamp="1701628917814" timestamp="3162024" />
  <Command __id="440" _type="ShellCommand" date="Sun Dec 03 14:34:40 EST 2023" starttimestamp="1701628917814" timestamp="3162291" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="441" _type="ShellCommand" date="Sun Dec 03 14:34:40 EST 2023" starttimestamp="1701628917814" timestamp="3162624" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="442" _type="ShellCommand" date="Sun Dec 03 14:34:41 EST 2023" starttimestamp="1701628917814" timestamp="3163651" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="443" _type="ShellCommand" date="Sun Dec 03 14:36:32 EST 2023" starttimestamp="1701628917814" timestamp="3274319" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="444" _type="ShellCommand" date="Sun Dec 03 14:36:34 EST 2023" starttimestamp="1701628917814" timestamp="3276305" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="415" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:34:06 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3128501">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,".F23Assignment"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment6.F23Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment6Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="446" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:37:52 EST 2023" docASTNodeCount="110" docActiveCodeLength="648" docExpressionCount="71" docLength="648" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3354328">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="447" _type="Replace" date="Sun Dec 03 14:37:52 EST 2023" docASTNodeCount="110" docActiveCodeLength="648" docExpressionCount="71" docLength="648" endLine="30" insertionLength="648" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="648" offset="0" startLine="0" starttimestamp="1701628917814" timestamp="3354389">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}

}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}

}
]]></insertedText>
  </DocumentChange>
  <Command __id="448" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:37:52 EST 2023" starttimestamp="1701628917814" timestamp="3354415" />
  <Command __id="449" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:37:52 EST 2023" starttimestamp="1701628917814" timestamp="3354423" />
  <Command __id="450" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:37:52 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="3354431" />
  <Command __id="451" _type="MoveCaretCommand" caretOffset="463" date="Sun Dec 03 14:37:52 EST 2023" docOffset="463" starttimestamp="1701628917814" timestamp="3354882" />
  <Command __id="453" _type="SelectTextCommand" caretOffset="709" date="Sun Dec 03 14:37:54 EST 2023" end="710" start="709" starttimestamp="1701628917814" timestamp="3356588" />
  <Command __id="454" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:37:56 EST 2023" starttimestamp="1701628917814" timestamp="3358219" />
  <Command __id="455" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:37:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3358325" type="Run" />
  <Command __id="456" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:37:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3358325" type="Run" />
  <Command __id="457" _type="ShellCommand" date="Sun Dec 03 14:37:56 EST 2023" starttimestamp="1701628917814" timestamp="3358640" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="458" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364543" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3¶¶¶Test execution time (ms):1¶Test Result:VariableArgumentOrChecker,0.0% complete,0.0,10.0,Expected strings:Tactual string (/= 1 1)¶")]]]></diff>
  </Command>
  <Command __id="459" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364544" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="460" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364552" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="461" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364552" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="462" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364553" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="463" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364554" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):9"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="464" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364586" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):41"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="465" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364587" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):41"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="466" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364588" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):43
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):43"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="467" _type="ConsoleOutput" date="Sun Dec 03 14:38:02 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3364589" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):43"), Diff(INSERT,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="468" _type="ShellCommand" date="Sun Dec 03 14:38:05 EST 2023" starttimestamp="1701628917814" timestamp="3367504" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="475" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:38:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3394712" type="Run" />
  <Command __id="476" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:38:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3394712" type="Run" />
  <Command __id="477" _type="ShellCommand" date="Sun Dec 03 14:38:32 EST 2023" starttimestamp="1701628917814" timestamp="3395020" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="478" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401623" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (= 1 2)"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="479" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401624" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="480" _type="LocalChecksRawCommand" date="Sun Dec 03 14:38:39 EST 2023" starttimestamp="1701628917814" timestamp="3401625">
    <CSVRow><![CDATA[23,Sun Dec 03 14:38:02 EST 2023,17,0,BasicOrChecker,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,3,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="481" _type="LocalChecksRawCommand" date="Sun Dec 03 14:38:39 EST 2023" starttimestamp="1701628917814" timestamp="3401625">
    <CSVRow><![CDATA[23,Sun Dec 03 14:38:02 EST 2023,17,0,BasicOrChecker,BasicAndChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided , ,A6ExtraCondChecker BasicLetTest BasicOrChecker CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker VariableArgumentOrChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,3,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicOrChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="482" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401631" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="483" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401631" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="484" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401632" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="485" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401634" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="486" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401666" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):41"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="487" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401668" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):41"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="488" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401668" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):43
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):43"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="489" _type="ConsoleOutput" date="Sun Dec 03 14:38:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3401669" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (OR (= 1 2) (+ 3 3))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):43"), Diff(INSERT,"Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (OR (= 1 2) (+ 3 3))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="490" _type="ShellCommand" date="Sun Dec 03 14:39:00 EST 2023" starttimestamp="1701628917814" timestamp="3422892" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="491" _type="CopyCommand" date="Sun Dec 03 14:39:03 EST 2023" starttimestamp="1701628917814" timestamp="3426116" />
  <Command __id="492" _type="ShellCommand" date="Sun Dec 03 14:39:06 EST 2023" starttimestamp="1701628917814" timestamp="3428689" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="493" _type="ShellCommand" date="Sun Dec 03 14:39:13 EST 2023" starttimestamp="1701628917814" timestamp="3435567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="494" _type="MoveCaretCommand" caretOffset="529" date="Sun Dec 03 14:39:13 EST 2023" docOffset="529" starttimestamp="1701628917814" timestamp="3435642" />
  <Command __id="452" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:37:54 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3356559">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="496" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:39:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3438372" type="Run" />
  <Command __id="497" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:39:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3438372" type="Run" />
  <Command __id="498" _type="ShellCommand" date="Sun Dec 03 14:39:16 EST 2023" starttimestamp="1701628917814" timestamp="3438380" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="500" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:39:17 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="3439736" />
  <Command __id="501" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:39:19 EST 2023" starttimestamp="1701628917814" timestamp="3441459" />
  <Command __id="502" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:39:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3441551" type="Run" />
  <Command __id="503" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:39:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3441551" type="Run" />
  <Command __id="504" _type="ConsoleInput" date="Sun Dec 03 14:39:25 EST 2023" starttimestamp="1701628917814" timestamp="3447688" type="Exception">
    <outputString><![CDATA[()= 1 2
]]></outputString>
  </Command>
  <Command __id="505" _type="ConsoleOutput" date="Sun Dec 03 14:39:25 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3447731" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BasicOrChecker,0.0% complete,0.0,10.0,Expected strings:6actual string (OR (= 1 2) (+ 3 3))"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="506" _type="PasteCommand" date="Sun Dec 03 14:39:30 EST 2023" starttimestamp="1701628917814" timestamp="3452803" />
  <Command __id="507" _type="ConsoleOutput" date="Sun Dec 03 14:39:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3453601" type="ConsoleOutput">
    <outputString><![CDATA[(OR (= 1 2) (+ 3 3))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"(OR (= 1 2) (+ 3 3))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="508" _type="PasteCommand" date="Sun Dec 03 14:39:38 EST 2023" starttimestamp="1701628917814" timestamp="3461114" />
  <Command __id="509" _type="ConsoleOutput" date="Sun Dec 03 14:39:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3461416" type="ConsoleOutput">
    <outputString><![CDATA[(OR (= 1 2) (+ 3 3))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(OR (= 1 2) (+ 3 3))¶")]]]></diff>
  </Command>
  <Command __id="510" _type="PasteCommand" date="Sun Dec 03 14:39:39 EST 2023" starttimestamp="1701628917814" timestamp="3461937" />
  <Command __id="511" _type="ConsoleOutput" date="Sun Dec 03 14:39:40 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3462272" type="ConsoleOutput">
    <outputString><![CDATA[(OR (= 1 2) (+ 3 3))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(OR (= 1 2) (+ 3 3))¶")]]]></diff>
  </Command>
  <Command __id="512" _type="ConsoleInput" date="Sun Dec 03 14:39:46 EST 2023" starttimestamp="1701628917814" timestamp="3468217" type="Exception">
    <outputString><![CDATA[(OR (= 1 2) (+ 3 3))(OR (= 1 2) (+ 3 3))(OR (= 1 2) (+ 3 3))(OR NIL 1)
]]></outputString>
  </Command>
  <Command __id="513" _type="ConsoleOutput" date="Sun Dec 03 14:39:46 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3468223" type="ConsoleOutput">
    <outputString><![CDATA[(OR NIL 1)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(OR "), Diff(DELETE,"(= 1 2) (+ 3 3)"), Diff(INSERT,"NIL 1"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="514" _type="ConsoleInput" date="Sun Dec 03 14:39:52 EST 2023" starttimestamp="1701628917814" timestamp="3475071" type="Exception">
    <outputString><![CDATA[(OR 1)
]]></outputString>
  </Command>
  <Command __id="515" _type="ConsoleOutput" date="Sun Dec 03 14:39:52 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3475077" type="ConsoleOutput">
    <outputString><![CDATA[(OR 1)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(OR "), Diff(DELETE,"NIL "), Diff(EQUAL,"1)¶")]]]></diff>
  </Command>
  <Command __id="516" _type="ConsoleInput" date="Sun Dec 03 14:39:54 EST 2023" starttimestamp="1701628917814" timestamp="3476798" type="Exception">
    <outputString><![CDATA[or 1
]]></outputString>
  </Command>
  <Command __id="517" _type="ConsoleOutput" date="Sun Dec 03 14:39:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3476802" type="ConsoleOutput">
    <outputString><![CDATA[OR
1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("), Diff(EQUAL,"OR"), Diff(DELETE," 1)"), Diff(INSERT,"¶1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="518" _type="ConsoleInput" date="Sun Dec 03 14:40:01 EST 2023" starttimestamp="1701628917814" timestamp="3484061" type="Exception">
    <outputString><![CDATA[(or 1 2)
]]></outputString>
  </Command>
  <Command __id="519" _type="ConsoleOutput" date="Sun Dec 03 14:40:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3484069" type="ConsoleOutput">
    <outputString><![CDATA[(OR 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"("), Diff(EQUAL,"OR"), Diff(DELETE,"¶1"), Diff(INSERT," 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="522" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:40:12 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3494923" type="Run" />
  <Command __id="523" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:40:12 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3494923" type="Run" />
  <Command __id="524" _type="ShellCommand" date="Sun Dec 03 14:40:14 EST 2023" starttimestamp="1701628917814" timestamp="3496894" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="526" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:40:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3505309" type="Run" />
  <Command __id="527" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:40:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3505309" type="Run" />
  <Command __id="528" _type="PasteCommand" date="Sun Dec 03 14:40:24 EST 2023" starttimestamp="1701628917814" timestamp="3506772" />
  <Command __id="529" _type="ConsoleOutput" date="Sun Dec 03 14:40:25 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3507520" type="ConsoleOutput">
    <outputString><![CDATA[(= 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"6"), Diff(INSERT,"(= 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="530" _type="ShellCommand" date="Sun Dec 03 14:40:36 EST 2023" starttimestamp="1701628917814" timestamp="3518986" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="531" _type="ShellCommand" date="Sun Dec 03 14:40:37 EST 2023" starttimestamp="1701628917814" timestamp="3519405" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="532" _type="ShellCommand" date="Sun Dec 03 14:40:37 EST 2023" starttimestamp="1701628917814" timestamp="3519601" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="534" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:41:02 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3544722" type="Run" />
  <Command __id="535" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:41:02 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3544722" type="Run" />
  <Command __id="536" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:41:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3545609" type="Run" />
  <Command __id="537" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:41:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3545609" type="Run" />
  <Command __id="538" _type="PasteCommand" date="Sun Dec 03 14:41:04 EST 2023" starttimestamp="1701628917814" timestamp="3546611" />
  <Command __id="539" _type="ConsoleOutput" date="Sun Dec 03 14:41:05 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3547553" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(= 1 2)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="540" _type="ShellCommand" date="Sun Dec 03 14:41:10 EST 2023" starttimestamp="1701628917814" timestamp="3552195" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="545" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:41:46 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3588432" type="Run" />
  <Command __id="546" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:41:46 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3588432" type="Run" />
  <Command __id="547" _type="MoveCaretCommand" caretOffset="221" date="Sun Dec 03 14:41:46 EST 2023" docOffset="270" starttimestamp="1701628917814" timestamp="3588952" />
  <Command __id="548" _type="ShellCommand" date="Sun Dec 03 14:41:48 EST 2023" starttimestamp="1701628917814" timestamp="3591159" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="549" _type="ShellCommand" date="Sun Dec 03 14:41:49 EST 2023" starttimestamp="1701628917814" timestamp="3592157" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="550" _type="ShellCommand" date="Sun Dec 03 14:41:50 EST 2023" starttimestamp="1701628917814" timestamp="3592453" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="551" _type="ShellCommand" date="Sun Dec 03 14:41:50 EST 2023" starttimestamp="1701628917814" timestamp="3592531" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="552" _type="ShellCommand" date="Sun Dec 03 14:41:51 EST 2023" starttimestamp="1701628917814" timestamp="3593955" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="553" _type="ShellCommand" date="Sun Dec 03 14:41:52 EST 2023" starttimestamp="1701628917814" timestamp="3594292" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="554" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:41:52 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="3594603" />
  <Command __id="555" _type="ShellCommand" date="Sun Dec 03 14:41:53 EST 2023" starttimestamp="1701628917814" timestamp="3595594" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="556" _type="ShellCommand" date="Sun Dec 03 14:41:55 EST 2023" starttimestamp="1701628917814" timestamp="3597290" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="557" _type="ShellCommand" date="Sun Dec 03 14:41:55 EST 2023" starttimestamp="1701628917814" timestamp="3597673" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="558" _type="ShellCommand" date="Sun Dec 03 14:41:55 EST 2023" starttimestamp="1701628917814" timestamp="3597911" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="499" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:39:17 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3439673">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class index {

	public static void main(String[] args) {
		OperationRegistererImpl.registerAll();
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="559" _type="BalloonCommand" date="Sun Dec 03 14:41:57 EST 2023" message="*******************************************
Worked 49 minutes(fixed)/60 minutes(context based) from
Sun Dec 03 13:41:58 EST 2023 to Sun Dec 03 14:41:55 EST 2023
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1701628917814" timestamp="3600052">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1701628918900]]></startTime>
    <endTime><![CDATA[1701632515725]]></endTime>
    <workTime><![CDATA[49]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="561" _type="MoveCaretCommand" caretOffset="529" date="Sun Dec 03 14:42:00 EST 2023" docOffset="529" starttimestamp="1701628917814" timestamp="3602623" />
  <Command __id="562" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:42:01 EST 2023" starttimestamp="1701628917814" timestamp="3604134" />
  <Command __id="563" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:42:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3604241" type="Run" />
  <Command __id="564" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:42:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3604241" type="Run" />
  <Command __id="565" _type="ShellCommand" date="Sun Dec 03 14:42:02 EST 2023" starttimestamp="1701628917814" timestamp="3604561" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="589" _type="ShellCommand" date="Sun Dec 03 14:43:00 EST 2023" starttimestamp="1701628917814" timestamp="3662700" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="596" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672677" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="597" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672678" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="598" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672683" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="599" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672684" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="600" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672685" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="601" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672685" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="602" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672718" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="603" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672719" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):39"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="604" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672720" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):42
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="605" _type="ConsoleOutput" date="Sun Dec 03 14:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3672721" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):42"), Diff(INSERT,"Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="606" _type="ShellCommand" date="Sun Dec 03 14:43:17 EST 2023" starttimestamp="1701628917814" timestamp="3679669" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="607" _type="LocalChecksRawCommand" date="Sun Dec 03 14:43:17 EST 2023" starttimestamp="1701628917814" timestamp="3679673">
    <CSVRow><![CDATA[26,Sun Dec 03 14:43:10 EST 2023,20,0,VariableArgumentAndChecker,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,6,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker ,VariableArgumentAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="608" _type="LocalChecksRawCommand" date="Sun Dec 03 14:43:17 EST 2023" starttimestamp="1701628917814" timestamp="3679673">
    <CSVRow><![CDATA[26,Sun Dec 03 14:43:10 EST 2023,20,0,VariableArgumentAndChecker,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,6,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker ,VariableArgumentAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="609" _type="CopyCommand" date="Sun Dec 03 14:43:20 EST 2023" starttimestamp="1701628917814" timestamp="3683176" />
  <Command __id="610" _type="ShellCommand" date="Sun Dec 03 14:43:22 EST 2023" starttimestamp="1701628917814" timestamp="3684620" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="560" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:42:00 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3602589">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="611" _type="ShellCommand" date="Sun Dec 03 14:43:23 EST 2023" starttimestamp="1701628917814" timestamp="3685802" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="612" _type="MoveCaretCommand" caretOffset="286" date="Sun Dec 03 14:43:23 EST 2023" docOffset="286" starttimestamp="1701628917814" timestamp="3685858" />
  <Command __id="614" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:43:25 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="3687880" />
  <Command __id="615" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:43:27 EST 2023" starttimestamp="1701628917814" timestamp="3689664" />
  <Command __id="616" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:43:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3689744" type="Run" />
  <Command __id="617" _type="ShellCommand" date="Sun Dec 03 14:43:29 EST 2023" starttimestamp="1701628917814" timestamp="3691362" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="618" _type="ShellCommand" date="Sun Dec 03 14:43:32 EST 2023" starttimestamp="1701628917814" timestamp="3694499" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="619" _type="PasteCommand" date="Sun Dec 03 14:43:32 EST 2023" starttimestamp="1701628917814" timestamp="3694901" />
  <Command __id="620" _type="ConsoleOutput" date="Sun Dec 03 14:43:33 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3695742" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"est Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="621" _type="ShellCommand" date="Sun Dec 03 14:43:34 EST 2023" starttimestamp="1701628917814" timestamp="3696357" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="622" _type="ShellCommand" date="Sun Dec 03 14:43:36 EST 2023" starttimestamp="1701628917814" timestamp="3698547" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="623" _type="PasteCommand" date="Sun Dec 03 14:43:37 EST 2023" starttimestamp="1701628917814" timestamp="3699314" />
  <Command __id="624" _type="ConsoleOutput" date="Sun Dec 03 14:43:37 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3699659" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="625" _type="ShellCommand" date="Sun Dec 03 14:43:37 EST 2023" starttimestamp="1701628917814" timestamp="3699988" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="626" _type="ShellCommand" date="Sun Dec 03 14:43:40 EST 2023" starttimestamp="1701628917814" timestamp="3702757" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="627" _type="PasteCommand" date="Sun Dec 03 14:43:40 EST 2023" starttimestamp="1701628917814" timestamp="3702973" />
  <Command __id="628" _type="ConsoleOutput" date="Sun Dec 03 14:43:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3703303" type="ConsoleOutput">
    <outputString><![CDATA[17
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"17"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="629" _type="ShellCommand" date="Sun Dec 03 14:43:41 EST 2023" starttimestamp="1701628917814" timestamp="3703683" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="630" _type="ShellCommand" date="Sun Dec 03 14:43:43 EST 2023" starttimestamp="1701628917814" timestamp="3705979" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="631" _type="PasteCommand" date="Sun Dec 03 14:43:43 EST 2023" starttimestamp="1701628917814" timestamp="3706157" />
  <Command __id="632" _type="ConsoleOutput" date="Sun Dec 03 14:43:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3706378" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"17"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="633" _type="ShellCommand" date="Sun Dec 03 14:43:50 EST 2023" starttimestamp="1701628917814" timestamp="3712921" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="634" _type="ShellCommand" date="Sun Dec 03 14:43:54 EST 2023" starttimestamp="1701628917814" timestamp="3716532" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="635" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:43:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3716603" type="Run" />
  <Command __id="636" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:43:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3716603" type="Run" />
  <Command __id="637" _type="ShellCommand" date="Sun Dec 03 14:43:55 EST 2023" starttimestamp="1701628917814" timestamp="3717217" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="638" _type="ShellCommand" date="Sun Dec 03 14:43:55 EST 2023" starttimestamp="1701628917814" timestamp="3717894" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="640" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:13 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3736082" type="Run" />
  <Command __id="641" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:13 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3736082" type="Run" />
  <Command __id="613" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:43:25 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3687848">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="642" _type="ShellCommand" date="Sun Dec 03 14:44:15 EST 2023" starttimestamp="1701628917814" timestamp="3737206" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="644" _type="MoveCaretCommand" caretOffset="286" date="Sun Dec 03 14:44:16 EST 2023" docOffset="286" starttimestamp="1701628917814" timestamp="3738611" />
  <Command __id="645" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:44:18 EST 2023" starttimestamp="1701628917814" timestamp="3740306" />
  <Command __id="646" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3740444" type="Run" />
  <Command __id="647" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3740444" type="Run" />
  <Command __id="648" _type="ShellCommand" date="Sun Dec 03 14:44:18 EST 2023" starttimestamp="1701628917814" timestamp="3740743" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="649" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744843" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="650" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744844" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="651" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744850" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="652" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744851" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"¶Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="653" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744883" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):38
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"38"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="654" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744885" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):38"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="655" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744885" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="656" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744886" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND T 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):40"), Diff(INSERT,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND T 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="657" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744887" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND T 2)"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="658" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744888" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="659" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744888" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="660" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744889" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="661" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744890" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="662" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744892" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="663" _type="ConsoleOutput" date="Sun Dec 03 14:44:22 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3744894" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:VariableArgument"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Expected strings:2actual string (AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="664" _type="ShellCommand" date="Sun Dec 03 14:44:27 EST 2023" starttimestamp="1701628917814" timestamp="3749858" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="665" _type="LocalChecksRawCommand" date="Sun Dec 03 14:44:27 EST 2023" starttimestamp="1701628917814" timestamp="3749859">
    <CSVRow><![CDATA[27,Sun Dec 03 14:44:22 EST 2023,19,-1,LogicalSuite,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker- BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,7,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(0.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="666" _type="LocalChecksRawCommand" date="Sun Dec 03 14:44:27 EST 2023" starttimestamp="1701628917814" timestamp="3749859">
    <CSVRow><![CDATA[27,Sun Dec 03 14:44:22 EST 2023,19,-1,LogicalSuite,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker- BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,7,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(0.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="667" _type="ShellCommand" date="Sun Dec 03 14:44:29 EST 2023" starttimestamp="1701628917814" timestamp="3752042" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="668" _type="ShellCommand" date="Sun Dec 03 14:44:39 EST 2023" starttimestamp="1701628917814" timestamp="3762140" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="669" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 14:44:40 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="3762212" />
  <Command __id="670" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:44:42 EST 2023" starttimestamp="1701628917814" timestamp="3764918" />
  <Command __id="671" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:42 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3764995" type="Run" />
  <Command __id="672" _type="ShellCommand" date="Sun Dec 03 14:44:43 EST 2023" starttimestamp="1701628917814" timestamp="3765304" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="673" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767799" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="674" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767800" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="675" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767805" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="676" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767806" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="677" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767807" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="678" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767809" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="679" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767840" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="680" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767842" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):4"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="681" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767843" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶¶"), Diff(DELETE,"Test execution time (ms):41¶")]]]></diff>
  </Command>
  <Command __id="682" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767844" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="683" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767845" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="684" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767846" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="685" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767847" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="686" _type="ConsoleOutput" date="Sun Dec 03 14:44:45 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3767852" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3

Test execution time (ms):1
Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:Not"), Diff(INSERT,"execution time (ms):1¶Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3¶¶Test execution time (ms):1¶Test Result:VariableArgumentOr"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="643" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:44:16 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3738581">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="687" _type="ShellCommand" date="Sun Dec 03 14:44:52 EST 2023" starttimestamp="1701628917814" timestamp="3774490" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="688" _type="LocalChecksRawCommand" date="Sun Dec 03 14:44:52 EST 2023" starttimestamp="1701628917814" timestamp="3774492">
    <CSVRow><![CDATA[28,Sun Dec 03 14:44:45 EST 2023,20,1,LogicalSuite,BasicAndChecker+ BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,8,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="689" _type="LocalChecksRawCommand" date="Sun Dec 03 14:44:52 EST 2023" starttimestamp="1701628917814" timestamp="3774492">
    <CSVRow><![CDATA[28,Sun Dec 03 14:44:45 EST 2023,20,1,LogicalSuite,BasicAndChecker+ BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,8,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="690" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3774619" type="Run" />
  <Command __id="691" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3774619" type="Run" />
  <Command __id="693" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:44:53 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="3775986" />
  <Command __id="694" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:44:55 EST 2023" starttimestamp="1701628917814" timestamp="3777442" />
  <Command __id="695" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:44:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3777548" type="Run" />
  <Command __id="696" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:44:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3777548" type="Run" />
  <Command __id="697" _type="ShellCommand" date="Sun Dec 03 14:44:58 EST 2023" starttimestamp="1701628917814" timestamp="3780772" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="698" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:58 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3781075" type="Run" />
  <Command __id="699" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:44:58 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3781075" type="Run" />
  <Command __id="700" _type="ShellCommand" date="Sun Dec 03 14:44:58 EST 2023" starttimestamp="1701628917814" timestamp="3781081" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="701" _type="ShellCommand" date="Sun Dec 03 14:45:00 EST 2023" starttimestamp="1701628917814" timestamp="3782521" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="702" _type="ShellCommand" date="Sun Dec 03 14:45:00 EST 2023" starttimestamp="1701628917814" timestamp="3782983" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="703" _type="ShellCommand" date="Sun Dec 03 14:45:01 EST 2023" starttimestamp="1701628917814" timestamp="3783770" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="704" _type="ShellCommand" date="Sun Dec 03 14:45:02 EST 2023" starttimestamp="1701628917814" timestamp="3784988" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="705" _type="PasteCommand" date="Sun Dec 03 14:45:03 EST 2023" starttimestamp="1701628917814" timestamp="3785268" />
  <Command __id="706" _type="ConsoleOutput" date="Sun Dec 03 14:45:03 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3785682" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:VariableArgumentAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string 3¶¶Test execution time (ms):1¶Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="707" _type="PasteCommand" date="Sun Dec 03 14:45:09 EST 2023" starttimestamp="1701628917814" timestamp="3792103" />
  <Command __id="711" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:45:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3800491" type="Run" />
  <Command __id="712" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:45:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3800491" type="Run" />
  <Command __id="713" _type="PasteCommand" date="Sun Dec 03 14:45:19 EST 2023" starttimestamp="1701628917814" timestamp="3801285" />
  <Command __id="714" _type="ConsoleOutput" date="Sun Dec 03 14:45:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3804159" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"3¶")]]]></diff>
  </Command>
  <Command __id="715" _type="ConsoleInput" date="Sun Dec 03 14:45:33 EST 2023" starttimestamp="1701628917814" timestamp="3815241" type="Exception">
    <outputString><![CDATA[(AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1))(AND 1 2)
]]></outputString>
  </Command>
  <Command __id="716" _type="ConsoleOutput" date="Sun Dec 03 14:45:33 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3815247" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="717" _type="ShellCommand" date="Sun Dec 03 14:45:34 EST 2023" starttimestamp="1701628917814" timestamp="3816900" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="718" _type="ShellCommand" date="Sun Dec 03 14:45:35 EST 2023" starttimestamp="1701628917814" timestamp="3817441" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="719" _type="ShellCommand" date="Sun Dec 03 14:45:38 EST 2023" starttimestamp="1701628917814" timestamp="3820279" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="721" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:46:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3844834" type="Run" />
  <Command __id="722" _type="ShellCommand" date="Sun Dec 03 14:46:03 EST 2023" starttimestamp="1701628917814" timestamp="3846136" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="723" _type="ShellCommand" date="Sun Dec 03 14:46:04 EST 2023" starttimestamp="1701628917814" timestamp="3847119" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="724" _type="ShellCommand" date="Sun Dec 03 14:46:05 EST 2023" starttimestamp="1701628917814" timestamp="3848068" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="725" _type="ShellCommand" date="Sun Dec 03 14:46:05 EST 2023" starttimestamp="1701628917814" timestamp="3848157" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="726" _type="ShellCommand" date="Sun Dec 03 14:46:06 EST 2023" starttimestamp="1701628917814" timestamp="3848858" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="727" _type="ShellCommand" date="Sun Dec 03 14:46:07 EST 2023" starttimestamp="1701628917814" timestamp="3849428" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="728" _type="PasteCommand" date="Sun Dec 03 14:46:07 EST 2023" starttimestamp="1701628917814" timestamp="3849655" />
  <Command __id="729" _type="ConsoleOutput" date="Sun Dec 03 14:46:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3850333" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="730" _type="ShellCommand" date="Sun Dec 03 14:46:13 EST 2023" starttimestamp="1701628917814" timestamp="3855485" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="735" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:47:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3914415" type="Run" />
  <Command __id="736" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:47:12 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3914415" type="Run" />
  <Command __id="737" _type="PasteCommand" date="Sun Dec 03 14:47:13 EST 2023" starttimestamp="1701628917814" timestamp="3915722" />
  <Command __id="738" _type="ConsoleOutput" date="Sun Dec 03 14:47:14 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3916539" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="739" _type="ShellCommand" date="Sun Dec 03 14:47:17 EST 2023" starttimestamp="1701628917814" timestamp="3919534" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="740" _type="ShellCommand" date="Sun Dec 03 14:47:18 EST 2023" starttimestamp="1701628917814" timestamp="3920344" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="741" _type="ShellCommand" date="Sun Dec 03 14:47:18 EST 2023" starttimestamp="1701628917814" timestamp="3921066" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="743" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:48:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3996398" type="Run" />
  <Command __id="744" _type="ConsoleOutput" date="Sun Dec 03 14:48:34 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3996908" type="ConsoleOutput">
    <outputString><![CDATA[import main.lisp.parser.terms.NilAtom;
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"import main.lisp.parser.terms.NilAtom;"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="745" _type="PasteCommand" date="Sun Dec 03 14:48:34 EST 2023" starttimestamp="1701628917814" timestamp="3996911" />
  <Command __id="746" _type="ConsoleOutput" date="Sun Dec 03 14:48:34 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="3996917" type="ConsoleOutput">
    <outputString><![CDATA[IMPORT
MAIN.LISP.PARSER.TERMS.NILATOM;
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"import main.lisp.parser.terms.NilAtom"), Diff(INSERT,"IMPORT¶MAIN.LISP.PARSER.TERMS.NILATOM"), Diff(EQUAL,";¶")]]]></diff>
  </Command>
  <Command __id="747" _type="ShellCommand" date="Sun Dec 03 14:48:36 EST 2023" starttimestamp="1701628917814" timestamp="3998545" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="748" _type="ShellCommand" date="Sun Dec 03 14:48:37 EST 2023" starttimestamp="1701628917814" timestamp="3999748" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="749" _type="ShellCommand" date="Sun Dec 03 14:48:38 EST 2023" starttimestamp="1701628917814" timestamp="4000357" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="750" _type="ShellCommand" date="Sun Dec 03 14:48:38 EST 2023" starttimestamp="1701628917814" timestamp="4000962" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="751" _type="PasteCommand" date="Sun Dec 03 14:48:39 EST 2023" starttimestamp="1701628917814" timestamp="4001320" />
  <Command __id="752" _type="ConsoleOutput" date="Sun Dec 03 14:48:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4001676" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"IMPORT¶MAIN.LISP.PARSER.TERMS.NILATOM;"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="753" _type="ShellCommand" date="Sun Dec 03 14:48:54 EST 2023" starttimestamp="1701628917814" timestamp="4016287" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="754" _type="ShellCommand" date="Sun Dec 03 14:50:57 EST 2023" starttimestamp="1701628917814" timestamp="4140140" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="755" _type="ShellCommand" date="Sun Dec 03 14:51:03 EST 2023" starttimestamp="1701628917814" timestamp="4145767" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="756" _type="ShellCommand" date="Sun Dec 03 14:52:11 EST 2023" starttimestamp="1701628917814" timestamp="4214032" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="757" _type="ShellCommand" date="Sun Dec 03 14:52:12 EST 2023" starttimestamp="1701628917814" timestamp="4214290" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="758" _type="ShellCommand" date="Sun Dec 03 14:52:14 EST 2023" starttimestamp="1701628917814" timestamp="4216276" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="692" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:44:53 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="3775950">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="759" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:52:18 EST 2023" starttimestamp="1701628917814" timestamp="4220988" />
  <Command __id="760" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:52:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4221071" type="Run" />
  <Command __id="761" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:52:19 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4221304" type="Run" />
  <Command __id="762" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:52:19 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4221316" type="Run" />
  <Command __id="763" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:52:19 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4221461" type="Run" />
  <Command __id="764" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:52:21 EST 2023" docASTNodeCount="110" docActiveCodeLength="648" docExpressionCount="71" docLength="648" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4224117">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead();		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="767" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:52:22 EST 2023" starttimestamp="1701628917814" timestamp="4224407" />
  <Command __id="768" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:52:22 EST 2023" starttimestamp="1701628917814" timestamp="4224414" />
  <Command __id="769" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:52:22 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4224427" type="Run" />
  <Command __id="770" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 14:52:25 EST 2023" starttimestamp="1701628917814" timestamp="4227773" />
  <Command __id="771" _type="BreakPointCommand" date="Sun Dec 03 14:52:25 EST 2023" lineNumber="-1" starttimestamp="1701628917814" timestamp="4227786" type="BreakPointAdded" />
  <Command __id="772" _type="BreakPointCommand" date="Sun Dec 03 14:52:26 EST 2023" lineNumber="-1" starttimestamp="1701628917814" timestamp="4228997" type="BreakPointRemoved" />
  <Command __id="773" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 14:52:26 EST 2023" starttimestamp="1701628917814" timestamp="4229045" />
  <Command __id="774" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 14:52:27 EST 2023" starttimestamp="1701628917814" timestamp="4229775" />
  <Command __id="775" _type="BreakPointCommand" date="Sun Dec 03 14:52:27 EST 2023" lineNumber="-1" starttimestamp="1701628917814" timestamp="4229783" type="BreakPointAdded" />
  <Command __id="776" _type="ShellCommand" date="Sun Dec 03 14:52:29 EST 2023" starttimestamp="1701628917814" timestamp="4232122" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="777" _type="ShellCommand" date="Sun Dec 03 14:52:30 EST 2023" starttimestamp="1701628917814" timestamp="4232831" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="778" _type="PasteCommand" date="Sun Dec 03 14:52:30 EST 2023" starttimestamp="1701628917814" timestamp="4233113" />
  <Command __id="779" _type="ConsoleOutput" date="Sun Dec 03 14:52:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4233850" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <DocumentChange __id="766" _type="Replace" date="Sun Dec 03 14:52:22 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" endLine="30" insertionLength="683" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="648" offset="0" startLine="0" starttimestamp="1701628917814" timestamp="4224309">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead();
		}		
	}

}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead().eval(environment);
		}		
	}

}]]></insertedText>
  </DocumentChange>
  <Command __id="780" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 14:52:39 EST 2023" starttimestamp="1701628917814" timestamp="4241770" />
  <Command __id="781" _type="BreakPointCommand" date="Sun Dec 03 14:52:39 EST 2023" lineNumber="16" starttimestamp="1701628917814" timestamp="4241772" type="BreakPointAdded" />
  <Command __id="782" _type="ShellCommand" date="Sun Dec 03 14:52:40 EST 2023" starttimestamp="1701628917814" timestamp="4242487" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="783" _type="ShellCommand" date="Sun Dec 03 14:52:40 EST 2023" starttimestamp="1701628917814" timestamp="4243018" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="784" _type="PasteCommand" date="Sun Dec 03 14:52:41 EST 2023" starttimestamp="1701628917814" timestamp="4243994" />
  <Command __id="785" _type="ConsoleOutput" date="Sun Dec 03 14:52:42 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4244326" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="787" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:52:49 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4251830" />
  <Command __id="788" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:52:57 EST 2023" starttimestamp="1701628917814" timestamp="4259524" />
  <Command __id="789" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:52:57 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4259616" type="Run" />
  <Command __id="790" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:52:57 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4259736" type="Run" />
  <Command __id="791" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:52:57 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4259882" type="Run" />
  <Command __id="786" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:52:49 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4251798">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="792" _type="PasteCommand" date="Sun Dec 03 14:53:00 EST 2023" starttimestamp="1701628917814" timestamp="4262753" />
  <Command __id="793" _type="ConsoleOutput" date="Sun Dec 03 14:53:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4263296" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="794" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:02 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4264383">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead()."), Diff(INSERT,"eval(environment)."), Diff(EQUAL,"isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead()"), Diff(INSERT,".eval(environment)"), Diff(EQUAL,";		}			}}"), Diff(DELETE,"")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class OrEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return evalHelper(expr.getTail(), environment);
		}else {
			return expr.getHead().eval(environment);
		}		
	}

}]]></snapshot>
  </Command>
  <Command __id="795" _type="MoveCaretCommand" caretOffset="420" date="Sun Dec 03 14:53:02 EST 2023" docOffset="420" starttimestamp="1701628917814" timestamp="4264419" />
  <Command __id="796" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:05 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4267581">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="797" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 14:53:05 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="4267620" />
  <Command __id="798" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:06 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4269009">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="799" _type="MoveCaretCommand" caretOffset="420" date="Sun Dec 03 14:53:06 EST 2023" docOffset="420" starttimestamp="1701628917814" timestamp="4269037" />
  <Command __id="800" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:07 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4270081">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(DELETE,"import main.lisp.parser.terms.NilAtom;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return "), Diff(DELETE,"new NilAtom()"), Diff(INSERT,"expr"), Diff(EQUAL,";			}else {				return expr;			}		}		if(expr.getHead()."), Diff(INSERT,"eval(environment)."), Diff(EQUAL,"isNIL()) {			return "), Diff(DELETE,"new NilAtom("), Diff(INSERT,"expr.getHead().eval(environment"), Diff(EQUAL,");		}else {			return evalHelper(expr.getTail()"), Diff(DELETE,".getHead()"), Diff(EQUAL,", environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="801" _type="Replace" date="Sun Dec 03 14:53:07 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" endLine="30" insertionLength="684" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="684" offset="0" startLine="0" starttimestamp="1701628917814" timestamp="4270130">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></insertedText>
  </DocumentChange>
  <Command __id="802" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:53:07 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4270150" />
  <Command __id="803" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:53:07 EST 2023" starttimestamp="1701628917814" timestamp="4270167" />
  <Command __id="804" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:53:07 EST 2023" starttimestamp="1701628917814" timestamp="4270173" />
  <Command __id="805" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:08 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4270199" type="Run" />
  <Command __id="806" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:08 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4270199" type="Run" />
  <Command __id="809" _type="MoveCaretCommand" caretOffset="420" date="Sun Dec 03 14:53:09 EST 2023" docOffset="420" starttimestamp="1701628917814" timestamp="4271559" />
  <Command __id="810" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:53:09 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4271560" />
  <Command __id="811" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 14:53:10 EST 2023" starttimestamp="1701628917814" timestamp="4273078" />
  <Command __id="812" _type="BreakPointCommand" date="Sun Dec 03 14:53:10 EST 2023" lineNumber="11" starttimestamp="1701628917814" timestamp="4273081" type="BreakPointAdded" />
  <Command __id="813" _type="ShellCommand" date="Sun Dec 03 14:53:11 EST 2023" starttimestamp="1701628917814" timestamp="4273794" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="814" _type="ShellCommand" date="Sun Dec 03 14:53:12 EST 2023" starttimestamp="1701628917814" timestamp="4274398" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="815" _type="PasteCommand" date="Sun Dec 03 14:53:14 EST 2023" starttimestamp="1701628917814" timestamp="4276362" />
  <Command __id="816" _type="ShellCommand" date="Sun Dec 03 14:53:14 EST 2023" starttimestamp="1701628917814" timestamp="4276849" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="819" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:24 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4286700" type="Run" />
  <Command __id="820" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:53:31 EST 2023" starttimestamp="1701628917814" timestamp="4293447" />
  <Command __id="821" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:31 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4293452" type="Run" />
  <Command __id="824" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4299766" type="Run" />
  <Command __id="825" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 14:53:42 EST 2023" starttimestamp="1701628917814" timestamp="4304775" />
  <Command __id="826" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4304778" type="Run" />
  <Command __id="827" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:53:46 EST 2023" starttimestamp="1701628917814" timestamp="4308845" />
  <Command __id="828" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:46 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4308847" type="Run" />
  <Command __id="829" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:53:48 EST 2023" starttimestamp="1701628917814" timestamp="4310891" />
  <Command __id="830" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4310894" type="Run" />
  <Command __id="831" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:53:49 EST 2023" starttimestamp="1701628917814" timestamp="4311544" />
  <Command __id="832" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4311546" type="Run" />
  <Command __id="833" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:53:49 EST 2023" starttimestamp="1701628917814" timestamp="4311976" />
  <Command __id="834" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4311979" type="Run" />
  <Command __id="835" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:50 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4312967" type="Run" />
  <Command __id="838" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:55 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4317441">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="839" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:53:55 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4317468" />
  <Command __id="843" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:56 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4318781">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="845" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:53:57 EST 2023" starttimestamp="1701628917814" timestamp="4320123" />
  <Command __id="846" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:53:57 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4320128" type="Run" />
  <Command __id="847" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Sun Dec 03 14:53:58 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="4320362" />
  <Command __id="849" _type="MoveCaretCommand" caretOffset="294" date="Sun Dec 03 14:53:59 EST 2023" docOffset="294" starttimestamp="1701628917814" timestamp="4321794" />
  <Command __id="850" _type="MoveCaretCommand" caretOffset="310" date="Sun Dec 03 14:54:01 EST 2023" docOffset="310" starttimestamp="1701628917814" timestamp="4323280" />
  <Command __id="851" _type="MoveCaretCommand" caretOffset="337" date="Sun Dec 03 14:54:01 EST 2023" docOffset="337" starttimestamp="1701628917814" timestamp="4323817" />
  <Command __id="848" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:53:59 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4321746">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="853" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:54:05 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4327819" type="Debug" />
  <Command __id="854" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:54:05 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4327819" type="Run" />
  <Command __id="855" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:54:05 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4327819" type="Debug" />
  <Command __id="856" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:54:05 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4327820" type="Run" />
  <Command __id="857" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:54:07 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4329325">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="858" _type="MoveCaretCommand" caretOffset="420" date="Sun Dec 03 14:54:07 EST 2023" docOffset="420" starttimestamp="1701628917814" timestamp="4329363" />
  <Command __id="860" _type="MoveCaretCommand" caretOffset="420" date="Sun Dec 03 14:54:09 EST 2023" docOffset="420" starttimestamp="1701628917814" timestamp="4331497" />
  <Command __id="859" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:54:09 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4331294">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="861" _type="MoveCaretCommand" caretOffset="137" date="Sun Dec 03 14:54:13 EST 2023" docOffset="137" starttimestamp="1701628917814" timestamp="4336028" />
  <Command __id="862" _type="MoveCaretCommand" caretOffset="137" date="Sun Dec 03 14:54:13 EST 2023" docOffset="137" starttimestamp="1701628917814" timestamp="4336028" />
  <Command __id="863" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:54:15 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4338152">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="864" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 14:54:16 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="4338191" />
  <Command __id="867" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:54:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4345176" type="Run" />
  <Command __id="868" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:54:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4345176" type="Run" />
  <Command __id="865" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:54:20 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4342259">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="869" _type="PasteCommand" date="Sun Dec 03 14:54:25 EST 2023" starttimestamp="1701628917814" timestamp="4347401" />
  <Command __id="870" _type="ConsoleOutput" date="Sun Dec 03 14:54:26 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4348306" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="872" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:54:31 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4353213" />
  <Command __id="873" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:54:32 EST 2023" starttimestamp="1701628917814" timestamp="4355016" />
  <Command __id="874" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:54:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4355085" type="Run" />
  <Command __id="875" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:54:33 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4355192" type="Run" />
  <Command __id="876" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:54:33 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4355202" type="Run" />
  <Command __id="877" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:54:33 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4355346" type="Run" />
  <Command __id="879" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:54:34 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4356301" />
  <Command __id="882" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:54:46 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4368704" type="Run" />
  <Command __id="886" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:54:52 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4374842">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="887" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:54:52 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4374864" />
  <Command __id="888" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:54:52 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4374956">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="894" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:01 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4383723">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="893" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:01 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4383383" type="Run" />
  <Command __id="895" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:55:01 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4383766" />
  <Command __id="897" _type="MoveCaretCommand" caretOffset="213" date="Sun Dec 03 14:55:04 EST 2023" docOffset="294" starttimestamp="1701628917814" timestamp="4386814" />
  <Command __id="896" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:04 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4386773">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="900" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:08 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4390278" type="Debug" />
  <Command __id="901" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:08 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4390278" type="Run" />
  <Command __id="902" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:08 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4390278" type="Debug" />
  <Command __id="903" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:08 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4390278" type="Run" />
  <Command __id="905" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:55:09 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4391662" />
  <Command __id="906" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:55:11 EST 2023" starttimestamp="1701628917814" timestamp="4393229" />
  <Command __id="907" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4393337" type="Run" />
  <Command __id="908" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4393341" type="Run" />
  <Command __id="909" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:11 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4393447" type="Run" />
  <Command __id="910" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:11 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4393459" type="Run" />
  <Command __id="911" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:11 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4393601" type="Run" />
  <Command __id="913" _type="MoveCaretCommand" caretOffset="227" date="Sun Dec 03 14:55:11 EST 2023" docOffset="308" starttimestamp="1701628917814" timestamp="4393664" />
  <Command __id="914" _type="PasteCommand" date="Sun Dec 03 14:55:12 EST 2023" starttimestamp="1701628917814" timestamp="4394876" />
  <Command __id="915" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:12 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4395185" type="Run" />
  <Command __id="919" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:16 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4398481">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="920" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:55:16 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4398512" />
  <Command __id="921" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:16 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4398540">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="927" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:24 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4406205">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="929" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:26 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4408248">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="931" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:31 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4413702" type="Debug" />
  <Command __id="932" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:31 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4413702" type="Run" />
  <Command __id="933" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:31 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4413702" type="Debug" />
  <Command __id="934" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:31 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4413702" type="Run" />
  <Command __id="936" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:55:33 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4416024" />
  <Command __id="937" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:55:35 EST 2023" starttimestamp="1701628917814" timestamp="4417897" />
  <Command __id="938" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4418001" type="Run" />
  <Command __id="939" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:55:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4418001" type="Run" />
  <Command __id="940" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:35 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4418110" type="Run" />
  <Command __id="941" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:35 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4418121" type="Run" />
  <Command __id="942" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:36 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4418265" type="Run" />
  <Command __id="944" _type="MoveCaretCommand" caretOffset="340" date="Sun Dec 03 14:55:36 EST 2023" docOffset="421" starttimestamp="1701628917814" timestamp="4418704" />
  <Command __id="945" _type="PasteCommand" date="Sun Dec 03 14:55:37 EST 2023" starttimestamp="1701628917814" timestamp="4419365" />
  <Command __id="946" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:37 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4419998" type="Run" />
  <Command __id="947" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:55:39 EST 2023" starttimestamp="1701628917814" timestamp="4421489" />
  <Command __id="948" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:39 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4421493" type="Run" />
  <Command __id="949" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 14:55:40 EST 2023" starttimestamp="1701628917814" timestamp="4423001" />
  <Command __id="950" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:40 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4423004" type="Run" />
  <Command __id="953" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4427865" type="Run" />
  <Command __id="954" _type="SelectTextCommand" caretOffset="475" date="Sun Dec 03 14:55:49 EST 2023" end="475" start="443" starttimestamp="1701628917814" timestamp="4431305" />
  <Command __id="955" _type="SelectTextCommand" caretOffset="475" date="Sun Dec 03 14:55:49 EST 2023" end="475" start="443" starttimestamp="1701628917814" timestamp="4431305" />
  <Command __id="956" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:55:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4432033" type="Run" />
  <Command __id="957" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:23 EST 2023" starttimestamp="1701628917814" timestamp="4465824" />
  <Command __id="958" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:23 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4465827" type="Run" />
  <Command __id="961" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:44 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4486947" type="Run" />
  <Command __id="935" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:33 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4415989">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="943" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:55:36 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4418665">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="965" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:56:49 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4492030">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="980" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:56:57 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4499450">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="967" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:52 EST 2023" starttimestamp="1701628917814" timestamp="4494943" />
  <Command __id="968" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4494947" type="Run" />
  <Command __id="969" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Sun Dec 03 14:56:52 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="4495161" />
  <Command __id="970" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:53 EST 2023" starttimestamp="1701628917814" timestamp="4495955" />
  <Command __id="971" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:53 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4495959" type="Run" />
  <Command __id="972" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:54 EST 2023" starttimestamp="1701628917814" timestamp="4496610" />
  <Command __id="973" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:54 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4496615" type="Run" />
  <Command __id="974" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:55 EST 2023" starttimestamp="1701628917814" timestamp="4497564" />
  <Command __id="975" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:55 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4497567" type="Run" />
  <Command __id="976" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:56 EST 2023" starttimestamp="1701628917814" timestamp="4498188" />
  <Command __id="977" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:56 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4498192" type="Run" />
  <Command __id="978" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:56:56 EST 2023" starttimestamp="1701628917814" timestamp="4498583" />
  <Command __id="979" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:56:56 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4498587" type="Run" />
  <Command __id="981" _type="MoveCaretCommand" caretOffset="213" date="Sun Dec 03 14:56:57 EST 2023" docOffset="294" starttimestamp="1701628917814" timestamp="4499499" />
  <Command __id="983" _type="MoveCaretCommand" caretOffset="14" date="Sun Dec 03 14:57:03 EST 2023" docOffset="14" starttimestamp="1701628917814" timestamp="4505276" />
  <Command __id="985" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:57:03 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4505729" />
  <Command __id="982" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:03 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4505237">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="984" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:03 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4505699">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="986" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:57:08 EST 2023" starttimestamp="1701628917814" timestamp="4510816" />
  <Command __id="987" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:57:08 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4510913" type="Run" />
  <Command __id="988" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:08 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4511033" type="Run" />
  <Command __id="989" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:08 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4511174" type="Run" />
  <Command __id="990" _type="PasteCommand" date="Sun Dec 03 14:57:09 EST 2023" starttimestamp="1701628917814" timestamp="4511981" />
  <Command __id="992" _type="MoveCaretCommand" caretOffset="14" date="Sun Dec 03 14:57:12 EST 2023" docOffset="14" starttimestamp="1701628917814" timestamp="4514186" />
  <Command __id="991" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:11 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4514149">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="995" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:15 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4517526">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="997" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:17 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4520015">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="993" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:57:15 EST 2023" starttimestamp="1701628917814" timestamp="4517230" />
  <Command __id="994" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:15 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4517233" type="Run" />
  <Command __id="996" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 14:57:15 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4517565" />
  <Command __id="998" _type="MoveCaretCommand" caretOffset="14" date="Sun Dec 03 14:57:17 EST 2023" docOffset="14" starttimestamp="1701628917814" timestamp="4520058" />
  <Command __id="1000" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:57:20 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4522540" />
  <Command __id="1001" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:57:23 EST 2023" starttimestamp="1701628917814" timestamp="4525820" />
  <Command __id="1002" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:57:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4525890" type="Run" />
  <Command __id="1003" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:23 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4526012" type="Run" />
  <Command __id="1004" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4526152" type="Run" />
  <Command __id="1005" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 14:57:26 EST 2023" starttimestamp="1701628917814" timestamp="4528294" />
  <Command __id="1006" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4528302" type="Debug" />
  <Command __id="1007" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:57:26 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4528302" type="Run" />
  <Command __id="1008" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4528302" type="Debug" />
  <Command __id="1009" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:57:26 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4528302" type="Run" />
  <Command __id="999" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:20 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4522507">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1010" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 14:57:28 EST 2023" starttimestamp="1701628917814" timestamp="4530894" />
  <Command __id="1011" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:57:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4531005" type="Run" />
  <Command __id="1012" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:57:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4531005" type="Run" />
  <Command __id="1013" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:28 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4531114" type="Run" />
  <Command __id="1014" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:28 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4531125" type="Run" />
  <Command __id="1015" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:29 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4531261" type="Run" />
  <Command __id="1017" _type="MoveCaretCommand" caretOffset="14" date="Sun Dec 03 14:57:30 EST 2023" docOffset="14" starttimestamp="1701628917814" timestamp="4532333" />
  <Command __id="1018" _type="PasteCommand" date="Sun Dec 03 14:57:31 EST 2023" starttimestamp="1701628917814" timestamp="4533235" />
  <Command __id="1019" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:31 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4533698" type="Run" />
  <Command __id="1020" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:57:32 EST 2023" starttimestamp="1701628917814" timestamp="4535178" />
  <Command __id="1021" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4535181" type="Run" />
  <Command __id="1022" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 14:57:34 EST 2023" starttimestamp="1701628917814" timestamp="4536222" />
  <Command __id="1023" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:34 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4536226" type="Run" />
  <Command __id="1024" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 14:57:34 EST 2023" starttimestamp="1701628917814" timestamp="4536882" />
  <Command __id="1025" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:57:34 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4536885" type="Run" />
  <Command __id="1026" _type="MoveCaretCommand" caretOffset="446" date="Sun Dec 03 14:57:38 EST 2023" docOffset="527" starttimestamp="1701628917814" timestamp="4541158" />
  <Command __id="1027" _type="MoveCaretCommand" caretOffset="446" date="Sun Dec 03 14:57:38 EST 2023" docOffset="527" starttimestamp="1701628917814" timestamp="4541158" />
  <Command __id="1028" _type="SelectTextCommand" caretOffset="447" date="Sun Dec 03 14:57:39 EST 2023" end="447" start="443" starttimestamp="1701628917814" timestamp="4541292" />
  <Command __id="1029" _type="SelectTextCommand" caretOffset="447" date="Sun Dec 03 14:57:39 EST 2023" end="447" start="443" starttimestamp="1701628917814" timestamp="4541292" />
  <Command __id="1030" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" date="Sun Dec 03 14:57:45 EST 2023" starttimestamp="1701628917814" timestamp="4547337" />
  <Command __id="1168" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:59:14 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4636725" type="Run" />
  <Command __id="1169" _type="MoveCaretCommand" caretOffset="252" date="Sun Dec 03 14:59:14 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="4636732" />
  <Command __id="1170" _type="MoveCaretCommand" caretOffset="252" date="Sun Dec 03 14:59:14 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="4636732" />
  <Command __id="1171" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 14:59:16 EST 2023" starttimestamp="1701628917814" timestamp="4638846" />
  <Command __id="1172" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:59:16 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4638852" type="Debug" />
  <Command __id="1173" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:59:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4638852" type="Run" />
  <Command __id="1174" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 14:59:16 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4638852" type="Debug" />
  <Command __id="1175" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 14:59:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4638852" type="Run" />
  <Command __id="1176" _type="MoveCaretCommand" caretOffset="351" date="Sun Dec 03 14:59:17 EST 2023" docOffset="432" starttimestamp="1701628917814" timestamp="4639659" />
  <Command __id="1177" _type="MoveCaretCommand" caretOffset="351" date="Sun Dec 03 14:59:17 EST 2023" docOffset="432" starttimestamp="1701628917814" timestamp="4639659" />
  <Command __id="1178" _type="MoveCaretCommand" caretOffset="350" date="Sun Dec 03 14:59:18 EST 2023" docOffset="431" starttimestamp="1701628917814" timestamp="4640344" />
  <Command __id="1179" _type="MoveCaretCommand" caretOffset="350" date="Sun Dec 03 14:59:18 EST 2023" docOffset="431" starttimestamp="1701628917814" timestamp="4640344" />
  <Command __id="1181" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4640905" timestamp2="4640905">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1182" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4640905" timestamp2="4640905">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1184" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4641008" timestamp2="4641008">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1185" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4641008" timestamp2="4641008">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1187" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4641097" timestamp2="4641097">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1188" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4641097" timestamp2="4641097">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1190" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4641173" timestamp2="4641173">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1191" _type="InsertStringCommand" date="Sun Dec 03 14:59:18 EST 2023" starttimestamp="1701628917814" timestamp="4641173" timestamp2="4641173">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1193" _type="InsertStringCommand" date="Sun Dec 03 14:59:19 EST 2023" starttimestamp="1701628917814" timestamp="4641424" timestamp2="4641424">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1194" _type="InsertStringCommand" date="Sun Dec 03 14:59:19 EST 2023" starttimestamp="1701628917814" timestamp="4641424" timestamp2="4641424">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1196" _type="InsertStringCommand" date="Sun Dec 03 14:59:19 EST 2023" starttimestamp="1701628917814" timestamp="4641469" timestamp2="4641469">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1197" _type="InsertStringCommand" date="Sun Dec 03 14:59:19 EST 2023" starttimestamp="1701628917814" timestamp="4641469" timestamp2="4641469">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1199" _type="InsertStringCommand" date="Sun Dec 03 14:59:19 EST 2023" starttimestamp="1701628917814" timestamp="4642085" timestamp2="4642085">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1200" _type="InsertStringCommand" date="Sun Dec 03 14:59:19 EST 2023" starttimestamp="1701628917814" timestamp="4642085" timestamp2="4642085">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1201" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 14:59:19 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="4642112" />
  <Command __id="1016" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:57:30 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4532305">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1202" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 14:59:21 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="4643279" />
  <Command __id="1203" _type="MoveCaretCommand" caretOffset="275" date="Sun Dec 03 14:59:21 EST 2023" docOffset="356" starttimestamp="1701628917814" timestamp="4643309" />
  <Command __id="1204" _type="MoveCaretCommand" caretOffset="275" date="Sun Dec 03 14:59:21 EST 2023" docOffset="356" starttimestamp="1701628917814" timestamp="4643309" />
  <Command __id="1205" _type="MoveCaretCommand" caretOffset="355" date="Sun Dec 03 14:59:21 EST 2023" docOffset="436" starttimestamp="1701628917814" timestamp="4643637" />
  <Command __id="1206" _type="MoveCaretCommand" caretOffset="355" date="Sun Dec 03 14:59:21 EST 2023" docOffset="436" starttimestamp="1701628917814" timestamp="4643638" />
  <Command __id="1208" _type="InsertStringCommand" date="Sun Dec 03 14:59:21 EST 2023" starttimestamp="1701628917814" timestamp="4643991" timestamp2="4643991">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1209" _type="InsertStringCommand" date="Sun Dec 03 14:59:21 EST 2023" starttimestamp="1701628917814" timestamp="4643991" timestamp2="4643991">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1211" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4645206" timestamp2="4645206">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1212" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4645207" timestamp2="4645207">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1214" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4645383" timestamp2="4645383">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1215" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4645383" timestamp2="4645383">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1217" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4645501" timestamp2="4645501">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1218" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4645501" timestamp2="4645501">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1220" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4646001" timestamp2="4646001">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1221" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4646001" timestamp2="4646001">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1223" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4646070" timestamp2="4646070">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1224" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4646077" timestamp2="4646077">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1226" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4646177" timestamp2="4646177">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1227" _type="InsertStringCommand" date="Sun Dec 03 14:59:23 EST 2023" starttimestamp="1701628917814" timestamp="4646178" timestamp2="4646178">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1229" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646340" timestamp2="4646340">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1230" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646340" timestamp2="4646340">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1232" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646445" timestamp2="4646445">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1233" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646445" timestamp2="4646445">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1235" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646526" timestamp2="4646526">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="1180" _type="Insert" date="Sun Dec 03 14:59:18 EST 2023" docASTNodeCount="119" docActiveCodeLength="702" docExpressionCount="80" docLength="702" length="18" offset="431" repeat="18" starttimestamp="1701628917814" timestamp="4640902" timestamp2="4646637">
    <text><![CDATA[eval(environment).]]></text>
  </DocumentChange>
  <Command __id="1236" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646526" timestamp2="4646526">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1238" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646639" timestamp2="4646639">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1239" _type="InsertStringCommand" date="Sun Dec 03 14:59:24 EST 2023" starttimestamp="1701628917814" timestamp="4646639" timestamp2="4646639">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1240" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 14:59:25 EST 2023" starttimestamp="1701628917814" timestamp="4647317" />
  <Command __id="1241" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:59:25 EST 2023" starttimestamp="1701628917814" timestamp="4647415" />
  <Command __id="1242" _type="EclipseCommand" commandID="" date="Sun Dec 03 14:59:25 EST 2023" starttimestamp="1701628917814" timestamp="4647425" />
  <Command __id="1243" _type="MoveCaretCommand" caretOffset="256" date="Sun Dec 03 14:59:25 EST 2023" docOffset="337" starttimestamp="1701628917814" timestamp="4647895" />
  <Command __id="1244" _type="MoveCaretCommand" caretOffset="256" date="Sun Dec 03 14:59:25 EST 2023" docOffset="337" starttimestamp="1701628917814" timestamp="4647895" />
  <Command __id="1245" _type="MoveCaretCommand" caretOffset="418" date="Sun Dec 03 14:59:26 EST 2023" docOffset="499" starttimestamp="1701628917814" timestamp="4648581" />
  <Command __id="1246" _type="MoveCaretCommand" caretOffset="418" date="Sun Dec 03 14:59:26 EST 2023" docOffset="499" starttimestamp="1701628917814" timestamp="4648581" />
  <Command __id="1247" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:59:38 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4660231">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1248" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 14:59:38 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="4660264" />
  <Command __id="1250" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 14:59:38 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="4661161" />
  <Command __id="1251" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 14:59:41 EST 2023" starttimestamp="1701628917814" timestamp="4663613" />
  <Command __id="1252" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:59:41 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4663778" type="Run" />
  <Command __id="1253" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 14:59:41 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4663778" type="Run" />
  <Command __id="1254" _type="ShellCommand" date="Sun Dec 03 14:59:41 EST 2023" starttimestamp="1701628917814" timestamp="4664106" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1255" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666669" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1256" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666670" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1257" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666674" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1258" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666675" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1259" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666678" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1260" _type="ExceptionCommand" date="Sun Dec 03 14:59:44 EST 2023" starttimestamp="1701628917814" timestamp="4666706" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1261" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666709" type="ConsoleOutput">
    <outputString><![CDATA[	at index.AndEvaluator.evalHelper(AndEvaluator.java:16)
	at index.AndEvaluator.eval(AndEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at index.AndEvaluator.evalHelper(AndEvaluator.java:16)¶	at index.AndEvaluator.eval(AndEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1262" _type="ConsoleOutput" date="Sun Dec 03 14:59:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4666745" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.AndEvaluator.evalHelper(AndEvaluator.java:16)¶	at index.AndEvaluator.eval(AndEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"GradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironm"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Compon"), Diff(EQUAL,"ent.java:6"), Diff(DELETE,"2"), Diff(INSERT,"638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:45"), Diff(INSERT,"56"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1263" _type="ExceptionCommand" date="Sun Dec 03 14:59:44 EST 2023" starttimestamp="1701628917814" timestamp="4666749" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):43
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL

java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:16)
	at index.AndEvaluator.eval(AndEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1249" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:59:38 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4661131">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1267" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 14:59:47 EST 2023" docASTNodeCount="119" docActiveCodeLength="702" docExpressionCount="80" docLength="702" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4670067">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr."), Diff(INSERT,"eval(environment)."), Diff(EQUAL,"isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.eval(environment).isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="1264" _type="ShellCommand" date="Sun Dec 03 14:59:47 EST 2023" starttimestamp="1701628917814" timestamp="4669980" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1265" _type="LocalChecksRawCommand" date="Sun Dec 03 14:59:47 EST 2023" starttimestamp="1701628917814" timestamp="4669985">
    <CSVRow><![CDATA[29,Sun Dec 03 14:59:44 EST 2023,17,-3,LogicalSuite,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker- BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker- LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,9,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(0.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1266" _type="LocalChecksRawCommand" date="Sun Dec 03 14:59:47 EST 2023" starttimestamp="1701628917814" timestamp="4669985">
    <CSVRow><![CDATA[29,Sun Dec 03 14:59:44 EST 2023,17,-3,LogicalSuite,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker- BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker- LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,9,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(0.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1268" _type="MoveCaretCommand" caretOffset="418" date="Sun Dec 03 14:59:47 EST 2023" docOffset="499" starttimestamp="1701628917814" timestamp="4670096" />
  <Command __id="1270" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 15:00:11 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4693930" />
  <Command __id="1271" _type="MoveCaretCommand" caretOffset="566" date="Sun Dec 03 15:00:12 EST 2023" docOffset="647" starttimestamp="1701628917814" timestamp="4695160" />
  <Command __id="1272" _type="MoveCaretCommand" caretOffset="574" date="Sun Dec 03 15:00:13 EST 2023" docOffset="655" starttimestamp="1701628917814" timestamp="4695461" />
  <Command __id="1273" _type="MoveCaretCommand" caretOffset="516" date="Sun Dec 03 15:00:14 EST 2023" docOffset="597" starttimestamp="1701628917814" timestamp="4696379" />
  <Command __id="1274" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:00:14 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="4696701" />
  <Command __id="1276" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 15:00:15 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="4697491" />
  <Command __id="1278" _type="MoveCaretCommand" caretOffset="418" date="Sun Dec 03 15:00:16 EST 2023" docOffset="499" starttimestamp="1701628917814" timestamp="4698326" />
  <Command __id="1279" _type="SelectTextCommand" caretOffset="350" date="Sun Dec 03 15:00:18 EST 2023" end="368" start="350" starttimestamp="1701628917814" timestamp="4700798" />
  <Command __id="1280" _type="SelectTextCommand" caretOffset="350" date="Sun Dec 03 15:00:18 EST 2023" end="368" start="350" starttimestamp="1701628917814" timestamp="4700798" />
  <Command __id="1282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:00:19 EST 2023" starttimestamp="1701628917814" timestamp="4701567" />
  <Command __id="1283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:00:19 EST 2023" starttimestamp="1701628917814" timestamp="4701567" />
  <Command __id="1284" _type="MoveCaretCommand" caretOffset="576" date="Sun Dec 03 15:00:20 EST 2023" docOffset="657" starttimestamp="1701628917814" timestamp="4702825" />
  <Command __id="1285" _type="MoveCaretCommand" caretOffset="576" date="Sun Dec 03 15:00:20 EST 2023" docOffset="657" starttimestamp="1701628917814" timestamp="4702826" />
  <Command __id="1287" _type="InsertStringCommand" date="Sun Dec 03 15:00:21 EST 2023" starttimestamp="1701628917814" timestamp="4703635" timestamp2="4703635">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1288" _type="InsertStringCommand" date="Sun Dec 03 15:00:21 EST 2023" starttimestamp="1701628917814" timestamp="4703635" timestamp2="4703635">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1289" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:00:21 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="4703642" />
  <Command __id="1294" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:00:22 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="4704933" />
  <Command __id="1296" _type="InsertStringCommand" date="Sun Dec 03 15:00:22 EST 2023" starttimestamp="1701628917814" timestamp="4704984" timestamp2="4704984">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1297" _type="InsertStringCommand" date="Sun Dec 03 15:00:22 EST 2023" starttimestamp="1701628917814" timestamp="4704984" timestamp2="4704984">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1298" _type="InsertStringCommand" date="Sun Dec 03 15:00:22 EST 2023" starttimestamp="1701628917814" timestamp="4705016" timestamp2="4705016">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1299" _type="InsertStringCommand" date="Sun Dec 03 15:00:22 EST 2023" starttimestamp="1701628917814" timestamp="4705016" timestamp2="4705016">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1300" _type="MoveCaretCommand" caretOffset="400" date="Sun Dec 03 15:00:24 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="4706417" />
  <Command __id="1301" _type="MoveCaretCommand" caretOffset="400" date="Sun Dec 03 15:00:24 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="4706417" />
  <Command __id="1302" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:00:24 EST 2023" starttimestamp="1701628917814" timestamp="4706904" />
  <Command __id="1303" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:00:24 EST 2023" starttimestamp="1701628917814" timestamp="4707003" />
  <Command __id="1304" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:00:24 EST 2023" starttimestamp="1701628917814" timestamp="4707009" />
  <Command __id="1311" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:00:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4710237" type="Run" />
  <Command __id="1312" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:00:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4710237" type="Run" />
  <Command __id="1313" _type="ShellCommand" date="Sun Dec 03 15:00:28 EST 2023" starttimestamp="1701628917814" timestamp="4710542" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1314" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713857" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1315" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713859" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1316" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713862" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1317" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713863" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1318" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713865" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1319" _type="ExceptionCommand" date="Sun Dec 03 15:00:31 EST 2023" starttimestamp="1701628917814" timestamp="4713894" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1320" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713897" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:26)
	at index.AndEvaluator.eval(AndEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.AndEvaluator.evalHelper(AndEvaluator.java:26)¶	at index.AndEvaluator.eval(AndEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1321" _type="ConsoleOutput" date="Sun Dec 03 15:00:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="4713934" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.AndEvaluator.evalHelper(AndEvaluator.java:26)¶	at index.AndEvaluator.eval(AndEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"GradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"140"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"5"), Diff(INSERT,"918"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1322" _type="ExceptionCommand" date="Sun Dec 03 15:00:31 EST 2023" starttimestamp="1701628917814" timestamp="4713938" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):44
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL

java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:26)
	at index.AndEvaluator.eval(AndEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1323" _type="ShellCommand" date="Sun Dec 03 15:00:41 EST 2023" starttimestamp="1701628917814" timestamp="4723914" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1324" _type="LocalChecksRawCommand" date="Sun Dec 03 15:00:41 EST 2023" starttimestamp="1701628917814" timestamp="4723918">
    <CSVRow><![CDATA[30,Sun Dec 03 15:00:31 EST 2023,17,0,LogicalSuite,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,10,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(0.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1325" _type="LocalChecksRawCommand" date="Sun Dec 03 15:00:41 EST 2023" starttimestamp="1701628917814" timestamp="4723918">
    <CSVRow><![CDATA[30,Sun Dec 03 15:00:31 EST 2023,17,0,LogicalSuite,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,10,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(0.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(0.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1326" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:00:41 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4723926" type="Debug" />
  <Command __id="1327" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:00:41 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4723926" type="Run" />
  <Command __id="1328" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:00:41 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="4723926" type="Debug" />
  <Command __id="1329" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:00:41 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4723926" type="Run" />
  <Command __id="1330" _type="SelectTextCommand" caretOffset="594" date="Sun Dec 03 15:02:39 EST 2023" end="594" start="576" starttimestamp="1701628917814" timestamp="4841589" />
  <Command __id="1331" _type="SelectTextCommand" caretOffset="594" date="Sun Dec 03 15:02:39 EST 2023" end="594" start="576" starttimestamp="1701628917814" timestamp="4841589" />
  <Command __id="1333" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:02:40 EST 2023" starttimestamp="1701628917814" timestamp="4842295" />
  <Command __id="1334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:02:40 EST 2023" starttimestamp="1701628917814" timestamp="4842295" />
  <Command __id="1269" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:00:11 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4693879">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1275" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:00:15 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="4697460">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1277" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:00:16 EST 2023" docASTNodeCount="119" docActiveCodeLength="702" docExpressionCount="80" docLength="702" projectName="Assignment5" starttimestamp="1701628917814" timestamp="4698293">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.eval(environment).isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1281" _type="Delete" date="Sun Dec 03 15:00:19 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" endLine="15" length="18" offset="431" startLine="15" starttimestamp="1701628917814" timestamp="4701563">
    <text><![CDATA[eval(environment).]]></text>
  </DocumentChange>
  <DocumentChange __id="1286" _type="Insert" date="Sun Dec 03 15:00:21 EST 2023" docASTNodeCount="118" docActiveCodeLength="689" docExpressionCount="79" docLength="689" length="5" offset="657" repeat="5" starttimestamp="1701628917814" timestamp="4703631" timestamp2="4704571">
    <text><![CDATA[.eval]]></text>
  </DocumentChange>
  <DocumentChange __id="1295" _type="Replace" date="Sun Dec 03 15:00:22 EST 2023" docASTNodeCount="119" docActiveCodeLength="702" docExpressionCount="80" docLength="702" endLine="25" insertionLength="17" int_docASTNodeCount="117" int_docActiveCodeLength="685" int_docExpressionCount="78" int_docLength="685" length="4" offset="658" startLine="25" starttimestamp="1701628917814" timestamp="4704938">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1332" _type="Delete" date="Sun Dec 03 15:02:40 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" endLine="25" length="18" offset="657" startLine="25" starttimestamp="1701628917814" timestamp="4842287">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="1337" _type="Insert" date="Sun Dec 03 15:03:45 EST 2023" docASTNodeCount="120" docActiveCodeLength="694" docExpressionCount="80" docLength="694" length="10" offset="621" repeat="7" starttimestamp="1701628917814" timestamp="4907875" timestamp2="4909276">
    <text><![CDATA[
			expr.h]]></text>
  </DocumentChange>
  <DocumentChange __id="1357" _type="Delete" date="Sun Dec 03 15:03:48 EST 2023" docASTNodeCount="117" docActiveCodeLength="693" docExpressionCount="78" docLength="693" endLine="25" length="1" offset="630" startLine="25" starttimestamp="1701628917814" timestamp="4910239">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <Command __id="1335" _type="MoveCaretCommand" caretOffset="540" date="Sun Dec 03 15:03:45 EST 2023" docOffset="621" starttimestamp="1701628917814" timestamp="4907322" />
  <Command __id="1336" _type="MoveCaretCommand" caretOffset="540" date="Sun Dec 03 15:03:45 EST 2023" docOffset="621" starttimestamp="1701628917814" timestamp="4907323" />
  <Command __id="1338" _type="InsertStringCommand" date="Sun Dec 03 15:03:45 EST 2023" starttimestamp="1701628917814" timestamp="4907880" timestamp2="4907880">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1339" _type="InsertStringCommand" date="Sun Dec 03 15:03:45 EST 2023" starttimestamp="1701628917814" timestamp="4907880" timestamp2="4907880">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1341" _type="InsertStringCommand" date="Sun Dec 03 15:03:45 EST 2023" starttimestamp="1701628917814" timestamp="4907981" timestamp2="4907981">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1342" _type="InsertStringCommand" date="Sun Dec 03 15:03:45 EST 2023" starttimestamp="1701628917814" timestamp="4907981" timestamp2="4907981">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1344" _type="InsertStringCommand" date="Sun Dec 03 15:03:45 EST 2023" starttimestamp="1701628917814" timestamp="4908171" timestamp2="4908171">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1345" _type="InsertStringCommand" date="Sun Dec 03 15:03:45 EST 2023" starttimestamp="1701628917814" timestamp="4908171" timestamp2="4908171">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1347" _type="InsertStringCommand" date="Sun Dec 03 15:03:46 EST 2023" starttimestamp="1701628917814" timestamp="4908351" timestamp2="4908351">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1348" _type="InsertStringCommand" date="Sun Dec 03 15:03:46 EST 2023" starttimestamp="1701628917814" timestamp="4908351" timestamp2="4908351">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1350" _type="InsertStringCommand" date="Sun Dec 03 15:03:46 EST 2023" starttimestamp="1701628917814" timestamp="4908432" timestamp2="4908432">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1351" _type="InsertStringCommand" date="Sun Dec 03 15:03:46 EST 2023" starttimestamp="1701628917814" timestamp="4908432" timestamp2="4908432">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1353" _type="InsertStringCommand" date="Sun Dec 03 15:03:46 EST 2023" starttimestamp="1701628917814" timestamp="4908551" timestamp2="4908551">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1354" _type="InsertStringCommand" date="Sun Dec 03 15:03:46 EST 2023" starttimestamp="1701628917814" timestamp="4908551" timestamp2="4908551">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1355" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:03:46 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="4908555" />
  <Command __id="1367" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:03:53 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="4915871" />
  <Command __id="1369" _type="InsertStringCommand" date="Sun Dec 03 15:03:53 EST 2023" starttimestamp="1701628917814" timestamp="4915875" timestamp2="4915875">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1370" _type="InsertStringCommand" date="Sun Dec 03 15:03:53 EST 2023" starttimestamp="1701628917814" timestamp="4915875" timestamp2="4915875">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1372" _type="InsertStringCommand" date="Sun Dec 03 15:03:53 EST 2023" starttimestamp="1701628917814" timestamp="4916120" timestamp2="4916120">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1373" _type="InsertStringCommand" date="Sun Dec 03 15:03:53 EST 2023" starttimestamp="1701628917814" timestamp="4916120" timestamp2="4916120">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1375" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:03:54 EST 2023" starttimestamp="1701628917814" timestamp="4916452" />
  <Command __id="1376" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:03:54 EST 2023" starttimestamp="1701628917814" timestamp="4916452" />
  <Command __id="1378" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:03:54 EST 2023" starttimestamp="1701628917814" timestamp="4916572" />
  <Command __id="1379" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:03:54 EST 2023" starttimestamp="1701628917814" timestamp="4916572" />
  <Command __id="1381" _type="UndoCommand" date="Sun Dec 03 15:03:54 EST 2023" starttimestamp="1701628917814" timestamp="4916934" />
  <Command __id="1383" _type="UndoCommand" date="Sun Dec 03 15:03:55 EST 2023" starttimestamp="1701628917814" timestamp="4917278" />
  <Command __id="1385" _type="UndoCommand" date="Sun Dec 03 15:03:55 EST 2023" starttimestamp="1701628917814" timestamp="4917593" />
  <Command __id="1387" _type="InsertStringCommand" date="Sun Dec 03 15:03:55 EST 2023" starttimestamp="1701628917814" timestamp="4918105" timestamp2="4918105">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1388" _type="InsertStringCommand" date="Sun Dec 03 15:03:55 EST 2023" starttimestamp="1701628917814" timestamp="4918105" timestamp2="4918105">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1390" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918463" timestamp2="4918463">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1391" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918463" timestamp2="4918463">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1393" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918639" timestamp2="4918639">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1394" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918639" timestamp2="4918639">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1396" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918740" timestamp2="4918740">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1397" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918740" timestamp2="4918740">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1399" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918830" timestamp2="4918830">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1400" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918830" timestamp2="4918830">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1402" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918955" timestamp2="4918955">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1403" _type="InsertStringCommand" date="Sun Dec 03 15:03:56 EST 2023" starttimestamp="1701628917814" timestamp="4918956" timestamp2="4918956">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1404" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:03:56 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="4918962" />
  <Command __id="1405" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:04:03 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="4925309" />
  <Command __id="1406" _type="MoveCaretCommand" caretOffset="549" date="Sun Dec 03 15:04:03 EST 2023" docOffset="630" starttimestamp="1701628917814" timestamp="4925423" />
  <Command __id="1407" _type="MoveCaretCommand" caretOffset="549" date="Sun Dec 03 15:04:03 EST 2023" docOffset="630" starttimestamp="1701628917814" timestamp="4925423" />
  <Command __id="1408" _type="SelectTextCommand" caretOffset="544" date="Sun Dec 03 15:04:04 EST 2023" end="549" start="544" starttimestamp="1701628917814" timestamp="4926257" />
  <Command __id="1409" _type="SelectTextCommand" caretOffset="544" date="Sun Dec 03 15:04:04 EST 2023" end="549" start="544" starttimestamp="1701628917814" timestamp="4926257" />
  <Command __id="1411" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:04:04 EST 2023" starttimestamp="1701628917814" timestamp="4926960" />
  <Command __id="1412" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:04:04 EST 2023" starttimestamp="1701628917814" timestamp="4926960" />
  <DocumentChange __id="1358" _type="Delete" date="Sun Dec 03 15:03:51 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" endLine="25" length="9" offset="621" repeat="9" startLine="24" starttimestamp="1701628917814" timestamp="4913196" timestamp2="4915170">
    <text><![CDATA[
			expr.]]></text>
  </DocumentChange>
  <DocumentChange __id="1368" _type="Insert" date="Sun Dec 03 15:03:53 EST 2023" docASTNodeCount="118" docActiveCodeLength="696" docExpressionCount="78" docLength="696" length="12" offset="621" repeat="2" starttimestamp="1701628917814" timestamp="4915874" timestamp2="4916117">
    <text><![CDATA[environmente]]></text>
  </DocumentChange>
  <DocumentChange __id="1374" _type="Delete" date="Sun Dec 03 15:03:54 EST 2023" docASTNodeCount="118" docActiveCodeLength="694" docExpressionCount="78" docLength="694" endLine="24" length="2" offset="631" repeat="2" startLine="24" starttimestamp="1701628917814" timestamp="4916449" timestamp2="4916569">
    <text><![CDATA[te]]></text>
  </DocumentChange>
  <DocumentChange __id="1380" _type="Insert" date="Sun Dec 03 15:03:54 EST 2023" docASTNodeCount="118" docActiveCodeLength="696" docExpressionCount="78" docLength="696" length="2" offset="631" starttimestamp="1701628917814" timestamp="4916929">
    <text><![CDATA[te]]></text>
  </DocumentChange>
  <DocumentChange __id="1382" _type="Delete" date="Sun Dec 03 15:03:55 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" endLine="24" length="12" offset="621" repeat="2" startLine="24" starttimestamp="1701628917814" timestamp="4917273" timestamp2="4917588">
    <text><![CDATA[environmente]]></text>
  </DocumentChange>
  <DocumentChange __id="1386" _type="Insert" date="Sun Dec 03 15:03:55 EST 2023" docASTNodeCount="117" docActiveCodeLength="693" docExpressionCount="78" docLength="693" length="9" offset="621" repeat="6" starttimestamp="1701628917814" timestamp="4918100" timestamp2="4918953">
    <text><![CDATA[
			expr.]]></text>
  </DocumentChange>
  <DocumentChange __id="1410" _type="Delete" date="Sun Dec 03 15:04:04 EST 2023" docASTNodeCount="116" docActiveCodeLength="688" docExpressionCount="77" docLength="688" endLine="25" length="5" offset="625" startLine="25" starttimestamp="1701628917814" timestamp="4926958">
    <text><![CDATA[expr.]]></text>
  </DocumentChange>
  <Command __id="1413" _type="MoveCaretCommand" caretOffset="158" date="Sun Dec 03 15:06:49 EST 2023" docOffset="239" starttimestamp="1701628917814" timestamp="5091390" />
  <Command __id="1414" _type="MoveCaretCommand" caretOffset="158" date="Sun Dec 03 15:06:49 EST 2023" docOffset="239" starttimestamp="1701628917814" timestamp="5091391" />
  <Command __id="1415" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:06:49 EST 2023" starttimestamp="1701628917814" timestamp="5091690" />
  <Command __id="1416" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:06:49 EST 2023" starttimestamp="1701628917814" timestamp="5091788" />
  <Command __id="1417" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:06:49 EST 2023" starttimestamp="1701628917814" timestamp="5091794" />
  <Command __id="1419" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:06:50 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="5093008" />
  <Command __id="1420" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 15:06:53 EST 2023" starttimestamp="1701628917814" timestamp="5095599" />
  <Command __id="1421" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:06:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5095751" type="Run" />
  <Command __id="1422" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:06:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5095751" type="Run" />
  <Command __id="1423" _type="ShellCommand" date="Sun Dec 03 15:06:56 EST 2023" starttimestamp="1701628917814" timestamp="5098289" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1424" _type="ShellCommand" date="Sun Dec 03 15:06:59 EST 2023" starttimestamp="1701628917814" timestamp="5101368" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1425" _type="PasteCommand" date="Sun Dec 03 15:06:59 EST 2023" starttimestamp="1701628917814" timestamp="5101694" />
  <Command __id="1426" _type="ConsoleOutput" date="Sun Dec 03 15:07:00 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5102225" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1427" _type="ConsoleInput" date="Sun Dec 03 15:07:11 EST 2023" starttimestamp="1701628917814" timestamp="5113278" type="Exception">
    <outputString><![CDATA[(/= 3 4)(eval 3 4)
]]></outputString>
  </Command>
  <Command __id="1428" _type="ConsoleOutput" date="Sun Dec 03 15:07:11 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5113283" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1429" _type="PasteCommand" date="Sun Dec 03 15:07:16 EST 2023" starttimestamp="1701628917814" timestamp="5118801" />
  <Command __id="1430" _type="PasteCommand" date="Sun Dec 03 15:07:19 EST 2023" starttimestamp="1701628917814" timestamp="5122013" />
  <Command __id="1431" _type="ShellCommand" date="Sun Dec 03 15:07:21 EST 2023" starttimestamp="1701628917814" timestamp="5123652" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1432" _type="ShellCommand" date="Sun Dec 03 15:07:22 EST 2023" starttimestamp="1701628917814" timestamp="5124341" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1433" _type="PasteCommand" date="Sun Dec 03 15:07:22 EST 2023" starttimestamp="1701628917814" timestamp="5124564" />
  <Command __id="1434" _type="ConsoleInput" date="Sun Dec 03 15:07:23 EST 2023" starttimestamp="1701628917814" timestamp="5125427" type="Exception">
    <outputString><![CDATA[(eval ((/= 3 4)(/= 3 4) (/= 3 4))
]]></outputString>
  </Command>
  <Command __id="1435" _type="ConsoleOutput" date="Sun Dec 03 15:07:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5125432" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1436" _type="PasteCommand" date="Sun Dec 03 15:07:34 EST 2023" starttimestamp="1701628917814" timestamp="5136440" />
  <Command __id="1418" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:06:50 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5092980">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1437" _type="ConsoleInput" date="Sun Dec 03 15:07:36 EST 2023" starttimestamp="1701628917814" timestamp="5138780" type="Exception">
    <outputString><![CDATA[(eval (/= 3 4) NIL)
]]></outputString>
  </Command>
  <Command __id="1438" _type="ConsoleOutput" date="Sun Dec 03 15:07:36 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5138786" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="1440" _type="MoveCaretCommand" caretOffset="158" date="Sun Dec 03 15:07:43 EST 2023" docOffset="239" starttimestamp="1701628917814" timestamp="5145933" />
  <Command __id="1441" _type="ShellCommand" date="Sun Dec 03 15:08:00 EST 2023" starttimestamp="1701628917814" timestamp="5162456" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1442" _type="ShellCommand" date="Sun Dec 03 15:08:05 EST 2023" starttimestamp="1701628917814" timestamp="5167755" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1443" _type="ShellCommand" date="Sun Dec 03 15:08:08 EST 2023" starttimestamp="1701628917814" timestamp="5170918" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1444" _type="ShellCommand" date="Sun Dec 03 15:08:11 EST 2023" starttimestamp="1701628917814" timestamp="5173186" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1445" _type="MoveCaretCommand" caretOffset="252" date="Sun Dec 03 15:10:31 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="5313682" />
  <Command __id="1446" _type="MoveCaretCommand" caretOffset="252" date="Sun Dec 03 15:10:31 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="5313682" />
  <Command __id="1439" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:07:43 EST 2023" docASTNodeCount="116" docActiveCodeLength="688" docExpressionCount="77" docLength="688" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5145897">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr."), Diff(DELETE,"eval(environment)."), Diff(EQUAL,"isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			"), Diff(INSERT,"			"), Diff(EQUAL,"return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="1447" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.next" date="Sun Dec 03 15:10:39 EST 2023" starttimestamp="1701628917814" timestamp="5321208" />
  <DocumentChange __id="1448" _type="Insert" date="Sun Dec 03 15:10:40 EST 2023" docASTNodeCount="111" docActiveCodeLength="649" docExpressionCount="73" docLength="690" length="2" offset="294" starttimestamp="1701628917814" timestamp="5322587">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1449" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sun Dec 03 15:10:40 EST 2023" starttimestamp="1701628917814" timestamp="5322603" />
  <Command __id="1451" _type="InsertStringCommand" date="Sun Dec 03 15:10:40 EST 2023" starttimestamp="1701628917814" timestamp="5322787" timestamp2="5322787">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1452" _type="InsertStringCommand" date="Sun Dec 03 15:10:40 EST 2023" starttimestamp="1701628917814" timestamp="5322787" timestamp2="5322787">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1454" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5323809" timestamp2="5323809">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1455" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5323809" timestamp2="5323809">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1457" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5323882" timestamp2="5323882">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1458" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5323882" timestamp2="5323882">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1460" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5324049" timestamp2="5324049">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1461" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5324049" timestamp2="5324049">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1463" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5324088" timestamp2="5324088">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1464" _type="InsertStringCommand" date="Sun Dec 03 15:10:41 EST 2023" starttimestamp="1701628917814" timestamp="5324088" timestamp2="5324088">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1466" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324190" timestamp2="5324190">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1467" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324190" timestamp2="5324190">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1469" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324267" timestamp2="5324267">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1470" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324267" timestamp2="5324267">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1472" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324387" timestamp2="5324387">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1473" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324387" timestamp2="5324387">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1475" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324403" timestamp2="5324403">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1476" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324403" timestamp2="5324403">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1478" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324572" timestamp2="5324572">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1479" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324572" timestamp2="5324572">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1481" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324692" timestamp2="5324692">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1482" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324692" timestamp2="5324692">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1484" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324754" timestamp2="5324754">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1485" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324754" timestamp2="5324754">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1487" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324856" timestamp2="5324856">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1488" _type="InsertStringCommand" date="Sun Dec 03 15:10:42 EST 2023" starttimestamp="1701628917814" timestamp="5324857" timestamp2="5324857">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1489" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:10:44 EST 2023" starttimestamp="1701628917814" timestamp="5326640" />
  <Command __id="1490" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:10:44 EST 2023" starttimestamp="1701628917814" timestamp="5326738" />
  <Command __id="1491" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:10:44 EST 2023" starttimestamp="1701628917814" timestamp="5326745" />
  <Command __id="1492" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:10:44 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5326796" type="Run" />
  <DocumentChange __id="1450" _type="Insert" date="Sun Dec 03 15:10:40 EST 2023" docASTNodeCount="113" docActiveCodeLength="664" docExpressionCount="74" docLength="705" length="15" offset="335" repeat="13" starttimestamp="1701628917814" timestamp="5322783" timestamp2="5324853">
    <text><![CDATA[
		return expr;]]></text>
  </DocumentChange>
  <Command __id="1493" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 15:10:47 EST 2023" starttimestamp="1701628917814" timestamp="5329299" />
  <Command __id="1494" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:10:47 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5329306" type="Debug" />
  <Command __id="1495" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:10:47 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5329306" type="Run" />
  <Command __id="1496" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:10:47 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5329306" type="Debug" />
  <Command __id="1497" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:10:47 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5329306" type="Run" />
  <Command __id="1499" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 15:10:55 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="5337865" />
  <Command __id="1500" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 15:11:00 EST 2023" starttimestamp="1701628917814" timestamp="5342490" />
  <Command __id="1501" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:11:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5342645" type="Run" />
  <Command __id="1502" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:11:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5342645" type="Run" />
  <Command __id="1503" _type="ShellCommand" date="Sun Dec 03 15:11:00 EST 2023" starttimestamp="1701628917814" timestamp="5342960" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1504" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346262" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(INSERT,"est execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1505" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346263" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1506" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346268" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1507" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346268" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1508" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346270" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1509" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346270" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1510" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346303" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1511" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346304" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):39"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1512" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346305" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):41"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1513" _type="ConsoleOutput" date="Sun Dec 03 15:11:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5346306" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (T 2)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):41"), Diff(INSERT,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (T 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1514" _type="ShellCommand" date="Sun Dec 03 15:11:39 EST 2023" starttimestamp="1701628917814" timestamp="5381911" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1515" _type="LocalChecksRawCommand" date="Sun Dec 03 15:11:39 EST 2023" starttimestamp="1701628917814" timestamp="5381914">
    <CSVRow><![CDATA[31,Sun Dec 03 15:11:04 EST 2023,19,2,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker+ MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,11,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1516" _type="LocalChecksRawCommand" date="Sun Dec 03 15:11:39 EST 2023" starttimestamp="1701628917814" timestamp="5381914">
    <CSVRow><![CDATA[31,Sun Dec 03 15:11:04 EST 2023,19,2,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker+ MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,11,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1518" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:11:39 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="5382032" />
  <Command __id="1520" _type="MoveCaretCommand" caretOffset="188" date="Sun Dec 03 15:11:40 EST 2023" docOffset="269" starttimestamp="1701628917814" timestamp="5382650" />
  <Command __id="1521" _type="MoveCaretCommand" caretOffset="268" date="Sun Dec 03 15:11:42 EST 2023" docOffset="349" starttimestamp="1701628917814" timestamp="5384220" />
  <Command __id="1522" _type="MoveCaretCommand" caretOffset="268" date="Sun Dec 03 15:11:42 EST 2023" docOffset="349" starttimestamp="1701628917814" timestamp="5384220" />
  <Command __id="1524" _type="InsertStringCommand" date="Sun Dec 03 15:11:42 EST 2023" starttimestamp="1701628917814" timestamp="5385072" timestamp2="5385072">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1525" _type="InsertStringCommand" date="Sun Dec 03 15:11:42 EST 2023" starttimestamp="1701628917814" timestamp="5385072" timestamp2="5385072">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1526" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:11:42 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5385090" />
  <Command __id="1531" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:11:43 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5385982" />
  <Command __id="1533" _type="InsertStringCommand" date="Sun Dec 03 15:11:43 EST 2023" starttimestamp="1701628917814" timestamp="5386010" timestamp2="5386010">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1534" _type="InsertStringCommand" date="Sun Dec 03 15:11:43 EST 2023" starttimestamp="1701628917814" timestamp="5386011" timestamp2="5386011">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1553" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:11:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5391107" type="Run" />
  <Command __id="1554" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:11:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5391107" type="Run" />
  <Command __id="1555" _type="ShellCommand" date="Sun Dec 03 15:11:49 EST 2023" starttimestamp="1701628917814" timestamp="5391415" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1556" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396509" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string (T 2)"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1557" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396510" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1558" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396514" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1559" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396515" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1560" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396517" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1561" _type="ExceptionCommand" date="Sun Dec 03 15:11:54 EST 2023" starttimestamp="1701628917814" timestamp="5396545" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1562" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396548" type="ConsoleOutput">
    <outputString><![CDATA[	at index.AndEvaluator.eval(AndEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at index.AndEvaluator.eval(AndEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1563" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396551" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.AndEvaluator.eval(AndEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(EQUAL,".java:"), Diff(INSERT,"6"), Diff(EQUAL,"2"), Diff(DELETE,"1"), Diff(EQUAL,")¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:4"), Diff(DELETE,"7"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52"), Diff(INSERT,"GradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1564" _type="ConsoleOutput" date="Sun Dec 03 15:11:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5396562" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):42
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"270"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)"), Diff(INSERT,"DispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1565" _type="ExceptionCommand" date="Sun Dec 03 15:11:54 EST 2023" starttimestamp="1701628917814" timestamp="5396566" type="Exception">
    <exceptionString><![CDATA[Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL

java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.eval(AndEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1498" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:10:55 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5337832">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1517" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:11:39 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5382009">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1519" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:11:40 EST 2023" docASTNodeCount="113" docActiveCodeLength="664" docExpressionCount="74" docLength="705" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5382625">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();"), Diff(INSERT,"//"), Diff(EQUAL,"		return evalHelper(expr, environment);	"), Diff(INSERT,"	return expr;	"), Diff(EQUAL,"}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {						return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
//		return evalHelper(expr, environment);
		return expr;
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="1523" _type="Insert" date="Sun Dec 03 15:11:42 EST 2023" docASTNodeCount="115" docActiveCodeLength="669" docExpressionCount="76" docLength="710" length="5" offset="349" repeat="5" starttimestamp="1701628917814" timestamp="5385070" timestamp2="5385658">
    <text><![CDATA[.eval]]></text>
  </DocumentChange>
  <DocumentChange __id="1532" _type="Replace" date="Sun Dec 03 15:11:43 EST 2023" docASTNodeCount="116" docActiveCodeLength="682" docExpressionCount="77" docLength="723" endLine="12" insertionLength="17" int_docASTNodeCount="115" int_docActiveCodeLength="665" int_docExpressionCount="75" int_docLength="706" length="4" offset="350" startLine="12" starttimestamp="1701628917814" timestamp="5385985">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1569" _type="Insert" date="Sun Dec 03 15:12:20 EST 2023" docASTNodeCount="118" docActiveCodeLength="690" docExpressionCount="79" docLength="731" length="8" offset="367" repeat="8" starttimestamp="1701628917814" timestamp="5422301" timestamp2="5423389">
    <text><![CDATA[ == null]]></text>
  </DocumentChange>
  <Command __id="1570" _type="LocalChecksRawCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422304">
    <CSVRow><![CDATA[32,Sun Dec 03 15:11:54 EST 2023,17,-2,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker- LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,12,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1571" _type="LocalChecksRawCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422304">
    <CSVRow><![CDATA[32,Sun Dec 03 15:11:54 EST 2023,17,-2,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker- LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,12,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1572" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422305" timestamp2="5422305">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1573" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422305" timestamp2="5422305">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1575" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422399" timestamp2="5422399">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1576" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422399" timestamp2="5422399">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1578" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422501" timestamp2="5422501">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1579" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422501" timestamp2="5422501">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1581" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422574" timestamp2="5422574">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1582" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5422575" timestamp2="5422575">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1584" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5423010" timestamp2="5423010">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1585" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5423010" timestamp2="5423010">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1587" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5423138" timestamp2="5423138">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1588" _type="InsertStringCommand" date="Sun Dec 03 15:12:20 EST 2023" starttimestamp="1701628917814" timestamp="5423138" timestamp2="5423138">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1590" _type="InsertStringCommand" date="Sun Dec 03 15:12:21 EST 2023" starttimestamp="1701628917814" timestamp="5423273" timestamp2="5423273">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1591" _type="InsertStringCommand" date="Sun Dec 03 15:12:21 EST 2023" starttimestamp="1701628917814" timestamp="5423273" timestamp2="5423273">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1593" _type="InsertStringCommand" date="Sun Dec 03 15:12:21 EST 2023" starttimestamp="1701628917814" timestamp="5423391" timestamp2="5423391">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1594" _type="InsertStringCommand" date="Sun Dec 03 15:12:21 EST 2023" starttimestamp="1701628917814" timestamp="5423391" timestamp2="5423391">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="1595" _type="Delete" date="Sun Dec 03 15:12:24 EST 2023" docASTNodeCount="116" docActiveCodeLength="682" docExpressionCount="77" docLength="723" endLine="12" length="8" offset="367" startLine="12" starttimestamp="1701628917814" timestamp="5426947">
    <text><![CDATA[ == null]]></text>
  </DocumentChange>
  <Command __id="1596" _type="UndoCommand" date="Sun Dec 03 15:12:24 EST 2023" starttimestamp="1701628917814" timestamp="5426954" />
  <Command __id="1597" _type="MoveCaretCommand" caretOffset="254" date="Sun Dec 03 15:12:25 EST 2023" docOffset="335" starttimestamp="1701628917814" timestamp="5427786" />
  <Command __id="1598" _type="MoveCaretCommand" caretOffset="254" date="Sun Dec 03 15:12:25 EST 2023" docOffset="335" starttimestamp="1701628917814" timestamp="5427786" />
  <DocumentChange __id="1599" _type="Insert" date="Sun Dec 03 15:12:26 EST 2023" docASTNodeCount="119" docActiveCodeLength="692" docExpressionCount="79" docLength="733" length="10" offset="335" repeat="7" starttimestamp="1701628917814" timestamp="5428679" timestamp2="5429889">
    <text><![CDATA[
		print()]]></text>
  </DocumentChange>
  <Command __id="1600" _type="InsertStringCommand" date="Sun Dec 03 15:12:26 EST 2023" starttimestamp="1701628917814" timestamp="5428683" timestamp2="5428683">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1601" _type="InsertStringCommand" date="Sun Dec 03 15:12:26 EST 2023" starttimestamp="1701628917814" timestamp="5428683" timestamp2="5428683">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1603" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429395" timestamp2="5429395">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1604" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429395" timestamp2="5429395">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1606" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429492" timestamp2="5429492">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1607" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429492" timestamp2="5429492">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1609" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429600" timestamp2="5429600">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1610" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429600" timestamp2="5429600">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1612" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429666" timestamp2="5429666">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1613" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429666" timestamp2="5429666">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1615" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429704" timestamp2="5429704">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1616" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429704" timestamp2="5429704">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1618" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429895" timestamp2="5429895">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1619" _type="InsertStringCommand" date="Sun Dec 03 15:12:27 EST 2023" starttimestamp="1701628917814" timestamp="5429895" timestamp2="5429895">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="1620" _type="Delete" date="Sun Dec 03 15:12:28 EST 2023" docASTNodeCount="116" docActiveCodeLength="685" docExpressionCount="77" docLength="726" endLine="12" length="7" offset="338" repeat="7" startLine="12" starttimestamp="1701628917814" timestamp="5430249" timestamp2="5430843">
    <text><![CDATA[print()]]></text>
  </DocumentChange>
  <Command __id="1622" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430257" />
  <Command __id="1623" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430257" />
  <Command __id="1625" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430315" />
  <Command __id="1626" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430315" />
  <Command __id="1628" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430435" />
  <Command __id="1629" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430435" />
  <Command __id="1631" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430579" />
  <Command __id="1632" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430579" />
  <Command __id="1634" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430714" />
  <Command __id="1635" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430714" />
  <Command __id="1637" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430846" />
  <Command __id="1638" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5430846" />
  <DocumentChange __id="1639" _type="Insert" date="Sun Dec 03 15:12:28 EST 2023" docASTNodeCount="120" docActiveCodeLength="695" docExpressionCount="80" docLength="736" length="10" offset="338" repeat="10" starttimestamp="1701628917814" timestamp="5431057" timestamp2="5432234">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="1640" _type="InsertStringCommand" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5431060" timestamp2="5431060">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1641" _type="InsertStringCommand" date="Sun Dec 03 15:12:28 EST 2023" starttimestamp="1701628917814" timestamp="5431060" timestamp2="5431060">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1643" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431281" timestamp2="5431281">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1644" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431281" timestamp2="5431281">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1646" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431369" timestamp2="5431369">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1647" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431369" timestamp2="5431369">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1649" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431478" timestamp2="5431478">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1650" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431479" timestamp2="5431479">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1652" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431567" timestamp2="5431567">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1653" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431568" timestamp2="5431568">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1655" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431673" timestamp2="5431673">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1656" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431673" timestamp2="5431673">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1658" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431822" timestamp2="5431822">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1659" _type="InsertStringCommand" date="Sun Dec 03 15:12:29 EST 2023" starttimestamp="1701628917814" timestamp="5431822" timestamp2="5431822">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1660" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:12:29 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5431829" />
  <Command __id="1664" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:12:30 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5432340" />
  <DocumentChange __id="1665" _type="Replace" date="Sun Dec 03 15:12:30 EST 2023" docASTNodeCount="120" docActiveCodeLength="696" docExpressionCount="81" docLength="737" endLine="12" insertionLength="4" int_docASTNodeCount="118" int_docActiveCodeLength="692" int_docExpressionCount="79" int_docLength="733" length="3" offset="345" startLine="12" starttimestamp="1701628917814" timestamp="5432342">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="1666" _type="InsertStringCommand" date="Sun Dec 03 15:12:30 EST 2023" starttimestamp="1701628917814" timestamp="5432345" timestamp2="5432345">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1667" _type="InsertStringCommand" date="Sun Dec 03 15:12:30 EST 2023" starttimestamp="1701628917814" timestamp="5432345" timestamp2="5432345">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1668" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:12:30 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5432351" />
  <DocumentChange __id="1669" _type="Insert" date="Sun Dec 03 15:12:30 EST 2023" docASTNodeCount="122" docActiveCodeLength="697" docExpressionCount="82" docLength="738" length="1" offset="349" starttimestamp="1701628917814" timestamp="5432504">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="1670" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:12:30 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5432858" />
  <DocumentChange __id="1671" _type="Replace" date="Sun Dec 03 15:12:30 EST 2023" docASTNodeCount="123" docActiveCodeLength="709" docExpressionCount="83" docLength="750" endLine="12" insertionLength="13" int_docASTNodeCount="120" int_docActiveCodeLength="696" int_docExpressionCount="81" int_docLength="737" length="1" offset="349" startLine="12" starttimestamp="1701628917814" timestamp="5432861">
    <deletedText><![CDATA[p]]></deletedText>
    <insertedText><![CDATA[print(false);]]></insertedText>
  </DocumentChange>
  <Command __id="1672" _type="InsertStringCommand" date="Sun Dec 03 15:12:30 EST 2023" starttimestamp="1701628917814" timestamp="5432887" timestamp2="5432887">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1673" _type="InsertStringCommand" date="Sun Dec 03 15:12:30 EST 2023" starttimestamp="1701628917814" timestamp="5432888" timestamp2="5432888">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1674" _type="Replace" date="Sun Dec 03 15:12:32 EST 2023" docASTNodeCount="123" docActiveCodeLength="705" docExpressionCount="83" docLength="746" endLine="12" insertionLength="1" int_docASTNodeCount="122" int_docActiveCodeLength="704" int_docExpressionCount="82" int_docLength="745" length="5" offset="355" startLine="12" starttimestamp="1701628917814" timestamp="5434254">
    <deletedText><![CDATA[false]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="1675" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5434261" timestamp2="5434261">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1676" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5434262" timestamp2="5434262">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="1677" _type="Insert" date="Sun Dec 03 15:12:32 EST 2023" docASTNodeCount="123" docActiveCodeLength="706" docExpressionCount="83" docLength="747" length="1" offset="356" starttimestamp="1701628917814" timestamp="5434432">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="1678" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5434433" timestamp2="5434433">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1679" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5434433" timestamp2="5434433">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="1680" _type="Delete" date="Sun Dec 03 15:12:32 EST 2023" docASTNodeCount="123" docActiveCodeLength="705" docExpressionCount="83" docLength="746" endLine="12" length="1" offset="356" startLine="12" starttimestamp="1701628917814" timestamp="5434879">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="1681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5434881" />
  <Command __id="1682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5434882" />
  <DocumentChange __id="1683" _type="Insert" date="Sun Dec 03 15:12:32 EST 2023" docASTNodeCount="125" docActiveCodeLength="713" docExpressionCount="85" docLength="754" length="8" offset="356" repeat="8" starttimestamp="1701628917814" timestamp="5435002" timestamp2="5435868">
    <text><![CDATA[xpr.eval]]></text>
  </DocumentChange>
  <Command __id="1684" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5435003" timestamp2="5435003">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1685" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5435003" timestamp2="5435003">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1687" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5435138" timestamp2="5435138">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1688" _type="InsertStringCommand" date="Sun Dec 03 15:12:32 EST 2023" starttimestamp="1701628917814" timestamp="5435138" timestamp2="5435138">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1690" _type="InsertStringCommand" date="Sun Dec 03 15:12:33 EST 2023" starttimestamp="1701628917814" timestamp="5435258" timestamp2="5435258">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1691" _type="InsertStringCommand" date="Sun Dec 03 15:12:33 EST 2023" starttimestamp="1701628917814" timestamp="5435258" timestamp2="5435258">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1693" _type="InsertStringCommand" date="Sun Dec 03 15:12:33 EST 2023" starttimestamp="1701628917814" timestamp="5435365" timestamp2="5435365">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1694" _type="InsertStringCommand" date="Sun Dec 03 15:12:33 EST 2023" starttimestamp="1701628917814" timestamp="5435365" timestamp2="5435365">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1695" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:12:33 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5435370" />
  <Command __id="1700" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:12:34 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5436226" />
  <Command __id="1702" _type="InsertStringCommand" date="Sun Dec 03 15:12:34 EST 2023" starttimestamp="1701628917814" timestamp="5436235" timestamp2="5436235">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1703" _type="InsertStringCommand" date="Sun Dec 03 15:12:34 EST 2023" starttimestamp="1701628917814" timestamp="5436235" timestamp2="5436235">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1716" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:12:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5440529" type="Run" />
  <Command __id="1717" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:12:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5440529" type="Run" />
  <Command __id="1718" _type="ShellCommand" date="Sun Dec 03 15:12:38 EST 2023" starttimestamp="1701628917814" timestamp="5440836" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1701" _type="Replace" date="Sun Dec 03 15:12:34 EST 2023" docASTNodeCount="126" docActiveCodeLength="726" docExpressionCount="86" docLength="767" endLine="12" insertionLength="17" int_docASTNodeCount="125" int_docActiveCodeLength="709" int_docExpressionCount="84" int_docLength="750" length="4" offset="360" startLine="12" starttimestamp="1701628917814" timestamp="5436227">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="1731" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:13:14 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5476863" type="Debug" />
  <Command __id="1732" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:13:14 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5476863" type="Run" />
  <Command __id="1733" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:13:14 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5476863" type="Debug" />
  <Command __id="1734" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:13:14 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5476863" type="Run" />
  <Command __id="1735" _type="ShellCommand" date="Sun Dec 03 15:13:14 EST 2023" starttimestamp="1701628917814" timestamp="5476867" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1737" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:13:16 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="5478347" />
  <Command __id="1738" _type="LocalChecksRawCommand" date="Sun Dec 03 15:13:16 EST 2023" starttimestamp="1701628917814" timestamp="5478348">
    <CSVRow><![CDATA[33,Sun Dec 03 15:12:42 EST 2023,17,0,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,13,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1739" _type="LocalChecksRawCommand" date="Sun Dec 03 15:13:16 EST 2023" starttimestamp="1701628917814" timestamp="5478348">
    <CSVRow><![CDATA[33,Sun Dec 03 15:12:42 EST 2023,17,0,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,13,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1736" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:13:16 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5478300">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1740" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 15:13:17 EST 2023" starttimestamp="1701628917814" timestamp="5479932" />
  <Command __id="1741" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:13:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5480121" type="Run" />
  <Command __id="1742" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:13:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5480121" type="Run" />
  <Command __id="1744" _type="MoveCaretCommand" caretOffset="212" date="Sun Dec 03 15:13:21 EST 2023" docOffset="293" starttimestamp="1701628917814" timestamp="5483832" />
  <Command __id="1745" _type="PasteCommand" date="Sun Dec 03 15:13:37 EST 2023" starttimestamp="1701628917814" timestamp="5499470" />
  <Command __id="1746" _type="ShellCommand" date="Sun Dec 03 15:13:39 EST 2023" starttimestamp="1701628917814" timestamp="5501871" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1747" _type="ShellCommand" date="Sun Dec 03 15:13:42 EST 2023" starttimestamp="1701628917814" timestamp="5504482" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1748" _type="PasteCommand" date="Sun Dec 03 15:13:43 EST 2023" starttimestamp="1701628917814" timestamp="5505681" />
  <Command __id="1749" _type="ConsoleInput" date="Sun Dec 03 15:13:44 EST 2023" starttimestamp="1701628917814" timestamp="5506895" type="Exception">
    <outputString><![CDATA[(and (/= 3 4) (> 3 2))
]]></outputString>
  </Command>
  <Command __id="1750" _type="ExceptionCommand" date="Sun Dec 03 15:13:44 EST 2023" starttimestamp="1701628917814" timestamp="5506936" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.eval(AndEvaluator.java:13)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1751" _type="ConsoleOutput" date="Sun Dec 03 15:13:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5506939" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:11)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string "), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1752" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:13:44 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5506940" type="Debug" />
  <Command __id="1753" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:13:44 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5506940" type="Run" />
  <Command __id="1754" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:13:44 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5506940" type="Debug" />
  <Command __id="1755" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:13:44 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5506940" type="Run" />
  <Command __id="1756" _type="MoveCaretCommand" caretOffset="313" date="Sun Dec 03 15:14:49 EST 2023" docOffset="394" starttimestamp="1701628917814" timestamp="5571253" />
  <Command __id="1757" _type="MoveCaretCommand" caretOffset="313" date="Sun Dec 03 15:14:49 EST 2023" docOffset="394" starttimestamp="1701628917814" timestamp="5571253" />
  <Command __id="1758" _type="MoveCaretCommand" caretOffset="298" date="Sun Dec 03 15:14:50 EST 2023" docOffset="379" starttimestamp="1701628917814" timestamp="5572323" />
  <Command __id="1759" _type="MoveCaretCommand" caretOffset="298" date="Sun Dec 03 15:14:50 EST 2023" docOffset="379" starttimestamp="1701628917814" timestamp="5572323" />
  <Command __id="1761" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sun Dec 03 15:14:51 EST 2023" starttimestamp="1701628917814" timestamp="5573206" />
  <Command __id="1762" _type="MoveCaretCommand" caretOffset="315" date="Sun Dec 03 15:14:52 EST 2023" docOffset="396" starttimestamp="1701628917814" timestamp="5574557" />
  <Command __id="1763" _type="MoveCaretCommand" caretOffset="315" date="Sun Dec 03 15:14:52 EST 2023" docOffset="396" starttimestamp="1701628917814" timestamp="5574557" />
  <Command __id="1765" _type="InsertStringCommand" date="Sun Dec 03 15:14:52 EST 2023" starttimestamp="1701628917814" timestamp="5574972" timestamp2="5574972">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1766" _type="InsertStringCommand" date="Sun Dec 03 15:14:52 EST 2023" starttimestamp="1701628917814" timestamp="5574972" timestamp2="5574972">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1768" _type="InsertStringCommand" date="Sun Dec 03 15:14:52 EST 2023" starttimestamp="1701628917814" timestamp="5575118" timestamp2="5575118">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1769" _type="InsertStringCommand" date="Sun Dec 03 15:14:52 EST 2023" starttimestamp="1701628917814" timestamp="5575118" timestamp2="5575118">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1771" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5575471" timestamp2="5575471">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1772" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5575471" timestamp2="5575471">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1774" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5575857" timestamp2="5575857">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1775" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5575857" timestamp2="5575857">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1777" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5575952" timestamp2="5575952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1778" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5575952" timestamp2="5575952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1780" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5576063" timestamp2="5576063">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1781" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5576063" timestamp2="5576063">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1783" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5576172" timestamp2="5576172">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1784" _type="InsertStringCommand" date="Sun Dec 03 15:14:53 EST 2023" starttimestamp="1701628917814" timestamp="5576172" timestamp2="5576172">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1786" _type="InsertStringCommand" date="Sun Dec 03 15:14:54 EST 2023" starttimestamp="1701628917814" timestamp="5576409" timestamp2="5576409">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1787" _type="InsertStringCommand" date="Sun Dec 03 15:14:54 EST 2023" starttimestamp="1701628917814" timestamp="5576409" timestamp2="5576409">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1789" _type="InsertStringCommand" date="Sun Dec 03 15:14:54 EST 2023" starttimestamp="1701628917814" timestamp="5576490" timestamp2="5576490">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1790" _type="InsertStringCommand" date="Sun Dec 03 15:14:54 EST 2023" starttimestamp="1701628917814" timestamp="5576490" timestamp2="5576490">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1792" _type="InsertStringCommand" date="Sun Dec 03 15:14:55 EST 2023" starttimestamp="1701628917814" timestamp="5577343" timestamp2="5577343">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1793" _type="InsertStringCommand" date="Sun Dec 03 15:14:55 EST 2023" starttimestamp="1701628917814" timestamp="5577343" timestamp2="5577343">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1794" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:14:55 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5577353" />
  <Command __id="1795" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:14:56 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5578340" />
  <Command __id="1796" _type="MoveCaretCommand" caretOffset="185" date="Sun Dec 03 15:14:56 EST 2023" docOffset="266" starttimestamp="1701628917814" timestamp="5578425" />
  <Command __id="1797" _type="MoveCaretCommand" caretOffset="185" date="Sun Dec 03 15:14:56 EST 2023" docOffset="266" starttimestamp="1701628917814" timestamp="5578426" />
  <Command __id="1801" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:15:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5582214" type="Run" />
  <Command __id="1802" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:15:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5582214" type="Run" />
  <Command __id="1803" _type="PasteCommand" date="Sun Dec 03 15:15:03 EST 2023" starttimestamp="1701628917814" timestamp="5585289" />
  <Command __id="1804" _type="PasteCommand" date="Sun Dec 03 15:15:04 EST 2023" starttimestamp="1701628917814" timestamp="5586655" />
  <Command __id="1805" _type="ConsoleInput" date="Sun Dec 03 15:15:05 EST 2023" starttimestamp="1701628917814" timestamp="5587192" type="Exception">
    <outputString><![CDATA[(and (> 3 2) (> 3 2))
]]></outputString>
  </Command>
  <Command __id="1806" _type="ConsoleOutput" date="Sun Dec 03 15:15:05 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5587238" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1807" _type="SelectTextCommand" caretOffset="255" date="Sun Dec 03 15:15:25 EST 2023" end="343" start="255" starttimestamp="1701628917814" timestamp="5607915" />
  <Command __id="1808" _type="SelectTextCommand" caretOffset="255" date="Sun Dec 03 15:15:25 EST 2023" end="343" start="255" starttimestamp="1701628917814" timestamp="5607916" />
  <Command __id="1810" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:26 EST 2023" starttimestamp="1701628917814" timestamp="5608670" />
  <Command __id="1811" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:26 EST 2023" starttimestamp="1701628917814" timestamp="5608671" />
  <Command __id="1813" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:26 EST 2023" starttimestamp="1701628917814" timestamp="5608994" />
  <Command __id="1814" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:26 EST 2023" starttimestamp="1701628917814" timestamp="5608994" />
  <Command __id="1816" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sun Dec 03 15:15:27 EST 2023" starttimestamp="1701628917814" timestamp="5609895" />
  <Command __id="1743" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:13:21 EST 2023" docASTNodeCount="126" docActiveCodeLength="726" docExpressionCount="86" docLength="767" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5483801">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();//		return evalHelper(expr, environment);		"), Diff(DELETE,"return expr"), Diff(INSERT,"System.out.print(expr.eval(environment));		return expr.eval(environment)"), Diff(EQUAL,";	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {						return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
//		return evalHelper(expr, environment);
		System.out.print(expr.eval(environment));
		return expr.eval(environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="1760" _type="Insert" date="Sun Dec 03 15:14:51 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="769" length="2" offset="336" starttimestamp="1701628917814" timestamp="5573188">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1764" _type="Insert" date="Sun Dec 03 15:14:52 EST 2023" docASTNodeCount="118" docActiveCodeLength="693" docExpressionCount="79" docLength="779" length="10" offset="396" repeat="10" starttimestamp="1701628917814" timestamp="5574969" timestamp2="5577341">
    <text><![CDATA[getHead().]]></text>
  </DocumentChange>
  <DocumentChange __id="1809" _type="Delete" date="Sun Dec 03 15:15:26 EST 2023" docASTNodeCount="111" docActiveCodeLength="649" docExpressionCount="73" docLength="690" endLine="13" length="89" offset="335" repeat="2" startLine="11" starttimestamp="1701628917814" timestamp="5608660" timestamp2="5608990">
    <text><![CDATA[
//		System.out.print(expr.eval(environment));
		return expr.getHead().eval(environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="1815" _type="Delete" date="Sun Dec 03 15:15:27 EST 2023" docASTNodeCount="116" docActiveCodeLength="688" docExpressionCount="77" docLength="688" endLine="11" length="2" offset="294" startLine="11" starttimestamp="1701628917814" timestamp="5609873">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1817" _type="MoveCaretCommand" caretOffset="544" date="Sun Dec 03 15:15:29 EST 2023" docOffset="625" starttimestamp="1701628917814" timestamp="5611805" />
  <Command __id="1818" _type="MoveCaretCommand" caretOffset="544" date="Sun Dec 03 15:15:29 EST 2023" docOffset="625" starttimestamp="1701628917814" timestamp="5611806" />
  <Command __id="1820" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:31 EST 2023" starttimestamp="1701628917814" timestamp="5614126" />
  <Command __id="1821" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:31 EST 2023" starttimestamp="1701628917814" timestamp="5614126" />
  <Command __id="1823" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:32 EST 2023" starttimestamp="1701628917814" timestamp="5614219" />
  <Command __id="1824" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:32 EST 2023" starttimestamp="1701628917814" timestamp="5614219" />
  <Command __id="1826" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:32 EST 2023" starttimestamp="1701628917814" timestamp="5614356" />
  <Command __id="1827" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:32 EST 2023" starttimestamp="1701628917814" timestamp="5614356" />
  <Command __id="1829" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:32 EST 2023" starttimestamp="1701628917814" timestamp="5614635" />
  <Command __id="1830" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:15:32 EST 2023" starttimestamp="1701628917814" timestamp="5614635" />
  <DocumentChange __id="1819" _type="Delete" date="Sun Dec 03 15:15:31 EST 2023" docASTNodeCount="116" docActiveCodeLength="684" docExpressionCount="77" docLength="684" endLine="25" length="4" offset="621" repeat="4" startLine="24" starttimestamp="1701628917814" timestamp="5614123" timestamp2="5614630">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="1831" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:15:34 EST 2023" starttimestamp="1701628917814" timestamp="5617119" />
  <Command __id="1832" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:15:35 EST 2023" starttimestamp="1701628917814" timestamp="5617216" />
  <Command __id="1833" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:15:35 EST 2023" starttimestamp="1701628917814" timestamp="5617222" />
  <DocumentChange __id="1834" _type="Insert" date="Sun Dec 03 15:16:13 EST 2023" docASTNodeCount="117" docActiveCodeLength="693" docExpressionCount="78" docLength="693" length="9" offset="621" repeat="6" starttimestamp="1701628917814" timestamp="5655881" timestamp2="5656626">
    <text><![CDATA[
			expr.]]></text>
  </DocumentChange>
  <Command __id="1835" _type="InsertStringCommand" date="Sun Dec 03 15:16:13 EST 2023" starttimestamp="1701628917814" timestamp="5655884" timestamp2="5655884">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1836" _type="InsertStringCommand" date="Sun Dec 03 15:16:13 EST 2023" starttimestamp="1701628917814" timestamp="5655884" timestamp2="5655884">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1838" _type="InsertStringCommand" date="Sun Dec 03 15:16:13 EST 2023" starttimestamp="1701628917814" timestamp="5656122" timestamp2="5656122">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1839" _type="InsertStringCommand" date="Sun Dec 03 15:16:13 EST 2023" starttimestamp="1701628917814" timestamp="5656122" timestamp2="5656122">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1841" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656297" timestamp2="5656297">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1842" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656297" timestamp2="5656297">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1844" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656399" timestamp2="5656399">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1845" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656399" timestamp2="5656399">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1847" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656505" timestamp2="5656505">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1848" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656505" timestamp2="5656505">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1850" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656628" timestamp2="5656628">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1851" _type="InsertStringCommand" date="Sun Dec 03 15:16:14 EST 2023" starttimestamp="1701628917814" timestamp="5656628" timestamp2="5656628">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1852" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:16:14 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5656634" />
  <DocumentChange __id="1853" _type="Insert" date="Sun Dec 03 15:17:45 EST 2023" docASTNodeCount="120" docActiveCodeLength="697" docExpressionCount="80" docLength="697" length="4" offset="630" repeat="4" starttimestamp="1701628917814" timestamp="5747592" timestamp2="5748026">
    <text><![CDATA[getT]]></text>
  </DocumentChange>
  <Command __id="1857" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:17:46 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5748871" />
  <DocumentChange __id="1858" _type="Replace" date="Sun Dec 03 15:17:46 EST 2023" docASTNodeCount="120" docActiveCodeLength="702" docExpressionCount="80" docLength="702" endLine="25" insertionLength="9" int_docASTNodeCount="117" int_docActiveCodeLength="693" int_docExpressionCount="78" int_docLength="693" length="4" offset="630" startLine="25" starttimestamp="1701628917814" timestamp="5748875">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="1859" _type="InsertStringCommand" date="Sun Dec 03 15:17:46 EST 2023" starttimestamp="1701628917814" timestamp="5748880" timestamp2="5748880">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1860" _type="InsertStringCommand" date="Sun Dec 03 15:17:46 EST 2023" starttimestamp="1701628917814" timestamp="5748880" timestamp2="5748880">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1861" _type="Insert" date="Sun Dec 03 15:17:46 EST 2023" docASTNodeCount="124" docActiveCodeLength="706" docExpressionCount="84" docLength="706" length="4" offset="639" repeat="4" starttimestamp="1701628917814" timestamp="5749180" timestamp2="5750095">
    <text><![CDATA[.toS]]></text>
  </DocumentChange>
  <Command __id="1862" _type="InsertStringCommand" date="Sun Dec 03 15:17:46 EST 2023" starttimestamp="1701628917814" timestamp="5749183" timestamp2="5749183">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1863" _type="InsertStringCommand" date="Sun Dec 03 15:17:46 EST 2023" starttimestamp="1701628917814" timestamp="5749183" timestamp2="5749183">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1864" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:17:47 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5749190" />
  <Command __id="1868" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:17:48 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5750380" />
  <DocumentChange __id="1869" _type="Replace" date="Sun Dec 03 15:17:48 EST 2023" docASTNodeCount="122" docActiveCodeLength="713" docExpressionCount="82" docLength="713" endLine="25" insertionLength="10" int_docASTNodeCount="119" int_docActiveCodeLength="703" int_docExpressionCount="80" int_docLength="703" length="3" offset="640" startLine="25" starttimestamp="1701628917814" timestamp="5750382">
    <deletedText><![CDATA[toS]]></deletedText>
    <insertedText><![CDATA[toString()]]></insertedText>
  </DocumentChange>
  <Command __id="1870" _type="InsertStringCommand" date="Sun Dec 03 15:17:48 EST 2023" starttimestamp="1701628917814" timestamp="5750387" timestamp2="5750387">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1871" _type="InsertStringCommand" date="Sun Dec 03 15:17:48 EST 2023" starttimestamp="1701628917814" timestamp="5750387" timestamp2="5750387">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1873" _type="InsertStringCommand" date="Sun Dec 03 15:17:49 EST 2023" starttimestamp="1701628917814" timestamp="5751734" timestamp2="5751734">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1874" _type="InsertStringCommand" date="Sun Dec 03 15:17:49 EST 2023" starttimestamp="1701628917814" timestamp="5751735" timestamp2="5751735">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="1872" _type="Insert" date="Sun Dec 03 15:17:49 EST 2023" docASTNodeCount="122" docActiveCodeLength="714" docExpressionCount="82" docLength="714" length="1" offset="650" starttimestamp="1701628917814" timestamp="5751731">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="1875" _type="MoveCaretCommand" caretOffset="544" date="Sun Dec 03 15:17:51 EST 2023" docOffset="625" starttimestamp="1701628917814" timestamp="5753487" />
  <Command __id="1876" _type="MoveCaretCommand" caretOffset="544" date="Sun Dec 03 15:17:51 EST 2023" docOffset="625" starttimestamp="1701628917814" timestamp="5753487" />
  <DocumentChange __id="1877" _type="Insert" date="Sun Dec 03 15:17:53 EST 2023" docASTNodeCount="124" docActiveCodeLength="724" docExpressionCount="84" docLength="724" length="10" offset="625" repeat="10" starttimestamp="1701628917814" timestamp="5755358" timestamp2="5756476">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="1878" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755360" timestamp2="5755360">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1879" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755360" timestamp2="5755360">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1881" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755553" timestamp2="5755553">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1882" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755553" timestamp2="5755553">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1884" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755646" timestamp2="5755646">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1885" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755646" timestamp2="5755646">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1887" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755765" timestamp2="5755765">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1888" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755765" timestamp2="5755765">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1890" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755835" timestamp2="5755835">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1891" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755835" timestamp2="5755835">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1893" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755944" timestamp2="5755944">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1894" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5755944" timestamp2="5755944">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1896" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5756097" timestamp2="5756097">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1897" _type="InsertStringCommand" date="Sun Dec 03 15:17:53 EST 2023" starttimestamp="1701628917814" timestamp="5756097" timestamp2="5756097">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1898" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:17:53 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5756104" />
  <Command __id="1902" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:17:54 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5756582" />
  <DocumentChange __id="1903" _type="Replace" date="Sun Dec 03 15:17:54 EST 2023" docASTNodeCount="124" docActiveCodeLength="721" docExpressionCount="84" docLength="721" endLine="25" insertionLength="4" int_docASTNodeCount="122" int_docActiveCodeLength="717" int_docExpressionCount="82" int_docLength="717" length="7" offset="632" startLine="25" starttimestamp="1701628917814" timestamp="5756584">
    <deletedText><![CDATA[outexpr]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="1904" _type="InsertStringCommand" date="Sun Dec 03 15:17:54 EST 2023" starttimestamp="1701628917814" timestamp="5756587" timestamp2="5756587">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1905" _type="InsertStringCommand" date="Sun Dec 03 15:17:54 EST 2023" starttimestamp="1701628917814" timestamp="5756587" timestamp2="5756587">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1906" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:17:54 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="5756600" />
  <DocumentChange __id="1907" _type="Insert" date="Sun Dec 03 15:17:54 EST 2023" docASTNodeCount="126" docActiveCodeLength="730" docExpressionCount="86" docLength="730" length="9" offset="636" repeat="8" starttimestamp="1701628917814" timestamp="5756732" timestamp2="5758045">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <Command __id="1915" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:17:57 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="5759981" />
  <Command __id="1916" _type="SelectTextCommand" caretOffset="586" date="Sun Dec 03 15:17:58 EST 2023" end="586" start="564" starttimestamp="1701628917814" timestamp="5760945" />
  <Command __id="1917" _type="SelectTextCommand" caretOffset="586" date="Sun Dec 03 15:17:58 EST 2023" end="586" start="564" starttimestamp="1701628917814" timestamp="5760945" />
  <DocumentChange __id="1918" _type="Delete" date="Sun Dec 03 15:17:58 EST 2023" docASTNodeCount="122" docActiveCodeLength="708" docExpressionCount="82" docLength="708" endLine="25" length="22" offset="645" startLine="25" starttimestamp="1701628917814" timestamp="5761064">
    <text><![CDATA[.getTail().toString();]]></text>
  </DocumentChange>
  <Command __id="1919" _type="CutCommand" date="Sun Dec 03 15:17:58 EST 2023" starttimestamp="1701628917814" timestamp="5761067" />
  <Command __id="1920" _type="MoveCaretCommand" caretOffset="563" date="Sun Dec 03 15:17:59 EST 2023" docOffset="644" starttimestamp="1701628917814" timestamp="5761664" />
  <Command __id="1921" _type="MoveCaretCommand" caretOffset="563" date="Sun Dec 03 15:17:59 EST 2023" docOffset="644" starttimestamp="1701628917814" timestamp="5761664" />
  <DocumentChange __id="1922" _type="Insert" date="Sun Dec 03 15:17:59 EST 2023" docASTNodeCount="126" docActiveCodeLength="730" docExpressionCount="86" docLength="730" length="22" offset="644" starttimestamp="1701628917814" timestamp="5761959">
    <text><![CDATA[.getTail().toString();]]></text>
  </DocumentChange>
  <Command __id="1923" _type="PasteCommand" date="Sun Dec 03 15:17:59 EST 2023" starttimestamp="1701628917814" timestamp="5761964" />
  <DocumentChange __id="1924" _type="Delete" date="Sun Dec 03 15:18:01 EST 2023" docASTNodeCount="126" docActiveCodeLength="729" docExpressionCount="86" docLength="729" endLine="25" length="1" offset="665" startLine="25" starttimestamp="1701628917814" timestamp="5763280">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="1925" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:18:01 EST 2023" starttimestamp="1701628917814" timestamp="5763283" />
  <Command __id="1926" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:18:01 EST 2023" starttimestamp="1701628917814" timestamp="5763283" />
  <Command __id="1927" _type="MoveCaretCommand" caretOffset="585" date="Sun Dec 03 15:18:01 EST 2023" docOffset="666" starttimestamp="1701628917814" timestamp="5764009" />
  <Command __id="1928" _type="MoveCaretCommand" caretOffset="585" date="Sun Dec 03 15:18:01 EST 2023" docOffset="666" starttimestamp="1701628917814" timestamp="5764009" />
  <DocumentChange __id="1929" _type="Insert" date="Sun Dec 03 15:18:02 EST 2023" docASTNodeCount="126" docActiveCodeLength="730" docExpressionCount="86" docLength="730" length="1" offset="666" starttimestamp="1701628917814" timestamp="5764550">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="1930" _type="InsertStringCommand" date="Sun Dec 03 15:18:02 EST 2023" starttimestamp="1701628917814" timestamp="5764553" timestamp2="5764553">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1931" _type="InsertStringCommand" date="Sun Dec 03 15:18:02 EST 2023" starttimestamp="1701628917814" timestamp="5764553" timestamp2="5764553">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="1932" _type="Delete" date="Sun Dec 03 15:18:03 EST 2023" docASTNodeCount="126" docActiveCodeLength="729" docExpressionCount="86" docLength="729" endLine="25" length="1" offset="666" startLine="25" starttimestamp="1701628917814" timestamp="5765440">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="1933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:18:03 EST 2023" starttimestamp="1701628917814" timestamp="5765443" />
  <Command __id="1934" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:18:03 EST 2023" starttimestamp="1701628917814" timestamp="5765443" />
  <Command __id="1936" _type="InsertStringCommand" date="Sun Dec 03 15:18:03 EST 2023" starttimestamp="1701628917814" timestamp="5765540" timestamp2="5765540">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1937" _type="InsertStringCommand" date="Sun Dec 03 15:18:03 EST 2023" starttimestamp="1701628917814" timestamp="5765540" timestamp2="5765540">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1938" _type="MoveCaretCommand" caretOffset="563" date="Sun Dec 03 15:18:04 EST 2023" docOffset="644" starttimestamp="1701628917814" timestamp="5766560" />
  <Command __id="1939" _type="MoveCaretCommand" caretOffset="563" date="Sun Dec 03 15:18:04 EST 2023" docOffset="644" starttimestamp="1701628917814" timestamp="5766560" />
  <Command __id="1941" _type="InsertStringCommand" date="Sun Dec 03 15:18:04 EST 2023" starttimestamp="1701628917814" timestamp="5766809" timestamp2="5766809">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1942" _type="InsertStringCommand" date="Sun Dec 03 15:18:04 EST 2023" starttimestamp="1701628917814" timestamp="5766809" timestamp2="5766809">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1944" _type="InsertStringCommand" date="Sun Dec 03 15:18:04 EST 2023" starttimestamp="1701628917814" timestamp="5767004" timestamp2="5767004">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1945" _type="InsertStringCommand" date="Sun Dec 03 15:18:04 EST 2023" starttimestamp="1701628917814" timestamp="5767004" timestamp2="5767004">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1947" _type="InsertStringCommand" date="Sun Dec 03 15:18:04 EST 2023" starttimestamp="1701628917814" timestamp="5767182" timestamp2="5767182">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1948" _type="InsertStringCommand" date="Sun Dec 03 15:18:04 EST 2023" starttimestamp="1701628917814" timestamp="5767182" timestamp2="5767182">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1950" _type="InsertStringCommand" date="Sun Dec 03 15:18:05 EST 2023" starttimestamp="1701628917814" timestamp="5767278" timestamp2="5767278">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1951" _type="InsertStringCommand" date="Sun Dec 03 15:18:05 EST 2023" starttimestamp="1701628917814" timestamp="5767278" timestamp2="5767278">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1952" _type="MoveCaretCommand" caretOffset="411" date="Sun Dec 03 15:18:05 EST 2023" docOffset="492" starttimestamp="1701628917814" timestamp="5767884" />
  <Command __id="1953" _type="MoveCaretCommand" caretOffset="411" date="Sun Dec 03 15:18:05 EST 2023" docOffset="492" starttimestamp="1701628917814" timestamp="5767884" />
  <DocumentChange __id="1935" _type="Insert" date="Sun Dec 03 15:18:03 EST 2023" docASTNodeCount="126" docActiveCodeLength="730" docExpressionCount="86" docLength="730" length="1" offset="666" starttimestamp="1701628917814" timestamp="5765537">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="1940" _type="Insert" date="Sun Dec 03 15:18:04 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" length="4" offset="644" repeat="4" starttimestamp="1701628917814" timestamp="5766806" timestamp2="5767277">
    <text><![CDATA[expr]]></text>
  </DocumentChange>
  <Command __id="1973" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:18:11 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5773996" type="Debug" />
  <Command __id="1974" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:18:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5773997" type="Run" />
  <Command __id="1975" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:18:11 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5773997" type="Debug" />
  <Command __id="1976" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:18:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5773997" type="Run" />
  <Command __id="1978" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 15:18:12 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="5775039" />
  <Command __id="1979" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 15:18:14 EST 2023" starttimestamp="1701628917814" timestamp="5776657" />
  <Command __id="1980" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:18:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5776792" type="Run" />
  <Command __id="1981" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:18:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5776792" type="Run" />
  <Command __id="1982" _type="ShellCommand" date="Sun Dec 03 15:18:14 EST 2023" starttimestamp="1701628917814" timestamp="5777102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1983" _type="ShellCommand" date="Sun Dec 03 15:18:16 EST 2023" starttimestamp="1701628917814" timestamp="5778957" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1985" _type="MoveCaretCommand" caretOffset="590" date="Sun Dec 03 15:18:16 EST 2023" docOffset="671" starttimestamp="1701628917814" timestamp="5779046" />
  <Command __id="1986" _type="ShellCommand" date="Sun Dec 03 15:18:18 EST 2023" starttimestamp="1701628917814" timestamp="5780398" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1987" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785894" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(INSERT,"est execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1988" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785896" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1989" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785900" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1990" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785900" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1991" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785902" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1992" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785930" type="ConsoleOutput">
    <outputString><![CDATA[(2)
NIL
(4)
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(2)¶NIL¶(4)¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1993" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785933" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):38
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2)¶NIL¶(4)¶NIL"), Diff(INSERT,"Test execution time (ms):38"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1994" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785934" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):38"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1995" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785934" type="ConsoleOutput">
    <outputString><![CDATA[(2)
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"(2)¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1996" _type="ConsoleOutput" date="Sun Dec 03 15:18:23 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5785936" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40
Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(2)¶"), Diff(INSERT,"Test execution time (ms):40¶Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string "), Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="1997" _type="ShellCommand" date="Sun Dec 03 15:18:25 EST 2023" starttimestamp="1701628917814" timestamp="5787578" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1998" _type="LocalChecksRawCommand" date="Sun Dec 03 15:18:25 EST 2023" starttimestamp="1701628917814" timestamp="5787580">
    <CSVRow><![CDATA[34,Sun Dec 03 15:18:23 EST 2023,19,2,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker+ MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,14,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1999" _type="LocalChecksRawCommand" date="Sun Dec 03 15:18:25 EST 2023" starttimestamp="1701628917814" timestamp="5787580">
    <CSVRow><![CDATA[34,Sun Dec 03 15:18:23 EST 2023,19,2,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker+ MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,14,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2000" _type="ShellCommand" date="Sun Dec 03 15:18:31 EST 2023" starttimestamp="1701628917814" timestamp="5793992" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2001" _type="ShellCommand" date="Sun Dec 03 15:18:33 EST 2023" starttimestamp="1701628917814" timestamp="5795945" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2002" _type="ShellCommand" date="Sun Dec 03 15:18:56 EST 2023" starttimestamp="1701628917814" timestamp="5819099" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1977" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:18:12 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5775001">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1984" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:18:16 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5779015">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();"), Diff(DELETE,"//"), Diff(EQUAL,"		return evalHelper(expr, environment);	"), Diff(DELETE,"	System.out.print(expr.eval(environment));		return expr.eval(environment);	"), Diff(EQUAL,"}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			"), Diff(INSERT,"System.out.println(expr.getTail().toString());"), Diff(EQUAL,"			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			System.out.println(expr.getTail().toString());
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="2003" _type="ShellCommand" date="Sun Dec 03 15:19:08 EST 2023" starttimestamp="1701628917814" timestamp="5831028" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2004" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:19:08 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5831083" />
  <Command __id="2005" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:19:08 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5831083" />
  <Command __id="2006" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:49 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5872136">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2007" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:19:49 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5872171" />
  <Command __id="2008" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:51 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5873506">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2009" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:51 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5873532">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2010" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:19:51 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5873559" />
  <Command __id="2011" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:19:51 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5873560" />
  <Command __id="2012" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:52 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5874457">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2013" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:19:52 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5874491" />
  <Command __id="2014" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:53 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5875337">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2015" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:19:53 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5875372" />
  <Command __id="2016" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:54 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5876278">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2017" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:19:54 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5876309" />
  <Command __id="2018" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:55 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5877327">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2019" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:19:55 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5877352" />
  <Command __id="2020" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:57 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5879335">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2021" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:19:57 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5879365" />
  <Command __id="2022" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:19:58 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5880782">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2023" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:19:58 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5880810" />
  <Command __id="2024" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:20:00 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5882461">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2025" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:20:00 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5882496" />
  <Command __id="2026" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:20:01 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5883669">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2027" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:20:01 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5883704" />
  <Command __id="2028" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:20:02 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5884410">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2029" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:20:02 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5884448" />
  <Command __id="2030" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:20:03 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5885238">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2031" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:20:03 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="5885272" />
  <Command __id="2033" _type="MoveCaretCommand" caretOffset="530" date="Sun Dec 03 15:20:03 EST 2023" docOffset="611" starttimestamp="1701628917814" timestamp="5885985" />
  <Command __id="2034" _type="MoveCaretCommand" caretOffset="590" date="Sun Dec 03 15:20:06 EST 2023" docOffset="671" starttimestamp="1701628917814" timestamp="5888467" />
  <Command __id="2035" _type="MoveCaretCommand" caretOffset="590" date="Sun Dec 03 15:20:06 EST 2023" docOffset="671" starttimestamp="1701628917814" timestamp="5888467" />
  <Command __id="2037" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sun Dec 03 15:20:07 EST 2023" starttimestamp="1701628917814" timestamp="5889253" />
  <Command __id="2038" _type="MoveCaretCommand" caretOffset="433" date="Sun Dec 03 15:20:07 EST 2023" docOffset="514" starttimestamp="1701628917814" timestamp="5889908" />
  <Command __id="2039" _type="MoveCaretCommand" caretOffset="433" date="Sun Dec 03 15:20:07 EST 2023" docOffset="514" starttimestamp="1701628917814" timestamp="5889908" />
  <Command __id="2040" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:20:07 EST 2023" starttimestamp="1701628917814" timestamp="5890120" />
  <Command __id="2041" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:20:08 EST 2023" starttimestamp="1701628917814" timestamp="5890218" />
  <Command __id="2042" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:20:08 EST 2023" starttimestamp="1701628917814" timestamp="5890227" />
  <Command __id="2049" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:20:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5896331" type="Run" />
  <Command __id="2050" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:20:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5896331" type="Run" />
  <Command __id="2051" _type="ShellCommand" date="Sun Dec 03 15:20:14 EST 2023" starttimestamp="1701628917814" timestamp="5896638" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2052" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5900965" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(EQUAL,"0¶"), Diff(DELETE,"Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL¶")]]]></diff>
  </Command>
  <Command __id="2053" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5900966" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2054" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5900972" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):5¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="2055" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5900972" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2056" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5900973" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2057" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5901006" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2058" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5901008" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):40"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2059" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5901008" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):42
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2060" _type="ConsoleOutput" date="Sun Dec 03 15:20:18 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5901009" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):42"), Diff(INSERT,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2061" _type="EclipseCommand" commandID="org.eclipse.ui.ide.showInSystemExplorer" date="Sun Dec 03 15:20:49 EST 2023" starttimestamp="1701628917814" timestamp="5931786" />
  <Command __id="2062" _type="ShellCommand" date="Sun Dec 03 15:21:46 EST 2023" starttimestamp="1701628917814" timestamp="5988624" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2063" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:21:46 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="5988689" />
  <Command __id="2064" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:21:46 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="5988689" />
  <Command __id="2065" _type="SelectTextCommand" caretOffset="475" date="Sun Dec 03 15:21:48 EST 2023" end="475" start="457" starttimestamp="1701628917814" timestamp="5990760" />
  <Command __id="2066" _type="SelectTextCommand" caretOffset="475" date="Sun Dec 03 15:21:48 EST 2023" end="475" start="457" starttimestamp="1701628917814" timestamp="5990760" />
  <Command __id="2068" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:21:49 EST 2023" starttimestamp="1701628917814" timestamp="5991402" />
  <Command __id="2069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:21:49 EST 2023" starttimestamp="1701628917814" timestamp="5991402" />
  <Command __id="2070" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:21:49 EST 2023" starttimestamp="1701628917814" timestamp="5991764" />
  <Command __id="2071" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:21:49 EST 2023" starttimestamp="1701628917814" timestamp="5991864" />
  <Command __id="2072" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:21:49 EST 2023" starttimestamp="1701628917814" timestamp="5991872" />
  <Command __id="2073" _type="ShellCommand" date="Sun Dec 03 15:21:50 EST 2023" starttimestamp="1701628917814" timestamp="5992695" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2074" _type="ShellCommand" date="Sun Dec 03 15:21:50 EST 2023" starttimestamp="1701628917814" timestamp="5992912" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2075" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:21:50 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5992912" type="Debug" />
  <Command __id="2076" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:21:50 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5992912" type="Run" />
  <Command __id="2077" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:21:50 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5992912" type="Debug" />
  <Command __id="2078" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:21:50 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5992912" type="Run" />
  <Command __id="2079" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:21:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5993843" type="Run" />
  <Command __id="2080" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:21:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5993843" type="Run" />
  <Command __id="2081" _type="ShellCommand" date="Sun Dec 03 15:21:51 EST 2023" starttimestamp="1701628917814" timestamp="5994149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2082" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997621" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2083" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997622" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2084" _type="LocalChecksRawCommand" date="Sun Dec 03 15:21:55 EST 2023" starttimestamp="1701628917814" timestamp="5997622">
    <CSVRow><![CDATA[35,Sun Dec 03 15:20:18 EST 2023,19,0,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,15,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2085" _type="LocalChecksRawCommand" date="Sun Dec 03 15:21:55 EST 2023" starttimestamp="1701628917814" timestamp="5997622">
    <CSVRow><![CDATA[35,Sun Dec 03 15:20:18 EST 2023,19,0,BasicAndChecker,BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicAndChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,15,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2086" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997627" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2087" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997628" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2088" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997630" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="2089" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997663" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):42
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2090" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997665" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):42"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2091" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997665" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):44
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):44"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2092" _type="ConsoleOutput" date="Sun Dec 03 15:21:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="5997666" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):44"), Diff(INSERT,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2093" _type="ShellCommand" date="Sun Dec 03 15:21:57 EST 2023" starttimestamp="1701628917814" timestamp="5999578" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2094" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:21:57 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5999583" type="Debug" />
  <Command __id="2095" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:21:57 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5999583" type="Run" />
  <Command __id="2096" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:21:57 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="5999583" type="Debug" />
  <Command __id="2097" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:21:57 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5999583" type="Run" />
  <Command __id="2098" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:21:58 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="6000246" />
  <Command __id="2099" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:21:58 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="6000246" />
  <Command __id="2101" _type="UndoCommand" date="Sun Dec 03 15:21:58 EST 2023" starttimestamp="1701628917814" timestamp="6000489" />
  <Command __id="2102" _type="MoveCaretCommand" caretOffset="583" date="Sun Dec 03 15:21:59 EST 2023" docOffset="664" starttimestamp="1701628917814" timestamp="6001414" />
  <Command __id="2103" _type="MoveCaretCommand" caretOffset="583" date="Sun Dec 03 15:21:59 EST 2023" docOffset="664" starttimestamp="1701628917814" timestamp="6001415" />
  <Command __id="2123" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:22:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6007236" type="Run" />
  <Command __id="2124" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:22:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6007236" type="Run" />
  <Command __id="2125" _type="ShellCommand" date="Sun Dec 03 15:22:05 EST 2023" starttimestamp="1701628917814" timestamp="6007532" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2126" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010688" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,0.0% complete,0.0,10.0,Expected strings:2actual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2127" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010689" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2128" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010694" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2129" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010695" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2130" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010696" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2131" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010697" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2132" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010730" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):41"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2133" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010731" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):42
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):4"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2134" _type="ConsoleOutput" date="Sun Dec 03 15:22:08 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6010734" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):42¶")]]]></diff>
  </Command>
  <Command __id="2135" _type="ShellCommand" date="Sun Dec 03 15:22:35 EST 2023" starttimestamp="1701628917814" timestamp="6037952" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2136" _type="LocalChecksRawCommand" date="Sun Dec 03 15:22:35 EST 2023" starttimestamp="1701628917814" timestamp="6037953">
    <CSVRow><![CDATA[37,Sun Dec 03 15:22:08 EST 2023,20,1,BasicAndChecker,BasicAndChecker+ BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,17,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2137" _type="LocalChecksRawCommand" date="Sun Dec 03 15:22:35 EST 2023" starttimestamp="1701628917814" timestamp="6037953">
    <CSVRow><![CDATA[37,Sun Dec 03 15:22:08 EST 2023,20,1,BasicAndChecker,BasicAndChecker+ BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker VariableArgumentAndChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,17,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,BasicAndChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2138" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:22:35 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6037960" type="Debug" />
  <Command __id="2139" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:22:35 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6037960" type="Run" />
  <Command __id="2140" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:22:35 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6037960" type="Debug" />
  <Command __id="2141" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 15:22:35 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6037960" type="Run" />
  <Command __id="2142" _type="MoveCaretCommand" caretOffset="615" date="Sun Dec 03 15:22:37 EST 2023" docOffset="696" starttimestamp="1701628917814" timestamp="6039572" />
  <Command __id="2143" _type="MoveCaretCommand" caretOffset="615" date="Sun Dec 03 15:22:37 EST 2023" docOffset="696" starttimestamp="1701628917814" timestamp="6039573" />
  <Command __id="2032" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:20:03 EST 2023" docASTNodeCount="127" docActiveCodeLength="734" docExpressionCount="87" docLength="734" projectName="Assignment5" starttimestamp="1701628917814" timestamp="5885946">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="2036" _type="Insert" date="Sun Dec 03 15:20:07 EST 2023" docASTNodeCount="116" docActiveCodeLength="685" docExpressionCount="77" docLength="736" length="2" offset="622" starttimestamp="1701628917814" timestamp="5889241">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2067" _type="Delete" date="Sun Dec 03 15:21:49 EST 2023" docASTNodeCount="113" docActiveCodeLength="667" docExpressionCount="74" docLength="718" endLine="22" length="18" offset="538" startLine="22" starttimestamp="1701628917814" timestamp="5991392">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2100" _type="Insert" date="Sun Dec 03 15:21:58 EST 2023" docASTNodeCount="116" docActiveCodeLength="685" docExpressionCount="77" docLength="736" length="18" offset="538" starttimestamp="1701628917814" timestamp="6000486">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2106" _type="Insert" date="Sun Dec 03 15:22:00 EST 2023" docASTNodeCount="118" docActiveCodeLength="690" docExpressionCount="79" docLength="741" length="5" offset="709" repeat="5" starttimestamp="1701628917814" timestamp="6003131" timestamp2="6004060">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="2115" _type="Replace" date="Sun Dec 03 15:22:02 EST 2023" docASTNodeCount="118" docActiveCodeLength="695" docExpressionCount="79" docLength="746" endLine="26" insertionLength="9" int_docASTNodeCount="117" int_docActiveCodeLength="686" int_docExpressionCount="78" int_docLength="737" length="4" offset="710" startLine="26" starttimestamp="1701628917814" timestamp="6004437">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="2144" _type="MoveCaretCommand" caretOffset="634" date="Sun Dec 03 15:22:44 EST 2023" docOffset="715" starttimestamp="1701628917814" timestamp="6046296" />
  <Command __id="2145" _type="MoveCaretCommand" caretOffset="634" date="Sun Dec 03 15:22:44 EST 2023" docOffset="715" starttimestamp="1701628917814" timestamp="6046296" />
  <Command __id="2146" _type="MoveCaretCommand" caretOffset="623" date="Sun Dec 03 15:22:44 EST 2023" docOffset="704" starttimestamp="1701628917814" timestamp="6046935" />
  <Command __id="2147" _type="MoveCaretCommand" caretOffset="623" date="Sun Dec 03 15:22:44 EST 2023" docOffset="704" starttimestamp="1701628917814" timestamp="6046936" />
  <Command __id="2148" _type="MoveCaretCommand" caretOffset="617" date="Sun Dec 03 15:22:45 EST 2023" docOffset="698" starttimestamp="1701628917814" timestamp="6047421" />
  <Command __id="2149" _type="MoveCaretCommand" caretOffset="617" date="Sun Dec 03 15:22:45 EST 2023" docOffset="698" starttimestamp="1701628917814" timestamp="6047421" />
  <Command __id="2150" _type="MoveCaretCommand" caretOffset="499" date="Sun Dec 03 15:22:45 EST 2023" docOffset="580" starttimestamp="1701628917814" timestamp="6047994" />
  <Command __id="2151" _type="MoveCaretCommand" caretOffset="499" date="Sun Dec 03 15:22:45 EST 2023" docOffset="580" starttimestamp="1701628917814" timestamp="6047994" />
  <Command __id="2152" _type="MoveCaretCommand" caretOffset="504" date="Sun Dec 03 15:22:46 EST 2023" docOffset="585" starttimestamp="1701628917814" timestamp="6048196" />
  <Command __id="2153" _type="MoveCaretCommand" caretOffset="504" date="Sun Dec 03 15:22:46 EST 2023" docOffset="585" starttimestamp="1701628917814" timestamp="6048197" />
  <Command __id="2155" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:22:49 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6051224" />
  <Command __id="2156" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:22:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6051999" type="Run" />
  <Command __id="2157" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:22:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6051999" type="Run" />
  <Command __id="2158" _type="ShellCommand" date="Sun Dec 03 15:22:54 EST 2023" starttimestamp="1701628917814" timestamp="6056461" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2154" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:22:49 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6051187">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2159" _type="ShellCommand" date="Sun Dec 03 15:22:56 EST 2023" starttimestamp="1701628917814" timestamp="6058374" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2160" _type="PasteCommand" date="Sun Dec 03 15:22:56 EST 2023" starttimestamp="1701628917814" timestamp="6058646" />
  <Command __id="2161" _type="ConsoleOutput" date="Sun Dec 03 15:22:57 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6059323" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BasicAndChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2162" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:23:04 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6067023">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2163" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 15:23:04 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="6067071" />
  <Command __id="2164" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:23:05 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6067957">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2165" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:23:05 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6067987" />
  <Command __id="2167" _type="MoveCaretCommand" caretOffset="504" date="Sun Dec 03 15:23:06 EST 2023" docOffset="585" starttimestamp="1701628917814" timestamp="6068360" />
  <Command __id="2166" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:23:06 EST 2023" docASTNodeCount="118" docActiveCodeLength="695" docExpressionCount="79" docLength="746" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6068322">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {"), Diff(INSERT,"//"), Diff(EQUAL,"			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail()"), Diff(INSERT,".getHead()"), Diff(EQUAL,", environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
//			System.out.println(expr.getTail().toString());
			return evalHelper(expr.getTail().getHead(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="2168" _type="MoveCaretCommand" caretOffset="350" date="Sun Dec 03 15:23:08 EST 2023" docOffset="431" starttimestamp="1701628917814" timestamp="6070645" />
  <Command __id="2169" _type="MoveCaretCommand" caretOffset="350" date="Sun Dec 03 15:23:08 EST 2023" docOffset="431" starttimestamp="1701628917814" timestamp="6070646" />
  <DocumentChange __id="2170" _type="Insert" date="Sun Dec 03 15:23:09 EST 2023" docASTNodeCount="121" docActiveCodeLength="703" docExpressionCount="82" docLength="754" length="8" offset="431" repeat="8" starttimestamp="1701628917814" timestamp="6071675" timestamp2="6074769">
    <text><![CDATA[eval(e).]]></text>
  </DocumentChange>
  <Command __id="2171" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071676" timestamp2="6071676">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2172" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071676" timestamp2="6071676">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2174" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071781" timestamp2="6071781">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2175" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071781" timestamp2="6071781">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2177" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071827" timestamp2="6071827">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2178" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071827" timestamp2="6071827">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2180" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071919" timestamp2="6071919">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2181" _type="InsertStringCommand" date="Sun Dec 03 15:23:09 EST 2023" starttimestamp="1701628917814" timestamp="6071920" timestamp2="6071920">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2183" _type="InsertStringCommand" date="Sun Dec 03 15:23:10 EST 2023" starttimestamp="1701628917814" timestamp="6073091" timestamp2="6073091">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2184" _type="InsertStringCommand" date="Sun Dec 03 15:23:10 EST 2023" starttimestamp="1701628917814" timestamp="6073091" timestamp2="6073091">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2186" _type="InsertStringCommand" date="Sun Dec 03 15:23:10 EST 2023" starttimestamp="1701628917814" timestamp="6073155" timestamp2="6073155">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2187" _type="InsertStringCommand" date="Sun Dec 03 15:23:10 EST 2023" starttimestamp="1701628917814" timestamp="6073155" timestamp2="6073155">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2189" _type="InsertStringCommand" date="Sun Dec 03 15:23:11 EST 2023" starttimestamp="1701628917814" timestamp="6073725" timestamp2="6073725">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2190" _type="InsertStringCommand" date="Sun Dec 03 15:23:11 EST 2023" starttimestamp="1701628917814" timestamp="6073725" timestamp2="6073725">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2191" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:23:11 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6073733" />
  <Command __id="2193" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:23:12 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6075142" />
  <DocumentChange __id="2194" _type="Delete" date="Sun Dec 03 15:23:12 EST 2023" docASTNodeCount="120" docActiveCodeLength="702" docExpressionCount="81" docLength="753" endLine="15" length="1" offset="436" startLine="15" starttimestamp="1701628917814" timestamp="6075144">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="2195" _type="InsertStringCommand" date="Sun Dec 03 15:23:12 EST 2023" starttimestamp="1701628917814" timestamp="6075159" timestamp2="6075159">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2196" _type="InsertStringCommand" date="Sun Dec 03 15:23:12 EST 2023" starttimestamp="1701628917814" timestamp="6075160" timestamp2="6075160">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2198" _type="InsertStringCommand" date="Sun Dec 03 15:23:13 EST 2023" starttimestamp="1701628917814" timestamp="6076005" timestamp2="6076005">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2199" _type="InsertStringCommand" date="Sun Dec 03 15:23:13 EST 2023" starttimestamp="1701628917814" timestamp="6076005" timestamp2="6076005">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2201" _type="InsertStringCommand" date="Sun Dec 03 15:23:14 EST 2023" starttimestamp="1701628917814" timestamp="6076190" timestamp2="6076190">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2202" _type="InsertStringCommand" date="Sun Dec 03 15:23:14 EST 2023" starttimestamp="1701628917814" timestamp="6076190" timestamp2="6076190">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2204" _type="InsertStringCommand" date="Sun Dec 03 15:23:14 EST 2023" starttimestamp="1701628917814" timestamp="6076363" timestamp2="6076363">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2205" _type="InsertStringCommand" date="Sun Dec 03 15:23:14 EST 2023" starttimestamp="1701628917814" timestamp="6076363" timestamp2="6076363">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2207" _type="InsertStringCommand" date="Sun Dec 03 15:23:14 EST 2023" starttimestamp="1701628917814" timestamp="6076683" timestamp2="6076683">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2208" _type="InsertStringCommand" date="Sun Dec 03 15:23:14 EST 2023" starttimestamp="1701628917814" timestamp="6076683" timestamp2="6076683">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2210" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077188" timestamp2="6077188">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2211" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077189" timestamp2="6077189">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2213" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077229" timestamp2="6077229">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2214" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077229" timestamp2="6077229">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2216" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077337" timestamp2="6077337">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2217" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077337" timestamp2="6077337">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2219" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077482" timestamp2="6077482">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2220" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077482" timestamp2="6077482">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2222" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077573" timestamp2="6077573">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2223" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077573" timestamp2="6077573">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2225" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077635" timestamp2="6077635">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2226" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077635" timestamp2="6077635">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2228" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077724" timestamp2="6077724">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2229" _type="InsertStringCommand" date="Sun Dec 03 15:23:15 EST 2023" starttimestamp="1701628917814" timestamp="6077724" timestamp2="6077724">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2230" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:23:16 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6078358" />
  <Command __id="2231" _type="MoveCaretCommand" caretOffset="418" date="Sun Dec 03 15:23:16 EST 2023" docOffset="499" starttimestamp="1701628917814" timestamp="6078421" />
  <Command __id="2236" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:23:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6081812" type="Run" />
  <Command __id="2237" _type="PasteCommand" date="Sun Dec 03 15:23:20 EST 2023" starttimestamp="1701628917814" timestamp="6082708" />
  <Command __id="2238" _type="ExceptionCommand" date="Sun Dec 03 15:23:20 EST 2023" starttimestamp="1701628917814" timestamp="6083095" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:16)
	at index.AndEvaluator.eval(AndEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:11)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2239" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:23:20 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6083112" type="Debug" />
  <Command __id="2240" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:23:20 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6083112" type="Run" />
  <Command __id="2241" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:23:20 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6083112" type="Debug" />
  <Command __id="2242" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:23:20 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6083112" type="Run" />
  <Command __id="2243" _type="MoveCaretCommand" caretOffset="362" date="Sun Dec 03 15:23:26 EST 2023" docOffset="443" starttimestamp="1701628917814" timestamp="6088927" />
  <Command __id="2244" _type="MoveCaretCommand" caretOffset="362" date="Sun Dec 03 15:23:26 EST 2023" docOffset="443" starttimestamp="1701628917814" timestamp="6088927" />
  <Command __id="2246" _type="UndoCommand" date="Sun Dec 03 15:23:27 EST 2023" starttimestamp="1701628917814" timestamp="6089187" />
  <Command __id="2248" _type="UndoCommand" date="Sun Dec 03 15:23:27 EST 2023" starttimestamp="1701628917814" timestamp="6089532" />
  <Command __id="2250" _type="UndoCommand" date="Sun Dec 03 15:23:27 EST 2023" starttimestamp="1701628917814" timestamp="6089931" />
  <Command __id="2252" _type="UndoCommand" date="Sun Dec 03 15:23:28 EST 2023" starttimestamp="1701628917814" timestamp="6090240" />
  <Command __id="2253" _type="MoveCaretCommand" caretOffset="400" date="Sun Dec 03 15:23:28 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="6090939" />
  <Command __id="2254" _type="MoveCaretCommand" caretOffset="400" date="Sun Dec 03 15:23:28 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="6090939" />
  <Command __id="2255" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:23:28 EST 2023" starttimestamp="1701628917814" timestamp="6091085" />
  <Command __id="2256" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:23:28 EST 2023" starttimestamp="1701628917814" timestamp="6091175" />
  <Command __id="2257" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:23:28 EST 2023" starttimestamp="1701628917814" timestamp="6091181" />
  <Command __id="2258" _type="ShellCommand" date="Sun Dec 03 15:24:08 EST 2023" starttimestamp="1701628917814" timestamp="6130384" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="2197" _type="Insert" date="Sun Dec 03 15:23:13 EST 2023" docASTNodeCount="121" docActiveCodeLength="713" docExpressionCount="82" docLength="764" length="11" offset="436" repeat="11" starttimestamp="1701628917814" timestamp="6076001" timestamp2="6077721">
    <text><![CDATA[environment]]></text>
  </DocumentChange>
  <DocumentChange __id="2245" _type="Delete" date="Sun Dec 03 15:23:26 EST 2023" docASTNodeCount="120" docActiveCodeLength="702" docExpressionCount="81" docLength="753" endLine="15" length="11" offset="436" startLine="15" starttimestamp="1701628917814" timestamp="6089180">
    <text><![CDATA[environment]]></text>
  </DocumentChange>
  <DocumentChange __id="2247" _type="Insert" date="Sun Dec 03 15:23:27 EST 2023" docASTNodeCount="121" docActiveCodeLength="703" docExpressionCount="82" docLength="754" length="1" offset="436" starttimestamp="1701628917814" timestamp="6089528">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2249" _type="Delete" date="Sun Dec 03 15:23:27 EST 2023" docASTNodeCount="120" docActiveCodeLength="702" docExpressionCount="81" docLength="753" endLine="15" length="1" offset="436" startLine="15" starttimestamp="1701628917814" timestamp="6089928">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2251" _type="Delete" date="Sun Dec 03 15:23:28 EST 2023" docASTNodeCount="118" docActiveCodeLength="695" docExpressionCount="79" docLength="746" endLine="15" length="7" offset="431" startLine="15" starttimestamp="1701628917814" timestamp="6090236">
    <text><![CDATA[eval().]]></text>
  </DocumentChange>
  <Command __id="2259" _type="ShellCommand" date="Sun Dec 03 15:24:14 EST 2023" starttimestamp="1701628917814" timestamp="6136855" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2260" _type="MoveCaretCommand" caretOffset="361" date="Sun Dec 03 15:24:14 EST 2023" docOffset="442" starttimestamp="1701628917814" timestamp="6136936" />
  <Command __id="2261" _type="MoveCaretCommand" caretOffset="361" date="Sun Dec 03 15:24:14 EST 2023" docOffset="442" starttimestamp="1701628917814" timestamp="6136936" />
  <Command __id="2262" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:24:45 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6167559">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2264" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:24:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6168744" type="Run" />
  <Command __id="2265" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:24:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6168744" type="Run" />
  <DocumentChange __id="2266" _type="Insert" date="Sun Dec 03 15:24:47 EST 2023" docASTNodeCount="47" docActiveCodeLength="273" docExpressionCount="29" docLength="273" length="2" offset="271" starttimestamp="1701628917814" timestamp="6169940">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="2267" _type="InsertStringCommand" date="Sun Dec 03 15:24:47 EST 2023" starttimestamp="1701628917814" timestamp="6169943" timestamp2="6169943">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2269" _type="UndoCommand" date="Sun Dec 03 15:24:48 EST 2023" starttimestamp="1701628917814" timestamp="6171025" />
  <Command __id="2272" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:00 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6182825" type="Debug" />
  <Command __id="2273" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:25:00 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6182825" type="Run" />
  <Command __id="2274" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:00 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6182825" type="Debug" />
  <Command __id="2275" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:25:00 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6182825" type="Run" />
  <Command __id="2276" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 15:25:02 EST 2023" starttimestamp="1701628917814" timestamp="6184540" />
  <Command __id="2277" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:25:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6184646" type="Run" />
  <Command __id="2278" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:25:02 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6184646" type="Run" />
  <Command __id="2279" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:02 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6184756" type="Run" />
  <Command __id="2280" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:02 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6184766" type="Run" />
  <Command __id="2282" _type="MoveCaretCommand" caretOffset="361" date="Sun Dec 03 15:25:02 EST 2023" docOffset="442" starttimestamp="1701628917814" timestamp="6184885" />
  <Command __id="2283" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:02 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6184897" type="Run" />
  <Command __id="2286" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:14 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6196615" type="Run" />
  <Command __id="2392" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6230740" type="Run" />
  <DocumentChange __id="2268" _type="Delete" date="Sun Dec 03 15:24:48 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" endLine="14" length="2" offset="271" startLine="14" starttimestamp="1701628917814" timestamp="6171018">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="2281" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:25:02 EST 2023" docASTNodeCount="118" docActiveCodeLength="695" docExpressionCount="79" docLength="746" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6184861">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			return evalHelper(expr.getTail().getHead(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="2396" _type="Insert" date="Sun Dec 03 15:25:59 EST 2023" docASTNodeCount="118" docActiveCodeLength="695" docExpressionCount="79" docLength="747" length="1" offset="673" starttimestamp="1701628917814" timestamp="6241499">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <DocumentChange __id="2399" _type="Delete" date="Sun Dec 03 15:26:00 EST 2023" docASTNodeCount="118" docActiveCodeLength="695" docExpressionCount="79" docLength="746" endLine="25" length="1" offset="673" startLine="25" starttimestamp="1701628917814" timestamp="6242485">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <DocumentChange __id="2402" _type="Insert" date="Sun Dec 03 15:26:00 EST 2023" docASTNodeCount="120" docActiveCodeLength="700" docExpressionCount="80" docLength="751" length="5" offset="673" repeat="2" starttimestamp="1701628917814" timestamp="6242648" timestamp2="6243807">
    <text><![CDATA[
			S]]></text>
  </DocumentChange>
  <DocumentChange __id="2408" _type="Delete" date="Sun Dec 03 15:26:02 EST 2023" docASTNodeCount="118" docActiveCodeLength="699" docExpressionCount="79" docLength="750" endLine="26" length="1" offset="677" startLine="26" starttimestamp="1701628917814" timestamp="6244522">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <Command __id="2393" _type="MoveCaretCommand" caretOffset="592" date="Sun Dec 03 15:25:58 EST 2023" docOffset="673" starttimestamp="1701628917814" timestamp="6240720" />
  <Command __id="2394" _type="MoveCaretCommand" caretOffset="592" date="Sun Dec 03 15:25:58 EST 2023" docOffset="673" starttimestamp="1701628917814" timestamp="6240720" />
  <Command __id="2395" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:25:58 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6240724" type="Run" />
  <Command __id="2397" _type="InsertStringCommand" date="Sun Dec 03 15:25:59 EST 2023" starttimestamp="1701628917814" timestamp="6241502" timestamp2="6241502">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="2398" _type="InsertStringCommand" date="Sun Dec 03 15:25:59 EST 2023" starttimestamp="1701628917814" timestamp="6241502" timestamp2="6241502">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="2400" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:26:00 EST 2023" starttimestamp="1701628917814" timestamp="6242488" />
  <Command __id="2401" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:26:00 EST 2023" starttimestamp="1701628917814" timestamp="6242488" />
  <Command __id="2403" _type="InsertStringCommand" date="Sun Dec 03 15:26:00 EST 2023" starttimestamp="1701628917814" timestamp="6242652" timestamp2="6242652">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2404" _type="InsertStringCommand" date="Sun Dec 03 15:26:00 EST 2023" starttimestamp="1701628917814" timestamp="6242652" timestamp2="6242652">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2406" _type="InsertStringCommand" date="Sun Dec 03 15:26:01 EST 2023" starttimestamp="1701628917814" timestamp="6243810" timestamp2="6243810">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2407" _type="InsertStringCommand" date="Sun Dec 03 15:26:01 EST 2023" starttimestamp="1701628917814" timestamp="6243810" timestamp2="6243810">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2409" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:26:02 EST 2023" starttimestamp="1701628917814" timestamp="6244525" />
  <Command __id="2410" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:26:02 EST 2023" starttimestamp="1701628917814" timestamp="6244525" />
  <Command __id="2412" _type="InsertStringCommand" date="Sun Dec 03 15:26:04 EST 2023" starttimestamp="1701628917814" timestamp="6246837" timestamp2="6246837">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2413" _type="InsertStringCommand" date="Sun Dec 03 15:26:04 EST 2023" starttimestamp="1701628917814" timestamp="6246837" timestamp2="6246837">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2415" _type="InsertStringCommand" date="Sun Dec 03 15:26:05 EST 2023" starttimestamp="1701628917814" timestamp="6247810" timestamp2="6247810">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2416" _type="InsertStringCommand" date="Sun Dec 03 15:26:05 EST 2023" starttimestamp="1701628917814" timestamp="6247810" timestamp2="6247810">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2418" _type="InsertStringCommand" date="Sun Dec 03 15:26:05 EST 2023" starttimestamp="1701628917814" timestamp="6248112" timestamp2="6248112">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2419" _type="InsertStringCommand" date="Sun Dec 03 15:26:05 EST 2023" starttimestamp="1701628917814" timestamp="6248112" timestamp2="6248112">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2421" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248321" timestamp2="6248321">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2422" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248321" timestamp2="6248321">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2424" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248423" timestamp2="6248423">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2425" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248424" timestamp2="6248424">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2427" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248473" timestamp2="6248473">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="2411" _type="Insert" date="Sun Dec 03 15:26:04 EST 2023" docASTNodeCount="120" docActiveCodeLength="711" docExpressionCount="80" docLength="762" length="12" offset="677" repeat="12" starttimestamp="1701628917814" timestamp="6246834" timestamp2="6249066">
    <text><![CDATA[SExpression ]]></text>
  </DocumentChange>
  <Command __id="2428" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248474" timestamp2="6248474">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2430" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248581" timestamp2="6248581">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2431" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248581" timestamp2="6248581">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2433" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248767" timestamp2="6248767">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2434" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248767" timestamp2="6248767">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2436" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248873" timestamp2="6248873">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2437" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248873" timestamp2="6248873">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2439" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248919" timestamp2="6248919">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2440" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248919" timestamp2="6248919">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2442" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248979" timestamp2="6248979">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2443" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6248979" timestamp2="6248979">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2445" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6249067" timestamp2="6249067">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2446" _type="InsertStringCommand" date="Sun Dec 03 15:26:06 EST 2023" starttimestamp="1701628917814" timestamp="6249067" timestamp2="6249067">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2448" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251265" timestamp2="6251265">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2449" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251265" timestamp2="6251265">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2451" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251323" timestamp2="6251323">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2452" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251323" timestamp2="6251323">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2454" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251426" timestamp2="6251426">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2455" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251426" timestamp2="6251426">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2457" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251500" timestamp2="6251500">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2458" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251500" timestamp2="6251500">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2460" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251566" timestamp2="6251566">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2461" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251566" timestamp2="6251566">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2463" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251766" timestamp2="6251766">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2464" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251766" timestamp2="6251766">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2466" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251922" timestamp2="6251922">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2467" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6251922" timestamp2="6251922">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2469" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6252087" timestamp2="6252087">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2470" _type="InsertStringCommand" date="Sun Dec 03 15:26:09 EST 2023" starttimestamp="1701628917814" timestamp="6252087" timestamp2="6252087">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2472" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6252597" timestamp2="6252597">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2473" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6252597" timestamp2="6252597">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2475" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6252789" timestamp2="6252789">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2476" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6252789" timestamp2="6252789">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2478" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6252877" timestamp2="6252877">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2479" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6252877" timestamp2="6252877">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2481" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6253001" timestamp2="6253001">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2482" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6253001" timestamp2="6253001">
    <data><![CDATA[r]]></data>
  </Command>
  <DocumentChange __id="2447" _type="Insert" date="Sun Dec 03 15:26:09 EST 2023" docASTNodeCount="126" docActiveCodeLength="728" docExpressionCount="84" docLength="779" length="17" offset="689" repeat="17" starttimestamp="1701628917814" timestamp="6251262" timestamp2="6253749">
    <text><![CDATA[temp1 = expr.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="2492" _type="Replace" date="Sun Dec 03 15:26:11 EST 2023" docASTNodeCount="126" docActiveCodeLength="733" docExpressionCount="84" docLength="784" endLine="26" insertionLength="9" int_docASTNodeCount="123" int_docActiveCodeLength="724" int_docExpressionCount="82" int_docLength="775" length="4" offset="702" startLine="26" starttimestamp="1701628917814" timestamp="6254099">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="2484" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6253121" timestamp2="6253121">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2485" _type="InsertStringCommand" date="Sun Dec 03 15:26:10 EST 2023" starttimestamp="1701628917814" timestamp="6253122" timestamp2="6253122">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2486" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:26:10 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6253129" />
  <Command __id="2491" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:26:11 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6254095" />
  <Command __id="2493" _type="InsertStringCommand" date="Sun Dec 03 15:26:11 EST 2023" starttimestamp="1701628917814" timestamp="6254104" timestamp2="6254104">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2494" _type="InsertStringCommand" date="Sun Dec 03 15:26:11 EST 2023" starttimestamp="1701628917814" timestamp="6254105" timestamp2="6254105">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2496" _type="InsertStringCommand" date="Sun Dec 03 15:26:12 EST 2023" starttimestamp="1701628917814" timestamp="6254560" timestamp2="6254560">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2497" _type="InsertStringCommand" date="Sun Dec 03 15:26:12 EST 2023" starttimestamp="1701628917814" timestamp="6254560" timestamp2="6254560">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2499" _type="InsertStringCommand" date="Sun Dec 03 15:26:12 EST 2023" starttimestamp="1701628917814" timestamp="6254971" timestamp2="6254971">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2500" _type="InsertStringCommand" date="Sun Dec 03 15:26:12 EST 2023" starttimestamp="1701628917814" timestamp="6254971" timestamp2="6254971">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2502" _type="InsertStringCommand" date="Sun Dec 03 15:26:13 EST 2023" starttimestamp="1701628917814" timestamp="6255640" timestamp2="6255640">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2503" _type="InsertStringCommand" date="Sun Dec 03 15:26:13 EST 2023" starttimestamp="1701628917814" timestamp="6255640" timestamp2="6255640">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2505" _type="InsertStringCommand" date="Sun Dec 03 15:26:13 EST 2023" starttimestamp="1701628917814" timestamp="6255846" timestamp2="6255846">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2506" _type="InsertStringCommand" date="Sun Dec 03 15:26:13 EST 2023" starttimestamp="1701628917814" timestamp="6255846" timestamp2="6255846">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2508" _type="InsertStringCommand" date="Sun Dec 03 15:26:14 EST 2023" starttimestamp="1701628917814" timestamp="6256920" timestamp2="6256920">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2509" _type="InsertStringCommand" date="Sun Dec 03 15:26:14 EST 2023" starttimestamp="1701628917814" timestamp="6256920" timestamp2="6256920">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2511" _type="InsertStringCommand" date="Sun Dec 03 15:26:14 EST 2023" starttimestamp="1701628917814" timestamp="6257048" timestamp2="6257048">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2512" _type="InsertStringCommand" date="Sun Dec 03 15:26:14 EST 2023" starttimestamp="1701628917814" timestamp="6257049" timestamp2="6257049">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2514" _type="InsertStringCommand" date="Sun Dec 03 15:26:14 EST 2023" starttimestamp="1701628917814" timestamp="6257164" timestamp2="6257164">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2515" _type="InsertStringCommand" date="Sun Dec 03 15:26:14 EST 2023" starttimestamp="1701628917814" timestamp="6257164" timestamp2="6257164">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2517" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257208" timestamp2="6257208">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2518" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257208" timestamp2="6257208">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2520" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257298" timestamp2="6257298">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2521" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257298" timestamp2="6257298">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2523" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257471" timestamp2="6257471">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2524" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257471" timestamp2="6257471">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2526" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257548" timestamp2="6257548">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2527" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257548" timestamp2="6257548">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2529" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257585" timestamp2="6257585">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2530" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257585" timestamp2="6257585">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2532" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257658" timestamp2="6257658">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2533" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257658" timestamp2="6257658">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2535" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257802" timestamp2="6257802">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2536" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257802" timestamp2="6257802">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2538" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257944" timestamp2="6257944">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2539" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6257944" timestamp2="6257944">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2541" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6258004" timestamp2="6258004">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2542" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6258004" timestamp2="6258004">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2544" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6258131" timestamp2="6258131">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2545" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6258131" timestamp2="6258131">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2547" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6258161" timestamp2="6258161">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2548" _type="InsertStringCommand" date="Sun Dec 03 15:26:15 EST 2023" starttimestamp="1701628917814" timestamp="6258161" timestamp2="6258161">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2550" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258278" timestamp2="6258278">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="2551" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258278" timestamp2="6258278">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="2553" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258522" timestamp2="6258522">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2554" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258522" timestamp2="6258522">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2556" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258610" timestamp2="6258610">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2557" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258610" timestamp2="6258610">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2559" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258713" timestamp2="6258713">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2560" _type="InsertStringCommand" date="Sun Dec 03 15:26:16 EST 2023" starttimestamp="1701628917814" timestamp="6258714" timestamp2="6258714">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2562" _type="InsertStringCommand" date="Sun Dec 03 15:26:17 EST 2023" starttimestamp="1701628917814" timestamp="6259514" timestamp2="6259514">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2563" _type="InsertStringCommand" date="Sun Dec 03 15:26:17 EST 2023" starttimestamp="1701628917814" timestamp="6259514" timestamp2="6259514">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:26:17 EST 2023" starttimestamp="1701628917814" timestamp="6260156" />
  <Command __id="2566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:26:17 EST 2023" starttimestamp="1701628917814" timestamp="6260156" />
  <Command __id="2568" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260489" timestamp2="6260489">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2569" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260489" timestamp2="6260489">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2571" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260538" timestamp2="6260538">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2572" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260538" timestamp2="6260538">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2574" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260627" timestamp2="6260627">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2575" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260627" timestamp2="6260627">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2577" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260689" timestamp2="6260689">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2578" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260689" timestamp2="6260689">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2580" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260795" timestamp2="6260795">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2581" _type="InsertStringCommand" date="Sun Dec 03 15:26:18 EST 2023" starttimestamp="1701628917814" timestamp="6260795" timestamp2="6260795">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2583" _type="InsertStringCommand" date="Sun Dec 03 15:26:19 EST 2023" starttimestamp="1701628917814" timestamp="6261328" timestamp2="6261328">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2584" _type="InsertStringCommand" date="Sun Dec 03 15:26:19 EST 2023" starttimestamp="1701628917814" timestamp="6261328" timestamp2="6261328">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2585" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:26:19 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6261336" />
  <Command __id="2594" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:26:21 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6263919" />
  <Command __id="2596" _type="InsertStringCommand" date="Sun Dec 03 15:26:21 EST 2023" starttimestamp="1701628917814" timestamp="6263928" timestamp2="6263928">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2597" _type="InsertStringCommand" date="Sun Dec 03 15:26:21 EST 2023" starttimestamp="1701628917814" timestamp="6263928" timestamp2="6263928">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2598" _type="SelectTextCommand" caretOffset="693" date="Sun Dec 03 15:26:24 EST 2023" end="717" start="693" starttimestamp="1701628917814" timestamp="6266833" />
  <Command __id="2599" _type="SelectTextCommand" caretOffset="693" date="Sun Dec 03 15:26:24 EST 2023" end="717" start="693" starttimestamp="1701628917814" timestamp="6266833" />
  <Command __id="2601" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267526" timestamp2="6267526">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2602" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267526" timestamp2="6267526">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2604" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267560" timestamp2="6267560">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2605" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267560" timestamp2="6267560">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2607" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267686" timestamp2="6267686">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2608" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267686" timestamp2="6267686">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2610" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267727" timestamp2="6267727">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2611" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267727" timestamp2="6267727">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2613" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267814" timestamp2="6267814">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="2614" _type="InsertStringCommand" date="Sun Dec 03 15:26:25 EST 2023" starttimestamp="1701628917814" timestamp="6267814" timestamp2="6267814">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="2615" _type="MoveCaretCommand" caretOffset="713" date="Sun Dec 03 15:26:26 EST 2023" docOffset="794" starttimestamp="1701628917814" timestamp="6268516" />
  <Command __id="2616" _type="MoveCaretCommand" caretOffset="713" date="Sun Dec 03 15:26:26 EST 2023" docOffset="794" starttimestamp="1701628917814" timestamp="6268516" />
  <Command __id="2617" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:26:26 EST 2023" starttimestamp="1701628917814" timestamp="6268686" />
  <Command __id="2618" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:26:26 EST 2023" starttimestamp="1701628917814" timestamp="6268785" />
  <Command __id="2619" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:26:26 EST 2023" starttimestamp="1701628917814" timestamp="6268791" />
  <Command __id="2620" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:26 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6268842" type="Run" />
  <Command __id="2621" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:26 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6268842" type="Run" />
  <Command __id="2622" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:26 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6268842" type="Run" />
  <Command __id="2623" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:26 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6268842" type="Run" />
  <Command __id="2624" _type="ShellCommand" date="Sun Dec 03 15:26:26 EST 2023" starttimestamp="1701628917814" timestamp="6268879" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2625" _type="ShellCommand" date="Sun Dec 03 15:26:28 EST 2023" starttimestamp="1701628917814" timestamp="6270467" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2495" _type="Insert" date="Sun Dec 03 15:26:12 EST 2023" docASTNodeCount="132" docActiveCodeLength="759" docExpressionCount="87" docLength="810" length="26" offset="711" repeat="23" starttimestamp="1701628917814" timestamp="6254557" timestamp2="6259512">
    <text><![CDATA[;
			SExpression temp2 = e]]></text>
  </DocumentChange>
  <DocumentChange __id="2564" _type="Delete" date="Sun Dec 03 15:26:17 EST 2023" docASTNodeCount="130" docActiveCodeLength="758" docExpressionCount="86" docLength="809" endLine="27" length="1" offset="736" startLine="27" starttimestamp="1701628917814" timestamp="6260153">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2567" _type="Insert" date="Sun Dec 03 15:26:18 EST 2023" docASTNodeCount="134" docActiveCodeLength="773" docExpressionCount="89" docLength="824" length="15" offset="736" repeat="14" starttimestamp="1701628917814" timestamp="6260487" timestamp2="6262611">
    <text><![CDATA[temp1.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="2595" _type="Replace" date="Sun Dec 03 15:26:21 EST 2023" docASTNodeCount="134" docActiveCodeLength="774" docExpressionCount="89" docLength="825" endLine="27" insertionLength="10" int_docASTNodeCount="131" int_docActiveCodeLength="764" int_docExpressionCount="87" int_docLength="815" length="9" offset="742" startLine="27" starttimestamp="1701628917814" timestamp="6263922">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[getHead();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2600" _type="Replace" date="Sun Dec 03 15:26:25 EST 2023" docASTNodeCount="130" docActiveCodeLength="751" docExpressionCount="85" docLength="802" endLine="28" insertionLength="1" int_docASTNodeCount="129" int_docActiveCodeLength="750" int_docExpressionCount="84" int_docLength="801" length="24" offset="774" startLine="28" starttimestamp="1701628917814" timestamp="6267520">
    <deletedText><![CDATA[expr.getTail().getHead()]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2603" _type="Insert" date="Sun Dec 03 15:26:25 EST 2023" docASTNodeCount="130" docActiveCodeLength="755" docExpressionCount="85" docLength="806" length="4" offset="775" repeat="4" starttimestamp="1701628917814" timestamp="6267559" timestamp2="6267812">
    <text><![CDATA[emp2]]></text>
  </DocumentChange>
  <Command __id="2626" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 15:26:29 EST 2023" starttimestamp="1701628917814" timestamp="6271700" />
  <Command __id="2627" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:29 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6271706" type="Debug" />
  <Command __id="2628" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:26:29 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6271706" type="Run" />
  <Command __id="2629" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:29 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6271706" type="Debug" />
  <Command __id="2630" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:26:29 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6271706" type="Run" />
  <Command __id="2631" _type="MoveCaretCommand" caretOffset="292" date="Sun Dec 03 15:26:29 EST 2023" docOffset="373" starttimestamp="1701628917814" timestamp="6272179" />
  <Command __id="2632" _type="MoveCaretCommand" caretOffset="292" date="Sun Dec 03 15:26:29 EST 2023" docOffset="373" starttimestamp="1701628917814" timestamp="6272179" />
  <Command __id="2633" _type="InsertStringCommand" date="Sun Dec 03 15:26:30 EST 2023" starttimestamp="1701628917814" timestamp="6272528" timestamp2="6272528">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2634" _type="InsertStringCommand" date="Sun Dec 03 15:26:30 EST 2023" starttimestamp="1701628917814" timestamp="6272528" timestamp2="6272528">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2636" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:26:34 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6276827" />
  <Command __id="2637" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 15:26:36 EST 2023" starttimestamp="1701628917814" timestamp="6278526" />
  <Command __id="2638" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:26:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6278644" type="Run" />
  <Command __id="2639" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:26:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6278644" type="Run" />
  <Command __id="2640" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:36 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6278754" type="Run" />
  <Command __id="2641" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:36 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6278766" type="Run" />
  <Command __id="2642" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:36 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6278901" type="Run" />
  <Command __id="2644" _type="MoveCaretCommand" caretOffset="292" date="Sun Dec 03 15:26:36 EST 2023" docOffset="373" starttimestamp="1701628917814" timestamp="6279097" />
  <Command __id="2645" _type="PasteCommand" date="Sun Dec 03 15:26:38 EST 2023" starttimestamp="1701628917814" timestamp="6281049" />
  <Command __id="2646" _type="ConsoleInput" date="Sun Dec 03 15:26:45 EST 2023" starttimestamp="1701628917814" timestamp="6288038" type="Exception">
    <outputString><![CDATA[(AND (/= 3 4) (> 3 2) (+ 8 9) (- 3 1)) T 2)
]]></outputString>
  </Command>
  <Command __id="2647" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:46 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6288196" type="Run" />
  <Command __id="2648" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:26:48 EST 2023" starttimestamp="1701628917814" timestamp="6291161" />
  <Command __id="2649" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6291164" type="Run" />
  <Command __id="2650" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 15:26:49 EST 2023" starttimestamp="1701628917814" timestamp="6291931" />
  <Command __id="2651" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6291934" type="Run" />
  <Command __id="2652" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:26:52 EST 2023" starttimestamp="1701628917814" timestamp="6294876" />
  <Command __id="2653" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6294879" type="Run" />
  <Command __id="2654" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:26:53 EST 2023" starttimestamp="1701628917814" timestamp="6295917" />
  <Command __id="2655" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:53 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6295920" type="Run" />
  <Command __id="2656" _type="MoveCaretCommand" caretOffset="618" date="Sun Dec 03 15:26:56 EST 2023" docOffset="699" starttimestamp="1701628917814" timestamp="6298535" />
  <Command __id="2657" _type="MoveCaretCommand" caretOffset="618" date="Sun Dec 03 15:26:56 EST 2023" docOffset="699" starttimestamp="1701628917814" timestamp="6298535" />
  <Command __id="2658" _type="SelectTextCommand" caretOffset="620" date="Sun Dec 03 15:26:56 EST 2023" end="620" start="616" starttimestamp="1701628917814" timestamp="6298625" />
  <Command __id="2659" _type="SelectTextCommand" caretOffset="620" date="Sun Dec 03 15:26:56 EST 2023" end="620" start="616" starttimestamp="1701628917814" timestamp="6298625" />
  <Command __id="2660" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:26:56 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6299000" type="Run" />
  <Command __id="2661" _type="MoveCaretCommand" caretOffset="608" date="Sun Dec 03 15:26:58 EST 2023" docOffset="689" starttimestamp="1701628917814" timestamp="6300364" />
  <Command __id="2662" _type="MoveCaretCommand" caretOffset="608" date="Sun Dec 03 15:26:58 EST 2023" docOffset="689" starttimestamp="1701628917814" timestamp="6300364" />
  <Command __id="2663" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 15:26:58 EST 2023" docOffset="692" starttimestamp="1701628917814" timestamp="6300665" />
  <Command __id="2664" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 15:26:58 EST 2023" docOffset="692" starttimestamp="1701628917814" timestamp="6300665" />
  <Command __id="2665" _type="SelectTextCommand" caretOffset="613" date="Sun Dec 03 15:26:58 EST 2023" end="613" start="608" starttimestamp="1701628917814" timestamp="6300804" />
  <Command __id="2666" _type="SelectTextCommand" caretOffset="613" date="Sun Dec 03 15:26:58 EST 2023" end="613" start="608" starttimestamp="1701628917814" timestamp="6300804" />
  <Command __id="2670" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:28:19 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6381364" type="Run" />
  <Command __id="2671" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 15:29:32 EST 2023" starttimestamp="1701628917814" timestamp="6454753" />
  <Command __id="2672" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:29:32 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6454759" type="Debug" />
  <Command __id="2673" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:29:32 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6454759" type="Run" />
  <Command __id="2674" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:29:32 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6454759" type="Debug" />
  <Command __id="2675" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:29:32 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6454759" type="Run" />
  <Command __id="2676" _type="MoveCaretCommand" caretOffset="671" date="Sun Dec 03 15:29:33 EST 2023" docOffset="752" starttimestamp="1701628917814" timestamp="6455922" />
  <Command __id="2677" _type="MoveCaretCommand" caretOffset="671" date="Sun Dec 03 15:29:33 EST 2023" docOffset="752" starttimestamp="1701628917814" timestamp="6455923" />
  <Command __id="2678" _type="SelectTextCommand" caretOffset="661" date="Sun Dec 03 15:29:35 EST 2023" end="670" start="661" starttimestamp="1701628917814" timestamp="6457659" />
  <Command __id="2679" _type="SelectTextCommand" caretOffset="661" date="Sun Dec 03 15:29:35 EST 2023" end="670" start="661" starttimestamp="1701628917814" timestamp="6457659" />
  <Command __id="2681" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458436" timestamp2="6458436">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2682" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458436" timestamp2="6458436">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2684" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458524" timestamp2="6458524">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2685" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458524" timestamp2="6458524">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2687" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458584" timestamp2="6458584">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2688" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458584" timestamp2="6458584">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2690" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458660" timestamp2="6458660">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2691" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458660" timestamp2="6458660">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2693" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458910" timestamp2="6458910">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2694" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458910" timestamp2="6458910">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2695" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458974" timestamp2="6458974">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2696" _type="InsertStringCommand" date="Sun Dec 03 15:29:36 EST 2023" starttimestamp="1701628917814" timestamp="6458974" timestamp2="6458974">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2697" _type="MoveCaretCommand" caretOffset="666" date="Sun Dec 03 15:29:38 EST 2023" docOffset="747" starttimestamp="1701628917814" timestamp="6460211" />
  <Command __id="2698" _type="MoveCaretCommand" caretOffset="666" date="Sun Dec 03 15:29:38 EST 2023" docOffset="747" starttimestamp="1701628917814" timestamp="6460212" />
  <Command __id="2700" _type="InsertStringCommand" date="Sun Dec 03 15:29:38 EST 2023" starttimestamp="1701628917814" timestamp="6461027" timestamp2="6461027">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2701" _type="InsertStringCommand" date="Sun Dec 03 15:29:38 EST 2023" starttimestamp="1701628917814" timestamp="6461027" timestamp2="6461027">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2703" _type="InsertStringCommand" date="Sun Dec 03 15:29:38 EST 2023" starttimestamp="1701628917814" timestamp="6461113" timestamp2="6461113">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2704" _type="InsertStringCommand" date="Sun Dec 03 15:29:38 EST 2023" starttimestamp="1701628917814" timestamp="6461113" timestamp2="6461113">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2706" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6461218" timestamp2="6461218">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2707" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6461218" timestamp2="6461218">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2709" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6461287" timestamp2="6461287">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2710" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6461287" timestamp2="6461287">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2712" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6461995" timestamp2="6461995">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2713" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6461995" timestamp2="6461995">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2715" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6462169" timestamp2="6462169">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2716" _type="InsertStringCommand" date="Sun Dec 03 15:29:39 EST 2023" starttimestamp="1701628917814" timestamp="6462169" timestamp2="6462169">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2718" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462326" timestamp2="6462326">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2719" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462326" timestamp2="6462326">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2721" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462430" timestamp2="6462430">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2722" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462430" timestamp2="6462430">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2724" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462459" timestamp2="6462459">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2725" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462459" timestamp2="6462459">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2727" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462611" timestamp2="6462611">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2728" _type="InsertStringCommand" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462611" timestamp2="6462611">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2730" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462984" />
  <Command __id="2731" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6462984" />
  <Command __id="2733" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6463095" />
  <Command __id="2734" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:40 EST 2023" starttimestamp="1701628917814" timestamp="6463095" />
  <Command __id="2736" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463222" />
  <Command __id="2737" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463222" />
  <Command __id="2739" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463361" />
  <Command __id="2740" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463361" />
  <Command __id="2742" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463481" />
  <Command __id="2743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463481" />
  <Command __id="2745" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463722" timestamp2="6463722">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2746" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463722" timestamp2="6463722">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2748" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463826" timestamp2="6463826">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2749" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463826" timestamp2="6463826">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2751" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463993" timestamp2="6463993">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2752" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6463993" timestamp2="6463993">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2754" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6464002" timestamp2="6464002">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2755" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6464002" timestamp2="6464002">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2757" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6464125" timestamp2="6464125">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2758" _type="InsertStringCommand" date="Sun Dec 03 15:29:41 EST 2023" starttimestamp="1701628917814" timestamp="6464125" timestamp2="6464125">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2760" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464367" />
  <Command __id="2761" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464367" />
  <Command __id="2763" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464471" />
  <Command __id="2764" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464471" />
  <Command __id="2766" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464575" />
  <Command __id="2767" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464575" />
  <Command __id="2635" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:26:34 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6276794">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2643" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:26:36 EST 2023" docASTNodeCount="130" docActiveCodeLength="755" docExpressionCount="85" docLength="806" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6279067">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			"), Diff(DELETE,"return evalHelper(expr.getTail().getHead()"), Diff(INSERT,"SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2"), Diff(EQUAL,", environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
//			System.out.println(expr.getTail().toString());
			SExpression temp1 = expr.getTail();
			SExpression temp2 = temp1.getHead();
			return evalHelper(temp2, environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="2680" _type="Replace" date="Sun Dec 03 15:29:36 EST 2023" docASTNodeCount="130" docActiveCodeLength="747" docExpressionCount="85" docLength="798" endLine="27" insertionLength="1" int_docASTNodeCount="130" int_docActiveCodeLength="746" int_docExpressionCount="84" int_docLength="797" length="9" offset="742" startLine="27" starttimestamp="1701628917814" timestamp="6458427">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2683" _type="Insert" date="Sun Dec 03 15:29:36 EST 2023" docASTNodeCount="130" docActiveCodeLength="752" docExpressionCount="85" docLength="803" length="5" offset="743" repeat="4" starttimestamp="1701628917814" timestamp="6458523" timestamp2="6458906">
    <text><![CDATA[val()]]></text>
  </DocumentChange>
  <DocumentChange __id="2699" _type="Insert" date="Sun Dec 03 15:29:38 EST 2023" docASTNodeCount="131" docActiveCodeLength="762" docExpressionCount="86" docLength="813" length="10" offset="747" repeat="10" starttimestamp="1701628917814" timestamp="6461023" timestamp2="6462608">
    <text><![CDATA[envirnmene]]></text>
  </DocumentChange>
  <DocumentChange __id="2729" _type="Delete" date="Sun Dec 03 15:29:40 EST 2023" docASTNodeCount="131" docActiveCodeLength="757" docExpressionCount="86" docLength="808" endLine="27" length="5" offset="752" repeat="5" startLine="27" starttimestamp="1701628917814" timestamp="6462981" timestamp2="6463479">
    <text><![CDATA[nmene]]></text>
  </DocumentChange>
  <DocumentChange __id="2744" _type="Insert" date="Sun Dec 03 15:29:41 EST 2023" docASTNodeCount="132" docActiveCodeLength="762" docExpressionCount="87" docLength="813" length="5" offset="752" repeat="5" starttimestamp="1701628917814" timestamp="6463719" timestamp2="6464122">
    <text><![CDATA[on,mn]]></text>
  </DocumentChange>
  <DocumentChange __id="2759" _type="Delete" date="Sun Dec 03 15:29:42 EST 2023" docASTNodeCount="131" docActiveCodeLength="759" docExpressionCount="86" docLength="810" endLine="27" length="3" offset="754" repeat="3" startLine="27" starttimestamp="1701628917814" timestamp="6464364" timestamp2="6464573">
    <text><![CDATA[,mn]]></text>
  </DocumentChange>
  <DocumentChange __id="2768" _type="Insert" date="Sun Dec 03 15:29:42 EST 2023" docASTNodeCount="131" docActiveCodeLength="763" docExpressionCount="86" docLength="814" length="4" offset="754" repeat="4" starttimestamp="1701628917814" timestamp="6464768" timestamp2="6465020">
    <text><![CDATA[ment]]></text>
  </DocumentChange>
  <Command __id="2769" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464771" timestamp2="6464771">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2770" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464772" timestamp2="6464772">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2772" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464890" timestamp2="6464890">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2773" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464890" timestamp2="6464890">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2775" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464936" timestamp2="6464936">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2776" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6464936" timestamp2="6464936">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2778" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6465022" timestamp2="6465022">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2779" _type="InsertStringCommand" date="Sun Dec 03 15:29:42 EST 2023" starttimestamp="1701628917814" timestamp="6465022" timestamp2="6465022">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2780" _type="MoveCaretCommand" caretOffset="486" date="Sun Dec 03 15:29:43 EST 2023" docOffset="567" starttimestamp="1701628917814" timestamp="6465590" />
  <Command __id="2781" _type="MoveCaretCommand" caretOffset="486" date="Sun Dec 03 15:29:43 EST 2023" docOffset="567" starttimestamp="1701628917814" timestamp="6465590" />
  <Command __id="2782" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:29:43 EST 2023" starttimestamp="1701628917814" timestamp="6465736" />
  <Command __id="2783" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:29:43 EST 2023" starttimestamp="1701628917814" timestamp="6465834" />
  <Command __id="2784" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:29:43 EST 2023" starttimestamp="1701628917814" timestamp="6465840" />
  <Command __id="2786" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:29:46 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6468856" />
  <Command __id="2787" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 15:29:48 EST 2023" starttimestamp="1701628917814" timestamp="6470387" />
  <Command __id="2788" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:29:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6470560" type="Run" />
  <Command __id="2789" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:29:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6470560" type="Run" />
  <Command __id="2785" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:29:46 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6468822">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2790" _type="ConsoleInput" date="Sun Dec 03 15:29:51 EST 2023" starttimestamp="1701628917814" timestamp="6473511" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="2791" _type="ConsoleOutput" date="Sun Dec 03 15:29:51 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6473557" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2792" _type="ConsoleOutput" date="Sun Dec 03 15:29:51 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="6473561" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:28)
	at index.AndEvaluator.eval(AndEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:11)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.AndEvaluator.evalHelper(AndEvaluator.java:28)¶	at index.AndEvaluator.eval(AndEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2793" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:29:51 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6473573" type="Debug" />
  <Command __id="2794" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:29:51 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6473573" type="Run" />
  <Command __id="2795" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:29:51 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6473573" type="Debug" />
  <Command __id="2796" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:29:51 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6473573" type="Run" />
  <Command __id="2798" _type="MoveCaretCommand" caretOffset="486" date="Sun Dec 03 15:29:55 EST 2023" docOffset="567" starttimestamp="1701628917814" timestamp="6477917" />
  <Command __id="2797" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:29:55 EST 2023" docASTNodeCount="131" docActiveCodeLength="763" docExpressionCount="86" docLength="814" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6477876">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1."), Diff(DELETE,"getHead("), Diff(INSERT,"eval(environment"), Diff(EQUAL,");			return evalHelper(temp2, environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
//			System.out.println(expr.getTail().toString());
			SExpression temp1 = expr.getTail();
			SExpression temp2 = temp1.eval(environment);
			return evalHelper(temp2, environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="2799" _type="MoveCaretCommand" caretOffset="454" date="Sun Dec 03 15:30:00 EST 2023" docOffset="535" starttimestamp="1701628917814" timestamp="6482905" />
  <Command __id="2800" _type="MoveCaretCommand" caretOffset="454" date="Sun Dec 03 15:30:00 EST 2023" docOffset="535" starttimestamp="1701628917814" timestamp="6482905" />
  <Command __id="2801" _type="MoveCaretCommand" caretOffset="457" date="Sun Dec 03 15:30:01 EST 2023" docOffset="538" starttimestamp="1701628917814" timestamp="6483569" />
  <Command __id="2802" _type="MoveCaretCommand" caretOffset="457" date="Sun Dec 03 15:30:01 EST 2023" docOffset="538" starttimestamp="1701628917814" timestamp="6483569" />
  <Command __id="2803" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:30:01 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="6483795" />
  <Command __id="2804" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:30:01 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="6483795" />
  <DocumentChange __id="2805" _type="Insert" date="Sun Dec 03 15:30:02 EST 2023" docASTNodeCount="135" docActiveCodeLength="775" docExpressionCount="89" docLength="826" length="12" offset="518" repeat="10" starttimestamp="1701628917814" timestamp="6484799" timestamp2="6486901">
    <text><![CDATA[
		expr.eavl]]></text>
  </DocumentChange>
  <Command __id="2806" _type="InsertStringCommand" date="Sun Dec 03 15:30:02 EST 2023" starttimestamp="1701628917814" timestamp="6484802" timestamp2="6484802">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2807" _type="InsertStringCommand" date="Sun Dec 03 15:30:02 EST 2023" starttimestamp="1701628917814" timestamp="6484802" timestamp2="6484802">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2809" _type="InsertStringCommand" date="Sun Dec 03 15:30:02 EST 2023" starttimestamp="1701628917814" timestamp="6485171" timestamp2="6485171">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2810" _type="InsertStringCommand" date="Sun Dec 03 15:30:02 EST 2023" starttimestamp="1701628917814" timestamp="6485171" timestamp2="6485171">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2812" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485362" timestamp2="6485362">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2813" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485362" timestamp2="6485362">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2815" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485465" timestamp2="6485465">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2816" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485465" timestamp2="6485465">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2818" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485544" timestamp2="6485544">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2819" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485544" timestamp2="6485544">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2821" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485650" timestamp2="6485650">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2822" _type="InsertStringCommand" date="Sun Dec 03 15:30:03 EST 2023" starttimestamp="1701628917814" timestamp="6485650" timestamp2="6485650">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2823" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:30:03 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6485656" />
  <Command __id="2827" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:30:04 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6486812" />
  <Command __id="2829" _type="InsertStringCommand" date="Sun Dec 03 15:30:04 EST 2023" starttimestamp="1701628917814" timestamp="6486902" timestamp2="6486902">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2830" _type="InsertStringCommand" date="Sun Dec 03 15:30:04 EST 2023" starttimestamp="1701628917814" timestamp="6486902" timestamp2="6486902">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="2831" _type="Delete" date="Sun Dec 03 15:30:05 EST 2023" docASTNodeCount="135" docActiveCodeLength="772" docExpressionCount="89" docLength="823" endLine="22" length="3" offset="527" repeat="3" startLine="22" starttimestamp="1701628917814" timestamp="6487406" timestamp2="6487641">
    <text><![CDATA[avl]]></text>
  </DocumentChange>
  <Command __id="2832" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487409" />
  <Command __id="2833" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487409" />
  <Command __id="2835" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487510" />
  <Command __id="2836" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487510" />
  <Command __id="2838" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487643" />
  <Command __id="2839" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487643" />
  <DocumentChange __id="2840" _type="Insert" date="Sun Dec 03 15:30:05 EST 2023" docASTNodeCount="135" docActiveCodeLength="775" docExpressionCount="89" docLength="826" length="3" offset="527" repeat="3" starttimestamp="1701628917814" timestamp="6487792" timestamp2="6487927">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <Command __id="2841" _type="InsertStringCommand" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487794" timestamp2="6487794">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2842" _type="InsertStringCommand" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487794" timestamp2="6487794">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2844" _type="InsertStringCommand" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487852" timestamp2="6487852">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2845" _type="InsertStringCommand" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487852" timestamp2="6487852">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2847" _type="InsertStringCommand" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487929" timestamp2="6487929">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2848" _type="InsertStringCommand" date="Sun Dec 03 15:30:05 EST 2023" starttimestamp="1701628917814" timestamp="6487929" timestamp2="6487929">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="2849" _type="Delete" date="Sun Dec 03 15:30:06 EST 2023" docASTNodeCount="131" docActiveCodeLength="766" docExpressionCount="86" docLength="817" endLine="22" length="9" offset="521" repeat="9" startLine="22" starttimestamp="1701628917814" timestamp="6488740" timestamp2="6490045">
    <text><![CDATA[expr.eval]]></text>
  </DocumentChange>
  <Command __id="2850" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6488742" />
  <Command __id="2851" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6488742" />
  <Command __id="2853" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6488861" />
  <Command __id="2854" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6488861" />
  <Command __id="2856" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6488983" />
  <Command __id="2857" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6488983" />
  <Command __id="2859" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6489129" />
  <Command __id="2860" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:06 EST 2023" starttimestamp="1701628917814" timestamp="6489129" />
  <Command __id="2862" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489544" />
  <Command __id="2863" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489544" />
  <Command __id="2865" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489638" />
  <Command __id="2866" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489638" />
  <Command __id="2868" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489775" />
  <Command __id="2869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489776" />
  <Command __id="2871" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489913" />
  <Command __id="2872" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6489913" />
  <Command __id="2874" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6490047" />
  <Command __id="2875" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:07 EST 2023" starttimestamp="1701628917814" timestamp="6490047" />
  <Command __id="2877" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6490343" timestamp2="6490343">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2878" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6490343" timestamp2="6490343">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2880" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6490540" timestamp2="6490540">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2881" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6490540" timestamp2="6490540">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2883" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6491024" timestamp2="6491024">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2884" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6491024" timestamp2="6491024">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2886" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6491182" timestamp2="6491182">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2887" _type="InsertStringCommand" date="Sun Dec 03 15:30:08 EST 2023" starttimestamp="1701628917814" timestamp="6491182" timestamp2="6491182">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2889" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491321" timestamp2="6491321">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2890" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491321" timestamp2="6491321">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2892" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491382" timestamp2="6491382">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2893" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491382" timestamp2="6491382">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2895" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491515" timestamp2="6491515">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2896" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491515" timestamp2="6491515">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2898" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491664" timestamp2="6491664">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2899" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491664" timestamp2="6491664">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2901" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491801" timestamp2="6491801">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2902" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491801" timestamp2="6491801">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2904" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491854" timestamp2="6491854">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2905" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491854" timestamp2="6491854">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2907" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491944" timestamp2="6491944">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2908" _type="InsertStringCommand" date="Sun Dec 03 15:30:09 EST 2023" starttimestamp="1701628917814" timestamp="6491944" timestamp2="6491944">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2910" _type="InsertStringCommand" date="Sun Dec 03 15:30:10 EST 2023" starttimestamp="1701628917814" timestamp="6492297" timestamp2="6492297">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2911" _type="InsertStringCommand" date="Sun Dec 03 15:30:10 EST 2023" starttimestamp="1701628917814" timestamp="6492297" timestamp2="6492297">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2912" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:30:10 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6492305" />
  <DocumentChange __id="2876" _type="Insert" date="Sun Dec 03 15:30:08 EST 2023" docASTNodeCount="133" docActiveCodeLength="778" docExpressionCount="87" docLength="829" length="12" offset="521" repeat="12" starttimestamp="1701628917814" timestamp="6490341" timestamp2="6492295">
    <text><![CDATA[SExpression.]]></text>
  </DocumentChange>
  <DocumentChange __id="2913" _type="Delete" date="Sun Dec 03 15:30:10 EST 2023" docASTNodeCount="133" docActiveCodeLength="777" docExpressionCount="87" docLength="828" endLine="22" length="1" offset="532" startLine="22" starttimestamp="1701628917814" timestamp="6492887">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2915" _type="Replace" date="Sun Dec 03 15:30:12 EST 2023" docASTNodeCount="133" docActiveCodeLength="778" docExpressionCount="87" docLength="829" endLine="22" insertionLength="12" int_docASTNodeCount="131" int_docActiveCodeLength="766" int_docExpressionCount="86" int_docLength="817" length="11" offset="521" startLine="22" starttimestamp="1701628917814" timestamp="6494357">
    <deletedText><![CDATA[SExpression]]></deletedText>
    <insertedText><![CDATA[SExpression ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2918" _type="Insert" date="Sun Dec 03 15:30:12 EST 2023" docASTNodeCount="136" docActiveCodeLength="784" docExpressionCount="88" docLength="835" length="6" offset="533" repeat="6" starttimestamp="1701628917814" timestamp="6494860" timestamp2="6495339">
    <text><![CDATA[temppp]]></text>
  </DocumentChange>
  <DocumentChange __id="2936" _type="Delete" date="Sun Dec 03 15:30:13 EST 2023" docASTNodeCount="136" docActiveCodeLength="783" docExpressionCount="88" docLength="834" endLine="22" length="1" offset="538" startLine="22" starttimestamp="1701628917814" timestamp="6495822">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="2914" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:30:12 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6494354" />
  <Command __id="2916" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6494361" timestamp2="6494361">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2917" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6494361" timestamp2="6494361">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2919" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6494862" timestamp2="6494862">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2920" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6494862" timestamp2="6494862">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2922" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6494930" timestamp2="6494930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2923" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6494930" timestamp2="6494930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2925" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6495008" timestamp2="6495008">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2926" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6495008" timestamp2="6495008">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2928" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6495071" timestamp2="6495071">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2929" _type="InsertStringCommand" date="Sun Dec 03 15:30:12 EST 2023" starttimestamp="1701628917814" timestamp="6495071" timestamp2="6495071">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2931" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6495223" timestamp2="6495223">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2932" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6495223" timestamp2="6495223">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2934" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6495342" timestamp2="6495342">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2935" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6495342" timestamp2="6495342">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6495824" />
  <Command __id="2938" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6495824" />
  <Command __id="2940" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6496063" timestamp2="6496063">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2941" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6496063" timestamp2="6496063">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2943" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6496085" timestamp2="6496085">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2944" _type="InsertStringCommand" date="Sun Dec 03 15:30:13 EST 2023" starttimestamp="1701628917814" timestamp="6496085" timestamp2="6496085">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2946" _type="InsertStringCommand" date="Sun Dec 03 15:30:14 EST 2023" starttimestamp="1701628917814" timestamp="6496210" timestamp2="6496210">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2947" _type="InsertStringCommand" date="Sun Dec 03 15:30:14 EST 2023" starttimestamp="1701628917814" timestamp="6496210" timestamp2="6496210">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2949" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497519" timestamp2="6497519">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2950" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497519" timestamp2="6497519">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2952" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497699" timestamp2="6497699">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2953" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497699" timestamp2="6497699">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2955" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497779" timestamp2="6497779">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2956" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497779" timestamp2="6497779">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2958" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497885" timestamp2="6497885">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2959" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6497885" timestamp2="6497885">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2961" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6498008" timestamp2="6498008">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2962" _type="InsertStringCommand" date="Sun Dec 03 15:30:15 EST 2023" starttimestamp="1701628917814" timestamp="6498008" timestamp2="6498008">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2963" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:30:15 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6498015" />
  <Command __id="2969" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:30:16 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6498951" />
  <Command __id="2971" _type="InsertStringCommand" date="Sun Dec 03 15:30:16 EST 2023" starttimestamp="1701628917814" timestamp="6498958" timestamp2="6498958">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2972" _type="InsertStringCommand" date="Sun Dec 03 15:30:16 EST 2023" starttimestamp="1701628917814" timestamp="6498958" timestamp2="6498958">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2974" _type="InsertStringCommand" date="Sun Dec 03 15:30:16 EST 2023" starttimestamp="1701628917814" timestamp="6499168" timestamp2="6499168">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2975" _type="InsertStringCommand" date="Sun Dec 03 15:30:16 EST 2023" starttimestamp="1701628917814" timestamp="6499168" timestamp2="6499168">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2976" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:30:18 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="6500281" />
  <Command __id="2977" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 15:30:18 EST 2023" docOffset="518" starttimestamp="1701628917814" timestamp="6500281" />
  <Command __id="2978" _type="MoveCaretCommand" caretOffset="400" date="Sun Dec 03 15:30:19 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="6501667" />
  <Command __id="2979" _type="MoveCaretCommand" caretOffset="400" date="Sun Dec 03 15:30:19 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="6501667" />
  <Command __id="2980" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:30:19 EST 2023" starttimestamp="1701628917814" timestamp="6501848" />
  <Command __id="2981" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:30:19 EST 2023" starttimestamp="1701628917814" timestamp="6501947" />
  <Command __id="2982" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:30:19 EST 2023" starttimestamp="1701628917814" timestamp="6501953" />
  <Command __id="2984" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:30:20 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6502377" />
  <Command __id="2985" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 15:30:21 EST 2023" starttimestamp="1701628917814" timestamp="6504083" />
  <Command __id="2986" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:30:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6504186" type="Run" />
  <Command __id="2987" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:30:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6504186" type="Run" />
  <Command __id="2988" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:22 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6504295" type="Run" />
  <Command __id="2989" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:22 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6504295" type="Run" />
  <Command __id="2990" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:22 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6504303" type="Run" />
  <Command __id="2991" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:22 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6504434" type="Run" />
  <Command __id="2992" _type="ConsoleInput" date="Sun Dec 03 15:30:26 EST 2023" starttimestamp="1701628917814" timestamp="6508464" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="2993" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:26 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6508627" type="Run" />
  <Command __id="2994" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:30:28 EST 2023" starttimestamp="1701628917814" timestamp="6510561" />
  <Command __id="2995" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:28 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6510564" type="Run" />
  <Command __id="2996" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 15:30:29 EST 2023" starttimestamp="1701628917814" timestamp="6511487" />
  <Command __id="2997" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:29 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6511490" type="Run" />
  <Command __id="2998" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:30:31 EST 2023" starttimestamp="1701628917814" timestamp="6513675" />
  <Command __id="2999" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:30:31 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6513679" type="Run" />
  <Command __id="3006" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:31:51 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6593337" type="Run" />
  <Command __id="3007" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:31:56 EST 2023" starttimestamp="1701628917814" timestamp="6598614" />
  <Command __id="3008" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:31:56 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6598617" type="Run" />
  <Command __id="3012" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:25 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6687199" type="Run" />
  <Command __id="3013" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 15:33:26 EST 2023" starttimestamp="1701628917814" timestamp="6689083" />
  <Command __id="3014" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6689089" type="Debug" />
  <Command __id="3015" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:33:26 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6689089" type="Run" />
  <Command __id="3016" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6689089" type="Debug" />
  <Command __id="3017" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:33:26 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6689089" type="Run" />
  <DocumentChange __id="2939" _type="Insert" date="Sun Dec 03 15:30:13 EST 2023" docASTNodeCount="139" docActiveCodeLength="796" docExpressionCount="91" docLength="847" length="13" offset="538" repeat="13" starttimestamp="1701628917814" timestamp="6496060" timestamp2="6498771">
    <text><![CDATA[ = expr.getHe]]></text>
  </DocumentChange>
  <DocumentChange __id="2970" _type="Replace" date="Sun Dec 03 15:30:16 EST 2023" docASTNodeCount="139" docActiveCodeLength="800" docExpressionCount="91" docLength="851" endLine="22" insertionLength="9" int_docASTNodeCount="137" int_docActiveCodeLength="791" int_docExpressionCount="89" int_docLength="842" length="5" offset="546" startLine="22" starttimestamp="1701628917814" timestamp="6498954">
    <deletedText><![CDATA[getHe]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2973" _type="Insert" date="Sun Dec 03 15:30:16 EST 2023" docASTNodeCount="139" docActiveCodeLength="801" docExpressionCount="91" docLength="852" length="1" offset="555" starttimestamp="1701628917814" timestamp="6499165">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="2983" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:30:20 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6502353">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3018" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 15:33:34 EST 2023" starttimestamp="1701628917814" timestamp="6696988" />
  <Command __id="3019" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:33:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6697103" type="Run" />
  <Command __id="3020" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:33:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6697103" type="Run" />
  <Command __id="3021" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:35 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6697214" type="Run" />
  <Command __id="3022" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:35 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6697225" type="Run" />
  <Command __id="3023" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:35 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6697355" type="Run" />
  <Command __id="3025" _type="MoveCaretCommand" caretOffset="670" date="Sun Dec 03 15:33:36 EST 2023" docOffset="751" starttimestamp="1701628917814" timestamp="6698702" />
  <Command __id="3026" _type="ShellCommand" date="Sun Dec 03 15:33:40 EST 2023" starttimestamp="1701628917814" timestamp="6703086" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3027" _type="ShellCommand" date="Sun Dec 03 15:33:47 EST 2023" starttimestamp="1701628917814" timestamp="6709702" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3028" _type="PasteCommand" date="Sun Dec 03 15:33:47 EST 2023" starttimestamp="1701628917814" timestamp="6709982" />
  <Command __id="3029" _type="ConsoleInput" date="Sun Dec 03 15:33:50 EST 2023" starttimestamp="1701628917814" timestamp="6712763" type="Exception">
    <outputString><![CDATA[(AND T (- 3 1))
]]></outputString>
  </Command>
  <Command __id="3030" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:50 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6712930" type="Run" />
  <Command __id="3031" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:33:52 EST 2023" starttimestamp="1701628917814" timestamp="6714629" />
  <Command __id="3032" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6714632" type="Run" />
  <Command __id="3033" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 15:33:53 EST 2023" starttimestamp="1701628917814" timestamp="6715705" />
  <Command __id="3034" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:53 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6715707" type="Run" />
  <Command __id="3035" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:33:55 EST 2023" starttimestamp="1701628917814" timestamp="6717836" />
  <Command __id="3036" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:55 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6717840" type="Run" />
  <Command __id="3037" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:33:57 EST 2023" starttimestamp="1701628917814" timestamp="6720010" />
  <Command __id="3038" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:57 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6720012" type="Run" />
  <Command __id="3039" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:33:59 EST 2023" starttimestamp="1701628917814" timestamp="6721733" />
  <Command __id="3040" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:33:59 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6721736" type="Run" />
  <Command __id="3043" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:34:02 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6724914" type="Run" />
  <Command __id="3044" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 15:34:18 EST 2023" starttimestamp="1701628917814" timestamp="6740242" />
  <Command __id="3045" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:34:18 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6740249" type="Debug" />
  <Command __id="3046" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:34:18 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6740249" type="Run" />
  <Command __id="3047" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:34:18 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6740249" type="Debug" />
  <Command __id="3048" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:34:18 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6740249" type="Run" />
  <Command __id="3024" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:33:36 EST 2023" docASTNodeCount="139" docActiveCodeLength="801" docExpressionCount="91" docLength="852" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6698667">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		"), Diff(INSERT,"SExpression tempp = expr.getHead();		"), Diff(EQUAL,"if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.eval(environment);			return evalHelper(temp2, environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		SExpression tempp = expr.getHead();
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
//			System.out.println(expr.getTail().toString());
			SExpression temp1 = expr.getTail();
			SExpression temp2 = temp1.eval(environment);
			return evalHelper(temp2, environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="3049" _type="MoveCaretCommand" caretOffset="717" date="Sun Dec 03 15:34:19 EST 2023" docOffset="798" starttimestamp="1701628917814" timestamp="6741259" />
  <Command __id="3050" _type="MoveCaretCommand" caretOffset="717" date="Sun Dec 03 15:34:19 EST 2023" docOffset="798" starttimestamp="1701628917814" timestamp="6741259" />
  <Command __id="3051" _type="MoveCaretCommand" caretOffset="669" date="Sun Dec 03 15:34:19 EST 2023" docOffset="750" starttimestamp="1701628917814" timestamp="6742055" />
  <Command __id="3052" _type="MoveCaretCommand" caretOffset="669" date="Sun Dec 03 15:34:19 EST 2023" docOffset="750" starttimestamp="1701628917814" timestamp="6742056" />
  <Command __id="3053" _type="MoveCaretCommand" caretOffset="717" date="Sun Dec 03 15:34:20 EST 2023" docOffset="798" starttimestamp="1701628917814" timestamp="6742338" />
  <Command __id="3054" _type="MoveCaretCommand" caretOffset="717" date="Sun Dec 03 15:34:20 EST 2023" docOffset="798" starttimestamp="1701628917814" timestamp="6742338" />
  <Command __id="3055" _type="MoveCaretCommand" caretOffset="669" date="Sun Dec 03 15:34:20 EST 2023" docOffset="750" starttimestamp="1701628917814" timestamp="6742609" />
  <Command __id="3056" _type="MoveCaretCommand" caretOffset="669" date="Sun Dec 03 15:34:20 EST 2023" docOffset="750" starttimestamp="1701628917814" timestamp="6742609" />
  <Command __id="3057" _type="MoveCaretCommand" caretOffset="717" date="Sun Dec 03 15:34:20 EST 2023" docOffset="798" starttimestamp="1701628917814" timestamp="6742821" />
  <Command __id="3058" _type="MoveCaretCommand" caretOffset="717" date="Sun Dec 03 15:34:20 EST 2023" docOffset="798" starttimestamp="1701628917814" timestamp="6742822" />
  <Command __id="3059" _type="MoveCaretCommand" caretOffset="669" date="Sun Dec 03 15:34:21 EST 2023" docOffset="750" starttimestamp="1701628917814" timestamp="6743296" />
  <Command __id="3060" _type="MoveCaretCommand" caretOffset="669" date="Sun Dec 03 15:34:21 EST 2023" docOffset="750" starttimestamp="1701628917814" timestamp="6743296" />
  <DocumentChange __id="3061" _type="Insert" date="Sun Dec 03 15:34:22 EST 2023" docASTNodeCount="142" docActiveCodeLength="807" docExpressionCount="93" docLength="858" length="6" offset="750" repeat="3" starttimestamp="1701628917814" timestamp="6744257" timestamp2="6745967">
    <text><![CDATA[
			SE]]></text>
  </DocumentChange>
  <Command __id="3062" _type="InsertStringCommand" date="Sun Dec 03 15:34:22 EST 2023" starttimestamp="1701628917814" timestamp="6744261" timestamp2="6744261">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3063" _type="InsertStringCommand" date="Sun Dec 03 15:34:22 EST 2023" starttimestamp="1701628917814" timestamp="6744261" timestamp2="6744261">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3065" _type="InsertStringCommand" date="Sun Dec 03 15:34:23 EST 2023" starttimestamp="1701628917814" timestamp="6745388" timestamp2="6745388">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3066" _type="InsertStringCommand" date="Sun Dec 03 15:34:23 EST 2023" starttimestamp="1701628917814" timestamp="6745388" timestamp2="6745388">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3068" _type="InsertStringCommand" date="Sun Dec 03 15:34:23 EST 2023" starttimestamp="1701628917814" timestamp="6745970" timestamp2="6745970">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3069" _type="InsertStringCommand" date="Sun Dec 03 15:34:23 EST 2023" starttimestamp="1701628917814" timestamp="6745970" timestamp2="6745970">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3071" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:25 EST 2023" starttimestamp="1701628917814" timestamp="6748151" />
  <Command __id="3072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:25 EST 2023" starttimestamp="1701628917814" timestamp="6748151" />
  <Command __id="3074" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6748283" />
  <Command __id="3075" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6748283" />
  <Command __id="3077" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6748537" />
  <Command __id="3078" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6748537" />
  <Command __id="3080" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6748794" />
  <Command __id="3081" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6748794" />
  <Command __id="3083" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6749033" />
  <Command __id="3084" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:26 EST 2023" starttimestamp="1701628917814" timestamp="6749034" />
  <Command __id="3086" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:27 EST 2023" starttimestamp="1701628917814" timestamp="6749263" />
  <Command __id="3087" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:27 EST 2023" starttimestamp="1701628917814" timestamp="6749263" />
  <DocumentChange __id="3070" _type="Delete" date="Sun Dec 03 15:34:25 EST 2023" docASTNodeCount="139" docActiveCodeLength="801" docExpressionCount="91" docLength="852" endLine="28" length="6" offset="750" repeat="6" startLine="27" starttimestamp="1701628917814" timestamp="6748149" timestamp2="6749259">
    <text><![CDATA[
			SE]]></text>
  </DocumentChange>
  <DocumentChange __id="3090" _type="Replace" date="Sun Dec 03 15:34:29 EST 2023" docASTNodeCount="138" docActiveCodeLength="784" docExpressionCount="90" docLength="835" endLine="28" insertionLength="1" int_docASTNodeCount="135" int_docActiveCodeLength="783" int_docExpressionCount="88" int_docLength="834" length="18" offset="780" startLine="28" starttimestamp="1701628917814" timestamp="6751392">
    <deletedText><![CDATA[eval(environment);]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3093" _type="Insert" date="Sun Dec 03 15:34:29 EST 2023" docASTNodeCount="123" docActiveCodeLength="793" docExpressionCount="78" docLength="844" length="9" offset="781" repeat="8" starttimestamp="1701628917814" timestamp="6751430" timestamp2="6753285">
    <text><![CDATA[etHead(.)]]></text>
  </DocumentChange>
  <DocumentChange __id="3118" _type="Delete" date="Sun Dec 03 15:34:31 EST 2023" docASTNodeCount="138" docActiveCodeLength="792" docExpressionCount="90" docLength="843" endLine="28" length="1" offset="788" startLine="28" starttimestamp="1701628917814" timestamp="6753595">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3088" _type="SelectTextCommand" caretOffset="699" date="Sun Dec 03 15:34:28 EST 2023" end="717" start="699" starttimestamp="1701628917814" timestamp="6751082" />
  <Command __id="3089" _type="SelectTextCommand" caretOffset="699" date="Sun Dec 03 15:34:28 EST 2023" end="717" start="699" starttimestamp="1701628917814" timestamp="6751082" />
  <Command __id="3091" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751397" timestamp2="6751397">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3092" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751397" timestamp2="6751397">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3094" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751432" timestamp2="6751432">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3095" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751432" timestamp2="6751432">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3097" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751587" timestamp2="6751587">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3098" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751587" timestamp2="6751587">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3100" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751961" timestamp2="6751961">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="3101" _type="InsertStringCommand" date="Sun Dec 03 15:34:29 EST 2023" starttimestamp="1701628917814" timestamp="6751961" timestamp2="6751961">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="3103" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752526" timestamp2="6752526">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3104" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752526" timestamp2="6752526">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3106" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752603" timestamp2="6752603">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3107" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752603" timestamp2="6752603">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3109" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752726" timestamp2="6752726">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3110" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752726" timestamp2="6752726">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3112" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752905" timestamp2="6752905">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3113" _type="InsertStringCommand" date="Sun Dec 03 15:34:30 EST 2023" starttimestamp="1701628917814" timestamp="6752906" timestamp2="6752906">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3115" _type="InsertStringCommand" date="Sun Dec 03 15:34:31 EST 2023" starttimestamp="1701628917814" timestamp="6753287" timestamp2="6753287">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3116" _type="InsertStringCommand" date="Sun Dec 03 15:34:31 EST 2023" starttimestamp="1701628917814" timestamp="6753287" timestamp2="6753287">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3117" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:34:31 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6753295" />
  <Command __id="3119" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:34:32 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6754585" />
  <Command __id="3120" _type="InsertStringCommand" date="Sun Dec 03 15:34:32 EST 2023" starttimestamp="1701628917814" timestamp="6754588" timestamp2="6754588">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3121" _type="InsertStringCommand" date="Sun Dec 03 15:34:32 EST 2023" starttimestamp="1701628917814" timestamp="6754588" timestamp2="6754588">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="3122" _type="Insert" date="Sun Dec 03 15:34:34 EST 2023" docASTNodeCount="138" docActiveCodeLength="797" docExpressionCount="90" docLength="848" length="5" offset="789" repeat="2" starttimestamp="1701628917814" timestamp="6756188" timestamp2="6756322">
    <text><![CDATA[;
			]]></text>
  </DocumentChange>
  <Command __id="3123" _type="InsertStringCommand" date="Sun Dec 03 15:34:34 EST 2023" starttimestamp="1701628917814" timestamp="6756192" timestamp2="6756192">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3124" _type="InsertStringCommand" date="Sun Dec 03 15:34:34 EST 2023" starttimestamp="1701628917814" timestamp="6756192" timestamp2="6756192">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3126" _type="InsertStringCommand" date="Sun Dec 03 15:34:34 EST 2023" starttimestamp="1701628917814" timestamp="6756326" timestamp2="6756326">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3127" _type="InsertStringCommand" date="Sun Dec 03 15:34:34 EST 2023" starttimestamp="1701628917814" timestamp="6756327" timestamp2="6756327">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:38 EST 2023" starttimestamp="1701628917814" timestamp="6760872" />
  <Command __id="3130" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:38 EST 2023" starttimestamp="1701628917814" timestamp="6760872" />
  <Command __id="3132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:38 EST 2023" starttimestamp="1701628917814" timestamp="6760993" />
  <Command __id="3133" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:38 EST 2023" starttimestamp="1701628917814" timestamp="6760993" />
  <Command __id="3135" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:39 EST 2023" starttimestamp="1701628917814" timestamp="6761312" />
  <Command __id="3136" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:39 EST 2023" starttimestamp="1701628917814" timestamp="6761312" />
  <Command __id="3138" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:39 EST 2023" starttimestamp="1701628917814" timestamp="6761480" />
  <Command __id="3139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:34:39 EST 2023" starttimestamp="1701628917814" timestamp="6761480" />
  <Command __id="3140" _type="MoveCaretCommand" caretOffset="736" date="Sun Dec 03 15:34:40 EST 2023" docOffset="817" starttimestamp="1701628917814" timestamp="6762678" />
  <Command __id="3141" _type="MoveCaretCommand" caretOffset="736" date="Sun Dec 03 15:34:40 EST 2023" docOffset="817" starttimestamp="1701628917814" timestamp="6762679" />
  <Command __id="3143" _type="InsertStringCommand" date="Sun Dec 03 15:34:41 EST 2023" starttimestamp="1701628917814" timestamp="6763472" timestamp2="6763472">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3144" _type="InsertStringCommand" date="Sun Dec 03 15:34:41 EST 2023" starttimestamp="1701628917814" timestamp="6763472" timestamp2="6763472">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3145" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 15:34:41 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="6763480" />
  <Command __id="3150" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 15:34:42 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="6764240" />
  <Command __id="3152" _type="InsertStringCommand" date="Sun Dec 03 15:34:42 EST 2023" starttimestamp="1701628917814" timestamp="6764255" timestamp2="6764255">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3153" _type="InsertStringCommand" date="Sun Dec 03 15:34:42 EST 2023" starttimestamp="1701628917814" timestamp="6764255" timestamp2="6764255">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3154" _type="InsertStringCommand" date="Sun Dec 03 15:34:42 EST 2023" starttimestamp="1701628917814" timestamp="6764327" timestamp2="6764327">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3155" _type="InsertStringCommand" date="Sun Dec 03 15:34:42 EST 2023" starttimestamp="1701628917814" timestamp="6764327" timestamp2="6764327">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3156" _type="SelectTextCommand" caretOffset="630" date="Sun Dec 03 15:34:43 EST 2023" end="630" start="578" starttimestamp="1701628917814" timestamp="6765620" />
  <Command __id="3157" _type="SelectTextCommand" caretOffset="630" date="Sun Dec 03 15:34:43 EST 2023" end="630" start="578" starttimestamp="1701628917814" timestamp="6765621" />
  <Command __id="3158" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 15:34:43 EST 2023" starttimestamp="1701628917814" timestamp="6766013" />
  <Command __id="3159" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:34:44 EST 2023" starttimestamp="1701628917814" timestamp="6766857" />
  <Command __id="3160" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:34:44 EST 2023" starttimestamp="1701628917814" timestamp="6766866" />
  <Command __id="3161" _type="MoveCaretCommand" caretOffset="693" date="Sun Dec 03 15:34:44 EST 2023" docOffset="774" starttimestamp="1701628917814" timestamp="6766924" />
  <Command __id="3162" _type="MoveCaretCommand" caretOffset="693" date="Sun Dec 03 15:34:44 EST 2023" docOffset="774" starttimestamp="1701628917814" timestamp="6766924" />
  <Command __id="3164" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:34:45 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6767939" />
  <Command __id="3165" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 15:34:47 EST 2023" starttimestamp="1701628917814" timestamp="6769466" />
  <Command __id="3166" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:34:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6769643" type="Run" />
  <Command __id="3167" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:34:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6769643" type="Run" />
  <Command __id="3169" _type="MoveCaretCommand" caretOffset="693" date="Sun Dec 03 15:34:47 EST 2023" docOffset="774" starttimestamp="1701628917814" timestamp="6769764" />
  <DocumentChange __id="3128" _type="Delete" date="Sun Dec 03 15:34:38 EST 2023" docASTNodeCount="138" docActiveCodeLength="793" docExpressionCount="90" docLength="844" endLine="29" length="4" offset="790" repeat="4" startLine="28" starttimestamp="1701628917814" timestamp="6760870" timestamp2="6761476">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="3142" _type="Insert" date="Sun Dec 03 15:34:41 EST 2023" docASTNodeCount="140" docActiveCodeLength="798" docExpressionCount="92" docLength="849" length="5" offset="817" repeat="5" starttimestamp="1701628917814" timestamp="6763468" timestamp2="6764000">
    <text><![CDATA[.eval]]></text>
  </DocumentChange>
  <DocumentChange __id="3151" _type="Replace" date="Sun Dec 03 15:34:42 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" endLine="29" insertionLength="17" int_docASTNodeCount="139" int_docActiveCodeLength="794" int_docExpressionCount="91" int_docLength="845" length="4" offset="818" startLine="29" starttimestamp="1701628917814" timestamp="6764241">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="3163" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:34:45 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6767898">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3168" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:34:47 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6769737">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1."), Diff(DELETE,"eval(environment"), Diff(INSERT,"getHead("), Diff(EQUAL,");			return evalHelper(temp2"), Diff(INSERT,".eval(environment)"), Diff(EQUAL,", environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		SExpression tempp = expr.getHead();
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
//			System.out.println(expr.getTail().toString());
			SExpression temp1 = expr.getTail();
			SExpression temp2 = temp1.getHead();
			return evalHelper(temp2.eval(environment), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="3172" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:34:53 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6775592" type="Debug" />
  <Command __id="3173" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:34:53 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6775593" type="Run" />
  <Command __id="3174" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:34:53 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6775593" type="Debug" />
  <Command __id="3175" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:34:53 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6775593" type="Run" />
  <Command __id="3176" _type="MoveCaretCommand" caretOffset="709" date="Sun Dec 03 15:34:54 EST 2023" docOffset="790" starttimestamp="1701628917814" timestamp="6776333" />
  <Command __id="3177" _type="MoveCaretCommand" caretOffset="709" date="Sun Dec 03 15:34:54 EST 2023" docOffset="790" starttimestamp="1701628917814" timestamp="6776333" />
  <Command __id="3179" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:35:48 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="6830440" />
  <Command __id="3180" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 15:35:50 EST 2023" starttimestamp="1701628917814" timestamp="6832845" />
  <Command __id="3181" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:35:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6832954" type="Run" />
  <Command __id="3182" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:35:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6832954" type="Run" />
  <Command __id="3183" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:35:50 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6833063" type="Run" />
  <Command __id="3184" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:35:50 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6833073" type="Run" />
  <Command __id="3185" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:35:51 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6833207" type="Run" />
  <Command __id="3186" _type="ShellCommand" date="Sun Dec 03 15:35:53 EST 2023" starttimestamp="1701628917814" timestamp="6835197" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3187" _type="ShellCommand" date="Sun Dec 03 15:35:56 EST 2023" starttimestamp="1701628917814" timestamp="6838813" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3188" _type="PasteCommand" date="Sun Dec 03 15:35:56 EST 2023" starttimestamp="1701628917814" timestamp="6839086" />
  <Command __id="3189" _type="ConsoleInput" date="Sun Dec 03 15:36:03 EST 2023" starttimestamp="1701628917814" timestamp="6845427" type="Exception">
    <outputString><![CDATA[(AND (/= 3 4) (> 3 2) (+ 8 9))T
]]></outputString>
  </Command>
  <Command __id="3190" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:03 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6845581" type="Run" />
  <Command __id="3191" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:36:05 EST 2023" starttimestamp="1701628917814" timestamp="6847234" />
  <Command __id="3192" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:05 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6847238" type="Run" />
  <Command __id="3193" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 15:36:05 EST 2023" starttimestamp="1701628917814" timestamp="6847680" />
  <Command __id="3194" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:05 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6847683" type="Run" />
  <Command __id="3195" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:36:07 EST 2023" starttimestamp="1701628917814" timestamp="6850004" />
  <Command __id="3196" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:07 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6850007" type="Run" />
  <Command __id="3197" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:36:08 EST 2023" starttimestamp="1701628917814" timestamp="6851047" />
  <Command __id="3198" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:08 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6851052" type="Run" />
  <Command __id="3199" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:36:09 EST 2023" starttimestamp="1701628917814" timestamp="6851657" />
  <Command __id="3200" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:09 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6851660" type="Run" />
  <Command __id="3203" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:13 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6855345" type="Run" />
  <Command __id="3207" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:24 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6866791" type="Run" />
  <Command __id="3178" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:35:48 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6830394">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3208" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 15:36:32 EST 2023" starttimestamp="1701628917814" timestamp="6874867" />
  <Command __id="3209" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:32 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6874875" type="Debug" />
  <Command __id="3210" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:36:32 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6874875" type="Run" />
  <Command __id="3211" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:36:32 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="6874875" type="Debug" />
  <Command __id="3212" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:36:32 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6874875" type="Run" />
  <Command __id="3214" _type="MoveCaretCommand" caretOffset="212" date="Sun Dec 03 15:37:39 EST 2023" docOffset="293" starttimestamp="1701628917814" timestamp="6942175" />
  <Command __id="3215" _type="MoveCaretCommand" caretOffset="212" date="Sun Dec 03 15:37:39 EST 2023" docOffset="293" starttimestamp="1701628917814" timestamp="6942178" />
  <Command __id="3216" _type="ShellCommand" date="Sun Dec 03 15:39:37 EST 2023" starttimestamp="1701628917814" timestamp="7059607" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3213" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:37:39 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="6942144">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3217" _type="ShellCommand" date="Sun Dec 03 15:39:56 EST 2023" starttimestamp="1701628917814" timestamp="7078651" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3219" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:39:57 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="7079874" />
  <Command __id="3220" _type="ShellCommand" date="Sun Dec 03 15:40:08 EST 2023" starttimestamp="1701628917814" timestamp="7090339" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3221" _type="BalloonCommand" date="Sun Dec 03 15:41:57 EST 2023" message="*******************************************
Worked 50 minutes(fixed)/58 minutes(context based) from
Sun Dec 03 14:41:57 EST 2023 to Sun Dec 03 15:40:08 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 2 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java
Number of insert: 416
Number of delete: 276
" starttimestamp="1701628917814" timestamp="7200049">
    <fineGrainedWorkTime><![CDATA[58]]></fineGrainedWorkTime>
    <insert><![CDATA[416]]></insert>
    <startTime><![CDATA[1701632517866]]></startTime>
    <endTime><![CDATA[1701636008153]]></endTime>
    <workTime><![CDATA[50]]></workTime>
    <delete><![CDATA[276]]></delete>
  </Command>
  <Command __id="3227" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:46:47 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="7489845">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3230" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:46:50 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7492293">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3232" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:34 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7537160">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3234" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:36 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7539028">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3236" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:37 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7539723">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3238" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:41 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7543401">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3240" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:42 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7544232">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3242" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:42 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7544773">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3244" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:43 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7545550">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3222" _type="ShellCommand" date="Sun Dec 03 15:46:45 EST 2023" starttimestamp="1701628917814" timestamp="7487331" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3224" _type="MoveCaretCommand" caretOffset="212" date="Sun Dec 03 15:46:45 EST 2023" docOffset="293" starttimestamp="1701628917814" timestamp="7487422" />
  <Command __id="3225" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:46:46 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7488385" />
  <Command __id="3226" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:46:46 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7488385" />
  <Command __id="3228" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 15:46:47 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="7489848" />
  <Command __id="3229" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 15:46:47 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="7489883" />
  <Command __id="3231" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:46:50 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7492335" />
  <Command __id="3233" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:47:35 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="7537193" />
  <Command __id="3235" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:47:36 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7539064" />
  <Command __id="3237" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:47:37 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="7539758" />
  <Command __id="3239" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:47:41 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7543437" />
  <Command __id="3241" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:47:42 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="7544264" />
  <Command __id="3243" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:47:42 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7544807" />
  <Command __id="3245" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:47:43 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="7545582" />
  <Command __id="3247" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:47:44 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7546632" />
  <Command __id="3249" _type="MoveCaretCommand" caretOffset="520" date="Sun Dec 03 15:47:45 EST 2023" docOffset="601" starttimestamp="1701628917814" timestamp="7547519" />
  <Command __id="3246" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:44 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7546602">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3248" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:45 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7547487">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3250" _type="MoveCaretCommand" caretOffset="485" date="Sun Dec 03 15:47:47 EST 2023" docOffset="566" starttimestamp="1701628917814" timestamp="7549359" />
  <Command __id="3252" _type="MoveCaretCommand" caretOffset="376" date="Sun Dec 03 15:47:49 EST 2023" docOffset="457" starttimestamp="1701628917814" timestamp="7551772" />
  <Command __id="3253" _type="MoveCaretCommand" caretOffset="475" date="Sun Dec 03 15:47:51 EST 2023" docOffset="556" starttimestamp="1701628917814" timestamp="7553689" />
  <Command __id="3254" _type="MoveCaretCommand" caretOffset="475" date="Sun Dec 03 15:47:51 EST 2023" docOffset="556" starttimestamp="1701628917814" timestamp="7553689" />
  <Command __id="3255" _type="InsertStringCommand" date="Sun Dec 03 15:47:52 EST 2023" starttimestamp="1701628917814" timestamp="7554788" timestamp2="7554788">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3256" _type="InsertStringCommand" date="Sun Dec 03 15:47:52 EST 2023" starttimestamp="1701628917814" timestamp="7554788" timestamp2="7554788">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3257" _type="MoveCaretCommand" caretOffset="475" date="Sun Dec 03 15:47:53 EST 2023" docOffset="556" starttimestamp="1701628917814" timestamp="7556015" />
  <Command __id="3258" _type="MoveCaretCommand" caretOffset="475" date="Sun Dec 03 15:47:53 EST 2023" docOffset="556" starttimestamp="1701628917814" timestamp="7556015" />
  <Command __id="3259" _type="ShellCommand" date="Sun Dec 03 15:48:00 EST 2023" starttimestamp="1701628917814" timestamp="7563129" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3251" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:47:49 EST 2023" docASTNodeCount="141" docActiveCodeLength="811" docExpressionCount="93" docLength="862" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7551732">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		SExpression tempp = expr.getHead();		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {//			System.out.println(expr.getTail().toString());			SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3261" _type="Replace" date="Sun Dec 03 15:52:37 EST 2023" docASTNodeCount="161" docActiveCodeLength="931" docExpressionCount="112" docLength="931" endLine="34" insertionLength="931" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="862" offset="0" startLine="0" starttimestamp="1701628917814" timestamp="7839397">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		SExpression tempp = expr.getHead();
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
//			System.out.println(expr.getTail().toString());
			SExpression temp1 = expr.getTail();
			SExpression temp2 = temp1.getHead();
			return evalHelper(temp2.eval(environment), environment);
		}
	}
	
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			if(expr.getTail().eval(environment).isNIL()){
				if(expr.getTail().eval(environment).equals(new NilAtom())){
					return new NilAtom();
				}else{
					return expr.getHead().eval(environment);
				}
			}
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></insertedText>
  </DocumentChange>
  <Command __id="3260" _type="ShellCommand" date="Sun Dec 03 15:52:36 EST 2023" starttimestamp="1701628917814" timestamp="7839150" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3262" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:52:37 EST 2023" starttimestamp="1701628917814" timestamp="7839490" />
  <Command __id="3263" _type="EclipseCommand" commandID="" date="Sun Dec 03 15:52:37 EST 2023" starttimestamp="1701628917814" timestamp="7839500" />
  <Command __id="3264" _type="MoveCaretCommand" caretOffset="375" date="Sun Dec 03 15:52:38 EST 2023" docOffset="375" starttimestamp="1701628917814" timestamp="7840199" />
  <Command __id="3265" _type="MoveCaretCommand" caretOffset="375" date="Sun Dec 03 15:52:38 EST 2023" docOffset="375" starttimestamp="1701628917814" timestamp="7840199" />
  <Command __id="3267" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:52:39 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="7841766" />
  <Command __id="3275" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:52:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7858569" type="Run" />
  <Command __id="3276" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:52:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7858569" type="Run" />
  <Command __id="3283" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:53:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7866770" type="Run" />
  <Command __id="3284" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:53:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7866770" type="Run" />
  <Command __id="3266" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:52:39 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7841733">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3285" _type="ConsoleInput" date="Sun Dec 03 15:53:06 EST 2023" starttimestamp="1701628917814" timestamp="7869123" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3286" _type="ExceptionCommand" date="Sun Dec 03 15:53:06 EST 2023" starttimestamp="1701628917814" timestamp="7869154" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:27)
	at index.AndEvaluator.eval(AndEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3287" _type="ConsoleOutput" date="Sun Dec 03 15:53:06 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="7869156" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:11)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3288" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:53:06 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="7869171" type="Debug" />
  <Command __id="3289" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:53:06 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7869171" type="Run" />
  <Command __id="3290" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:53:06 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="7869171" type="Debug" />
  <Command __id="3291" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:53:06 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7869171" type="Run" />
  <Command __id="3293" _type="MoveCaretCommand" caretOffset="375" date="Sun Dec 03 15:53:11 EST 2023" docOffset="375" starttimestamp="1701628917814" timestamp="7873707" />
  <Command __id="3309" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:53:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7918185" type="Run" />
  <Command __id="3310" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:53:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7918186" type="Run" />
  <Command __id="3311" _type="ConsoleInput" date="Sun Dec 03 15:53:59 EST 2023" starttimestamp="1701628917814" timestamp="7921774" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3312" _type="ConsoleOutput" date="Sun Dec 03 15:53:59 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="7921805" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3313" _type="SelectTextCommand" caretOffset="661" date="Sun Dec 03 15:54:09 EST 2023" end="882" start="661" starttimestamp="1701628917814" timestamp="7931215" />
  <Command __id="3314" _type="SelectTextCommand" caretOffset="661" date="Sun Dec 03 15:54:09 EST 2023" end="882" start="661" starttimestamp="1701628917814" timestamp="7931215" />
  <Command __id="3322" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sun Dec 03 15:54:09 EST 2023" starttimestamp="1701628917814" timestamp="7931754" />
  <Command __id="3323" _type="MoveCaretCommand" caretOffset="811" date="Sun Dec 03 15:54:10 EST 2023" docOffset="811" starttimestamp="1701628917814" timestamp="7932466" />
  <Command __id="3324" _type="MoveCaretCommand" caretOffset="811" date="Sun Dec 03 15:54:10 EST 2023" docOffset="811" starttimestamp="1701628917814" timestamp="7932466" />
  <Command __id="3325" _type="SelectTextCommand" caretOffset="700" date="Sun Dec 03 15:54:13 EST 2023" end="700" start="682" starttimestamp="1701628917814" timestamp="7935221" />
  <Command __id="3326" _type="SelectTextCommand" caretOffset="700" date="Sun Dec 03 15:54:13 EST 2023" end="700" start="682" starttimestamp="1701628917814" timestamp="7935222" />
  <Command __id="3328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:54:13 EST 2023" starttimestamp="1701628917814" timestamp="7935767" />
  <Command __id="3329" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:54:13 EST 2023" starttimestamp="1701628917814" timestamp="7935767" />
  <Command __id="3330" _type="MoveCaretCommand" caretOffset="691" date="Sun Dec 03 15:54:14 EST 2023" docOffset="691" starttimestamp="1701628917814" timestamp="7936472" />
  <Command __id="3331" _type="MoveCaretCommand" caretOffset="691" date="Sun Dec 03 15:54:14 EST 2023" docOffset="691" starttimestamp="1701628917814" timestamp="7936472" />
  <Command __id="3332" _type="MoveCaretCommand" caretOffset="715" date="Sun Dec 03 15:54:14 EST 2023" docOffset="715" starttimestamp="1701628917814" timestamp="7936934" />
  <Command __id="3333" _type="MoveCaretCommand" caretOffset="715" date="Sun Dec 03 15:54:14 EST 2023" docOffset="715" starttimestamp="1701628917814" timestamp="7936934" />
  <Command __id="3334" _type="MoveCaretCommand" caretOffset="708" date="Sun Dec 03 15:54:15 EST 2023" docOffset="708" starttimestamp="1701628917814" timestamp="7937435" />
  <Command __id="3335" _type="MoveCaretCommand" caretOffset="708" date="Sun Dec 03 15:54:15 EST 2023" docOffset="708" starttimestamp="1701628917814" timestamp="7937435" />
  <Command __id="3336" _type="MoveCaretCommand" caretOffset="714" date="Sun Dec 03 15:54:15 EST 2023" docOffset="714" starttimestamp="1701628917814" timestamp="7937815" />
  <Command __id="3337" _type="MoveCaretCommand" caretOffset="714" date="Sun Dec 03 15:54:15 EST 2023" docOffset="714" starttimestamp="1701628917814" timestamp="7937815" />
  <Command __id="3338" _type="SelectTextCommand" caretOffset="718" date="Sun Dec 03 15:54:15 EST 2023" end="718" start="714" starttimestamp="1701628917814" timestamp="7937988" />
  <Command __id="3339" _type="SelectTextCommand" caretOffset="718" date="Sun Dec 03 15:54:15 EST 2023" end="718" start="714" starttimestamp="1701628917814" timestamp="7937988" />
  <Command __id="3340" _type="MoveCaretCommand" caretOffset="722" date="Sun Dec 03 15:54:16 EST 2023" docOffset="722" starttimestamp="1701628917814" timestamp="7938209" />
  <Command __id="3341" _type="MoveCaretCommand" caretOffset="722" date="Sun Dec 03 15:54:16 EST 2023" docOffset="722" starttimestamp="1701628917814" timestamp="7938210" />
  <Command __id="3342" _type="SelectTextCommand" caretOffset="730" date="Sun Dec 03 15:54:16 EST 2023" end="730" start="719" starttimestamp="1701628917814" timestamp="7938359" />
  <Command __id="3343" _type="SelectTextCommand" caretOffset="730" date="Sun Dec 03 15:54:16 EST 2023" end="730" start="719" starttimestamp="1701628917814" timestamp="7938360" />
  <Command __id="3344" _type="MoveCaretCommand" caretOffset="716" date="Sun Dec 03 15:54:16 EST 2023" docOffset="716" starttimestamp="1701628917814" timestamp="7938621" />
  <Command __id="3345" _type="MoveCaretCommand" caretOffset="716" date="Sun Dec 03 15:54:16 EST 2023" docOffset="716" starttimestamp="1701628917814" timestamp="7938622" />
  <Command __id="3346" _type="SelectTextCommand" caretOffset="718" date="Sun Dec 03 15:54:16 EST 2023" end="718" start="714" starttimestamp="1701628917814" timestamp="7938765" />
  <Command __id="3347" _type="SelectTextCommand" caretOffset="718" date="Sun Dec 03 15:54:16 EST 2023" end="718" start="714" starttimestamp="1701628917814" timestamp="7938765" />
  <Command __id="3348" _type="MoveCaretCommand" caretOffset="782" date="Sun Dec 03 15:54:16 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="7938949" />
  <Command __id="3349" _type="MoveCaretCommand" caretOffset="782" date="Sun Dec 03 15:54:16 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="7938949" />
  <Command __id="3350" _type="MoveCaretCommand" caretOffset="782" date="Sun Dec 03 15:54:16 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="7939108" />
  <Command __id="3351" _type="MoveCaretCommand" caretOffset="782" date="Sun Dec 03 15:54:16 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="7939108" />
  <Command __id="3352" _type="MoveCaretCommand" caretOffset="728" date="Sun Dec 03 15:54:17 EST 2023" docOffset="728" starttimestamp="1701628917814" timestamp="7939449" />
  <Command __id="3353" _type="MoveCaretCommand" caretOffset="728" date="Sun Dec 03 15:54:17 EST 2023" docOffset="728" starttimestamp="1701628917814" timestamp="7939449" />
  <Command __id="3354" _type="SelectTextCommand" caretOffset="730" date="Sun Dec 03 15:54:17 EST 2023" end="730" start="719" starttimestamp="1701628917814" timestamp="7939582" />
  <Command __id="3355" _type="SelectTextCommand" caretOffset="730" date="Sun Dec 03 15:54:17 EST 2023" end="730" start="719" starttimestamp="1701628917814" timestamp="7939582" />
  <Command __id="3356" _type="MoveCaretCommand" caretOffset="733" date="Sun Dec 03 15:54:17 EST 2023" docOffset="733" starttimestamp="1701628917814" timestamp="7939876" />
  <Command __id="3357" _type="MoveCaretCommand" caretOffset="733" date="Sun Dec 03 15:54:17 EST 2023" docOffset="733" starttimestamp="1701628917814" timestamp="7939876" />
  <Command __id="3358" _type="SelectTextCommand" caretOffset="738" date="Sun Dec 03 15:54:17 EST 2023" end="738" start="732" starttimestamp="1701628917814" timestamp="7940024" />
  <Command __id="3359" _type="SelectTextCommand" caretOffset="738" date="Sun Dec 03 15:54:17 EST 2023" end="738" start="732" starttimestamp="1701628917814" timestamp="7940024" />
  <Command __id="3360" _type="MoveCaretCommand" caretOffset="727" date="Sun Dec 03 15:54:18 EST 2023" docOffset="727" starttimestamp="1701628917814" timestamp="7940282" />
  <Command __id="3361" _type="MoveCaretCommand" caretOffset="727" date="Sun Dec 03 15:54:18 EST 2023" docOffset="727" starttimestamp="1701628917814" timestamp="7940282" />
  <Command __id="3362" _type="SelectTextCommand" caretOffset="730" date="Sun Dec 03 15:54:18 EST 2023" end="730" start="719" starttimestamp="1701628917814" timestamp="7940419" />
  <Command __id="3363" _type="SelectTextCommand" caretOffset="730" date="Sun Dec 03 15:54:18 EST 2023" end="730" start="719" starttimestamp="1701628917814" timestamp="7940419" />
  <Command __id="3364" _type="MoveCaretCommand" caretOffset="686" date="Sun Dec 03 15:54:18 EST 2023" docOffset="686" starttimestamp="1701628917814" timestamp="7940834" />
  <Command __id="3365" _type="MoveCaretCommand" caretOffset="686" date="Sun Dec 03 15:54:18 EST 2023" docOffset="686" starttimestamp="1701628917814" timestamp="7940834" />
  <Command __id="3366" _type="SelectTextCommand" caretOffset="687" date="Sun Dec 03 15:54:18 EST 2023" end="687" start="682" starttimestamp="1701628917814" timestamp="7940990" />
  <Command __id="3367" _type="SelectTextCommand" caretOffset="687" date="Sun Dec 03 15:54:18 EST 2023" end="687" start="682" starttimestamp="1701628917814" timestamp="7940990" />
  <Command __id="3368" _type="MoveCaretCommand" caretOffset="716" date="Sun Dec 03 15:54:19 EST 2023" docOffset="716" starttimestamp="1701628917814" timestamp="7941395" />
  <Command __id="3369" _type="MoveCaretCommand" caretOffset="716" date="Sun Dec 03 15:54:19 EST 2023" docOffset="716" starttimestamp="1701628917814" timestamp="7941395" />
  <Command __id="3370" _type="SelectTextCommand" caretOffset="718" date="Sun Dec 03 15:54:19 EST 2023" end="718" start="714" starttimestamp="1701628917814" timestamp="7941554" />
  <Command __id="3371" _type="SelectTextCommand" caretOffset="718" date="Sun Dec 03 15:54:19 EST 2023" end="718" start="714" starttimestamp="1701628917814" timestamp="7941554" />
  <Command __id="3372" _type="MoveCaretCommand" caretOffset="722" date="Sun Dec 03 15:54:19 EST 2023" docOffset="722" starttimestamp="1701628917814" timestamp="7941988" />
  <Command __id="3373" _type="MoveCaretCommand" caretOffset="722" date="Sun Dec 03 15:54:19 EST 2023" docOffset="722" starttimestamp="1701628917814" timestamp="7941988" />
  <Command __id="3374" _type="SelectTextCommand" caretOffset="732" date="Sun Dec 03 15:54:21 EST 2023" end="732" start="714" starttimestamp="1701628917814" timestamp="7943946" />
  <Command __id="3375" _type="SelectTextCommand" caretOffset="732" date="Sun Dec 03 15:54:21 EST 2023" end="732" start="714" starttimestamp="1701628917814" timestamp="7943947" />
  <Command __id="3377" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:54:21 EST 2023" starttimestamp="1701628917814" timestamp="7944048" />
  <Command __id="3378" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 15:54:21 EST 2023" starttimestamp="1701628917814" timestamp="7944048" />
  <Command __id="3379" _type="MoveCaretCommand" caretOffset="728" date="Sun Dec 03 15:54:22 EST 2023" docOffset="728" starttimestamp="1701628917814" timestamp="7944880" />
  <Command __id="3380" _type="MoveCaretCommand" caretOffset="728" date="Sun Dec 03 15:54:22 EST 2023" docOffset="728" starttimestamp="1701628917814" timestamp="7944881" />
  <Command __id="3381" _type="MoveCaretCommand" caretOffset="759" date="Sun Dec 03 15:54:23 EST 2023" docOffset="759" starttimestamp="1701628917814" timestamp="7945353" />
  <Command __id="3382" _type="MoveCaretCommand" caretOffset="759" date="Sun Dec 03 15:54:23 EST 2023" docOffset="759" starttimestamp="1701628917814" timestamp="7945353" />
  <Command __id="3383" _type="MoveCaretCommand" caretOffset="764" date="Sun Dec 03 15:54:23 EST 2023" docOffset="764" starttimestamp="1701628917814" timestamp="7945756" />
  <Command __id="3384" _type="MoveCaretCommand" caretOffset="764" date="Sun Dec 03 15:54:23 EST 2023" docOffset="764" starttimestamp="1701628917814" timestamp="7945756" />
  <Command __id="3385" _type="MoveCaretCommand" caretOffset="827" date="Sun Dec 03 15:54:24 EST 2023" docOffset="827" starttimestamp="1701628917814" timestamp="7946193" />
  <Command __id="3386" _type="MoveCaretCommand" caretOffset="827" date="Sun Dec 03 15:54:24 EST 2023" docOffset="827" starttimestamp="1701628917814" timestamp="7946193" />
  <Command __id="3387" _type="MoveCaretCommand" caretOffset="799" date="Sun Dec 03 15:54:24 EST 2023" docOffset="799" starttimestamp="1701628917814" timestamp="7946635" />
  <Command __id="3388" _type="MoveCaretCommand" caretOffset="799" date="Sun Dec 03 15:54:24 EST 2023" docOffset="799" starttimestamp="1701628917814" timestamp="7946636" />
  <Command __id="3389" _type="MoveCaretCommand" caretOffset="791" date="Sun Dec 03 15:54:25 EST 2023" docOffset="791" starttimestamp="1701628917814" timestamp="7947851" />
  <Command __id="3390" _type="MoveCaretCommand" caretOffset="791" date="Sun Dec 03 15:54:25 EST 2023" docOffset="791" starttimestamp="1701628917814" timestamp="7947851" />
  <Command __id="3391" _type="MoveCaretCommand" caretOffset="803" date="Sun Dec 03 15:54:27 EST 2023" docOffset="803" starttimestamp="1701628917814" timestamp="7950168" />
  <Command __id="3392" _type="MoveCaretCommand" caretOffset="803" date="Sun Dec 03 15:54:27 EST 2023" docOffset="803" starttimestamp="1701628917814" timestamp="7950168" />
  <Command __id="3393" _type="MoveCaretCommand" caretOffset="799" date="Sun Dec 03 15:54:32 EST 2023" docOffset="799" starttimestamp="1701628917814" timestamp="7954485" />
  <Command __id="3394" _type="MoveCaretCommand" caretOffset="799" date="Sun Dec 03 15:54:32 EST 2023" docOffset="799" starttimestamp="1701628917814" timestamp="7954485" />
  <Command __id="3395" _type="MoveCaretCommand" caretOffset="789" date="Sun Dec 03 15:54:34 EST 2023" docOffset="789" starttimestamp="1701628917814" timestamp="7956603" />
  <Command __id="3396" _type="MoveCaretCommand" caretOffset="789" date="Sun Dec 03 15:54:34 EST 2023" docOffset="789" starttimestamp="1701628917814" timestamp="7956603" />
  <Command __id="3292" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:53:11 EST 2023" docASTNodeCount="161" docActiveCodeLength="931" docExpressionCount="112" docLength="931" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7873669">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(INSERT,"import main.lisp.parser.terms.NilAtom;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		"), Diff(DELETE,"SExpression tempp = expr.getHead();		"), Diff(EQUAL,"if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {"), Diff(DELETE,"//"), Diff(EQUAL,"			"), Diff(DELETE,"System.out.println(expr.getTail().toString"), Diff(INSERT,"if(expr.getTail().eval(environment).isNIL"), Diff(EQUAL,"())"), Diff(DELETE,";"), Diff(INSERT,"{"), Diff(EQUAL,"			"), Diff(DELETE,"SExpression temp1 = expr.getTail();			SExpression temp2 = temp1.getHead();			return evalHelper(temp2.eval(environment"), Diff(INSERT,"	if(expr.getTail().eval(environment).equals(new NilAtom())){					return new NilAtom();				}else{					return expr.getHead().eval(environment);				}			}			return evalHelper(expr.getTail("), Diff(EQUAL,"), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			if(expr.getTail().eval(environment).isNIL()){
				if(expr.getTail().eval(environment).equals(new NilAtom())){
					return new NilAtom();
				}else{
					return expr.getHead().eval(environment);
				}
			}
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3296" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="151" docActiveCodeLength="883" docExpressionCount="104" docLength="933" length="2" offset="661" starttimestamp="1701628917814" timestamp="7914742">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3297" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="138" docActiveCodeLength="820" docExpressionCount="92" docLength="935" length="2" offset="712" starttimestamp="1701628917814" timestamp="7914743">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3298" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="134" docActiveCodeLength="794" docExpressionCount="90" docLength="937" length="2" offset="778" starttimestamp="1701628917814" timestamp="7914744">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3299" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="133" docActiveCodeLength="784" docExpressionCount="90" docLength="939" length="2" offset="807" starttimestamp="1701628917814" timestamp="7914745">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3300" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="126" docActiveCodeLength="739" docExpressionCount="84" docLength="941" length="2" offset="820" starttimestamp="1701628917814" timestamp="7914745">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3301" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="126" docActiveCodeLength="734" docExpressionCount="86" docLength="943" length="2" offset="868" starttimestamp="1701628917814" timestamp="7914746">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3302" _type="Insert" date="Sun Dec 03 15:53:52 EST 2023" docASTNodeCount="126" docActiveCodeLength="730" docExpressionCount="86" docLength="945" length="2" offset="876" starttimestamp="1701628917814" timestamp="7914746">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3315" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="136" docActiveCodeLength="778" docExpressionCount="94" docLength="943" endLine="26" length="2" offset="661" startLine="26" starttimestamp="1701628917814" timestamp="7931736">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3316" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="86" docActiveCodeLength="841" docExpressionCount="58" docLength="941" endLine="27" length="2" offset="710" startLine="27" starttimestamp="1701628917814" timestamp="7931739">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3317" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="86" docActiveCodeLength="867" docExpressionCount="58" docLength="939" endLine="28" length="2" offset="774" startLine="28" starttimestamp="1701628917814" timestamp="7931740">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3318" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="86" docActiveCodeLength="877" docExpressionCount="58" docLength="937" endLine="29" length="2" offset="801" startLine="29" starttimestamp="1701628917814" timestamp="7931740">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3319" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="86" docActiveCodeLength="922" docExpressionCount="58" docLength="935" endLine="30" length="2" offset="812" startLine="30" starttimestamp="1701628917814" timestamp="7931741">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3320" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="161" docActiveCodeLength="927" docExpressionCount="112" docLength="933" endLine="31" length="2" offset="858" startLine="31" starttimestamp="1701628917814" timestamp="7931741">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3321" _type="Delete" date="Sun Dec 03 15:54:09 EST 2023" docASTNodeCount="161" docActiveCodeLength="931" docExpressionCount="112" docLength="931" endLine="32" length="2" offset="864" startLine="32" starttimestamp="1701628917814" timestamp="7931742">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3327" _type="Delete" date="Sun Dec 03 15:54:13 EST 2023" docASTNodeCount="158" docActiveCodeLength="913" docExpressionCount="109" docLength="913" endLine="26" length="18" offset="682" startLine="26" starttimestamp="1701628917814" timestamp="7935765">
    <text><![CDATA[eval(environment).]]></text>
  </DocumentChange>
  <DocumentChange __id="3376" _type="Delete" date="Sun Dec 03 15:54:21 EST 2023" docASTNodeCount="155" docActiveCodeLength="895" docExpressionCount="106" docLength="895" endLine="27" length="18" offset="714" startLine="27" starttimestamp="1701628917814" timestamp="7944047">
    <text><![CDATA[eval(environment).]]></text>
  </DocumentChange>
  <Command __id="3397" _type="MoveCaretCommand" caretOffset="788" date="Sun Dec 03 15:54:41 EST 2023" docOffset="788" starttimestamp="1701628917814" timestamp="7963995" />
  <Command __id="3398" _type="MoveCaretCommand" caretOffset="788" date="Sun Dec 03 15:54:41 EST 2023" docOffset="788" starttimestamp="1701628917814" timestamp="7963995" />
  <Command __id="3400" _type="InsertStringCommand" date="Sun Dec 03 15:54:44 EST 2023" starttimestamp="1701628917814" timestamp="7967030" timestamp2="7967030">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3401" _type="InsertStringCommand" date="Sun Dec 03 15:54:44 EST 2023" starttimestamp="1701628917814" timestamp="7967030" timestamp2="7967030">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3403" _type="InsertStringCommand" date="Sun Dec 03 15:54:44 EST 2023" starttimestamp="1701628917814" timestamp="7967132" timestamp2="7967132">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3404" _type="InsertStringCommand" date="Sun Dec 03 15:54:44 EST 2023" starttimestamp="1701628917814" timestamp="7967132" timestamp2="7967132">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3406" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7967252" timestamp2="7967252">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3407" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7967252" timestamp2="7967252">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3409" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7967354" timestamp2="7967354">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3410" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7967354" timestamp2="7967354">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3412" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7967909" timestamp2="7967909">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="3413" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7967909" timestamp2="7967909">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="3415" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7968168" timestamp2="7968168">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3416" _type="InsertStringCommand" date="Sun Dec 03 15:54:45 EST 2023" starttimestamp="1701628917814" timestamp="7968168" timestamp2="7968168">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3418" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968408" timestamp2="7968408">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3419" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968408" timestamp2="7968408">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3421" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968620" timestamp2="7968620">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3422" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968620" timestamp2="7968620">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3424" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968799" timestamp2="7968799">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3425" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968799" timestamp2="7968799">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3427" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968874" timestamp2="7968874">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3428" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7968874" timestamp2="7968874">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3430" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7969036" timestamp2="7969036">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3431" _type="InsertStringCommand" date="Sun Dec 03 15:54:46 EST 2023" starttimestamp="1701628917814" timestamp="7969036" timestamp2="7969036">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3432" _type="MoveCaretCommand" caretOffset="832" date="Sun Dec 03 15:54:48 EST 2023" docOffset="832" starttimestamp="1701628917814" timestamp="7970216" />
  <Command __id="3433" _type="MoveCaretCommand" caretOffset="832" date="Sun Dec 03 15:54:48 EST 2023" docOffset="832" starttimestamp="1701628917814" timestamp="7970217" />
  <Command __id="3434" _type="MoveCaretCommand" caretOffset="830" date="Sun Dec 03 15:54:48 EST 2023" docOffset="830" starttimestamp="1701628917814" timestamp="7970899" />
  <Command __id="3435" _type="MoveCaretCommand" caretOffset="830" date="Sun Dec 03 15:54:48 EST 2023" docOffset="830" starttimestamp="1701628917814" timestamp="7970899" />
  <Command __id="3436" _type="MoveCaretCommand" caretOffset="831" date="Sun Dec 03 15:54:48 EST 2023" docOffset="831" starttimestamp="1701628917814" timestamp="7971151" />
  <Command __id="3437" _type="MoveCaretCommand" caretOffset="831" date="Sun Dec 03 15:54:48 EST 2023" docOffset="831" starttimestamp="1701628917814" timestamp="7971151" />
  <Command __id="3439" _type="InsertStringCommand" date="Sun Dec 03 15:54:49 EST 2023" starttimestamp="1701628917814" timestamp="7971850" timestamp2="7971850">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3440" _type="InsertStringCommand" date="Sun Dec 03 15:54:49 EST 2023" starttimestamp="1701628917814" timestamp="7971850" timestamp2="7971850">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Dec 03 15:54:50 EST 2023" starttimestamp="1701628917814" timestamp="7972822" />
  <Command __id="3442" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Dec 03 15:54:50 EST 2023" starttimestamp="1701628917814" timestamp="7972822" />
  <Command __id="3444" _type="InsertStringCommand" date="Sun Dec 03 15:54:50 EST 2023" starttimestamp="1701628917814" timestamp="7973112" timestamp2="7973112">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3445" _type="InsertStringCommand" date="Sun Dec 03 15:54:50 EST 2023" starttimestamp="1701628917814" timestamp="7973112" timestamp2="7973112">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3447" _type="InsertStringCommand" date="Sun Dec 03 15:54:51 EST 2023" starttimestamp="1701628917814" timestamp="7974011" timestamp2="7974011">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3448" _type="InsertStringCommand" date="Sun Dec 03 15:54:51 EST 2023" starttimestamp="1701628917814" timestamp="7974011" timestamp2="7974011">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3450" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974358" timestamp2="7974358">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3451" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974358" timestamp2="7974358">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3453" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974458" timestamp2="7974458">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3454" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974458" timestamp2="7974458">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3456" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974547" timestamp2="7974547">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3457" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974547" timestamp2="7974547">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3459" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974668" timestamp2="7974668">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3460" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7974668" timestamp2="7974668">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3462" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7975119" timestamp2="7975119">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3463" _type="InsertStringCommand" date="Sun Dec 03 15:54:52 EST 2023" starttimestamp="1701628917814" timestamp="7975119" timestamp2="7975119">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3487" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:54:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7978808" type="Run" />
  <Command __id="3488" _type="ConsoleInput" date="Sun Dec 03 15:55:00 EST 2023" starttimestamp="1701628917814" timestamp="7982851" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3489" _type="ConsoleOutput" date="Sun Dec 03 15:55:00 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="7982880" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3490" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:08 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7990900" />
  <Command __id="3491" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:08 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7990900" />
  <Command __id="3492" _type="MoveCaretCommand" caretOffset="650" date="Sun Dec 03 15:55:09 EST 2023" docOffset="650" starttimestamp="1701628917814" timestamp="7991729" />
  <Command __id="3493" _type="MoveCaretCommand" caretOffset="650" date="Sun Dec 03 15:55:09 EST 2023" docOffset="650" starttimestamp="1701628917814" timestamp="7991729" />
  <Command __id="3494" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:09 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7992009" />
  <Command __id="3495" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:09 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7992009" />
  <Command __id="3496" _type="MoveCaretCommand" caretOffset="606" date="Sun Dec 03 15:55:10 EST 2023" docOffset="606" starttimestamp="1701628917814" timestamp="7992220" />
  <Command __id="3497" _type="MoveCaretCommand" caretOffset="606" date="Sun Dec 03 15:55:10 EST 2023" docOffset="606" starttimestamp="1701628917814" timestamp="7992220" />
  <Command __id="3498" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:10 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7992510" />
  <Command __id="3499" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:10 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7992510" />
  <Command __id="3500" _type="MoveCaretCommand" caretOffset="606" date="Sun Dec 03 15:55:10 EST 2023" docOffset="606" starttimestamp="1701628917814" timestamp="7992787" />
  <Command __id="3501" _type="MoveCaretCommand" caretOffset="606" date="Sun Dec 03 15:55:10 EST 2023" docOffset="606" starttimestamp="1701628917814" timestamp="7992787" />
  <Command __id="3502" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:10 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7993005" />
  <Command __id="3503" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:10 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7993005" />
  <Command __id="3504" _type="MoveCaretCommand" caretOffset="606" date="Sun Dec 03 15:55:11 EST 2023" docOffset="606" starttimestamp="1701628917814" timestamp="7993255" />
  <Command __id="3505" _type="MoveCaretCommand" caretOffset="606" date="Sun Dec 03 15:55:11 EST 2023" docOffset="606" starttimestamp="1701628917814" timestamp="7993255" />
  <Command __id="3506" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:11 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7993630" />
  <Command __id="3507" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:11 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="7993630" />
  <Command __id="3508" _type="ShellCommand" date="Sun Dec 03 15:55:15 EST 2023" starttimestamp="1701628917814" timestamp="7997238" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3509" _type="ShellCommand" date="Sun Dec 03 15:55:16 EST 2023" starttimestamp="1701628917814" timestamp="7998549" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3511" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 15:55:17 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="7999569" />
  <Command __id="3512" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 15:55:19 EST 2023" starttimestamp="1701628917814" timestamp="8001330" />
  <Command __id="3513" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 15:55:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8001407" type="Run" />
  <Command __id="3514" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:19 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8001517" type="Run" />
  <Command __id="3515" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:19 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8001517" type="Run" />
  <Command __id="3516" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:19 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8001525" type="Run" />
  <Command __id="3517" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:19 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8001663" type="Run" />
  <Command __id="3519" _type="MoveCaretCommand" caretOffset="660" date="Sun Dec 03 15:55:19 EST 2023" docOffset="660" starttimestamp="1701628917814" timestamp="8001914" />
  <Command __id="3520" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 15:55:25 EST 2023" starttimestamp="1701628917814" timestamp="8007929" />
  <Command __id="3521" _type="BreakPointCommand" date="Sun Dec 03 15:55:25 EST 2023" lineNumber="12" starttimestamp="1701628917814" timestamp="8007929" type="BreakPointAdded" />
  <Command __id="3522" _type="ConsoleInput" date="Sun Dec 03 15:55:30 EST 2023" starttimestamp="1701628917814" timestamp="8012538" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3523" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:31 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8013371" type="Run" />
  <Command __id="3524" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:55:32 EST 2023" starttimestamp="1701628917814" timestamp="8015013" />
  <Command __id="3525" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8015016" type="Run" />
  <Command __id="3528" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8019440" type="Run" />
  <Command __id="3529" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:55:39 EST 2023" starttimestamp="1701628917814" timestamp="8021207" />
  <Command __id="3530" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:39 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8021211" type="Run" />
  <Command __id="3531" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 15:55:42 EST 2023" starttimestamp="1701628917814" timestamp="8024890" />
  <Command __id="3532" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:55:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8024894" type="Run" />
  <Command __id="3533" _type="SelectTextCommand" caretOffset="680" date="Sun Dec 03 15:55:51 EST 2023" end="680" start="667" starttimestamp="1701628917814" timestamp="8033658" />
  <Command __id="3534" _type="SelectTextCommand" caretOffset="680" date="Sun Dec 03 15:55:51 EST 2023" end="680" start="667" starttimestamp="1701628917814" timestamp="8033658" />
  <Command __id="3535" _type="MoveCaretCommand" caretOffset="670" date="Sun Dec 03 15:55:52 EST 2023" docOffset="670" starttimestamp="1701628917814" timestamp="8034993" />
  <Command __id="3536" _type="MoveCaretCommand" caretOffset="670" date="Sun Dec 03 15:55:52 EST 2023" docOffset="670" starttimestamp="1701628917814" timestamp="8034993" />
  <Command __id="3537" _type="MoveCaretCommand" caretOffset="666" date="Sun Dec 03 15:55:53 EST 2023" docOffset="666" starttimestamp="1701628917814" timestamp="8035357" />
  <Command __id="3538" _type="MoveCaretCommand" caretOffset="666" date="Sun Dec 03 15:55:53 EST 2023" docOffset="666" starttimestamp="1701628917814" timestamp="8035357" />
  <Command __id="3564" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 15:56:11 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8053481" type="Run" />
  <Command __id="3565" _type="MoveCaretCommand" caretOffset="646" date="Sun Dec 03 15:56:15 EST 2023" docOffset="646" starttimestamp="1701628917814" timestamp="8057342" />
  <Command __id="3566" _type="MoveCaretCommand" caretOffset="646" date="Sun Dec 03 15:56:15 EST 2023" docOffset="646" starttimestamp="1701628917814" timestamp="8057342" />
  <Command __id="3624" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:00:08 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8291058" type="Run" />
  <Command __id="3625" _type="MoveCaretCommand" caretOffset="531" date="Sun Dec 03 16:00:09 EST 2023" docOffset="531" starttimestamp="1701628917814" timestamp="8291886" />
  <Command __id="3626" _type="MoveCaretCommand" caretOffset="531" date="Sun Dec 03 16:00:09 EST 2023" docOffset="531" starttimestamp="1701628917814" timestamp="8291886" />
  <Command __id="3627" _type="MoveCaretCommand" caretOffset="503" date="Sun Dec 03 16:00:10 EST 2023" docOffset="503" starttimestamp="1701628917814" timestamp="8292445" />
  <Command __id="3628" _type="MoveCaretCommand" caretOffset="503" date="Sun Dec 03 16:00:10 EST 2023" docOffset="503" starttimestamp="1701628917814" timestamp="8292445" />
  <Command __id="3629" _type="MoveCaretCommand" caretOffset="481" date="Sun Dec 03 16:00:10 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="8292807" />
  <Command __id="3630" _type="MoveCaretCommand" caretOffset="481" date="Sun Dec 03 16:00:10 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="8292807" />
  <Command __id="3631" _type="MoveCaretCommand" caretOffset="531" date="Sun Dec 03 16:00:10 EST 2023" docOffset="531" starttimestamp="1701628917814" timestamp="8293065" />
  <Command __id="3632" _type="MoveCaretCommand" caretOffset="531" date="Sun Dec 03 16:00:10 EST 2023" docOffset="531" starttimestamp="1701628917814" timestamp="8293065" />
  <Command __id="3633" _type="MoveCaretCommand" caretOffset="553" date="Sun Dec 03 16:00:11 EST 2023" docOffset="553" starttimestamp="1701628917814" timestamp="8293296" />
  <Command __id="3634" _type="MoveCaretCommand" caretOffset="553" date="Sun Dec 03 16:00:11 EST 2023" docOffset="553" starttimestamp="1701628917814" timestamp="8293296" />
  <Command __id="3635" _type="ShellCommand" date="Sun Dec 03 16:00:11 EST 2023" starttimestamp="1701628917814" timestamp="8294169" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3636" _type="ShellCommand" date="Sun Dec 03 16:01:42 EST 2023" starttimestamp="1701628917814" timestamp="8384970" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3637" _type="SelectTextCommand" caretOffset="661" date="Sun Dec 03 16:01:46 EST 2023" end="857" start="661" starttimestamp="1701628917814" timestamp="8388193" />
  <Command __id="3638" _type="SelectTextCommand" caretOffset="661" date="Sun Dec 03 16:01:46 EST 2023" end="857" start="661" starttimestamp="1701628917814" timestamp="8388193" />
  <Command __id="3640" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:01:46 EST 2023" starttimestamp="1701628917814" timestamp="8388907" />
  <Command __id="3641" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:01:46 EST 2023" starttimestamp="1701628917814" timestamp="8388907" />
  <Command __id="3643" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:01:47 EST 2023" starttimestamp="1701628917814" timestamp="8389493" />
  <Command __id="3644" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:01:47 EST 2023" starttimestamp="1701628917814" timestamp="8389493" />
  <Command __id="3645" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 16:01:49 EST 2023" starttimestamp="1701628917814" timestamp="8391198" />
  <Command __id="3646" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:01:49 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8391207" type="Debug" />
  <Command __id="3647" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:01:49 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8391207" type="Run" />
  <Command __id="3648" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:01:49 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8391207" type="Debug" />
  <Command __id="3649" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:01:49 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8391207" type="Run" />
  <Command __id="3650" _type="MoveCaretCommand" caretOffset="531" date="Sun Dec 03 16:01:49 EST 2023" docOffset="531" starttimestamp="1701628917814" timestamp="8391625" />
  <Command __id="3651" _type="MoveCaretCommand" caretOffset="531" date="Sun Dec 03 16:01:49 EST 2023" docOffset="531" starttimestamp="1701628917814" timestamp="8391625" />
  <Command __id="3652" _type="MoveCaretCommand" caretOffset="548" date="Sun Dec 03 16:01:50 EST 2023" docOffset="548" starttimestamp="1701628917814" timestamp="8392558" />
  <Command __id="3653" _type="MoveCaretCommand" caretOffset="548" date="Sun Dec 03 16:01:50 EST 2023" docOffset="548" starttimestamp="1701628917814" timestamp="8392559" />
  <Command __id="3654" _type="MoveCaretCommand" caretOffset="481" date="Sun Dec 03 16:01:51 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="8393360" />
  <Command __id="3655" _type="MoveCaretCommand" caretOffset="481" date="Sun Dec 03 16:01:51 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="8393361" />
  <Command __id="3656" _type="SelectTextCommand" caretOffset="485" date="Sun Dec 03 16:01:52 EST 2023" end="553" start="485" starttimestamp="1701628917814" timestamp="8394676" />
  <Command __id="3657" _type="SelectTextCommand" caretOffset="485" date="Sun Dec 03 16:01:52 EST 2023" end="553" start="485" starttimestamp="1701628917814" timestamp="8394677" />
  <Command __id="3659" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395415" timestamp2="8395415">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3660" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395415" timestamp2="8395415">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3662" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395473" timestamp2="8395473">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3663" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395473" timestamp2="8395473">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3665" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395608" timestamp2="8395608">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3666" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395608" timestamp2="8395608">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3668" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395668" timestamp2="8395668">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3669" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395668" timestamp2="8395668">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3671" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395810" timestamp2="8395810">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3672" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395810" timestamp2="8395810">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3674" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395856" timestamp2="8395856">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3675" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8395856" timestamp2="8395856">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3677" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8396008" timestamp2="8396008">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3678" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8396008" timestamp2="8396008">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3680" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8396066" timestamp2="8396066">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3681" _type="InsertStringCommand" date="Sun Dec 03 16:01:53 EST 2023" starttimestamp="1701628917814" timestamp="8396066" timestamp2="8396066">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3683" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396248" timestamp2="8396248">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3684" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396248" timestamp2="8396248">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3686" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396378" timestamp2="8396378">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3687" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396378" timestamp2="8396378">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3689" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396423" timestamp2="8396423">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3690" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396424" timestamp2="8396424">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3692" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396566" timestamp2="8396566">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3693" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8396567" timestamp2="8396567">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3694" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 16:01:54 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="8396573" />
  <Command __id="3696" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 16:01:54 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="8397153" />
  <Command __id="3698" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8397156" timestamp2="8397156">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3699" _type="InsertStringCommand" date="Sun Dec 03 16:01:54 EST 2023" starttimestamp="1701628917814" timestamp="8397157" timestamp2="8397157">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3700" _type="MoveCaretCommand" caretOffset="481" date="Sun Dec 03 16:01:57 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="8399949" />
  <Command __id="3701" _type="MoveCaretCommand" caretOffset="481" date="Sun Dec 03 16:01:57 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="8399950" />
  <Command __id="3702" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 16:01:58 EST 2023" starttimestamp="1701628917814" timestamp="8400256" />
  <Command __id="3703" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:01:58 EST 2023" starttimestamp="1701628917814" timestamp="8400355" />
  <Command __id="3704" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:01:58 EST 2023" starttimestamp="1701628917814" timestamp="8400362" />
  <Command __id="3705" _type="MoveCaretCommand" caretOffset="132" date="Sun Dec 03 16:01:59 EST 2023" docOffset="132" starttimestamp="1701628917814" timestamp="8401515" />
  <Command __id="3706" _type="MoveCaretCommand" caretOffset="132" date="Sun Dec 03 16:01:59 EST 2023" docOffset="132" starttimestamp="1701628917814" timestamp="8401515" />
  <Command __id="3707" _type="InsertStringCommand" date="Sun Dec 03 16:02:00 EST 2023" starttimestamp="1701628917814" timestamp="8402392" timestamp2="8402392">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3708" _type="InsertStringCommand" date="Sun Dec 03 16:02:00 EST 2023" starttimestamp="1701628917814" timestamp="8402392" timestamp2="8402392">
    <data><![CDATA[x]]></data>
  </Command>
  <DocumentChange __id="3399" _type="Insert" date="Sun Dec 03 15:54:44 EST 2023" docASTNodeCount="157" docActiveCodeLength="906" docExpressionCount="108" docLength="906" length="11" offset="788" repeat="11" starttimestamp="1701628917814" timestamp="7967027" timestamp2="7969035">
    <text><![CDATA[evalHelper(]]></text>
  </DocumentChange>
  <DocumentChange __id="3438" _type="Insert" date="Sun Dec 03 15:54:49 EST 2023" docASTNodeCount="158" docActiveCodeLength="920" docExpressionCount="109" docLength="920" length="14" offset="831" repeat="14" starttimestamp="1701628917814" timestamp="7971846" timestamp2="7975819">
    <text><![CDATA[, environment)]]></text>
  </DocumentChange>
  <Command __id="3510" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:55:17 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="7999535">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3518" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 15:55:19 EST 2023" docASTNodeCount="158" docActiveCodeLength="920" docExpressionCount="109" docLength="920" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8001885">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			if(expr.getTail()."), Diff(DELETE,"eval(environment)."), Diff(EQUAL,"isNIL()){				if(expr.getTail()."), Diff(DELETE,"eval(environment)."), Diff(EQUAL,"equals(new NilAtom())){					return new NilAtom();				}else{					return "), Diff(INSERT,"evalHelper("), Diff(EQUAL,"expr.getHead().eval("), Diff(INSERT,"environment), "), Diff(EQUAL,"environment);				}			}			return evalHelper(expr.getTail(), environment);		}	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			if(expr.getTail().isNIL()){
				if(expr.getTail().equals(new NilAtom())){
					return new NilAtom();
				}else{
					return evalHelper(expr.getHead().eval(environment), environment);
				}
			}
			return evalHelper(expr.getTail(), environment);
		}
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3639" _type="Delete" date="Sun Dec 03 16:01:46 EST 2023" docASTNodeCount="126" docActiveCodeLength="723" docExpressionCount="86" docLength="723" endLine="32" length="197" offset="660" repeat="2" startLine="25" starttimestamp="1701628917814" timestamp="8388897" timestamp2="8389490">
    <text><![CDATA[
			if(expr.getTail().isNIL()){
				if(expr.getTail().equals(new NilAtom())){
					return new NilAtom();
				}else{
					return evalHelper(expr.getHead().eval(environment), environment);
				}
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="3658" _type="Replace" date="Sun Dec 03 16:01:53 EST 2023" docASTNodeCount="118" docActiveCodeLength="656" docExpressionCount="82" docLength="656" endLine="21" insertionLength="1" int_docASTNodeCount="116" int_docActiveCodeLength="655" int_docExpressionCount="81" int_docLength="655" length="68" offset="485" startLine="17" starttimestamp="1701628917814" timestamp="8395408">
    <deletedText><![CDATA[if(expr.isNIL()) {
				return expr;
			}else {
				return expr;
			}]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3661" _type="Insert" date="Sun Dec 03 16:01:53 EST 2023" docASTNodeCount="118" docActiveCodeLength="667" docExpressionCount="82" docLength="667" length="11" offset="486" repeat="11" starttimestamp="1701628917814" timestamp="8395472" timestamp2="8396563">
    <text><![CDATA[eturn expr.]]></text>
  </DocumentChange>
  <DocumentChange __id="3695" _type="Delete" date="Sun Dec 03 16:01:54 EST 2023" docASTNodeCount="118" docActiveCodeLength="666" docExpressionCount="82" docLength="666" endLine="17" length="1" offset="496" startLine="17" starttimestamp="1701628917814" timestamp="8396905">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="3697" _type="Replace" date="Sun Dec 03 16:01:54 EST 2023" docASTNodeCount="118" docActiveCodeLength="667" docExpressionCount="82" docLength="667" endLine="17" insertionLength="5" int_docASTNodeCount="117" int_docActiveCodeLength="662" int_docExpressionCount="81" int_docLength="662" length="4" offset="492" startLine="17" starttimestamp="1701628917814" timestamp="8397154">
    <deletedText><![CDATA[expr]]></deletedText>
    <insertedText><![CDATA[expr;]]></insertedText>
  </DocumentChange>
  <Command __id="3709" _type="InsertStringCommand" date="Sun Dec 03 16:02:01 EST 2023" starttimestamp="1701628917814" timestamp="8403623" timestamp2="8403623">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3710" _type="InsertStringCommand" date="Sun Dec 03 16:02:01 EST 2023" starttimestamp="1701628917814" timestamp="8403624" timestamp2="8403624">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3712" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 16:02:02 EST 2023" starttimestamp="1701628917814" timestamp="8405164" />
  <Command __id="3713" _type="MoveCaretCommand" caretOffset="136" date="Sun Dec 03 16:02:03 EST 2023" docOffset="136" starttimestamp="1701628917814" timestamp="8405558" />
  <Command __id="3714" _type="MoveCaretCommand" caretOffset="136" date="Sun Dec 03 16:02:03 EST 2023" docOffset="136" starttimestamp="1701628917814" timestamp="8405558" />
  <Command __id="3715" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 16:02:03 EST 2023" starttimestamp="1701628917814" timestamp="8405694" />
  <Command __id="3716" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:02:03 EST 2023" starttimestamp="1701628917814" timestamp="8405793" />
  <Command __id="3717" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:02:03 EST 2023" starttimestamp="1701628917814" timestamp="8405800" />
  <Command __id="3718" _type="MoveCaretCommand" caretOffset="620" date="Sun Dec 03 16:02:04 EST 2023" docOffset="620" starttimestamp="1701628917814" timestamp="8406198" />
  <Command __id="3719" _type="MoveCaretCommand" caretOffset="620" date="Sun Dec 03 16:02:04 EST 2023" docOffset="620" starttimestamp="1701628917814" timestamp="8406198" />
  <Command __id="3720" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Sun Dec 03 16:02:04 EST 2023" starttimestamp="1701628917814" timestamp="8406387" />
  <Command __id="3721" _type="CopyCommand" date="Sun Dec 03 16:02:04 EST 2023" starttimestamp="1701628917814" timestamp="8406517" />
  <Command __id="3722" _type="ShellCommand" date="Sun Dec 03 16:02:04 EST 2023" starttimestamp="1701628917814" timestamp="8407081" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3723" _type="ShellCommand" date="Sun Dec 03 16:02:20 EST 2023" starttimestamp="1701628917814" timestamp="8422802" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3724" _type="ShellCommand" date="Sun Dec 03 16:02:34 EST 2023" starttimestamp="1701628917814" timestamp="8436497" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3725" _type="ShellCommand" date="Sun Dec 03 16:02:47 EST 2023" starttimestamp="1701628917814" timestamp="8450087" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3726" _type="ShellCommand" date="Sun Dec 03 16:02:49 EST 2023" starttimestamp="1701628917814" timestamp="8452127" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3727" _type="ShellCommand" date="Sun Dec 03 16:02:50 EST 2023" starttimestamp="1701628917814" timestamp="8452984" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3728" _type="MoveCaretCommand" caretOffset="625" date="Sun Dec 03 16:03:11 EST 2023" docOffset="625" starttimestamp="1701628917814" timestamp="8473796" />
  <Command __id="3729" _type="MoveCaretCommand" caretOffset="625" date="Sun Dec 03 16:03:11 EST 2023" docOffset="625" starttimestamp="1701628917814" timestamp="8473796" />
  <Command __id="3730" _type="MoveCaretCommand" caretOffset="623" date="Sun Dec 03 16:04:17 EST 2023" docOffset="623" starttimestamp="1701628917814" timestamp="8539889" />
  <Command __id="3731" _type="MoveCaretCommand" caretOffset="623" date="Sun Dec 03 16:04:17 EST 2023" docOffset="623" starttimestamp="1701628917814" timestamp="8539889" />
  <Command __id="3732" _type="ShellCommand" date="Sun Dec 03 16:04:25 EST 2023" starttimestamp="1701628917814" timestamp="8547586" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3733" _type="ShellCommand" date="Sun Dec 03 16:04:54 EST 2023" starttimestamp="1701628917814" timestamp="8576314" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3734" _type="ShellCommand" date="Sun Dec 03 16:04:58 EST 2023" starttimestamp="1701628917814" timestamp="8581020" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3735" _type="ShellCommand" date="Sun Dec 03 16:05:01 EST 2023" starttimestamp="1701628917814" timestamp="8583514" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3736" _type="ShellCommand" date="Sun Dec 03 16:05:02 EST 2023" starttimestamp="1701628917814" timestamp="8584757" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3737" _type="ShellCommand" date="Sun Dec 03 16:05:05 EST 2023" starttimestamp="1701628917814" timestamp="8587709" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3738" _type="ShellCommand" date="Sun Dec 03 16:05:13 EST 2023" starttimestamp="1701628917814" timestamp="8595665" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3739" _type="ShellCommand" date="Sun Dec 03 16:06:13 EST 2023" starttimestamp="1701628917814" timestamp="8655353" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3740" _type="MoveCaretCommand" caretOffset="565" date="Sun Dec 03 16:06:13 EST 2023" docOffset="565" starttimestamp="1701628917814" timestamp="8655779" />
  <Command __id="3741" _type="MoveCaretCommand" caretOffset="565" date="Sun Dec 03 16:06:13 EST 2023" docOffset="565" starttimestamp="1701628917814" timestamp="8655779" />
  <Command __id="3742" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Sun Dec 03 16:06:13 EST 2023" starttimestamp="1701628917814" timestamp="8655943" />
  <Command __id="3743" _type="CopyCommand" date="Sun Dec 03 16:06:13 EST 2023" starttimestamp="1701628917814" timestamp="8656077" />
  <Command __id="3744" _type="ShellCommand" date="Sun Dec 03 16:06:14 EST 2023" starttimestamp="1701628917814" timestamp="8656473" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3745" _type="ShellCommand" date="Sun Dec 03 16:07:07 EST 2023" starttimestamp="1701628917814" timestamp="8709280" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3746" _type="MoveCaretCommand" caretOffset="623" date="Sun Dec 03 16:07:08 EST 2023" docOffset="623" starttimestamp="1701628917814" timestamp="8710432" />
  <Command __id="3747" _type="MoveCaretCommand" caretOffset="623" date="Sun Dec 03 16:07:08 EST 2023" docOffset="623" starttimestamp="1701628917814" timestamp="8710432" />
  <Command __id="3748" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 16:07:08 EST 2023" docOffset="186" starttimestamp="1701628917814" timestamp="8710999" />
  <Command __id="3749" _type="MoveCaretCommand" caretOffset="186" date="Sun Dec 03 16:07:08 EST 2023" docOffset="186" starttimestamp="1701628917814" timestamp="8710999" />
  <DocumentChange __id="3711" _type="Delete" date="Sun Dec 03 16:02:02 EST 2023" docASTNodeCount="108" docActiveCodeLength="628" docExpressionCount="73" docLength="628" endLine="5" length="39" offset="94" startLine="4" starttimestamp="1701628917814" timestamp="8405156">
    <text><![CDATA[import main.lisp.parser.terms.NilAtom;
]]></text>
  </DocumentChange>
  <DocumentChange __id="3752" _type="Replace" date="Sun Dec 03 16:07:10 EST 2023" docASTNodeCount="109" docActiveCodeLength="804" docExpressionCount="70" docLength="1178" endLine="23" insertionLength="985" int_docASTNodeCount="34" int_docActiveCodeLength="193" int_docExpressionCount="26" int_docLength="193" length="435" offset="188" startLine="8" starttimestamp="1701628917814" timestamp="8712672">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr;
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}]]></deletedText>
    <insertedText><![CDATA[    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // All expressions were non-nil, return true (or Lisp's equivalent).
            return ...; // Replace with your representation of true.
        }

        // Evaluate the current head.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list.
            return evalHelper(expr.getTail(), environment);
        }
    }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3754" _type="Replace" date="Sun Dec 03 16:07:17 EST 2023" docASTNodeCount="108" docActiveCodeLength="628" docExpressionCount="73" docLength="628" endLine="32" insertionLength="435" int_docASTNodeCount="34" int_docActiveCodeLength="193" int_docExpressionCount="26" int_docLength="193" length="985" offset="188" startLine="8" starttimestamp="1701628917814" timestamp="8719192">
    <deletedText><![CDATA[    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // All expressions were non-nil, return true (or Lisp's equivalent).
            return ...; // Replace with your representation of true.
        }

        // Evaluate the current head.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list.
            return evalHelper(expr.getTail(), environment);
        }
    }]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr;
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}]]></insertedText>
  </DocumentChange>
  <Command __id="3750" _type="SelectTextCommand" caretOffset="188" date="Sun Dec 03 16:07:10 EST 2023" end="623" start="188" starttimestamp="1701628917814" timestamp="8712562" />
  <Command __id="3751" _type="SelectTextCommand" caretOffset="188" date="Sun Dec 03 16:07:10 EST 2023" end="623" start="188" starttimestamp="1701628917814" timestamp="8712563" />
  <Command __id="3753" _type="PasteCommand" date="Sun Dec 03 16:07:10 EST 2023" starttimestamp="1701628917814" timestamp="8712684" />
  <Command __id="3755" _type="UndoCommand" date="Sun Dec 03 16:07:17 EST 2023" starttimestamp="1701628917814" timestamp="8719202" />
  <Command __id="3757" _type="PasteCommand" date="Sun Dec 03 16:07:19 EST 2023" starttimestamp="1701628917814" timestamp="8721361" />
  <Command __id="3758" _type="MoveCaretCommand" caretOffset="93" date="Sun Dec 03 16:07:29 EST 2023" docOffset="93" starttimestamp="1701628917814" timestamp="8732157" />
  <Command __id="3759" _type="MoveCaretCommand" caretOffset="93" date="Sun Dec 03 16:07:29 EST 2023" docOffset="93" starttimestamp="1701628917814" timestamp="8732157" />
  <Command __id="3760" _type="ShellCommand" date="Sun Dec 03 16:07:32 EST 2023" starttimestamp="1701628917814" timestamp="8734420" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3761" _type="ShellCommand" date="Sun Dec 03 16:07:32 EST 2023" starttimestamp="1701628917814" timestamp="8734487" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3756" _type="Replace" date="Sun Dec 03 16:07:19 EST 2023" docASTNodeCount="109" docActiveCodeLength="804" docExpressionCount="70" docLength="1178" endLine="23" insertionLength="985" int_docASTNodeCount="34" int_docActiveCodeLength="193" int_docExpressionCount="26" int_docLength="193" length="435" offset="188" startLine="8" starttimestamp="1701628917814" timestamp="8721345">
    <deletedText><![CDATA[	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr;
		}
		if(expr.getHead().eval(environment).isNIL()) {
			return expr.getHead().eval(environment);
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}]]></deletedText>
    <insertedText><![CDATA[    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // All expressions were non-nil, return true (or Lisp's equivalent).
            return ...; // Replace with your representation of true.
        }

        // Evaluate the current head.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list.
            return evalHelper(expr.getTail(), environment);
        }
    }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3762" _type="Insert" date="Sun Dec 03 16:07:32 EST 2023" docASTNodeCount="119" docActiveCodeLength="843" docExpressionCount="79" docLength="1217" length="39" offset="93" repeat="2" starttimestamp="1701628917814" timestamp="8734502" timestamp2="8734503">
    <text><![CDATA[
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="3764" _type="MoveCaretCommand" caretOffset="765" date="Sun Dec 03 16:07:33 EST 2023" docOffset="765" starttimestamp="1701628917814" timestamp="8735731" />
  <Command __id="3765" _type="MoveCaretCommand" caretOffset="765" date="Sun Dec 03 16:07:33 EST 2023" docOffset="765" starttimestamp="1701628917814" timestamp="8735731" />
  <Command __id="3766" _type="MoveCaretCommand" caretOffset="765" date="Sun Dec 03 16:07:33 EST 2023" docOffset="765" starttimestamp="1701628917814" timestamp="8735894" />
  <Command __id="3767" _type="MoveCaretCommand" caretOffset="765" date="Sun Dec 03 16:07:33 EST 2023" docOffset="765" starttimestamp="1701628917814" timestamp="8735894" />
  <DocumentChange __id="3768" _type="Delete" date="Sun Dec 03 16:07:50 EST 2023" docASTNodeCount="119" docActiveCodeLength="840" docExpressionCount="79" docLength="1214" endLine="20" length="3" offset="762" repeat="3" startLine="20" starttimestamp="1701628917814" timestamp="8752585" timestamp2="8752853">
    <text><![CDATA[...]]></text>
  </DocumentChange>
  <Command __id="3769" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:07:50 EST 2023" starttimestamp="1701628917814" timestamp="8752588" />
  <Command __id="3770" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:07:50 EST 2023" starttimestamp="1701628917814" timestamp="8752588" />
  <Command __id="3772" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:07:50 EST 2023" starttimestamp="1701628917814" timestamp="8752721" />
  <Command __id="3773" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:07:50 EST 2023" starttimestamp="1701628917814" timestamp="8752721" />
  <Command __id="3775" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:07:50 EST 2023" starttimestamp="1701628917814" timestamp="8752855" />
  <Command __id="3776" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 16:07:50 EST 2023" starttimestamp="1701628917814" timestamp="8752855" />
  <Command __id="3778" _type="InsertStringCommand" date="Sun Dec 03 16:07:52 EST 2023" starttimestamp="1701628917814" timestamp="8754973" timestamp2="8754973">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3779" _type="InsertStringCommand" date="Sun Dec 03 16:07:52 EST 2023" starttimestamp="1701628917814" timestamp="8754973" timestamp2="8754973">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3781" _type="InsertStringCommand" date="Sun Dec 03 16:07:52 EST 2023" starttimestamp="1701628917814" timestamp="8755178" timestamp2="8755178">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3782" _type="InsertStringCommand" date="Sun Dec 03 16:07:52 EST 2023" starttimestamp="1701628917814" timestamp="8755178" timestamp2="8755178">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3784" _type="InsertStringCommand" date="Sun Dec 03 16:07:53 EST 2023" starttimestamp="1701628917814" timestamp="8755311" timestamp2="8755311">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3785" _type="InsertStringCommand" date="Sun Dec 03 16:07:53 EST 2023" starttimestamp="1701628917814" timestamp="8755311" timestamp2="8755311">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3787" _type="InsertStringCommand" date="Sun Dec 03 16:07:53 EST 2023" starttimestamp="1701628917814" timestamp="8755355" timestamp2="8755355">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3788" _type="InsertStringCommand" date="Sun Dec 03 16:07:53 EST 2023" starttimestamp="1701628917814" timestamp="8755355" timestamp2="8755355">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3789" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:54 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8756811" />
  <Command __id="3790" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:54 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8756811" />
  <Command __id="3791" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 16:07:54 EST 2023" starttimestamp="1701628917814" timestamp="8757008" />
  <Command __id="3792" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:07:54 EST 2023" starttimestamp="1701628917814" timestamp="8757106" />
  <Command __id="3793" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:07:54 EST 2023" starttimestamp="1701628917814" timestamp="8757112" />
  <Command __id="3794" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:55 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8757983" />
  <Command __id="3795" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:55 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8757983" />
  <Command __id="3796" _type="MoveCaretCommand" caretOffset="1197" date="Sun Dec 03 16:07:56 EST 2023" docOffset="1197" starttimestamp="1701628917814" timestamp="8758695" />
  <Command __id="3797" _type="MoveCaretCommand" caretOffset="1197" date="Sun Dec 03 16:07:56 EST 2023" docOffset="1197" starttimestamp="1701628917814" timestamp="8758695" />
  <Command __id="3798" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:07:56 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8759139" />
  <Command __id="3799" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:07:56 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8759140" />
  <Command __id="3800" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:07:57 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8759413" />
  <Command __id="3801" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:07:57 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8759414" />
  <Command __id="3802" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:07:57 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8759755" />
  <Command __id="3803" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:07:57 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8759755" />
  <Command __id="3804" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:57 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8759960" />
  <Command __id="3805" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:57 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8759960" />
  <Command __id="3806" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8760193" />
  <Command __id="3807" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8760194" />
  <Command __id="3808" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8760364" />
  <Command __id="3809" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8760364" />
  <Command __id="3810" _type="MoveCaretCommand" caretOffset="1207" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1207" starttimestamp="1701628917814" timestamp="8760518" />
  <Command __id="3811" _type="MoveCaretCommand" caretOffset="1207" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1207" starttimestamp="1701628917814" timestamp="8760518" />
  <Command __id="3812" _type="MoveCaretCommand" caretOffset="1197" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1197" starttimestamp="1701628917814" timestamp="8760962" />
  <Command __id="3813" _type="MoveCaretCommand" caretOffset="1197" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1197" starttimestamp="1701628917814" timestamp="8760962" />
  <Command __id="3814" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8761179" />
  <Command __id="3815" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:07:58 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8761179" />
  <Command __id="3816" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:07:59 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8761366" />
  <Command __id="3817" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:07:59 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8761366" />
  <Command __id="3818" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:07:59 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8761558" />
  <Command __id="3819" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:07:59 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8761558" />
  <Command __id="3820" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:59 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8761781" />
  <Command __id="3821" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:07:59 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8761782" />
  <Command __id="3822" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:08:00 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8762248" />
  <Command __id="3823" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:08:00 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8762248" />
  <Command __id="3824" _type="MoveCaretCommand" caretOffset="973" date="Sun Dec 03 16:08:00 EST 2023" docOffset="973" starttimestamp="1701628917814" timestamp="8762579" />
  <Command __id="3825" _type="MoveCaretCommand" caretOffset="973" date="Sun Dec 03 16:08:00 EST 2023" docOffset="973" starttimestamp="1701628917814" timestamp="8762579" />
  <Command __id="3826" _type="MoveCaretCommand" caretOffset="973" date="Sun Dec 03 16:08:00 EST 2023" docOffset="973" starttimestamp="1701628917814" timestamp="8762740" />
  <Command __id="3827" _type="MoveCaretCommand" caretOffset="973" date="Sun Dec 03 16:08:00 EST 2023" docOffset="973" starttimestamp="1701628917814" timestamp="8762740" />
  <Command __id="3828" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:08:00 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8762941" />
  <Command __id="3829" _type="MoveCaretCommand" caretOffset="1004" date="Sun Dec 03 16:08:00 EST 2023" docOffset="1004" starttimestamp="1701628917814" timestamp="8762941" />
  <Command __id="3830" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:08:00 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8763098" />
  <Command __id="3831" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:08:00 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8763098" />
  <Command __id="3832" _type="SelectTextCommand" caretOffset="1137" date="Sun Dec 03 16:08:01 EST 2023" end="1137" start="1086" starttimestamp="1701628917814" timestamp="8763257" />
  <Command __id="3833" _type="SelectTextCommand" caretOffset="1137" date="Sun Dec 03 16:08:01 EST 2023" end="1137" start="1086" starttimestamp="1701628917814" timestamp="8763257" />
  <Command __id="3834" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:08:01 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8763860" />
  <Command __id="3835" _type="MoveCaretCommand" caretOffset="1137" date="Sun Dec 03 16:08:01 EST 2023" docOffset="1137" starttimestamp="1701628917814" timestamp="8763860" />
  <Command __id="3836" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:08:02 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8764820" />
  <DocumentChange __id="3777" _type="Insert" date="Sun Dec 03 16:07:52 EST 2023" docASTNodeCount="120" docActiveCodeLength="844" docExpressionCount="80" docLength="1218" length="4" offset="762" repeat="4" starttimestamp="1701628917814" timestamp="8754970" timestamp2="8755353">
    <text><![CDATA[expr]]></text>
  </DocumentChange>
  <Command __id="3837" _type="MoveCaretCommand" caretOffset="1086" date="Sun Dec 03 16:08:02 EST 2023" docOffset="1086" starttimestamp="1701628917814" timestamp="8764820" />
  <Command __id="3838" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:08:03 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8765363" />
  <Command __id="3839" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:08:03 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8765363" />
  <Command __id="3841" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 16:08:04 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="8767015" />
  <Command __id="3842" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 16:08:07 EST 2023" starttimestamp="1701628917814" timestamp="8769837" />
  <Command __id="3843" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:08:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8769996" type="Run" />
  <Command __id="3844" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:08:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8769996" type="Run" />
  <Command __id="3840" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:08:04 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8766976">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3845" _type="ConsoleInput" date="Sun Dec 03 16:08:10 EST 2023" starttimestamp="1701628917814" timestamp="8772996" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3846" _type="ConsoleOutput" date="Sun Dec 03 16:08:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="8773041" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3847" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:08:12 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8774568">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3848" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 16:08:12 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="8774621" />
  <Command __id="3849" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:08:12 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8774945">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3850" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 16:08:12 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="8774972" />
  <Command __id="3852" _type="MoveCaretCommand" caretOffset="1069" date="Sun Dec 03 16:08:13 EST 2023" docOffset="1069" starttimestamp="1701628917814" timestamp="8775773" />
  <Command __id="3853" _type="ShellCommand" date="Sun Dec 03 16:09:42 EST 2023" starttimestamp="1701628917814" timestamp="8864477" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3854" _type="ShellCommand" date="Sun Dec 03 16:10:26 EST 2023" starttimestamp="1701628917814" timestamp="8909121" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3855" _type="ShellCommand" date="Sun Dec 03 16:10:28 EST 2023" starttimestamp="1701628917814" timestamp="8910532" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3856" _type="ShellCommand" date="Sun Dec 03 16:10:39 EST 2023" starttimestamp="1701628917814" timestamp="8921422" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3857" _type="ShellCommand" date="Sun Dec 03 16:10:40 EST 2023" starttimestamp="1701628917814" timestamp="8922376" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3858" _type="ShellCommand" date="Sun Dec 03 16:10:44 EST 2023" starttimestamp="1701628917814" timestamp="8926721" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3859" _type="ShellCommand" date="Sun Dec 03 16:10:46 EST 2023" starttimestamp="1701628917814" timestamp="8928274" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3860" _type="ShellCommand" date="Sun Dec 03 16:11:22 EST 2023" starttimestamp="1701628917814" timestamp="8964548" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3861" _type="MoveCaretCommand" caretOffset="461" date="Sun Dec 03 16:11:22 EST 2023" docOffset="461" starttimestamp="1701628917814" timestamp="8965151" />
  <Command __id="3862" _type="MoveCaretCommand" caretOffset="461" date="Sun Dec 03 16:11:22 EST 2023" docOffset="461" starttimestamp="1701628917814" timestamp="8965151" />
  <Command __id="3863" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Sun Dec 03 16:11:23 EST 2023" starttimestamp="1701628917814" timestamp="8965781" />
  <Command __id="3865" _type="PasteCommand" date="Sun Dec 03 16:11:23 EST 2023" starttimestamp="1701628917814" timestamp="8966013" />
  <Command __id="3866" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 16:11:25 EST 2023" starttimestamp="1701628917814" timestamp="8967361" />
  <Command __id="3867" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:11:25 EST 2023" starttimestamp="1701628917814" timestamp="8967463" />
  <Command __id="3868" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:11:25 EST 2023" starttimestamp="1701628917814" timestamp="8967479" />
  <Command __id="3869" _type="ShellCommand" date="Sun Dec 03 16:11:25 EST 2023" starttimestamp="1701628917814" timestamp="8967492" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3870" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:11:26 EST 2023" starttimestamp="1701628917814" timestamp="8968484" />
  <Command __id="3871" _type="EclipseCommand" commandID="" date="Sun Dec 03 16:11:26 EST 2023" starttimestamp="1701628917814" timestamp="8968486" />
  <Command __id="3873" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:11:32 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8974681" type="Debug" />
  <Command __id="3874" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:11:32 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8974682" type="Run" />
  <Command __id="3875" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:11:32 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="8974682" type="Debug" />
  <Command __id="3876" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:11:32 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8974682" type="Run" />
  <Command __id="3877" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:32 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8975037" />
  <Command __id="3878" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:32 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8975037" />
  <Command __id="3851" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:08:13 EST 2023" docASTNodeCount="120" docActiveCodeLength="844" docExpressionCount="80" docLength="1218" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8775743">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class AndEvaluator implements Evaluator {"), Diff(DELETE,"	"), Diff(INSERT,"    "), Diff(EQUAL,"@Override"), Diff(DELETE,"	"), Diff(INSERT,"    "), Diff(EQUAL,"public SExpression eval(SExpression expr, Environment environment) {"), Diff(DELETE,"		"), Diff(INSERT,"        // Start with the first argument of the AND expression.        "), Diff(EQUAL,"expr = expr.getTail();"), Diff(DELETE,"		"), Diff(INSERT,"        "), Diff(EQUAL,"return evalHelper(expr, environment);"), Diff(DELETE,"	}	"), Diff(INSERT,"    }    "), Diff(EQUAL,"public static SExpression evalHelper(SExpression expr, Environment environment) {"), Diff(DELETE,"		if(expr.isAtom()) {			"), Diff(INSERT,"        // Check if the expression is empty (reached the end of the list).        "), Diff(EQUAL,"if"), Diff(INSERT," "), Diff(EQUAL,"(expr"), Diff(DELETE,".isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return expr.getHead().eval(environment);		}else {			if(expr.getTail()."), Diff(INSERT," instanceof NilAtom) {            // All expressions were non-nil, return true (or Lisp's equivalent).            return expr; // Replace with your representation of true.        }        // Evaluate the current head.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head "), Diff(EQUAL,"is"), Diff(INSERT," "), Diff(EQUAL,"NIL"), Diff(DELETE,"()){				if(expr.getTail().equals(new NilAtom()"), Diff(INSERT,".        if (current.isNIL("), Diff(EQUAL,"))"), Diff(INSERT," "), Diff(EQUAL,"{"), Diff(DELETE,"					return new NilAtom();				}else{					return evalHelper(expr.getHead().eval(environment), environment);				}			}			"), Diff(INSERT,"            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list.            "), Diff(EQUAL,"return evalHelper(expr.getTail(), environment);"), Diff(DELETE,"		}	"), Diff(INSERT,"        }    "), Diff(EQUAL,"}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // All expressions were non-nil, return true (or Lisp's equivalent).
            return expr; // Replace with your representation of true.
        }

        // Evaluate the current head.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list.
            return evalHelper(expr.getTail(), environment);
        }
    }
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3864" _type="Replace" date="Sun Dec 03 16:11:23 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" endLine="36" insertionLength="1280" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="1218" offset="0" startLine="0" starttimestamp="1701628917814" timestamp="8966003">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class AndEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // All expressions were non-nil, return true (or Lisp's equivalent).
            return expr; // Replace with your representation of true.
        }

        // Evaluate the current head.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list.
            return evalHelper(expr.getTail(), environment);
        }
    }
	
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.NilAtom;

public class AndEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment, null);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // If all expressions were non-nil, return the last evaluated expression.
            return lastEvaluated;
        }

        // Evaluate the current head and store it.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list, updating the last evaluated expression.
            return evalHelper(expr.getTail(), environment, current);
        }
    }
}
]]></insertedText>
  </DocumentChange>
  <Command __id="3879" _type="MoveCaretCommand" caretOffset="925" date="Sun Dec 03 16:11:35 EST 2023" docOffset="925" starttimestamp="1701628917814" timestamp="8977192" />
  <Command __id="3880" _type="MoveCaretCommand" caretOffset="925" date="Sun Dec 03 16:11:35 EST 2023" docOffset="925" starttimestamp="1701628917814" timestamp="8977193" />
  <Command __id="3881" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:35 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8978057" />
  <Command __id="3882" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:35 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8978057" />
  <Command __id="3883" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:36 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8978908" />
  <Command __id="3884" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:36 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8978908" />
  <Command __id="3887" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:11:39 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8981739" type="Run" />
  <Command __id="3888" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 16:11:39 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8981739" type="Run" />
  <Command __id="3890" _type="MoveCaretCommand" caretOffset="1019" date="Sun Dec 03 16:11:40 EST 2023" docOffset="1019" starttimestamp="1701628917814" timestamp="8982385" />
  <Command __id="3891" _type="ConsoleInput" date="Sun Dec 03 16:11:43 EST 2023" starttimestamp="1701628917814" timestamp="8985304" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3892" _type="ConsoleOutput" date="Sun Dec 03 16:11:43 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="8985334" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3893" _type="ShellCommand" date="Sun Dec 03 16:11:45 EST 2023" starttimestamp="1701628917814" timestamp="8987322" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3885" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:11:38 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8980507">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3889" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:11:40 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="8982361">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms."), Diff(DELETE,"NilAtom"), Diff(INSERT,"SExpression"), Diff(EQUAL,";import main.lisp.parser.terms."), Diff(DELETE,"SExpression"), Diff(INSERT,"NilAtom"), Diff(EQUAL,";public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment"), Diff(INSERT,", null"), Diff(EQUAL,");    }    public static SExpression evalHelper(SExpression expr, Environment environment"), Diff(INSERT,", SExpression lastEvaluated"), Diff(EQUAL,") {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // "), Diff(DELETE,"A"), Diff(INSERT,"If a"), Diff(EQUAL,"ll expressions were non-nil, return t"), Diff(DELETE,"rue (or Lisp's equivalent).            return expr; // Replace with your representation of true."), Diff(INSERT,"he last evaluated expression.            return lastEvaluated;"), Diff(EQUAL,"        }        // Evaluate the current head"), Diff(INSERT," and store it"), Diff(EQUAL,".        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list"), Diff(INSERT,", updating the last evaluated expression"), Diff(EQUAL,".            return evalHelper(expr.getTail(), environment"), Diff(INSERT,", current"), Diff(EQUAL,");        }    }"), Diff(DELETE,"	"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.NilAtom;

public class AndEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Start with the first argument of the AND expression.
        expr = expr.getTail();
        return evalHelper(expr, environment, null);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {
        // Check if the expression is empty (reached the end of the list).
        if (expr instanceof NilAtom) {
            // If all expressions were non-nil, return the last evaluated expression.
            return lastEvaluated;
        }

        // Evaluate the current head and store it.
        SExpression current = expr.getHead().eval(environment);

        // Check if the evaluated head is NIL.
        if (current.isNIL()) {
            return current; // Return the first NIL encountered.
        } else {
            // Continue with the rest of the list, updating the last evaluated expression.
            return evalHelper(expr.getTail(), environment, current);
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="3894" _type="ShellCommand" date="Sun Dec 03 16:11:47 EST 2023" starttimestamp="1701628917814" timestamp="8989325" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3895" _type="PasteCommand" date="Sun Dec 03 16:11:47 EST 2023" starttimestamp="1701628917814" timestamp="8990094" />
  <Command __id="3896" _type="ConsoleOutput" date="Sun Dec 03 16:11:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="8990409" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="3898" _type="MoveCaretCommand" caretOffset="967" date="Sun Dec 03 16:12:29 EST 2023" docOffset="967" starttimestamp="1701628917814" timestamp="9032184" />
  <Command __id="3899" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 16:12:31 EST 2023" starttimestamp="1701628917814" timestamp="9033990" />
  <Command __id="3900" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 16:12:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="9034079" type="Run" />
  <Command __id="3901" _type="ShellCommand" date="Sun Dec 03 16:12:32 EST 2023" starttimestamp="1701628917814" timestamp="9034411" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3902" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037465" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"Test execution time (ms):0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3903" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037469" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3904" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037471" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3905" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037503" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):39
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):39"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3906" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037505" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"39"), Diff(INSERT,"40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3907" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037506" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):40¶")]]]></diff>
  </Command>
  <Command __id="3908" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037507" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicAndChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3909" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037509" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3910" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037509" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3911" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037511" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3912" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037514" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:Not"), Diff(INSERT,"execution time (ms):0¶Test Result:VariableArgumentAnd"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="3913" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037514" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3914" _type="ConsoleOutput" date="Sun Dec 03 16:12:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="9037515" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3915" _type="ShellCommand" date="Sun Dec 03 16:12:37 EST 2023" starttimestamp="1701628917814" timestamp="9039420" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3916" _type="LocalChecksRawCommand" date="Sun Dec 03 16:12:37 EST 2023" starttimestamp="1701628917814" timestamp="9039423">
    <CSVRow><![CDATA[38,Sun Dec 03 16:12:35 EST 2023,22,2,LogicalSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker+ VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,18,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3917" _type="LocalChecksRawCommand" date="Sun Dec 03 16:12:37 EST 2023" starttimestamp="1701628917814" timestamp="9039423">
    <CSVRow><![CDATA[38,Sun Dec 03 16:12:35 EST 2023,22,2,LogicalSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker+ VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,18,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3918" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:12:37 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="9039428" type="Debug" />
  <Command __id="3919" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 16:12:37 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="9039429" type="Run" />
  <Command __id="3920" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 16:12:37 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="9039429" type="Debug" />
  <Command __id="3921" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 16:12:37 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="9039429" type="Run" />
  <Command __id="3922" _type="MoveCaretCommand" caretOffset="41" date="Sun Dec 03 16:12:37 EST 2023" docOffset="41" starttimestamp="1701628917814" timestamp="9039815" />
  <Command __id="3923" _type="MoveCaretCommand" caretOffset="41" date="Sun Dec 03 16:12:37 EST 2023" docOffset="41" starttimestamp="1701628917814" timestamp="9039816" />
  <Command __id="3924" _type="ShellCommand" date="Sun Dec 03 16:12:40 EST 2023" starttimestamp="1701628917814" timestamp="9042300" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3897" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 16:12:29 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="9032146">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3926" _type="ShellCommand" date="Sun Dec 03 19:41:45 EST 2023" starttimestamp="1701628917814" timestamp="21587517" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3929" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:43:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21666522" type="Run" />
  <Command __id="3930" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:43:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21666522" type="Run" />
  <Command __id="3931" _type="ShellCommand" date="Sun Dec 03 19:43:04 EST 2023" starttimestamp="1701628917814" timestamp="21667039" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3932" _type="ShellCommand" date="Sun Dec 03 19:43:05 EST 2023" starttimestamp="1701628917814" timestamp="21667231" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3933" _type="ShellCommand" date="Sun Dec 03 19:43:09 EST 2023" starttimestamp="1701628917814" timestamp="21671890" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3934" _type="ConsoleOutput" date="Sun Dec 03 19:43:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21672962" type="ConsoleOutput">
    <outputString><![CDATA[2023-12-03 19:43:10.775 java[47758:5411702] TSM AdjustCapsLockLEDForKeyTransitionHandling - _ISSetPhysicalKeyboardCapsLockLED Inhibit
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"2023-12-03 19:43:10.775 java[47758:5411702] TSM AdjustCapsLockLEDForKeyTransitionHandling - _ISSetPhysicalKeyboardCapsLockLED Inhibit"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3935" _type="ShellCommand" date="Sun Dec 03 19:43:13 EST 2023" starttimestamp="1701628917814" timestamp="21675975" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3936" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:43:13 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21675982" type="Debug" />
  <Command __id="3937" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:43:13 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21675982" type="Run" />
  <Command __id="3938" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:43:13 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21675982" type="Debug" />
  <Command __id="3939" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:43:13 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21675982" type="Run" />
  <Command __id="3940" _type="MoveCaretCommand" caretOffset="433" date="Sun Dec 03 19:43:14 EST 2023" docOffset="433" starttimestamp="1701628917814" timestamp="21676680" />
  <Command __id="3941" _type="MoveCaretCommand" caretOffset="433" date="Sun Dec 03 19:43:14 EST 2023" docOffset="433" starttimestamp="1701628917814" timestamp="21676680" />
  <Command __id="3927" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:41:47 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21589925">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3942" _type="MoveCaretCommand" caretOffset="824" date="Sun Dec 03 19:43:23 EST 2023" docOffset="824" starttimestamp="1701628917814" timestamp="21685857" />
  <Command __id="3943" _type="MoveCaretCommand" caretOffset="824" date="Sun Dec 03 19:43:23 EST 2023" docOffset="824" starttimestamp="1701628917814" timestamp="21685858" />
  <Command __id="3945" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:43:25 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21687408" />
  <Command __id="3946" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 19:43:26 EST 2023" starttimestamp="1701628917814" timestamp="21688959" />
  <Command __id="3947" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:43:26 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21689149" type="Run" />
  <Command __id="3948" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:43:26 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21689149" type="Run" />
  <Command __id="3944" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:43:25 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21687378">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3949" _type="ConsoleInput" date="Sun Dec 03 19:43:31 EST 2023" starttimestamp="1701628917814" timestamp="21693656" type="Exception">
    <outputString><![CDATA[(AND T Nil)
]]></outputString>
  </Command>
  <Command __id="3950" _type="ConsoleOutput" date="Sun Dec 03 19:43:31 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21693684" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2023-12-03 19:43:10.775 java[47758:5411702] TSM AdjustCapsLockLEDForKeyTransitionHandling - _ISSetPhysicalKeyboardCapsLockLED Inhibit"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3951" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:43:39 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21701233">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3952" _type="MoveCaretCommand" caretOffset="41" date="Sun Dec 03 19:43:39 EST 2023" docOffset="41" starttimestamp="1701628917814" timestamp="21701266" />
  <Command __id="3953" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:43:40 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21702204">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3954" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:43:40 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21702228" />
  <Command __id="3955" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:43:40 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21702471">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3956" _type="MoveCaretCommand" caretOffset="824" date="Sun Dec 03 19:43:40 EST 2023" docOffset="824" starttimestamp="1701628917814" timestamp="21702495" />
  <DocumentChange __id="3957" _type="Insert" date="Sun Dec 03 19:44:02 EST 2023" docASTNodeCount="126" docActiveCodeLength="894" docExpressionCount="84" docLength="1282" length="2" offset="824" starttimestamp="1701628917814" timestamp="21724981">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="3958" _type="InsertStringCommand" date="Sun Dec 03 19:44:02 EST 2023" starttimestamp="1701628917814" timestamp="21724983" timestamp2="21724983">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3959" _type="InsertStringCommand" date="Sun Dec 03 19:44:02 EST 2023" starttimestamp="1701628917814" timestamp="21724983" timestamp2="21724983">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3961" _type="UndoCommand" date="Sun Dec 03 19:44:04 EST 2023" starttimestamp="1701628917814" timestamp="21726223" />
  <Command __id="3962" _type="ConsoleInput" date="Sun Dec 03 19:44:07 EST 2023" starttimestamp="1701628917814" timestamp="21730136" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="3963" _type="ConsoleOutput" date="Sun Dec 03 19:44:07 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21730140" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="3960" _type="Delete" date="Sun Dec 03 19:44:04 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" endLine="21" length="2" offset="824" startLine="21" starttimestamp="1701628917814" timestamp="21726219">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="3964" _type="ConsoleInput" date="Sun Dec 03 19:44:19 EST 2023" starttimestamp="1701628917814" timestamp="21742001" type="Exception">
    <outputString><![CDATA[(AND T NIL)
]]></outputString>
  </Command>
  <Command __id="3965" _type="ConsoleOutput" date="Sun Dec 03 19:44:19 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21742005" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3967" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:44:29 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21751912" />
  <Command __id="3968" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 19:44:31 EST 2023" starttimestamp="1701628917814" timestamp="21754060" />
  <Command __id="3969" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:44:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21754143" type="Run" />
  <Command __id="3970" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 19:44:34 EST 2023" starttimestamp="1701628917814" timestamp="21756759" />
  <Command __id="3971" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:44:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21756833" type="Run" />
  <Command __id="3972" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:34 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21756944" type="Run" />
  <Command __id="3973" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:34 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21756953" type="Run" />
  <Command __id="3974" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:34 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21757096" type="Run" />
  <Command __id="3976" _type="MoveCaretCommand" caretOffset="824" date="Sun Dec 03 19:44:35 EST 2023" docOffset="824" starttimestamp="1701628917814" timestamp="21758079" />
  <Command __id="3977" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Sun Dec 03 19:44:38 EST 2023" starttimestamp="1701628917814" timestamp="21760340" />
  <Command __id="3978" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 19:44:38 EST 2023" starttimestamp="1701628917814" timestamp="21760569" />
  <Command __id="3979" _type="BreakPointCommand" date="Sun Dec 03 19:44:38 EST 2023" lineNumber="13" starttimestamp="1701628917814" timestamp="21760570" type="BreakPointAdded" />
  <Command __id="3980" _type="ConsoleInput" date="Sun Dec 03 19:44:42 EST 2023" starttimestamp="1701628917814" timestamp="21764398" type="Exception">
    <outputString><![CDATA[(AND T NIL)
]]></outputString>
  </Command>
  <Command __id="3981" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:43 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21765220" type="Run" />
  <Command __id="3982" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:44:44 EST 2023" starttimestamp="1701628917814" timestamp="21767060" />
  <Command __id="3983" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:44 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21767063" type="Run" />
  <Command __id="3986" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21770640" type="Run" />
  <Command __id="3987" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:44:50 EST 2023" starttimestamp="1701628917814" timestamp="21772549" />
  <Command __id="3988" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:50 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21772554" type="Run" />
  <Command __id="3989" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:44:52 EST 2023" starttimestamp="1701628917814" timestamp="21774355" />
  <Command __id="3990" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21774357" type="Run" />
  <Command __id="3991" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:44:54 EST 2023" starttimestamp="1701628917814" timestamp="21776608" />
  <Command __id="3992" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:54 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21776611" type="Run" />
  <Command __id="4000" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:44:59 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21781867" type="Run" />
  <Command __id="4001" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:45:07 EST 2023" starttimestamp="1701628917814" timestamp="21789485" />
  <Command __id="4002" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:45:07 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21789489" type="Run" />
  <Command __id="4003" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:45:11 EST 2023" starttimestamp="1701628917814" timestamp="21793764" />
  <Command __id="4004" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:45:11 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21793767" type="Run" />
  <Command __id="4005" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:45:13 EST 2023" starttimestamp="1701628917814" timestamp="21795199" />
  <Command __id="4006" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:45:13 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21795202" type="Run" />
  <Command __id="4007" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:45:13 EST 2023" starttimestamp="1701628917814" timestamp="21795931" />
  <Command __id="4008" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:45:13 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21795934" type="Run" />
  <Command __id="4009" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Sun Dec 03 19:45:19 EST 2023" starttimestamp="1701628917814" timestamp="21801757" />
  <Command __id="4010" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:45:19 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21801759" type="Run" />
  <Command __id="3966" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:44:29 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21751880">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3975" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:44:35 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21758053">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4044" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:45:44 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="21826989">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4046" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:45:44 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21827096">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4048" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:00 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21842795">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4050" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:01 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21843764">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4052" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:01 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21844175">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4054" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:02 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21844882">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4056" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:03 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21845353">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4058" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:03 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21845583">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4060" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:06 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21849174">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4042" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:45:43 EST 2023" starttimestamp="1701628917814" timestamp="21826180" />
  <Command __id="4043" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:45:43 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21826183" type="Run" />
  <Command __id="4045" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:45:44 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="21827010" />
  <Command __id="4047" _type="MoveCaretCommand" caretOffset="409" date="Sun Dec 03 19:45:44 EST 2023" docOffset="409" starttimestamp="1701628917814" timestamp="21827135" />
  <Command __id="4049" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:46:00 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21842837" />
  <Command __id="4051" _type="MoveCaretCommand" caretOffset="485" date="Sun Dec 03 19:46:01 EST 2023" docOffset="566" starttimestamp="1701628917814" timestamp="21843788" />
  <Command __id="4053" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:46:02 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21844198" />
  <Command __id="4055" _type="MoveCaretCommand" caretOffset="485" date="Sun Dec 03 19:46:02 EST 2023" docOffset="566" starttimestamp="1701628917814" timestamp="21844910" />
  <Command __id="4057" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:46:03 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21845377" />
  <Command __id="4059" _type="MoveCaretCommand" caretOffset="41" date="Sun Dec 03 19:46:03 EST 2023" docOffset="41" starttimestamp="1701628917814" timestamp="21845610" />
  <Command __id="4061" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:46:07 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="21849234" />
  <Command __id="4063" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:46:21 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21863527" />
  <Command __id="4064" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 19:46:23 EST 2023" starttimestamp="1701628917814" timestamp="21865242" />
  <Command __id="4065" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:46:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21865323" type="Run" />
  <Command __id="4066" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:23 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21865442" type="Run" />
  <Command __id="4067" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21865594" type="Run" />
  <Command __id="4069" _type="MoveCaretCommand" caretOffset="485" date="Sun Dec 03 19:46:23 EST 2023" docOffset="566" starttimestamp="1701628917814" timestamp="21865866" />
  <Command __id="4071" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:30 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="21872482">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4072" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:46:30 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="21872505" />
  <Command __id="4073" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:30 EST 2023" docASTNodeCount="116" docActiveCodeLength="683" docExpressionCount="77" docLength="683" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21872589">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OrEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class OrEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if(expr.isNIL()) {				return expr;			}else {				return expr;			}		}		if(expr.getHead().eval(environment).isNIL()) {			return evalHelper(expr.getTail(), environment);		}else {			return expr.getHead().eval(environment);		}			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4074" _type="MoveCaretCommand" caretOffset="485" date="Sun Dec 03 19:46:30 EST 2023" docOffset="566" starttimestamp="1701628917814" timestamp="21872632" />
  <Command __id="4076" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:46:33 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="21875567" />
  <Command __id="4077" _type="ConsoleInput" date="Sun Dec 03 19:46:37 EST 2023" starttimestamp="1701628917814" timestamp="21879749" type="Exception">
    <outputString><![CDATA[(AND T 2)
]]></outputString>
  </Command>
  <Command __id="4075" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:33 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21875531">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4080" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:46:44 EST 2023" starttimestamp="1701628917814" timestamp="21887106" />
  <Command __id="4081" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:44 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21887109" type="Run" />
  <Command __id="4082" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:46:45 EST 2023" starttimestamp="1701628917814" timestamp="21887934" />
  <Command __id="4083" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21887936" type="Run" />
  <Command __id="4084" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Dec 03 19:46:45 EST 2023" starttimestamp="1701628917814" timestamp="21888089" />
  <Command __id="4085" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21888091" type="Run" />
  <Command __id="4086" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 19:46:46 EST 2023" starttimestamp="1701628917814" timestamp="21888660" />
  <Command __id="4087" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:46 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21888667" type="Debug" />
  <Command __id="4088" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:46:46 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21888667" type="Run" />
  <Command __id="4089" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:46 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21888667" type="Debug" />
  <Command __id="4090" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:46:46 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21888667" type="Run" />
  <Command __id="4092" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 19:46:47 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="21889931" />
  <Command __id="4093" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.debug" date="Sun Dec 03 19:46:49 EST 2023" starttimestamp="1701628917814" timestamp="21891627" />
  <Command __id="4094" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:46:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21891735" type="Run" />
  <Command __id="4095" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:46:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21891735" type="Run" />
  <Command __id="4096" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:49 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21891841" type="Run" />
  <Command __id="4097" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21891851" type="Run" />
  <Command __id="4098" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:46:49 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21892002" type="Run" />
  <Command __id="4091" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:46:47 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21889896">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4118" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:47:24 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21926356" type="Debug" />
  <Command __id="4119" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:47:24 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21926356" type="Run" />
  <Command __id="4120" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:47:24 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="21926356" type="Debug" />
  <Command __id="4121" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 19:47:24 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21926356" type="Run" />
  <Command __id="4122" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:47:25 EST 2023" docASTNodeCount="126" docActiveCodeLength="892" docExpressionCount="84" docLength="1280" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21928064">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Start with the first argument of the AND expression.        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        // Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it.        SExpression current = expr.getHead().eval(environment);        // Check if the evaluated head is NIL.        if (current.isNIL()) {            return current; // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression.            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4123" _type="MoveCaretCommand" caretOffset="399" date="Sun Dec 03 19:47:25 EST 2023" docOffset="519" starttimestamp="1701628917814" timestamp="21928090" />
  <Command __id="4124" _type="MoveCaretCommand" caretOffset="512" date="Sun Dec 03 19:47:26 EST 2023" docOffset="632" starttimestamp="1701628917814" timestamp="21928803" />
  <Command __id="4125" _type="InsertStringCommand" date="Sun Dec 03 19:47:27 EST 2023" starttimestamp="1701628917814" timestamp="21929190" timestamp2="21929190">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4126" _type="MoveCaretCommand" caretOffset="508" date="Sun Dec 03 19:47:27 EST 2023" docOffset="628" starttimestamp="1701628917814" timestamp="21930005" />
  <Command __id="4127" _type="InsertStringCommand" date="Sun Dec 03 19:47:28 EST 2023" starttimestamp="1701628917814" timestamp="21930716" timestamp2="21930716">
    <data><![CDATA[x]]></data>
  </Command>
  <DocumentChange __id="4128" _type="Delete" date="Sun Dec 03 19:47:28 EST 2023" docASTNodeCount="126" docActiveCodeLength="883" docExpressionCount="84" docLength="1205" endLine="18" length="75" offset="581" startLine="17" starttimestamp="1701628917814" timestamp="21931090">
    <text><![CDATA[        // Check if the expression is empty (reached the end of the list).
]]></text>
  </DocumentChange>
  <Command __id="4129" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 19:47:28 EST 2023" starttimestamp="1701628917814" timestamp="21931093" />
  <Command __id="4130" _type="MoveCaretCommand" caretOffset="234" date="Sun Dec 03 19:47:29 EST 2023" docOffset="354" starttimestamp="1701628917814" timestamp="21931698" />
  <DocumentChange __id="4131" _type="Delete" date="Sun Dec 03 19:47:29 EST 2023" docASTNodeCount="126" docActiveCodeLength="874" docExpressionCount="84" docLength="1141" endLine="12" length="64" offset="314" startLine="11" starttimestamp="1701628917814" timestamp="21931841">
    <text><![CDATA[        // Start with the first argument of the AND expression.
]]></text>
  </DocumentChange>
  <Command __id="4132" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 19:47:29 EST 2023" starttimestamp="1701628917814" timestamp="21931842" />
  <Command __id="4133" _type="MoveCaretCommand" caretOffset="471" date="Sun Dec 03 19:47:30 EST 2023" docOffset="591" starttimestamp="1701628917814" timestamp="21932490" />
  <DocumentChange __id="4134" _type="Delete" date="Sun Dec 03 19:47:30 EST 2023" docASTNodeCount="126" docActiveCodeLength="861" docExpressionCount="84" docLength="1055" endLine="18" length="86" offset="556" startLine="17" starttimestamp="1701628917814" timestamp="21932664">
    <text><![CDATA[            // If all expressions were non-nil, return the last evaluated expression.
]]></text>
  </DocumentChange>
  <Command __id="4135" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 19:47:30 EST 2023" starttimestamp="1701628917814" timestamp="21932665" />
  <Command __id="4136" _type="MoveCaretCommand" caretOffset="516" date="Sun Dec 03 19:47:31 EST 2023" docOffset="636" starttimestamp="1701628917814" timestamp="21933249" />
  <DocumentChange __id="4137" _type="Delete" date="Sun Dec 03 19:47:31 EST 2023" docASTNodeCount="126" docActiveCodeLength="852" docExpressionCount="84" docLength="1004" endLine="21" length="51" offset="601" startLine="20" starttimestamp="1701628917814" timestamp="21933370">
    <text><![CDATA[        // Evaluate the current head and store it.
]]></text>
  </DocumentChange>
  <Command __id="4138" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 19:47:31 EST 2023" starttimestamp="1701628917814" timestamp="21933371" />
  <Command __id="4139" _type="MoveCaretCommand" caretOffset="575" date="Sun Dec 03 19:47:31 EST 2023" docOffset="695" starttimestamp="1701628917814" timestamp="21933768" />
  <Command __id="4141" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 19:47:31 EST 2023" starttimestamp="1701628917814" timestamp="21933896" />
  <Command __id="4142" _type="SelectTextCommand" caretOffset="641" date="Sun Dec 03 19:47:33 EST 2023" end="641" start="605" starttimestamp="1701628917814" timestamp="21935285" />
  <Command __id="4144" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 19:47:33 EST 2023" starttimestamp="1701628917814" timestamp="21935821" />
  <Command __id="4146" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 19:47:33 EST 2023" starttimestamp="1701628917814" timestamp="21936088" />
  <Command __id="4147" _type="MoveCaretCommand" caretOffset="676" date="Sun Dec 03 19:47:34 EST 2023" docOffset="796" starttimestamp="1701628917814" timestamp="21937066" />
  <Command __id="4149" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Sun Dec 03 19:47:35 EST 2023" starttimestamp="1701628917814" timestamp="21937316" />
  <Command __id="4150" _type="MoveCaretCommand" caretOffset="604" date="Sun Dec 03 19:47:35 EST 2023" docOffset="724" starttimestamp="1701628917814" timestamp="21937551" />
  <Command __id="4151" _type="MoveCaretCommand" caretOffset="573" date="Sun Dec 03 19:47:36 EST 2023" docOffset="693" starttimestamp="1701628917814" timestamp="21938260" />
  <Command __id="4152" _type="MoveCaretCommand" caretOffset="545" date="Sun Dec 03 19:47:36 EST 2023" docOffset="665" starttimestamp="1701628917814" timestamp="21938554" />
  <Command __id="4154" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 19:47:37 EST 2023" starttimestamp="1701628917814" timestamp="21939281" />
  <Command __id="4155" _type="MoveCaretCommand" caretOffset="480" date="Sun Dec 03 19:47:37 EST 2023" docOffset="600" starttimestamp="1701628917814" timestamp="21939612" />
  <Command __id="4157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 19:47:37 EST 2023" starttimestamp="1701628917814" timestamp="21939670" />
  <Command __id="4158" _type="MoveCaretCommand" caretOffset="479" date="Sun Dec 03 19:47:37 EST 2023" docOffset="599" starttimestamp="1701628917814" timestamp="21939939" />
  <Command __id="4159" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 19:47:38 EST 2023" starttimestamp="1701628917814" timestamp="21940713" />
  <Command __id="4160" _type="EclipseCommand" commandID="" date="Sun Dec 03 19:47:38 EST 2023" starttimestamp="1701628917814" timestamp="21940812" />
  <Command __id="4161" _type="EclipseCommand" commandID="" date="Sun Dec 03 19:47:38 EST 2023" starttimestamp="1701628917814" timestamp="21940819" />
  <Command __id="4162" _type="ShellCommand" date="Sun Dec 03 19:47:38 EST 2023" starttimestamp="1701628917814" timestamp="21940836" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="4140" _type="Delete" date="Sun Dec 03 19:47:31 EST 2023" docASTNodeCount="126" docActiveCodeLength="843" docExpressionCount="84" docLength="957" endLine="23" length="47" offset="666" startLine="22" starttimestamp="1701628917814" timestamp="21933895">
    <text><![CDATA[        // Check if the evaluated head is NIL.
]]></text>
  </DocumentChange>
  <DocumentChange __id="4143" _type="Delete" date="Sun Dec 03 19:47:33 EST 2023" docASTNodeCount="126" docActiveCodeLength="842" docExpressionCount="84" docLength="920" endLine="23" length="37" offset="724" repeat="2" startLine="23" starttimestamp="1701628917814" timestamp="21935819" timestamp2="21936087">
    <text><![CDATA[ // Return the first NIL encountered.]]></text>
  </DocumentChange>
  <DocumentChange __id="4148" _type="Delete" date="Sun Dec 03 19:47:35 EST 2023" docASTNodeCount="126" docActiveCodeLength="829" docExpressionCount="84" docLength="829" endLine="26" length="91" offset="742" startLine="25" starttimestamp="1701628917814" timestamp="21937315">
    <text><![CDATA[            // Continue with the rest of the list, updating the last evaluated expression.
]]></text>
  </DocumentChange>
  <DocumentChange __id="4153" _type="Delete" date="Sun Dec 03 19:47:37 EST 2023" docASTNodeCount="126" docActiveCodeLength="828" docExpressionCount="84" docLength="828" endLine="21" length="1" offset="664" startLine="20" starttimestamp="1701628917814" timestamp="21939280">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="4156" _type="Delete" date="Sun Dec 03 19:47:37 EST 2023" docASTNodeCount="126" docActiveCodeLength="827" docExpressionCount="84" docLength="827" endLine="19" length="1" offset="599" startLine="18" starttimestamp="1701628917814" timestamp="21939669">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="4163" _type="ShellCommand" date="Sun Dec 03 19:47:40 EST 2023" starttimestamp="1701628917814" timestamp="21942963" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4164" _type="MoveCaretCommand" caretOffset="423" date="Sun Dec 03 19:47:41 EST 2023" docOffset="543" starttimestamp="1701628917814" timestamp="21943792" />
  <Command __id="4166" _type="MoveCaretCommand" caretOffset="41" date="Sun Dec 03 19:47:47 EST 2023" docOffset="41" starttimestamp="1701628917814" timestamp="21949800" />
  <Command __id="4167" _type="MoveCaretCommand" caretOffset="1108" date="Sun Dec 03 19:47:48 EST 2023" docOffset="1108" starttimestamp="1701628917814" timestamp="21951172" />
  <Command __id="4168" _type="MoveCaretCommand" caretOffset="1108" date="Sun Dec 03 19:47:48 EST 2023" docOffset="1108" starttimestamp="1701628917814" timestamp="21951172" />
  <Command __id="4169" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 19:47:50 EST 2023" starttimestamp="1701628917814" timestamp="21952772" />
  <Command __id="4170" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:47:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21952914" type="Run" />
  <Command __id="4171" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:47:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21952914" type="Run" />
  <Command __id="4172" _type="ShellCommand" date="Sun Dec 03 19:47:51 EST 2023" starttimestamp="1701628917814" timestamp="21953236" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4173" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956244" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4174" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956245" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4175" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956250" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4176" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956250" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4177" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956251" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4178" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956251" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4179" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956284" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):38
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):38"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4180" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956285" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):40
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"38"), Diff(INSERT,"40"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4181" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956288" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶¶Test execution time (ms):"), Diff(DELETE,"4"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="4182" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956289" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:Basic"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4183" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956289" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4184" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956290" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4185" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956291" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4186" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956292" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4187" _type="ConsoleOutput" date="Sun Dec 03 19:47:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21956295" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:VariableArgument"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="4188" _type="ExceptionCommand" date="Sun Dec 03 19:47:59 EST 2023" starttimestamp="1701628917814" timestamp="21961573" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4189" _type="ConsoleOutput" date="Sun Dec 03 19:47:59 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21961576" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4190" _type="ConsoleOutput" date="Sun Dec 03 19:47:59 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="21961579" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):4
Test Result:LispIsListChecker,0.0% complete,0.0,15.0,Expected strings:Tactual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Test execution time (ms):4¶Test Result:LispIsListChecker,0.0% complete,0.0,15.0,Expected strings:Tactual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4191" _type="ShellCommand" date="Sun Dec 03 19:48:31 EST 2023" starttimestamp="1701628917814" timestamp="21994024" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4192" _type="ShellCommand" date="Sun Dec 03 19:48:33 EST 2023" starttimestamp="1701628917814" timestamp="21995470" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4193" _type="LocalChecksRawCommand" date="Sun Dec 03 19:48:33 EST 2023" starttimestamp="1701628917814" timestamp="21995473">
    <CSVRow><![CDATA[39,Sun Dec 03 19:47:54 EST 2023,22,0,LogicalSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4194" _type="LocalChecksRawCommand" date="Sun Dec 03 19:48:33 EST 2023" starttimestamp="1701628917814" timestamp="21995473">
    <CSVRow><![CDATA[39,Sun Dec 03 19:47:54 EST 2023,22,0,LogicalSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,0,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4195" _type="LocalChecksRawCommand" date="Sun Dec 03 19:48:33 EST 2023" starttimestamp="1701628917814" timestamp="21995473">
    <CSVRow><![CDATA[40,Sun Dec 03 19:47:59 EST 2023,22,0,LispIsListChecker,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,1,false, , , ,LispIsListChecker-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4196" _type="LocalChecksRawCommand" date="Sun Dec 03 19:48:33 EST 2023" starttimestamp="1701628917814" timestamp="21995473">
    <CSVRow><![CDATA[40,Sun Dec 03 19:47:59 EST 2023,22,0,LispIsListChecker,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,1,false, , , ,LispIsListChecker-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4197" _type="ExceptionCommand" date="Sun Dec 03 19:48:39 EST 2023" starttimestamp="1701628917814" timestamp="22001222" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4198" _type="ConsoleOutput" date="Sun Dec 03 19:48:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22001223" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispIsListChecker2,0.0% complete,0.0,15.0,Expected strings:Tactual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):4¶"), Diff(EQUAL,"Test Result:LispIsListChecker"), Diff(INSERT,"2"), Diff(EQUAL,",0.0% complete,0.0,15.0,Expected strings:Tactual string ¶")]]]></diff>
  </Command>
  <Command __id="4199" _type="ExceptionCommand" date="Sun Dec 03 19:48:41 EST 2023" starttimestamp="1701628917814" timestamp="22003767" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4200" _type="ConsoleOutput" date="Sun Dec 03 19:48:41 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22003768" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispIsListChecker3,0.0% complete,0.0,15.0,Expected strings:NILactual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LispIsListChecker"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",0.0% complete,0.0,15.0,Expected strings:"), Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"actual string ¶")]]]></diff>
  </Command>
  <Command __id="4201" _type="ExceptionCommand" date="Sun Dec 03 19:48:42 EST 2023" starttimestamp="1701628917814" timestamp="22005011" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4202" _type="ConsoleOutput" date="Sun Dec 03 19:48:42 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22005013" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispIsListChecker4,0.0% complete,0.0,15.0,Expected strings:NILactual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LispIsListChecker"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",0.0% complete,0.0,15.0,Expected strings:NILactual string ¶")]]]></diff>
  </Command>
  <Command __id="4203" _type="ShellCommand" date="Sun Dec 03 19:48:46 EST 2023" starttimestamp="1701628917814" timestamp="22008615" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4204" _type="ShellCommand" date="Sun Dec 03 19:48:49 EST 2023" starttimestamp="1701628917814" timestamp="22011900" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4205" _type="ConsoleOutput" date="Sun Dec 03 19:48:52 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22015038" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f19.assignment2.testcases.LispFunctionCheckers.LispIsListChecker4@621270ac . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LispIsListChecker4,0.0% complete,0.0,15.0,Expected strings:NILactual string "), Diff(INSERT,"Re-running test gradingTools.comp524f19.assignment2.testcases.LispFunctionCheckers.LispIsListChecker4@621270ac . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4206" _type="ExceptionCommand" date="Sun Dec 03 19:48:54 EST 2023" starttimestamp="1701628917814" timestamp="22016403" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4207" _type="ExceptionCommand" date="Sun Dec 03 19:48:56 EST 2023" starttimestamp="1701628917814" timestamp="22018697" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4208" _type="ExceptionCommand" date="Sun Dec 03 19:48:56 EST 2023" starttimestamp="1701628917814" timestamp="22018698" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4209" _type="ConsoleOutput" date="Sun Dec 03 19:48:56 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22018700" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f19.assignment2.testcases.LispFunctionCheckers.LispIsListChecker4@621270ac . Results may change."), Diff(INSERT,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4210" _type="ExceptionCommand" date="Sun Dec 03 19:48:56 EST 2023" starttimestamp="1701628917814" timestamp="22018701" type="Exception">
    <exceptionString><![CDATA[Test Result:LispToStringChecker3,0.0% complete,0.0,15.0,Expected strings:"(5 . 6)"actual string 

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4211" _type="ConsoleOutput" date="Sun Dec 03 19:48:56 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22018701" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
Test Result:LispToStringChecker4,0.0% complete,0.0,15.0,Expected strings:"(1 . (3 . 6))"actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶"), Diff(EQUAL,"	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶"), Diff(INSERT,""), Diff(EQUAL,"	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶"), Diff(DELETE,""), Diff(EQUAL,"Test execution time (ms):2¶"), Diff(INSERT,"Test Result:LispToStringChecker4,0.0% complete,0.0,15.0,Expected strings:"(1 . (3 . 6))"actual string ¶")]]]></diff>
  </Command>
  <Command __id="4212" _type="ConsoleOutput" date="Sun Dec 03 19:49:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22023216" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"LispToString"), Diff(INSERT,"Greater"), Diff(EQUAL,"Checker"), Diff(DELETE,"4"), Diff(EQUAL,","), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,"), Diff(DELETE,"Expected strings:"(1 . (3 . 6))"actual string "), Diff(INSERT,"¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4213" _type="ConsoleOutput" date="Sun Dec 03 19:49:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22023216" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:Greater"), Diff(INSERT,"OrEqual"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4214" _type="ConsoleOutput" date="Sun Dec 03 19:49:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22023217" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"GreaterOrEqual"), Diff(INSERT,"Less"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4215" _type="ConsoleOutput" date="Sun Dec 03 19:49:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22023217" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4216" _type="ConsoleOutput" date="Sun Dec 03 19:49:01 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22023219" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4217" _type="ExceptionCommand" date="Sun Dec 03 19:49:06 EST 2023" starttimestamp="1701628917814" timestamp="22028432" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4218" _type="ExceptionCommand" date="Sun Dec 03 19:49:06 EST 2023" starttimestamp="1701628917814" timestamp="22028433" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4219" _type="ConsoleOutput" date="Sun Dec 03 19:49:06 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22028434" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4220" _type="ExceptionCommand" date="Sun Dec 03 19:49:06 EST 2023" starttimestamp="1701628917814" timestamp="22028435" type="Exception">
    <exceptionString><![CDATA[Test Result:CurryTwiceChecker,0.0% complete,0.0,20.0,Expected strings:24actual string 

java.lang.IllegalStateException: No evaluator registered for operator 'FUNCALL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4221" _type="ConsoleOutput" date="Sun Dec 03 19:49:06 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22028436" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶"), Diff(EQUAL,"	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):2¶")]]]></diff>
  </Command>
  <Command __id="4222" _type="ConsoleOutput" date="Sun Dec 03 19:49:06 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22028438" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CurryTwoArgsChecker,0.0% complete,0.0,20.0,Expected strings:24actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):2"), Diff(INSERT,"Test Result:CurryTwoArgsChecker,0.0% complete,0.0,20.0,Expected strings:24actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4223" _type="ConsoleOutput" date="Sun Dec 03 19:49:17 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22039314" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:CondChecker,0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)


Test execution time (ms):0
Test Result:A6ExtraCondChecker,0.0% complete,0.0,10.0,Expected strings:NIL
NIL
T
23
NILactual string NIL
NIL
NIL
NIL
NIL


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:CurryTwoArgs"), Diff(INSERT,"¶Test execution time (ms):1¶Test Result:CondChecker,0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)¶¶¶Test execution time (ms):0¶Test Result:A6ExtraCond"), Diff(EQUAL,"Checker,0.0% complete,0.0,"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,Expected strings:"), Diff(DELETE,"24actual string "), Diff(INSERT,"NIL¶NIL¶T¶23¶NILactual string NIL¶NIL¶NIL¶NIL¶NIL¶¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4224" _type="ExceptionCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039315" type="Exception">
    <exceptionString><![CDATA[Test Result:QuoteChecker,0.0% complete,0.0,10.0,Expected strings:(QUOTE (+ 3 4))actual string ((QUOTE (+ 3 4)))

java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.EvalEvaluator.eval(EvalEvaluator.java:13)
	at index.EvalEvaluator.evalHelper(EvalEvaluator.java:24)
	at index.EvalEvaluator.eval(EvalEvaluator.java:14)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4225" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039315">
    <CSVRow><![CDATA[41,Sun Dec 03 19:48:39 EST 2023,22,0,LispIsListChecker2,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,2,false, , , ,LispIsListChecker2-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4226" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039315">
    <CSVRow><![CDATA[41,Sun Dec 03 19:48:39 EST 2023,22,0,LispIsListChecker2,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,2,false, , , ,LispIsListChecker2-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4227" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[42,Sun Dec 03 19:48:41 EST 2023,22,0,LispIsListChecker3,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,3,false, , , ,LispIsListChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4228" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[42,Sun Dec 03 19:48:41 EST 2023,22,0,LispIsListChecker3,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,3,false, , , ,LispIsListChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4229" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[43,Sun Dec 03 19:48:42 EST 2023,22,0,LispIsListChecker4,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,4,false, , , ,LispIsListChecker4-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4230" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[43,Sun Dec 03 19:48:42 EST 2023,22,0,LispIsListChecker4,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,4,false, , , ,LispIsListChecker4-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4231" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[44,Sun Dec 03 19:48:52 EST 2023,22,0,LispIsListChecker4,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,5,false, , , ,LispIsListChecker4-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4232" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[44,Sun Dec 03 19:48:52 EST 2023,22,0,LispIsListChecker4,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,5,false, , , ,LispIsListChecker4-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4233" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[45,Sun Dec 03 19:48:54 EST 2023,22,0,LispToStringChecker,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,6,false, , , ,LispToStringChecker-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4234" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[45,Sun Dec 03 19:48:54 EST 2023,22,0,LispToStringChecker,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,6,false, , , ,LispToStringChecker-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4235" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[46,Sun Dec 03 19:48:56 EST 2023,22,0,LispToStringSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,7,true,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided , ,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided ,LispIsListChecker-(0.0/15.0) LispIsListChecker2-(0.0/15.0) LispIsListChecker3-(0.0/15.0) LispIsListChecker4-(0.0/15.0) LispToStringChecker-(0.0/15.0) LispToStringChecker2-(0.0/15.0) LispToStringChecker3-(0.0/15.0) LispToStringChecker4-(0.0/15.0) LoadLispChecker-(0.0/0.0) TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4236" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[46,Sun Dec 03 19:48:56 EST 2023,22,0,LispToStringSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,7,true,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided , ,LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 LoadLispChecker TestLispFileProvided ,LispIsListChecker-(0.0/15.0) LispIsListChecker2-(0.0/15.0) LispIsListChecker3-(0.0/15.0) LispIsListChecker4-(0.0/15.0) LispToStringChecker-(0.0/15.0) LispToStringChecker2-(0.0/15.0) LispToStringChecker3-(0.0/15.0) LispToStringChecker4-(0.0/15.0) LoadLispChecker-(0.0/0.0) TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4237" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[47,Sun Dec 03 19:49:01 EST 2023,22,0,RelationalSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,8,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4238" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[47,Sun Dec 03 19:49:01 EST 2023,22,0,RelationalSuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,8,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4239" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[48,Sun Dec 03 19:49:06 EST 2023,22,0,BasicCurrySuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,9,true,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ,CurryOnceChecker-(0.0/20.0) CurryTwiceChecker-(0.0/20.0) CurryTwoArgsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4240" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[48,Sun Dec 03 19:49:06 EST 2023,22,0,BasicCurrySuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,9,true,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ,CurryOnceChecker-(0.0/20.0) CurryTwiceChecker-(0.0/20.0) CurryTwoArgsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4241" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[49,Sun Dec 03 19:49:08 EST 2023,22,0,BasicCurrySuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,10,true,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ,CurryOnceChecker-(0.0/20.0) CurryTwiceChecker-(0.0/20.0) CurryTwoArgsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4242" _type="LocalChecksRawCommand" date="Sun Dec 03 19:49:17 EST 2023" starttimestamp="1701628917814" timestamp="22039316">
    <CSVRow><![CDATA[49,Sun Dec 03 19:49:08 EST 2023,22,0,BasicCurrySuite,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,19,10,true,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker , ,CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker ,CurryOnceChecker-(0.0/20.0) CurryTwiceChecker-(0.0/20.0) CurryTwoArgsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4243" _type="ConsoleOutput" date="Sun Dec 03 19:49:17 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22039325" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):1¶Test Result:CondChecker,0.0% complete,0.0,10.0,Expected strings:3actual string (+ 2 1)¶¶¶Test execution time (ms):0¶Test Result:A6ExtraCondChecker,0.0% complete,0.0,10.0,Expected strings:NIL¶NIL¶T¶23¶NILactual string NIL¶NIL¶NIL¶NIL¶NIL¶¶¶Test execution time (ms):0"), Diff(INSERT,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4244" _type="ConsoleOutput" date="Sun Dec 03 19:49:17 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22039337" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalChecker,0.0% complete,0.0,10.0,Expected strings:7actual string 

Test execution time (ms):0
Test Result:ListChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:ListChecker2,100.0% complete,10.0,10.0,


Test execution time (ms):0
Test Result:CombinationChecker,0.0% complete,0.0,10.0,Expected strings:4actual string COND
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)"), Diff(INSERT,"Test Result:EvalChecker,0.0% complete,0.0,10.0,Expected strings:7actual string ¶¶Test execution time (ms):0¶Test Result:ListChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:ListChecker2,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):0¶Test Result:CombinationChecker,0.0% complete,0.0,10.0,Expected strings:4actual string COND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4245" _type="ShellCommand" date="Sun Dec 03 19:57:06 EST 2023" starttimestamp="1701628917814" timestamp="22508615" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4246" _type="MoveCaretCommand" caretOffset="719" date="Sun Dec 03 19:57:06 EST 2023" docOffset="719" starttimestamp="1701628917814" timestamp="22508664" />
  <Command __id="4247" _type="MoveCaretCommand" caretOffset="719" date="Sun Dec 03 19:57:06 EST 2023" docOffset="719" starttimestamp="1701628917814" timestamp="22508664" />
  <Command __id="4248" _type="ShellCommand" date="Sun Dec 03 19:57:13 EST 2023" starttimestamp="1701628917814" timestamp="22515713" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4249" _type="ShellCommand" date="Sun Dec 03 19:57:15 EST 2023" starttimestamp="1701628917814" timestamp="22517511" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4250" _type="MoveCaretCommand" caretOffset="1103" date="Sun Dec 03 19:57:16 EST 2023" docOffset="1103" starttimestamp="1701628917814" timestamp="22518643" />
  <Command __id="4251" _type="MoveCaretCommand" caretOffset="1103" date="Sun Dec 03 19:57:16 EST 2023" docOffset="1103" starttimestamp="1701628917814" timestamp="22518643" />
  <Command __id="4252" _type="MoveCaretCommand" caretOffset="1106" date="Sun Dec 03 19:57:16 EST 2023" docOffset="1106" starttimestamp="1701628917814" timestamp="22519129" />
  <Command __id="4253" _type="MoveCaretCommand" caretOffset="1106" date="Sun Dec 03 19:57:16 EST 2023" docOffset="1106" starttimestamp="1701628917814" timestamp="22519129" />
  <Command __id="4254" _type="MoveCaretCommand" caretOffset="1103" date="Sun Dec 03 19:57:17 EST 2023" docOffset="1103" starttimestamp="1701628917814" timestamp="22519458" />
  <Command __id="4255" _type="MoveCaretCommand" caretOffset="1103" date="Sun Dec 03 19:57:17 EST 2023" docOffset="1103" starttimestamp="1701628917814" timestamp="22519458" />
  <Command __id="4256" _type="MoveCaretCommand" caretOffset="368" date="Sun Dec 03 19:57:17 EST 2023" docOffset="368" starttimestamp="1701628917814" timestamp="22520112" />
  <Command __id="4257" _type="MoveCaretCommand" caretOffset="368" date="Sun Dec 03 19:57:17 EST 2023" docOffset="368" starttimestamp="1701628917814" timestamp="22520112" />
  <Command __id="4258" _type="MoveCaretCommand" caretOffset="365" date="Sun Dec 03 19:57:18 EST 2023" docOffset="365" starttimestamp="1701628917814" timestamp="22520576" />
  <Command __id="4259" _type="MoveCaretCommand" caretOffset="365" date="Sun Dec 03 19:57:18 EST 2023" docOffset="365" starttimestamp="1701628917814" timestamp="22520576" />
  <Command __id="4260" _type="MoveCaretCommand" caretOffset="333" date="Sun Dec 03 19:57:18 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="22520858" />
  <Command __id="4261" _type="MoveCaretCommand" caretOffset="333" date="Sun Dec 03 19:57:18 EST 2023" docOffset="333" starttimestamp="1701628917814" timestamp="22520858" />
  <Command __id="4262" _type="MoveCaretCommand" caretOffset="303" date="Sun Dec 03 19:57:18 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="22521101" />
  <Command __id="4263" _type="MoveCaretCommand" caretOffset="303" date="Sun Dec 03 19:57:18 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="22521101" />
  <Command __id="4264" _type="MoveCaretCommand" caretOffset="267" date="Sun Dec 03 19:57:19 EST 2023" docOffset="267" starttimestamp="1701628917814" timestamp="22521341" />
  <Command __id="4265" _type="MoveCaretCommand" caretOffset="267" date="Sun Dec 03 19:57:19 EST 2023" docOffset="267" starttimestamp="1701628917814" timestamp="22521342" />
  <Command __id="4266" _type="MoveCaretCommand" caretOffset="264" date="Sun Dec 03 19:57:19 EST 2023" docOffset="264" starttimestamp="1701628917814" timestamp="22521669" />
  <Command __id="4267" _type="MoveCaretCommand" caretOffset="264" date="Sun Dec 03 19:57:19 EST 2023" docOffset="264" starttimestamp="1701628917814" timestamp="22521670" />
  <Command __id="4268" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 19:57:20 EST 2023" docOffset="216" starttimestamp="1701628917814" timestamp="22522222" />
  <Command __id="4269" _type="MoveCaretCommand" caretOffset="216" date="Sun Dec 03 19:57:20 EST 2023" docOffset="216" starttimestamp="1701628917814" timestamp="22522222" />
  <Command __id="4270" _type="MoveCaretCommand" caretOffset="264" date="Sun Dec 03 19:57:20 EST 2023" docOffset="264" starttimestamp="1701628917814" timestamp="22522527" />
  <Command __id="4271" _type="MoveCaretCommand" caretOffset="264" date="Sun Dec 03 19:57:20 EST 2023" docOffset="264" starttimestamp="1701628917814" timestamp="22522527" />
  <Command __id="4272" _type="MoveCaretCommand" caretOffset="303" date="Sun Dec 03 19:57:20 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="22522770" />
  <Command __id="4273" _type="MoveCaretCommand" caretOffset="303" date="Sun Dec 03 19:57:20 EST 2023" docOffset="303" starttimestamp="1701628917814" timestamp="22522770" />
  <Command __id="4165" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:47:47 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="21949774">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4292" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:57:24 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22527002" type="Debug" />
  <Command __id="4293" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:57:24 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22527002" type="Run" />
  <Command __id="4294" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 19:57:24 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22527002" type="Debug" />
  <Command __id="4295" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:57:24 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22527002" type="Run" />
  <Command __id="4297" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:57:35 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="22537855" />
  <Command __id="4298" _type="MoveCaretCommand" caretOffset="140" date="Sun Dec 03 19:57:37 EST 2023" docOffset="270" starttimestamp="1701628917814" timestamp="22539254" />
  <Command __id="4299" _type="MoveCaretCommand" caretOffset="290" date="Sun Dec 03 19:57:37 EST 2023" docOffset="420" starttimestamp="1701628917814" timestamp="22539921" />
  <Command __id="4300" _type="MoveCaretCommand" caretOffset="291" date="Sun Dec 03 19:57:39 EST 2023" docOffset="421" starttimestamp="1701628917814" timestamp="22541342" />
  <Command __id="4301" _type="SelectTextCommand" caretOffset="295" date="Sun Dec 03 19:57:39 EST 2023" end="295" start="285" starttimestamp="1701628917814" timestamp="22541488" />
  <Command __id="4302" _type="MoveCaretCommand" caretOffset="141" date="Sun Dec 03 19:57:40 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="22542288" />
  <Command __id="4303" _type="SelectTextCommand" caretOffset="142" date="Sun Dec 03 19:57:40 EST 2023" end="142" start="138" starttimestamp="1701628917814" timestamp="22542430" />
  <Command __id="4296" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:57:35 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22537770">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="4313" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:57:44 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22546236">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4315" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:57:48 EST 2023" docASTNodeCount="283" docActiveCodeLength="1868" docExpressionCount="197" docLength="1868" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22550749">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ArithmeticEvaluatorHelper.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.DecimalAtom;
import main.lisp.parser.terms.IntegerAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.NilAtomicExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.TAtomicExpressionFactory;

public class ArithmeticEvaluatorHelper {
	
	public static SExpression getDifference(SExpression expr, Environment environment, String comparator) {
		expr = expr.getTail();
		
		SExpression firstEvaled = expr.getHead().eval(environment);
		SExpression secondEvaled = expr.getTail().getHead().eval(environment);
		
		IntegerAtom firstInt = null;
		IntegerAtom secondInt = null;
		DecimalAtom firstDec = null;
		DecimalAtom secondDec = null;
		
		if (firstEvaled instanceof IntegerAtom) {
			firstInt = (IntegerAtom)firstEvaled;
			secondInt = (IntegerAtom)secondEvaled;
		}
		if (firstEvaled instanceof DecimalAtom) {
			firstDec = (DecimalAtom)firstEvaled;
			secondDec = (DecimalAtom)secondEvaled;
		}
		double difference = firstInt.getValue() - secondInt.getValue();
		if(comparator.equals("greater")) {
			if(difference > 0) {
				return TAtomicExpressionFactory.newInstance();
			}else {
				return NilAtomicExpressionFactory.newInstance();
			}
		}else if(comparator.equals("lesser")) {
			if(difference < 0) {
				return TAtomicExpressionFactory.newInstance();
			}else {
				return NilAtomicExpressionFactory.newInstance();
			}
		}else if(comparator.equals("GreaterEqual")){
			if(difference >= 0) {
				return TAtomicExpressionFactory.newInstance();
			}else {
				return NilAtomicExpressionFactory.newInstance();
			}
		}else {
			if(difference <= 0) {
				return TAtomicExpressionFactory.newInstance();
			}else {
				return NilAtomicExpressionFactory.newInstance();
			}
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="4317" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:57:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22554417">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4304" _type="MoveCaretCommand" caretOffset="291" date="Sun Dec 03 19:57:41 EST 2023" docOffset="421" starttimestamp="1701628917814" timestamp="22543487" />
  <Command __id="4305" _type="SelectTextCommand" caretOffset="295" date="Sun Dec 03 19:57:41 EST 2023" end="295" start="285" starttimestamp="1701628917814" timestamp="22543622" />
  <Command __id="4306" _type="MoveCaretCommand" caretOffset="277" date="Sun Dec 03 19:57:41 EST 2023" docOffset="407" starttimestamp="1701628917814" timestamp="22544031" />
  <Command __id="4307" _type="SelectTextCommand" caretOffset="284" date="Sun Dec 03 19:57:41 EST 2023" end="284" start="273" starttimestamp="1701628917814" timestamp="22544168" />
  <Command __id="4308" _type="MoveCaretCommand" caretOffset="269" date="Sun Dec 03 19:57:42 EST 2023" docOffset="399" starttimestamp="1701628917814" timestamp="22544488" />
  <Command __id="4309" _type="SelectTextCommand" caretOffset="272" date="Sun Dec 03 19:57:42 EST 2023" end="272" start="266" starttimestamp="1701628917814" timestamp="22544642" />
  <Command __id="4310" _type="MoveCaretCommand" caretOffset="276" date="Sun Dec 03 19:57:42 EST 2023" docOffset="406" starttimestamp="1701628917814" timestamp="22544862" />
  <Command __id="4311" _type="SelectTextCommand" caretOffset="284" date="Sun Dec 03 19:57:42 EST 2023" end="284" start="273" starttimestamp="1701628917814" timestamp="22545001" />
  <Command __id="4312" _type="MoveCaretCommand" caretOffset="291" date="Sun Dec 03 19:57:43 EST 2023" docOffset="421" starttimestamp="1701628917814" timestamp="22545241" />
  <Command __id="4314" _type="MoveCaretCommand" caretOffset="853" date="Sun Dec 03 19:57:44 EST 2023" docOffset="853" starttimestamp="1701628917814" timestamp="22546275" />
  <Command __id="4316" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:57:48 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="22550862" />
  <Command __id="4318" _type="MoveCaretCommand" caretOffset="853" date="Sun Dec 03 19:57:52 EST 2023" docOffset="853" starttimestamp="1701628917814" timestamp="22554452" />
  <Command __id="4320" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 19:58:00 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="22562314" />
  <Command __id="4319" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 19:58:00 EST 2023" docASTNodeCount="112" docActiveCodeLength="655" docExpressionCount="80" docLength="655" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22562252">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4321" _type="MoveCaretCommand" caretOffset="292" date="Sun Dec 03 19:58:01 EST 2023" docOffset="422" starttimestamp="1701628917814" timestamp="22563693" />
  <Command __id="4323" _type="MoveCaretCommand" caretOffset="853" date="Sun Dec 03 19:58:03 EST 2023" docOffset="853" starttimestamp="1701628917814" timestamp="22565519" />
  <Command __id="4324" _type="ShellCommand" date="Sun Dec 03 19:58:05 EST 2023" starttimestamp="1701628917814" timestamp="22567466" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4327" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:59:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22649914" type="Run" />
  <Command __id="4328" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 19:59:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22649914" type="Run" />
  <Command __id="4329" _type="ShellCommand" date="Sun Dec 03 19:59:28 EST 2023" starttimestamp="1701628917814" timestamp="22650267" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4330" _type="ConsoleOutput" date="Sun Dec 03 19:59:36 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22658893" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:EvalChecker,0.0% complete,0.0,10.0,Expected strings:7actual string ¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"9"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"ListChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:ListChecker2,100.0% complete,10.0,10.0,¶¶¶Test execution time (ms):0¶Test Result:CombinationChecker,"), Diff(INSERT,"TestLispFileProvided,10"), Diff(EQUAL,"0.0% complete,0.0,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"Expected strings:4actual string COND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4331" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661376" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4332" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661377" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4333" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661380" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):8¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4334" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661412" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.StackOverflowError
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"java.lang.StackOverflowError"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4335" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661414" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.StackOverflowError"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4336" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661414" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4337" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661415" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4338" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661415" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4339" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661415" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4340" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661415" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4341" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661415" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4342" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661416" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4343" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661416" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4344" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661416" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4345" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661416" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4346" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661416" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4347" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661416" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4348" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661417" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4349" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661417" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4350" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661417" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4351" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661417" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4352" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661418" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4353" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661418" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4354" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661418" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4355" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661418" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4356" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661419" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4357" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661419" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4358" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661419" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4359" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661421" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4360" _type="LocalChecksRawCommand" date="Sun Dec 03 19:59:39 EST 2023" starttimestamp="1701628917814" timestamp="22661421">
    <CSVRow><![CDATA[51,Sun Dec 03 19:59:36 EST 2023,22,0,TestLispFileProvided,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,20,0,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4361" _type="LocalChecksRawCommand" date="Sun Dec 03 19:59:39 EST 2023" starttimestamp="1701628917814" timestamp="22661421">
    <CSVRow><![CDATA[51,Sun Dec 03 19:59:36 EST 2023,22,0,TestLispFileProvided,BasicAndChecker BasicOrChecker ClassRegistryProvided GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker ListChecker ListChecker2 LoadLispChecker MainClassProvided NotChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,A6ExtraCondChecker BasicLetTest CombinationChecker CondChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker FuncallCallsExpressionFactory IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 PlusGeneratorChecker ProjectStructureOrganizesEvaluators QuoteChecker TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,20,0,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4362" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661421" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4363" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661424" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4364" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661424" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4365" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661425" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4366" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661425" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4367" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661425" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4368" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661425" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4369" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661425" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4370" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661426" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4371" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661426" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4372" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661426" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4373" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661426" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4374" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661426" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4375" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661428" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4376" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661429" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4377" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661429" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4378" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661429" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4379" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661430" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4380" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661430" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4381" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661430" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4382" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661431" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶")]]]></diff>
  </Command>
  <Command __id="4383" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661431" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶")]]]></diff>
  </Command>
  <Command __id="4384" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661431" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4385" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661431" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(DELETE,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4386" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661431" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(INSERT,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4387" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661432" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶"), Diff(EQUAL,"	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4388" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661432" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4389" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661432" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4390" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661432" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4391" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661433" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶"), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4392" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661433" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(DELETE,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4393" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661433" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(EQUAL,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4394" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661433" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶"), Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶")]]]></diff>
  </Command>
  <Command __id="4395" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661435" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.io.PrintStream.println(PrintStream.java:897)
	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶"), Diff(EQUAL,"	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶")]]]></diff>
  </Command>
  <Command __id="4396" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661435" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):65
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.io.PrintStream.println(PrintStream.java:897)¶	at index.BasicExpressionImpl.isList(BasicExpressionImpl.java:16)¶	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:46)"), Diff(INSERT,"Test execution time (ms):65"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4397" _type="ConsoleOutput" date="Sun Dec 03 19:59:39 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22661436" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,0.0% complete,0.0,0.0,null
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):65"), Diff(INSERT,"Result:LoadLispChecker,0.0% complete,0.0,0.0,null"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4398" _type="ShellCommand" date="Sun Dec 03 19:59:40 EST 2023" starttimestamp="1701628917814" timestamp="22662966" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4399" _type="ShellCommand" date="Sun Dec 03 19:59:59 EST 2023" starttimestamp="1701628917814" timestamp="22682051" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4401" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:00:14 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="22697147">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4402" _type="SelectTextCommand" caretOffset="117960" date="Sun Dec 03 20:00:15 EST 2023" end="117960" start="117905" starttimestamp="1701628917814" timestamp="22697204" />
  <Command __id="4404" _type="MoveCaretCommand" caretOffset="746" date="Sun Dec 03 20:00:19 EST 2023" docOffset="746" starttimestamp="1701628917814" timestamp="22701843" />
  <Command __id="4405" _type="ShellCommand" date="Sun Dec 03 20:00:24 EST 2023" starttimestamp="1701628917814" timestamp="22707065" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4406" _type="ShellCommand" date="Sun Dec 03 20:00:25 EST 2023" starttimestamp="1701628917814" timestamp="22707530" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4403" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:00:19 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22701811">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4421" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:00:54 EST 2023" projectName="null" starttimestamp="1701628917814" timestamp="22736894">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4419" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:00:54 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22736336" type="Run" />
  <Command __id="4420" _type="ShellCommand" date="Sun Dec 03 20:00:54 EST 2023" starttimestamp="1701628917814" timestamp="22736796" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4422" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 20:00:54 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="22736916" />
  <Command __id="4424" _type="MoveCaretCommand" caretOffset="746" date="Sun Dec 03 20:00:57 EST 2023" docOffset="746" starttimestamp="1701628917814" timestamp="22740152" />
  <Command __id="4425" _type="ShellCommand" date="Sun Dec 03 20:00:59 EST 2023" starttimestamp="1701628917814" timestamp="22741757" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4423" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:00:57 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22740109">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4426" _type="ShellCommand" date="Sun Dec 03 20:01:01 EST 2023" starttimestamp="1701628917814" timestamp="22743302" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4427" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:01:02 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22745029">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression implements SExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	@Override
	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}

	@Override
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}

	@Override
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}

	@Override
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}

	@Override
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

	@Override
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4430" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:01:03 EST 2023" starttimestamp="1701628917814" timestamp="22746118" />
  <Command __id="4431" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:01:03 EST 2023" starttimestamp="1701628917814" timestamp="22746126" />
  <Command __id="4432" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:03 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22746171" type="Run" />
  <Command __id="4433" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:03 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22746171" type="Run" />
  <Command __id="4434" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:03 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22746171" type="Run" />
  <Command __id="4435" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Sun Dec 03 20:01:04 EST 2023" starttimestamp="1701628917814" timestamp="22746969" />
  <Command __id="4436" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Dec 03 20:01:04 EST 2023" starttimestamp="1701628917814" timestamp="22747137" />
  <Command __id="4437" _type="BreakPointCommand" date="Sun Dec 03 20:01:04 EST 2023" lineNumber="16" starttimestamp="1701628917814" timestamp="22747138" type="BreakPointAdded" />
  <Command __id="4438" _type="ShellCommand" date="Sun Dec 03 20:01:07 EST 2023" starttimestamp="1701628917814" timestamp="22749573" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4448" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:17 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22759337" type="Run" />
  <Command __id="4455" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:35 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22777889" type="Debug" />
  <Command __id="4456" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:01:35 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22777889" type="Run" />
  <Command __id="4457" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:35 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22777889" type="Debug" />
  <Command __id="4458" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:01:35 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22777889" type="Run" />
  <Command __id="4459" _type="ShellCommand" date="Sun Dec 03 20:01:36 EST 2023" starttimestamp="1701628917814" timestamp="22778452" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4460" _type="ShellCommand" date="Sun Dec 03 20:01:40 EST 2023" starttimestamp="1701628917814" timestamp="22783134" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4461" _type="MoveCaretCommand" caretOffset="283" date="Sun Dec 03 20:01:40 EST 2023" docOffset="403" starttimestamp="1701628917814" timestamp="22783183" />
  <Command __id="4462" _type="ShellCommand" date="Sun Dec 03 20:01:42 EST 2023" starttimestamp="1701628917814" timestamp="22784737" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4463" _type="ShellCommand" date="Sun Dec 03 20:01:46 EST 2023" starttimestamp="1701628917814" timestamp="22788743" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4464" _type="MoveCaretCommand" caretOffset="15" date="Sun Dec 03 20:01:46 EST 2023" docOffset="15" starttimestamp="1701628917814" timestamp="22788778" />
  <DocumentChange __id="4429" _type="Replace" date="Sun Dec 03 20:01:03 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" endLine="57" insertionLength="1448" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="1448" offset="0" startLine="0" starttimestamp="1701628917814" timestamp="22745203">
    <deletedText><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression implements SExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	@Override
	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}

	@Override
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}

	@Override
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}

	@Override
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}

	@Override
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

	@Override
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression implements SExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	@Override
	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}

	@Override
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}

	@Override
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}

	@Override
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}

	@Override
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

	@Override
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></insertedText>
  </DocumentChange>
  <Command __id="4445" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:01:15 EST 2023" docASTNodeCount="126" docActiveCodeLength="827" docExpressionCount="84" docLength="827" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22757319">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {"), Diff(DELETE,"        // Start with the first argument of the AND expression."), Diff(EQUAL,"        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        "), Diff(DELETE,"// Check if the expression is empty (reached the end of the list).        if (expr instanceof NilAtom) {            // If all expressions were non-nil, return the last evaluated expression.            return lastEvaluated;        }        // Evaluate the current head and store it."), Diff(INSERT,"if (expr instanceof NilAtom) {            return lastEvaluated;        }"), Diff(EQUAL,"        SExpression current = expr.getHead().eval(environment);"), Diff(DELETE,"        // Check if the evaluated head is NIL."), Diff(EQUAL,"        if (current.isNIL()) {            return current;"), Diff(DELETE," // Return the first NIL encountered.        } else {            // Continue with the rest of the list, updating the last evaluated expression."), Diff(INSERT,"        } else {"), Diff(EQUAL,"            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.NilAtom;

public class AndEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
        return evalHelper(expr, environment, null);
    }

    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {
        if (expr instanceof NilAtom) {
            return lastEvaluated;
        }
        SExpression current = expr.getHead().eval(environment);
        if (current.isNIL()) {
            return current;
        } else {
            return evalHelper(expr.getTail(), environment, current);
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="4466" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:52 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22794893" type="Debug" />
  <Command __id="4467" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:01:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22794893" type="Run" />
  <Command __id="4468" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:01:52 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22794893" type="Debug" />
  <Command __id="4469" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:01:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22794893" type="Run" />
  <Command __id="4470" _type="ShellCommand" date="Sun Dec 03 20:01:52 EST 2023" starttimestamp="1701628917814" timestamp="22794904" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4472" _type="MoveCaretCommand" caretOffset="746" date="Sun Dec 03 20:01:57 EST 2023" docOffset="746" starttimestamp="1701628917814" timestamp="22799288" />
  <Command __id="4480" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:02:03 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22805899" type="Run" />
  <Command __id="4491" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:02:12 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22814451" type="Run" />
  <Command __id="4498" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:02:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22839325" type="Run" />
  <Command __id="4499" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:02:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22840103" type="Run" />
  <Command __id="4500" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:02:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22840918" type="Run" />
  <Command __id="4501" _type="ShellCommand" date="Sun Dec 03 20:03:18 EST 2023" starttimestamp="1701628917814" timestamp="22880452" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4502" _type="MoveCaretCommand" caretOffset="437" date="Sun Dec 03 20:03:18 EST 2023" docOffset="437" starttimestamp="1701628917814" timestamp="22880496" />
  <Command __id="4503" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Dec 03 20:03:19 EST 2023" starttimestamp="1701628917814" timestamp="22881498" />
  <Command __id="4504" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:03:19 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22881512" type="Debug" />
  <Command __id="4505" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:03:19 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22881512" type="Run" />
  <Command __id="4506" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:03:19 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="22881512" type="Debug" />
  <Command __id="4507" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:03:19 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22881512" type="Run" />
  <Command __id="4508" _type="ShellCommand" date="Sun Dec 03 20:03:31 EST 2023" starttimestamp="1701628917814" timestamp="22893202" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4509" _type="ShellCommand" date="Sun Dec 03 20:03:46 EST 2023" starttimestamp="1701628917814" timestamp="22908671" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4510" _type="ShellCommand" date="Sun Dec 03 20:03:48 EST 2023" starttimestamp="1701628917814" timestamp="22910236" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4512" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:04:33 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22956016" type="Run" />
  <Command __id="4513" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:04:33 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22956016" type="Run" />
  <Command __id="4514" _type="ShellCommand" date="Sun Dec 03 20:04:34 EST 2023" starttimestamp="1701628917814" timestamp="22956378" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4515" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22970971" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4516" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22970974" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4517" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22970981" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):7¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="4518" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22970981" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"7¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4519" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22970982" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):9"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4520" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971015" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):42
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4521" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971016" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):44
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):4"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4522" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971018" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLisp"), Diff(INSERT,"Greater"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):44¶")]]]></diff>
  </Command>
  <Command __id="4523" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971019" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4524" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971020" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4525" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971024" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:LessChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterOrEqual"), Diff(INSERT,"execution time (ms):0¶Test Result:Less"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4526" _type="ConsoleOutput" date="Sun Dec 03 20:04:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="22971026" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:Less"), Diff(INSERT,"OrEqual"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4471" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:01:57 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22799262">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4488" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:02:09 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" projectName="Assignment5" starttimestamp="1701628917814" timestamp="22811276">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression implements SExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	@Override	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}	@Override	public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	@Override	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	@Override	public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}	@Override	public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}	@Override	public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4538" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:05:29 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="23011595" type="Debug" />
  <Command __id="4539" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:05:29 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23011596" type="Run" />
  <Command __id="4540" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:05:29 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="23011596" type="Debug" />
  <Command __id="4541" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Sun Dec 03 20:05:29 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23011596" type="Run" />
  <Command __id="4542" _type="ShellCommand" date="Sun Dec 03 20:05:29 EST 2023" starttimestamp="1701628917814" timestamp="23011606" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4543" _type="MoveCaretCommand" caretOffset="313" date="Sun Dec 03 20:05:30 EST 2023" docOffset="313" starttimestamp="1701628917814" timestamp="23012226" />
  <Command __id="4544" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:05:33 EST 2023" docASTNodeCount="140" docActiveCodeLength="784" docExpressionCount="99" docLength="784" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23015661">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isNIL()) {
			return new NilAtom();
		}
		if(!expr.getHead().getHead().eval(environment).isNIL()) {
			if(expr.getHead().getTail().isAtom()) {
				return expr.getHead().getTail();
			}else {
				return expr.getHead().getTail().getHead();
			}
		}else {
			return evalHelper(expr.getTail(), environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="4545" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 20:05:33 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="23015713" />
  <Command __id="4546" _type="MoveCaretCommand" caretOffset="361" date="Sun Dec 03 20:05:34 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="23016408" />
  <Command __id="4547" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:05:35 EST 2023" docASTNodeCount="276" docActiveCodeLength="1821" docExpressionCount="133" docLength="2331" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23017388">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return AndEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return OperationRegistererImpl.class;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return NotEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return OrEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="4548" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 20:05:35 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="23017456" />
  <Command __id="4550" _type="MoveCaretCommand" caretOffset="361" date="Sun Dec 03 20:05:37 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="23019462" />
  <Command __id="4551" _type="ShellCommand" date="Sun Dec 03 20:05:37 EST 2023" starttimestamp="1701628917814" timestamp="23020011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4552" _type="ShellCommand" date="Sun Dec 03 20:06:16 EST 2023" starttimestamp="1701628917814" timestamp="23058449" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4553" _type="ShellCommand" date="Sun Dec 03 20:06:19 EST 2023" starttimestamp="1701628917814" timestamp="23062027" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4549" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:05:37 EST 2023" docASTNodeCount="140" docActiveCodeLength="784" docExpressionCount="99" docLength="784" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23019422">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isNIL()) {			return new NilAtom();		}		if(!expr.getHead().getHead().eval(environment).isNIL()) {			if(expr.getHead().getTail().isAtom()) {				return expr.getHead().getTail();			}else {				return expr.getHead().getTail().getHead();			}		}else {			return evalHelper(expr.getTail(), environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4554" _type="ShellCommand" date="Sun Dec 03 20:07:46 EST 2023" starttimestamp="1701628917814" timestamp="23148787" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4556" _type="MoveCaretCommand" caretOffset="222" date="Sun Dec 03 20:07:52 EST 2023" docOffset="271" starttimestamp="1701628917814" timestamp="23154312" />
  <Command __id="4557" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Sun Dec 03 20:07:53 EST 2023" starttimestamp="1701628917814" timestamp="23155915" />
  <Command __id="4558" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:07:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23156103" type="Run" />
  <Command __id="4559" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:07:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23156103" type="Run" />
  <Command __id="4560" _type="ConsoleInput" date="Sun Dec 03 20:07:56 EST 2023" starttimestamp="1701628917814" timestamp="23158189" type="Exception">
    <outputString><![CDATA[(cond)
]]></outputString>
  </Command>
  <Command __id="4561" _type="ConsoleOutput" date="Sun Dec 03 20:07:56 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23158195" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4562" _type="ShellCommand" date="Sun Dec 03 20:07:56 EST 2023" starttimestamp="1701628917814" timestamp="23158989" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4563" _type="ShellCommand" date="Sun Dec 03 20:08:03 EST 2023" starttimestamp="1701628917814" timestamp="23165803" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4564" _type="PasteCommand" date="Sun Dec 03 20:08:04 EST 2023" starttimestamp="1701628917814" timestamp="23166283" />
  <Command __id="4565" _type="ConsoleOutput" date="Sun Dec 03 20:08:04 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23166563" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4566" _type="ShellCommand" date="Sun Dec 03 20:08:04 EST 2023" starttimestamp="1701628917814" timestamp="23167179" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4567" _type="ShellCommand" date="Sun Dec 03 20:08:22 EST 2023" starttimestamp="1701628917814" timestamp="23184226" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4568" _type="ShellCommand" date="Sun Dec 03 20:08:23 EST 2023" starttimestamp="1701628917814" timestamp="23186021" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4569" _type="ShellCommand" date="Sun Dec 03 20:08:28 EST 2023" starttimestamp="1701628917814" timestamp="23190415" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4570" _type="PasteCommand" date="Sun Dec 03 20:08:29 EST 2023" starttimestamp="1701628917814" timestamp="23191675" />
  <Command __id="4571" _type="ConsoleOutput" date="Sun Dec 03 20:08:29 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23191840" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4572" _type="ShellCommand" date="Sun Dec 03 20:08:30 EST 2023" starttimestamp="1701628917814" timestamp="23192320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4573" _type="ShellCommand" date="Sun Dec 03 20:08:32 EST 2023" starttimestamp="1701628917814" timestamp="23194244" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4574" _type="PasteCommand" date="Sun Dec 03 20:08:32 EST 2023" starttimestamp="1701628917814" timestamp="23194433" />
  <Command __id="4575" _type="ConsoleOutput" date="Sun Dec 03 20:08:32 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23194628" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4576" _type="ShellCommand" date="Sun Dec 03 20:08:32 EST 2023" starttimestamp="1701628917814" timestamp="23195050" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4577" _type="ShellCommand" date="Sun Dec 03 20:08:35 EST 2023" starttimestamp="1701628917814" timestamp="23197496" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4578" _type="PasteCommand" date="Sun Dec 03 20:08:35 EST 2023" starttimestamp="1701628917814" timestamp="23197687" />
  <Command __id="4579" _type="ConsoleOutput" date="Sun Dec 03 20:08:35 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23197839" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4580" _type="ShellCommand" date="Sun Dec 03 20:08:36 EST 2023" starttimestamp="1701628917814" timestamp="23198736" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4581" _type="ShellCommand" date="Sun Dec 03 20:08:39 EST 2023" starttimestamp="1701628917814" timestamp="23201816" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4582" _type="ShellCommand" date="Sun Dec 03 20:08:41 EST 2023" starttimestamp="1701628917814" timestamp="23203679" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4555" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:07:52 EST 2023" docASTNodeCount="47" docActiveCodeLength="271" docExpressionCount="29" docLength="271" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23154285">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4583" _type="ShellCommand" date="Sun Dec 03 20:09:08 EST 2023" starttimestamp="1701628917814" timestamp="23230997" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4585" _type="MoveCaretCommand" caretOffset="361" date="Sun Dec 03 20:09:10 EST 2023" docOffset="481" starttimestamp="1701628917814" timestamp="23232682" />
  <Command __id="4586" _type="CopyCommand" date="Sun Dec 03 20:09:40 EST 2023" starttimestamp="1701628917814" timestamp="23263176" />
  <Command __id="4587" _type="PasteCommand" date="Sun Dec 03 20:09:41 EST 2023" starttimestamp="1701628917814" timestamp="23263946" />
  <Command __id="4588" _type="ConsoleInput" date="Sun Dec 03 20:09:44 EST 2023" starttimestamp="1701628917814" timestamp="23266357" type="Exception">
    <outputString><![CDATA[(cond (t) ((+ 3 4)))(cond (nil) ((+ 3 4)))(cond (T))(cond (Nil))(cond (t) ((+ 3 4)))T
]]></outputString>
  </Command>
  <Command __id="4589" _type="ConsoleOutput" date="Sun Dec 03 20:09:44 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23266361" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4590" _type="ShellCommand" date="Sun Dec 03 20:09:45 EST 2023" starttimestamp="1701628917814" timestamp="23267426" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4591" _type="ShellCommand" date="Sun Dec 03 20:09:48 EST 2023" starttimestamp="1701628917814" timestamp="23270546" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4592" _type="PasteCommand" date="Sun Dec 03 20:09:50 EST 2023" starttimestamp="1701628917814" timestamp="23272582" />
  <Command __id="4593" _type="ConsoleInput" date="Sun Dec 03 20:09:54 EST 2023" starttimestamp="1701628917814" timestamp="23276210" type="Exception">
    <outputString><![CDATA[(cond (t) ((+ 3 4)))1 < 2
]]></outputString>
  </Command>
  <Command __id="4594" _type="ConsoleOutput" date="Sun Dec 03 20:09:54 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23276213" type="ConsoleOutput">
    <outputString><![CDATA[<
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"<"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4595" _type="ShellCommand" date="Sun Dec 03 20:10:10 EST 2023" starttimestamp="1701628917814" timestamp="23292974" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4596" _type="ShellCommand" date="Sun Dec 03 20:10:24 EST 2023" starttimestamp="1701628917814" timestamp="23307134" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4597" _type="ShellCommand" date="Sun Dec 03 20:10:25 EST 2023" starttimestamp="1701628917814" timestamp="23307636" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4598" _type="ShellCommand" date="Sun Dec 03 20:10:25 EST 2023" starttimestamp="1701628917814" timestamp="23307716" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4599" _type="ShellCommand" date="Sun Dec 03 20:10:25 EST 2023" starttimestamp="1701628917814" timestamp="23307782" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4600" _type="ShellCommand" date="Sun Dec 03 20:10:27 EST 2023" starttimestamp="1701628917814" timestamp="23309335" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4601" _type="PasteCommand" date="Sun Dec 03 20:10:28 EST 2023" starttimestamp="1701628917814" timestamp="23310405" />
  <Command __id="4602" _type="ConsoleOutput" date="Sun Dec 03 20:10:28 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23310654" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"<"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4603" _type="ShellCommand" date="Sun Dec 03 20:10:35 EST 2023" starttimestamp="1701628917814" timestamp="23317688" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4604" _type="ShellCommand" date="Sun Dec 03 20:10:59 EST 2023" starttimestamp="1701628917814" timestamp="23341620" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4605" _type="ConsoleInput" date="Sun Dec 03 20:11:34 EST 2023" starttimestamp="1701628917814" timestamp="23376756" type="Exception">
    <outputString><![CDATA[(cond (nil 1) (nil 2) (T 2))(cond (nil ()+ 1 2))
]]></outputString>
  </Command>
  <Command __id="4606" _type="ConsoleOutput" date="Sun Dec 03 20:11:34 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23376760" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4607" _type="ConsoleInput" date="Sun Dec 03 20:11:49 EST 2023" starttimestamp="1701628917814" timestamp="23392178" type="Exception">
    <outputString><![CDATA[(cond (T ()+ 1 2))
]]></outputString>
  </Command>
  <Command __id="4608" _type="ConsoleOutput" date="Sun Dec 03 20:11:49 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23392181" type="ConsoleOutput">
    <outputString><![CDATA[(+ 1 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"(+ 1 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4609" _type="SelectTextCommand" caretOffset="584" date="Sun Dec 03 20:13:15 EST 2023" end="588" start="584" starttimestamp="1701628917814" timestamp="23477355" />
  <Command __id="4610" _type="SelectTextCommand" caretOffset="584" date="Sun Dec 03 20:13:15 EST 2023" end="588" start="584" starttimestamp="1701628917814" timestamp="23477355" />
  <Command __id="4611" _type="MoveCaretCommand" caretOffset="588" date="Sun Dec 03 20:13:15 EST 2023" docOffset="708" starttimestamp="1701628917814" timestamp="23477605" />
  <Command __id="4612" _type="MoveCaretCommand" caretOffset="588" date="Sun Dec 03 20:13:15 EST 2023" docOffset="708" starttimestamp="1701628917814" timestamp="23477605" />
  <Command __id="4613" _type="SelectTextCommand" caretOffset="578" date="Sun Dec 03 20:13:16 EST 2023" end="587" start="578" starttimestamp="1701628917814" timestamp="23478922" />
  <Command __id="4614" _type="SelectTextCommand" caretOffset="578" date="Sun Dec 03 20:13:16 EST 2023" end="587" start="578" starttimestamp="1701628917814" timestamp="23478922" />
  <Command __id="4616" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479467" timestamp2="23479467">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4617" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479467" timestamp2="23479467">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4619" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479601" timestamp2="23479601">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4620" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479601" timestamp2="23479601">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4622" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479628" timestamp2="23479628">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4623" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479628" timestamp2="23479628">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4625" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479808" timestamp2="23479808">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4626" _type="InsertStringCommand" date="Sun Dec 03 20:13:17 EST 2023" starttimestamp="1701628917814" timestamp="23479808" timestamp2="23479808">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4628" _type="InsertStringCommand" date="Sun Dec 03 20:13:18 EST 2023" starttimestamp="1701628917814" timestamp="23480379" timestamp2="23480379">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4629" _type="InsertStringCommand" date="Sun Dec 03 20:13:18 EST 2023" starttimestamp="1701628917814" timestamp="23480379" timestamp2="23480379">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4631" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23481206" timestamp2="23481206">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4632" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23481206" timestamp2="23481206">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4634" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23481508" timestamp2="23481508">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4635" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23481508" timestamp2="23481508">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4637" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23481969" timestamp2="23481969">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4638" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23481969" timestamp2="23481969">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="4640" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23482164" timestamp2="23482164">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4641" _type="InsertStringCommand" date="Sun Dec 03 20:13:19 EST 2023" starttimestamp="1701628917814" timestamp="23482164" timestamp2="23482164">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4643" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482377" timestamp2="23482377">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4644" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482377" timestamp2="23482377">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4646" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482464" timestamp2="23482464">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4647" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482464" timestamp2="23482464">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4649" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482571" timestamp2="23482571">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4650" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482577" timestamp2="23482577">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4652" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482766" timestamp2="23482766">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4653" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482766" timestamp2="23482766">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4655" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482870" timestamp2="23482870">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4656" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482870" timestamp2="23482870">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4658" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482962" timestamp2="23482962">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4659" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23482962" timestamp2="23482962">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4661" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23483034" timestamp2="23483034">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4662" _type="InsertStringCommand" date="Sun Dec 03 20:13:20 EST 2023" starttimestamp="1701628917814" timestamp="23483034" timestamp2="23483034">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4663" _type="MoveCaretCommand" caretOffset="601" date="Sun Dec 03 20:13:21 EST 2023" docOffset="721" starttimestamp="1701628917814" timestamp="23483766" />
  <Command __id="4664" _type="MoveCaretCommand" caretOffset="601" date="Sun Dec 03 20:13:21 EST 2023" docOffset="721" starttimestamp="1701628917814" timestamp="23483766" />
  <Command __id="4665" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 20:13:22 EST 2023" starttimestamp="1701628917814" timestamp="23484442" />
  <Command __id="4666" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:13:22 EST 2023" starttimestamp="1701628917814" timestamp="23484541" />
  <Command __id="4667" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:13:22 EST 2023" starttimestamp="1701628917814" timestamp="23484549" />
  <Command __id="4668" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:13:23 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23485408" />
  <Command __id="4669" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:13:23 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23485408" />
  <Command __id="4670" _type="MoveCaretCommand" caretOffset="662" date="Sun Dec 03 20:13:23 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="23486031" />
  <Command __id="4671" _type="MoveCaretCommand" caretOffset="662" date="Sun Dec 03 20:13:23 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="23486031" />
  <Command __id="4672" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:13:24 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23486412" />
  <Command __id="4673" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:13:24 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23486412" />
  <Command __id="4674" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:13:24 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23486598" />
  <Command __id="4675" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:13:24 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23486598" />
  <Command __id="4676" _type="MoveCaretCommand" caretOffset="662" date="Sun Dec 03 20:13:24 EST 2023" docOffset="782" starttimestamp="1701628917814" timestamp="23486916" />
  <Command __id="4694" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:13:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23502702" type="Run" />
  <Command __id="4695" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:13:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23502702" type="Run" />
  <Command __id="4696" _type="ConsoleInput" date="Sun Dec 03 20:13:52 EST 2023" starttimestamp="1701628917814" timestamp="23514548" type="Exception">
    <outputString><![CDATA[(cond (T ()+ 1 2))
]]></outputString>
  </Command>
  <Command __id="4697" _type="ConsoleOutput" date="Sun Dec 03 20:13:52 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23514557" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(+ 1 2)"), Diff(INSERT,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4698" _type="ConsoleOutput" date="Sun Dec 03 20:13:52 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23514560" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:24)
	at index.CondEvaluator.eval(CondEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:11)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.CondEvaluator.evalHelper(CondEvaluator.java:24)¶	at index.CondEvaluator.eval(CondEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4699" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:13:52 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="23514570" type="Debug" />
  <Command __id="4700" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:13:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23514570" type="Run" />
  <Command __id="4701" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:13:52 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="23514570" type="Debug" />
  <Command __id="4702" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:13:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23514571" type="Run" />
  <Command __id="4584" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:09:10 EST 2023" docASTNodeCount="140" docActiveCodeLength="784" docExpressionCount="99" docLength="784" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23232644">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isNIL()) {			return new NilAtom();		}		if(!expr.getHead().getHead().eval(environment).isNIL()) {			if(expr.getHead().getTail().isAtom()) {				return expr.getHead().getTail();			}else {				return expr.getHead().getTail().getHead();			}		}else {			return evalHelper(expr.getTail(), environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="4615" _type="Replace" date="Sun Dec 03 20:13:17 EST 2023" docASTNodeCount="140" docActiveCodeLength="776" docExpressionCount="99" docLength="776" endLine="23" insertionLength="1" int_docASTNodeCount="140" int_docActiveCodeLength="775" int_docExpressionCount="99" int_docLength="775" length="9" offset="698" startLine="23" starttimestamp="1701628917814" timestamp="23479464">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4618" _type="Insert" date="Sun Dec 03 20:13:17 EST 2023" docASTNodeCount="141" docActiveCodeLength="792" docExpressionCount="100" docLength="792" length="16" offset="699" repeat="15" starttimestamp="1701628917814" timestamp="23479599" timestamp2="23483034">
    <text><![CDATA[val(environment)]]></text>
  </DocumentChange>
  <Command __id="4703" _type="MoveCaretCommand" caretOffset="578" date="Sun Dec 03 20:14:07 EST 2023" docOffset="698" starttimestamp="1701628917814" timestamp="23529987" />
  <Command __id="4704" _type="MoveCaretCommand" caretOffset="578" date="Sun Dec 03 20:14:07 EST 2023" docOffset="698" starttimestamp="1701628917814" timestamp="23529987" />
  <Command __id="4706" _type="InsertStringCommand" date="Sun Dec 03 20:14:08 EST 2023" starttimestamp="1701628917814" timestamp="23530830" timestamp2="23530830">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4707" _type="InsertStringCommand" date="Sun Dec 03 20:14:08 EST 2023" starttimestamp="1701628917814" timestamp="23530830" timestamp2="23530830">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4709" _type="InsertStringCommand" date="Sun Dec 03 20:14:08 EST 2023" starttimestamp="1701628917814" timestamp="23530914" timestamp2="23530914">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4710" _type="InsertStringCommand" date="Sun Dec 03 20:14:08 EST 2023" starttimestamp="1701628917814" timestamp="23530914" timestamp2="23530914">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4712" _type="InsertStringCommand" date="Sun Dec 03 20:14:08 EST 2023" starttimestamp="1701628917814" timestamp="23531068" timestamp2="23531068">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4713" _type="InsertStringCommand" date="Sun Dec 03 20:14:08 EST 2023" starttimestamp="1701628917814" timestamp="23531068" timestamp2="23531068">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4715" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531321" timestamp2="23531321">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="4716" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531322" timestamp2="23531322">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="4718" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531575" timestamp2="23531575">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4719" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531575" timestamp2="23531575">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4721" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531682" timestamp2="23531682">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4722" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531682" timestamp2="23531682">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4724" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531802" timestamp2="23531802">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4725" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531802" timestamp2="23531802">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4727" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531996" timestamp2="23531996">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4728" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23531996" timestamp2="23531996">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4730" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23532071" timestamp2="23532071">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4731" _type="InsertStringCommand" date="Sun Dec 03 20:14:09 EST 2023" starttimestamp="1701628917814" timestamp="23532071" timestamp2="23532071">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4733" _type="InsertStringCommand" date="Sun Dec 03 20:14:10 EST 2023" starttimestamp="1701628917814" timestamp="23533079" timestamp2="23533079">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4734" _type="InsertStringCommand" date="Sun Dec 03 20:14:10 EST 2023" starttimestamp="1701628917814" timestamp="23533079" timestamp2="23533079">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4735" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:14:10 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23533082" />
  <Command __id="4736" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:14:11 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23533717" />
  <Command __id="4737" _type="MoveCaretCommand" caretOffset="390" date="Sun Dec 03 20:14:11 EST 2023" docOffset="510" starttimestamp="1701628917814" timestamp="23533806" />
  <Command __id="4738" _type="MoveCaretCommand" caretOffset="390" date="Sun Dec 03 20:14:11 EST 2023" docOffset="510" starttimestamp="1701628917814" timestamp="23533806" />
  <Command __id="4739" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 20:14:13 EST 2023" starttimestamp="1701628917814" timestamp="23535693" />
  <Command __id="4740" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:14:13 EST 2023" starttimestamp="1701628917814" timestamp="23535793" />
  <Command __id="4741" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:14:13 EST 2023" starttimestamp="1701628917814" timestamp="23535799" />
  <Command __id="4742" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:14:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23536767" type="Run" />
  <Command __id="4743" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:14:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23536767" type="Run" />
  <Command __id="4744" _type="ConsoleInput" date="Sun Dec 03 20:14:24 EST 2023" starttimestamp="1701628917814" timestamp="23546244" type="Exception">
    <outputString><![CDATA[(cond (T ()+ 1 2))
]]></outputString>
  </Command>
  <Command __id="4745" _type="ConsoleOutput" date="Sun Dec 03 20:14:24 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23546253" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.CondEvaluator.evalHelper(CondEvaluator.java:24)¶	at index.CondEvaluator.eval(CondEvaluator.java:13)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:11)"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4746" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:14:25 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23547745" />
  <Command __id="4747" _type="MoveCaretCommand" caretOffset="611" date="Sun Dec 03 20:14:25 EST 2023" docOffset="731" starttimestamp="1701628917814" timestamp="23547745" />
  <Command __id="4748" _type="ShellCommand" date="Sun Dec 03 20:14:33 EST 2023" starttimestamp="1701628917814" timestamp="23555243" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4749" _type="ShellCommand" date="Sun Dec 03 20:14:42 EST 2023" starttimestamp="1701628917814" timestamp="23564765" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4750" _type="ShellCommand" date="Sun Dec 03 20:14:43 EST 2023" starttimestamp="1701628917814" timestamp="23566157" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4751" _type="ShellCommand" date="Sun Dec 03 20:14:47 EST 2023" starttimestamp="1701628917814" timestamp="23569971" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4752" _type="PasteCommand" date="Sun Dec 03 20:14:48 EST 2023" starttimestamp="1701628917814" timestamp="23570790" />
  <Command __id="4753" _type="ConsoleOutput" date="Sun Dec 03 20:14:48 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23571036" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4754" _type="ShellCommand" date="Sun Dec 03 20:14:49 EST 2023" starttimestamp="1701628917814" timestamp="23571559" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4755" _type="ShellCommand" date="Sun Dec 03 20:14:51 EST 2023" starttimestamp="1701628917814" timestamp="23574130" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4756" _type="PasteCommand" date="Sun Dec 03 20:14:52 EST 2023" starttimestamp="1701628917814" timestamp="23574395" />
  <Command __id="4757" _type="ConsoleOutput" date="Sun Dec 03 20:14:52 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23574752" type="ConsoleOutput">
    <outputString><![CDATA[3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4758" _type="ShellCommand" date="Sun Dec 03 20:14:52 EST 2023" starttimestamp="1701628917814" timestamp="23575119" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4759" _type="ShellCommand" date="Sun Dec 03 20:14:55 EST 2023" starttimestamp="1701628917814" timestamp="23577489" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4760" _type="PasteCommand" date="Sun Dec 03 20:14:55 EST 2023" starttimestamp="1701628917814" timestamp="23577676" />
  <Command __id="4761" _type="ConsoleOutput" date="Sun Dec 03 20:14:55 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23577918" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4762" _type="ShellCommand" date="Sun Dec 03 20:14:56 EST 2023" starttimestamp="1701628917814" timestamp="23578492" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4763" _type="ShellCommand" date="Sun Dec 03 20:14:58 EST 2023" starttimestamp="1701628917814" timestamp="23581074" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4764" _type="PasteCommand" date="Sun Dec 03 20:14:59 EST 2023" starttimestamp="1701628917814" timestamp="23581398" />
  <Command __id="4765" _type="ConsoleOutput" date="Sun Dec 03 20:14:59 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23581669" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4766" _type="ShellCommand" date="Sun Dec 03 20:15:00 EST 2023" starttimestamp="1701628917814" timestamp="23582510" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4767" _type="ShellCommand" date="Sun Dec 03 20:15:02 EST 2023" starttimestamp="1701628917814" timestamp="23584931" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4768" _type="ShellCommand" date="Sun Dec 03 20:15:06 EST 2023" starttimestamp="1701628917814" timestamp="23588416" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4769" _type="ShellCommand" date="Sun Dec 03 20:15:57 EST 2023" starttimestamp="1701628917814" timestamp="23639388" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4776" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:16:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23647782" type="Run" />
  <Command __id="4777" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:16:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23647782" type="Run" />
  <Command __id="4778" _type="ShellCommand" date="Sun Dec 03 20:16:06 EST 2023" starttimestamp="1701628917814" timestamp="23648234" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4779" _type="ShellCommand" date="Sun Dec 03 20:16:09 EST 2023" starttimestamp="1701628917814" timestamp="23651265" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4780" _type="PasteCommand" date="Sun Dec 03 20:16:09 EST 2023" starttimestamp="1701628917814" timestamp="23651946" />
  <Command __id="4781" _type="ConsoleOutput" date="Sun Dec 03 20:16:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23652480" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="4782" _type="ShellCommand" date="Sun Dec 03 20:16:11 EST 2023" starttimestamp="1701628917814" timestamp="23653390" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4783" _type="ShellCommand" date="Sun Dec 03 20:16:12 EST 2023" starttimestamp="1701628917814" timestamp="23654253" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4784" _type="ShellCommand" date="Sun Dec 03 20:16:22 EST 2023" starttimestamp="1701628917814" timestamp="23664354" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4785" _type="ShellCommand" date="Sun Dec 03 20:16:22 EST 2023" starttimestamp="1701628917814" timestamp="23664937" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4786" _type="ShellCommand" date="Sun Dec 03 20:16:23 EST 2023" starttimestamp="1701628917814" timestamp="23665270" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4787" _type="ShellCommand" date="Sun Dec 03 20:16:26 EST 2023" starttimestamp="1701628917814" timestamp="23668973" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4788" _type="ShellCommand" date="Sun Dec 03 20:17:13 EST 2023" starttimestamp="1701628917814" timestamp="23716050" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4789" _type="ShellCommand" date="Sun Dec 03 20:17:18 EST 2023" starttimestamp="1701628917814" timestamp="23720339" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="4705" _type="Insert" date="Sun Dec 03 20:14:08 EST 2023" docASTNodeCount="143" docActiveCodeLength="802" docExpressionCount="102" docLength="802" length="10" offset="698" repeat="10" starttimestamp="1701628917814" timestamp="23530829" timestamp2="23533077">
    <text><![CDATA[getHead().]]></text>
  </DocumentChange>
  <DocumentChange __id="4792" _type="Insert" date="Sun Dec 03 20:19:04 EST 2023" docASTNodeCount="145" docActiveCodeLength="810" docExpressionCount="103" docLength="810" length="8" offset="570" repeat="4" starttimestamp="1701628917814" timestamp="23826717" timestamp2="23827726">
    <text><![CDATA[
			if()]]></text>
  </DocumentChange>
  <Command __id="4790" _type="MoveCaretCommand" caretOffset="450" date="Sun Dec 03 20:19:03 EST 2023" docOffset="570" starttimestamp="1701628917814" timestamp="23825771" />
  <Command __id="4791" _type="MoveCaretCommand" caretOffset="450" date="Sun Dec 03 20:19:03 EST 2023" docOffset="570" starttimestamp="1701628917814" timestamp="23825771" />
  <Command __id="4793" _type="InsertStringCommand" date="Sun Dec 03 20:19:04 EST 2023" starttimestamp="1701628917814" timestamp="23826720" timestamp2="23826720">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4794" _type="InsertStringCommand" date="Sun Dec 03 20:19:04 EST 2023" starttimestamp="1701628917814" timestamp="23826720" timestamp2="23826720">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4796" _type="InsertStringCommand" date="Sun Dec 03 20:19:05 EST 2023" starttimestamp="1701628917814" timestamp="23827483" timestamp2="23827483">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4797" _type="InsertStringCommand" date="Sun Dec 03 20:19:05 EST 2023" starttimestamp="1701628917814" timestamp="23827483" timestamp2="23827483">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4799" _type="InsertStringCommand" date="Sun Dec 03 20:19:05 EST 2023" starttimestamp="1701628917814" timestamp="23827563" timestamp2="23827563">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4800" _type="InsertStringCommand" date="Sun Dec 03 20:19:05 EST 2023" starttimestamp="1701628917814" timestamp="23827563" timestamp2="23827563">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4802" _type="InsertStringCommand" date="Sun Dec 03 20:19:05 EST 2023" starttimestamp="1701628917814" timestamp="23827728" timestamp2="23827728">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4803" _type="InsertStringCommand" date="Sun Dec 03 20:19:05 EST 2023" starttimestamp="1701628917814" timestamp="23827728" timestamp2="23827728">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4805" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835472" timestamp2="23835472">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4806" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835472" timestamp2="23835472">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4808" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835695" timestamp2="23835695">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4809" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835695" timestamp2="23835695">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4811" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835889" timestamp2="23835889">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4812" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835889" timestamp2="23835889">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4814" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835981" timestamp2="23835981">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4815" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23835981" timestamp2="23835981">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4817" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23836082" timestamp2="23836082">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4818" _type="InsertStringCommand" date="Sun Dec 03 20:19:13 EST 2023" starttimestamp="1701628917814" timestamp="23836082" timestamp2="23836082">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4819" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:13 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23836086" />
  <Command __id="4824" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:15 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23837222" />
  <Command __id="4826" _type="InsertStringCommand" date="Sun Dec 03 20:19:15 EST 2023" starttimestamp="1701628917814" timestamp="23837228" timestamp2="23837228">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4827" _type="InsertStringCommand" date="Sun Dec 03 20:19:15 EST 2023" starttimestamp="1701628917814" timestamp="23837228" timestamp2="23837228">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4804" _type="Insert" date="Sun Dec 03 20:19:13 EST 2023" docASTNodeCount="147" docActiveCodeLength="819" docExpressionCount="105" docLength="819" length="9" offset="577" repeat="9" starttimestamp="1701628917814" timestamp="23835470" timestamp2="23837012">
    <text><![CDATA[expr.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="4825" _type="Replace" date="Sun Dec 03 20:19:15 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" endLine="20" insertionLength="9" int_docASTNodeCount="147" int_docActiveCodeLength="815" int_docExpressionCount="104" int_docLength="815" length="4" offset="582" startLine="20" starttimestamp="1701628917814" timestamp="23837224">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4828" _type="Insert" date="Sun Dec 03 20:19:16 EST 2023" docASTNodeCount="149" docActiveCodeLength="825" docExpressionCount="107" docLength="825" length="1" offset="591" starttimestamp="1701628917814" timestamp="23838188">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="4829" _type="InsertStringCommand" date="Sun Dec 03 20:19:16 EST 2023" starttimestamp="1701628917814" timestamp="23838189" timestamp2="23838189">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4830" _type="InsertStringCommand" date="Sun Dec 03 20:19:16 EST 2023" starttimestamp="1701628917814" timestamp="23838190" timestamp2="23838190">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4831" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:16 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23838198" />
  <DocumentChange __id="4832" _type="Delete" date="Sun Dec 03 20:19:17 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" endLine="20" length="1" offset="591" startLine="20" starttimestamp="1701628917814" timestamp="23839249">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="4833" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:22 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23844530" />
  <DocumentChange __id="4834" _type="Insert" date="Sun Dec 03 20:19:22 EST 2023" docASTNodeCount="142" docActiveCodeLength="836" docExpressionCount="102" docLength="836" length="12" offset="591" starttimestamp="1701628917814" timestamp="23844536">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <Command __id="4835" _type="InsertStringCommand" date="Sun Dec 03 20:19:22 EST 2023" starttimestamp="1701628917814" timestamp="23844539" timestamp2="23844539">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4836" _type="InsertStringCommand" date="Sun Dec 03 20:19:22 EST 2023" starttimestamp="1701628917814" timestamp="23844539" timestamp2="23844539">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4837" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:22 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23844550" />
  <Command __id="4839" _type="UndoCommand" date="Sun Dec 03 20:19:23 EST 2023" starttimestamp="1701628917814" timestamp="23845778" />
  <DocumentChange __id="4838" _type="Delete" date="Sun Dec 03 20:19:23 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" endLine="20" length="12" offset="591" startLine="20" starttimestamp="1701628917814" timestamp="23845773">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4841" _type="Insert" date="Sun Dec 03 20:19:24 EST 2023" docASTNodeCount="142" docActiveCodeLength="836" docExpressionCount="102" docLength="836" length="12" offset="591" starttimestamp="1701628917814" timestamp="23846876">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4845" _type="Delete" date="Sun Dec 03 20:19:25 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" endLine="20" length="12" offset="591" startLine="20" starttimestamp="1701628917814" timestamp="23847778">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4847" _type="Insert" date="Sun Dec 03 20:19:28 EST 2023" docASTNodeCount="147" docActiveCodeLength="825" docExpressionCount="105" docLength="825" length="1" offset="591" starttimestamp="1701628917814" timestamp="23850844">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="4848" _type="Delete" date="Sun Dec 03 20:19:29 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" endLine="20" length="1" offset="591" startLine="20" starttimestamp="1701628917814" timestamp="23851766">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="4850" _type="Insert" date="Sun Dec 03 20:19:30 EST 2023" docASTNodeCount="142" docActiveCodeLength="836" docExpressionCount="102" docLength="836" length="12" offset="591" starttimestamp="1701628917814" timestamp="23852314">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4854" _type="Delete" date="Sun Dec 03 20:19:30 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" endLine="20" length="12" offset="591" repeat="12" startLine="20" starttimestamp="1701628917814" timestamp="23852761" timestamp2="23854407">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4867" _type="Insert" date="Sun Dec 03 20:19:32 EST 2023" docASTNodeCount="142" docActiveCodeLength="836" docExpressionCount="102" docLength="836" length="12" offset="591" starttimestamp="1701628917814" timestamp="23854624">
    <text><![CDATA[environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4871" _type="Delete" date="Sun Dec 03 20:19:32 EST 2023" docASTNodeCount="147" docActiveCodeLength="822" docExpressionCount="105" docLength="822" endLine="20" length="14" offset="589" repeat="14" startLine="20" starttimestamp="1701628917814" timestamp="23855017" timestamp2="23857096">
    <text><![CDATA[()environment.]]></text>
  </DocumentChange>
  <DocumentChange __id="4885" _type="Insert" date="Sun Dec 03 20:19:36 EST 2023" docASTNodeCount="147" docActiveCodeLength="824" docExpressionCount="105" docLength="824" length="2" offset="589" starttimestamp="1701628917814" timestamp="23858764">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="4887" _type="Replace" date="Sun Dec 03 20:19:37 EST 2023" docASTNodeCount="149" docActiveCodeLength="825" docExpressionCount="107" docLength="825" endLine="20" insertionLength="10" int_docASTNodeCount="147" int_docActiveCodeLength="815" int_docExpressionCount="104" int_docLength="815" length="9" offset="582" startLine="20" starttimestamp="1701628917814" timestamp="23859249">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[getHead().]]></insertedText>
  </DocumentChange>
  <Command __id="4840" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:24 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23846870" />
  <Command __id="4842" _type="InsertStringCommand" date="Sun Dec 03 20:19:24 EST 2023" starttimestamp="1701628917814" timestamp="23846879" timestamp2="23846879">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4843" _type="InsertStringCommand" date="Sun Dec 03 20:19:24 EST 2023" starttimestamp="1701628917814" timestamp="23846879" timestamp2="23846879">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4844" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:24 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23846890" />
  <Command __id="4846" _type="UndoCommand" date="Sun Dec 03 20:19:25 EST 2023" starttimestamp="1701628917814" timestamp="23847781" />
  <Command __id="4849" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:30 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23852310" />
  <Command __id="4851" _type="InsertStringCommand" date="Sun Dec 03 20:19:30 EST 2023" starttimestamp="1701628917814" timestamp="23852316" timestamp2="23852316">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4852" _type="InsertStringCommand" date="Sun Dec 03 20:19:30 EST 2023" starttimestamp="1701628917814" timestamp="23852316" timestamp2="23852316">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4853" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:30 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23852323" />
  <Command __id="4866" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:32 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23854619" />
  <Command __id="4868" _type="InsertStringCommand" date="Sun Dec 03 20:19:32 EST 2023" starttimestamp="1701628917814" timestamp="23854627" timestamp2="23854627">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4869" _type="InsertStringCommand" date="Sun Dec 03 20:19:32 EST 2023" starttimestamp="1701628917814" timestamp="23854627" timestamp2="23854627">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4870" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:32 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23854636" />
  <Command __id="4886" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:37 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23859246" />
  <Command __id="4888" _type="InsertStringCommand" date="Sun Dec 03 20:19:37 EST 2023" starttimestamp="1701628917814" timestamp="23859255" timestamp2="23859255">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4889" _type="InsertStringCommand" date="Sun Dec 03 20:19:37 EST 2023" starttimestamp="1701628917814" timestamp="23859255" timestamp2="23859255">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4890" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:19:37 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23859274" />
  <DocumentChange __id="4891" _type="Insert" date="Sun Dec 03 20:19:37 EST 2023" docASTNodeCount="149" docActiveCodeLength="829" docExpressionCount="107" docLength="829" length="4" offset="592" repeat="4" starttimestamp="1701628917814" timestamp="23859867" timestamp2="23861107">
    <text><![CDATA[getT]]></text>
  </DocumentChange>
  <Command __id="4895" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:19:39 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23862171" />
  <DocumentChange __id="4896" _type="Replace" date="Sun Dec 03 20:19:39 EST 2023" docASTNodeCount="149" docActiveCodeLength="834" docExpressionCount="107" docLength="834" endLine="20" insertionLength="9" int_docASTNodeCount="149" int_docActiveCodeLength="825" int_docExpressionCount="107" int_docLength="825" length="4" offset="592" startLine="20" starttimestamp="1701628917814" timestamp="23862174">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="4897" _type="InsertStringCommand" date="Sun Dec 03 20:19:39 EST 2023" starttimestamp="1701628917814" timestamp="23862179" timestamp2="23862179">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4898" _type="InsertStringCommand" date="Sun Dec 03 20:19:39 EST 2023" starttimestamp="1701628917814" timestamp="23862179" timestamp2="23862179">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4899" _type="Insert" date="Sun Dec 03 20:19:41 EST 2023" docASTNodeCount="149" docActiveCodeLength="844" docExpressionCount="107" docLength="844" length="10" offset="601" repeat="10" starttimestamp="1701628917814" timestamp="23864044" timestamp2="23866174">
    <text><![CDATA[ instandof]]></text>
  </DocumentChange>
  <Command __id="4900" _type="InsertStringCommand" date="Sun Dec 03 20:19:41 EST 2023" starttimestamp="1701628917814" timestamp="23864045" timestamp2="23864045">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4901" _type="InsertStringCommand" date="Sun Dec 03 20:19:41 EST 2023" starttimestamp="1701628917814" timestamp="23864045" timestamp2="23864045">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4903" _type="InsertStringCommand" date="Sun Dec 03 20:19:42 EST 2023" starttimestamp="1701628917814" timestamp="23864542" timestamp2="23864542">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4904" _type="InsertStringCommand" date="Sun Dec 03 20:19:42 EST 2023" starttimestamp="1701628917814" timestamp="23864542" timestamp2="23864542">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4906" _type="InsertStringCommand" date="Sun Dec 03 20:19:42 EST 2023" starttimestamp="1701628917814" timestamp="23864827" timestamp2="23864827">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4907" _type="InsertStringCommand" date="Sun Dec 03 20:19:42 EST 2023" starttimestamp="1701628917814" timestamp="23864827" timestamp2="23864827">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4909" _type="InsertStringCommand" date="Sun Dec 03 20:19:42 EST 2023" starttimestamp="1701628917814" timestamp="23865168" timestamp2="23865168">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4910" _type="InsertStringCommand" date="Sun Dec 03 20:19:42 EST 2023" starttimestamp="1701628917814" timestamp="23865168" timestamp2="23865168">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4912" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865330" timestamp2="23865330">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4913" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865330" timestamp2="23865330">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4915" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865440" timestamp2="23865440">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4916" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865440" timestamp2="23865440">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4918" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865607" timestamp2="23865607">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4919" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865607" timestamp2="23865607">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4921" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865846" timestamp2="23865846">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4922" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23865846" timestamp2="23865846">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4924" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23866098" timestamp2="23866098">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4925" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23866098" timestamp2="23866098">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4927" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23866174" timestamp2="23866174">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4928" _type="InsertStringCommand" date="Sun Dec 03 20:19:43 EST 2023" starttimestamp="1701628917814" timestamp="23866175" timestamp2="23866175">
    <data><![CDATA[f]]></data>
  </Command>
  <DocumentChange __id="4929" _type="Delete" date="Sun Dec 03 20:19:44 EST 2023" docASTNodeCount="149" docActiveCodeLength="841" docExpressionCount="107" docLength="841" endLine="20" length="3" offset="608" repeat="3" startLine="20" starttimestamp="1701628917814" timestamp="23866562" timestamp2="23866816">
    <text><![CDATA[dof]]></text>
  </DocumentChange>
  <Command __id="4930" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866565" />
  <Command __id="4931" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866565" />
  <Command __id="4933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866662" />
  <Command __id="4934" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866662" />
  <Command __id="4936" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866818" />
  <Command __id="4937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866818" />
  <DocumentChange __id="4938" _type="Insert" date="Sun Dec 03 20:19:44 EST 2023" docASTNodeCount="152" docActiveCodeLength="847" docExpressionCount="109" docLength="847" length="6" offset="608" repeat="6" starttimestamp="1701628917814" timestamp="23866970" timestamp2="23868555">
    <text><![CDATA[ceof A]]></text>
  </DocumentChange>
  <Command __id="4939" _type="InsertStringCommand" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866970" timestamp2="23866970">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4940" _type="InsertStringCommand" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23866970" timestamp2="23866970">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4942" _type="InsertStringCommand" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23867150" timestamp2="23867150">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4943" _type="InsertStringCommand" date="Sun Dec 03 20:19:44 EST 2023" starttimestamp="1701628917814" timestamp="23867150" timestamp2="23867150">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4945" _type="InsertStringCommand" date="Sun Dec 03 20:19:45 EST 2023" starttimestamp="1701628917814" timestamp="23867353" timestamp2="23867353">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4946" _type="InsertStringCommand" date="Sun Dec 03 20:19:45 EST 2023" starttimestamp="1701628917814" timestamp="23867353" timestamp2="23867353">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4948" _type="InsertStringCommand" date="Sun Dec 03 20:19:45 EST 2023" starttimestamp="1701628917814" timestamp="23867458" timestamp2="23867458">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4949" _type="InsertStringCommand" date="Sun Dec 03 20:19:45 EST 2023" starttimestamp="1701628917814" timestamp="23867458" timestamp2="23867458">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4951" _type="InsertStringCommand" date="Sun Dec 03 20:19:45 EST 2023" starttimestamp="1701628917814" timestamp="23868023" timestamp2="23868023">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4952" _type="InsertStringCommand" date="Sun Dec 03 20:19:45 EST 2023" starttimestamp="1701628917814" timestamp="23868023" timestamp2="23868023">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4954" _type="InsertStringCommand" date="Sun Dec 03 20:19:46 EST 2023" starttimestamp="1701628917814" timestamp="23868555" timestamp2="23868555">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4955" _type="InsertStringCommand" date="Sun Dec 03 20:19:46 EST 2023" starttimestamp="1701628917814" timestamp="23868555" timestamp2="23868555">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="4956" _type="Delete" date="Sun Dec 03 20:19:46 EST 2023" docASTNodeCount="95" docActiveCodeLength="846" docExpressionCount="63" docLength="846" endLine="20" length="1" offset="613" startLine="20" starttimestamp="1701628917814" timestamp="23868868">
    <text><![CDATA[A]]></text>
  </DocumentChange>
  <Command __id="4957" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:46 EST 2023" starttimestamp="1701628917814" timestamp="23868871" />
  <Command __id="4958" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:19:46 EST 2023" starttimestamp="1701628917814" timestamp="23868872" />
  <Command __id="4960" _type="InsertStringCommand" date="Sun Dec 03 20:19:46 EST 2023" starttimestamp="1701628917814" timestamp="23869049" timestamp2="23869049">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4961" _type="InsertStringCommand" date="Sun Dec 03 20:19:46 EST 2023" starttimestamp="1701628917814" timestamp="23869049" timestamp2="23869049">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4963" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23869320" timestamp2="23869320">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4964" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23869320" timestamp2="23869320">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4966" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23869441" timestamp2="23869441">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4967" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23869442" timestamp2="23869442">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4969" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23869826" timestamp2="23869826">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4970" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23869826" timestamp2="23869826">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4972" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23870153" timestamp2="23870153">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4973" _type="InsertStringCommand" date="Sun Dec 03 20:19:47 EST 2023" starttimestamp="1701628917814" timestamp="23870153" timestamp2="23870153">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4975" _type="InsertStringCommand" date="Sun Dec 03 20:19:48 EST 2023" starttimestamp="1701628917814" timestamp="23870224" timestamp2="23870224">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4976" _type="InsertStringCommand" date="Sun Dec 03 20:19:48 EST 2023" starttimestamp="1701628917814" timestamp="23870224" timestamp2="23870224">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4978" _type="InsertStringCommand" date="Sun Dec 03 20:19:48 EST 2023" starttimestamp="1701628917814" timestamp="23870336" timestamp2="23870336">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4979" _type="InsertStringCommand" date="Sun Dec 03 20:19:48 EST 2023" starttimestamp="1701628917814" timestamp="23870336" timestamp2="23870336">
    <data><![CDATA[m]]></data>
  </Command>
  <DocumentChange __id="4959" _type="Insert" date="Sun Dec 03 20:19:46 EST 2023" docASTNodeCount="152" docActiveCodeLength="853" docExpressionCount="109" docLength="853" length="7" offset="613" repeat="7" starttimestamp="1701628917814" timestamp="23869048" timestamp2="23870336">
    <text><![CDATA[NilAtom]]></text>
  </DocumentChange>
  <DocumentChange __id="4982" _type="Insert" date="Sun Dec 03 20:19:51 EST 2023" docASTNodeCount="153" docActiveCodeLength="865" docExpressionCount="109" docLength="865" length="12" offset="621" repeat="2" starttimestamp="1701628917814" timestamp="23873292" timestamp2="23873482">
    <text><![CDATA[ {
				
			}]]></text>
  </DocumentChange>
  <Command __id="4980" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Dec 03 20:19:50 EST 2023" starttimestamp="1701628917814" timestamp="23873033" />
  <Command __id="4981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Dec 03 20:19:50 EST 2023" starttimestamp="1701628917814" timestamp="23873033" />
  <Command __id="4983" _type="InsertStringCommand" date="Sun Dec 03 20:19:51 EST 2023" starttimestamp="1701628917814" timestamp="23873294" timestamp2="23873294">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4984" _type="InsertStringCommand" date="Sun Dec 03 20:19:51 EST 2023" starttimestamp="1701628917814" timestamp="23873294" timestamp2="23873294">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4986" _type="InsertStringCommand" date="Sun Dec 03 20:19:51 EST 2023" starttimestamp="1701628917814" timestamp="23873484" timestamp2="23873484">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4987" _type="InsertStringCommand" date="Sun Dec 03 20:19:51 EST 2023" starttimestamp="1701628917814" timestamp="23873484" timestamp2="23873484">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4989" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885503" timestamp2="23885503">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4990" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885504" timestamp2="23885504">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4992" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885575" timestamp2="23885575">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4993" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885575" timestamp2="23885575">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4995" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885680" timestamp2="23885680">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4996" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885680" timestamp2="23885680">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4998" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885783" timestamp2="23885783">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4999" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885783" timestamp2="23885783">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="5001" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885888" timestamp2="23885888">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5002" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885888" timestamp2="23885888">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5004" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885946" timestamp2="23885946">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5005" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23885946" timestamp2="23885946">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5007" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23886067" timestamp2="23886067">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5008" _type="InsertStringCommand" date="Sun Dec 03 20:20:03 EST 2023" starttimestamp="1701628917814" timestamp="23886068" timestamp2="23886068">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5010" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886515" timestamp2="23886515">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5011" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886515" timestamp2="23886515">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5013" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886695" timestamp2="23886695">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5014" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886695" timestamp2="23886695">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5016" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886852" timestamp2="23886852">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5017" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886852" timestamp2="23886852">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5019" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886925" timestamp2="23886925">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5020" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23886925" timestamp2="23886925">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5022" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23887060" timestamp2="23887060">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5023" _type="InsertStringCommand" date="Sun Dec 03 20:20:04 EST 2023" starttimestamp="1701628917814" timestamp="23887060" timestamp2="23887060">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5024" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:20:04 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23887067" />
  <Command __id="5029" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:20:05 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23887838" />
  <Command __id="5031" _type="InsertStringCommand" date="Sun Dec 03 20:20:05 EST 2023" starttimestamp="1701628917814" timestamp="23887846" timestamp2="23887846">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5032" _type="InsertStringCommand" date="Sun Dec 03 20:20:05 EST 2023" starttimestamp="1701628917814" timestamp="23887846" timestamp2="23887846">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5034" _type="InsertStringCommand" date="Sun Dec 03 20:20:05 EST 2023" starttimestamp="1701628917814" timestamp="23888063" timestamp2="23888063">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5035" _type="InsertStringCommand" date="Sun Dec 03 20:20:05 EST 2023" starttimestamp="1701628917814" timestamp="23888063" timestamp2="23888063">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5036" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:20:05 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23888071" />
  <Command __id="5041" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:20:07 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23889452" />
  <Command __id="5043" _type="InsertStringCommand" date="Sun Dec 03 20:20:07 EST 2023" starttimestamp="1701628917814" timestamp="23889458" timestamp2="23889458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5044" _type="InsertStringCommand" date="Sun Dec 03 20:20:07 EST 2023" starttimestamp="1701628917814" timestamp="23889458" timestamp2="23889458">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5046" _type="InsertStringCommand" date="Sun Dec 03 20:20:07 EST 2023" starttimestamp="1701628917814" timestamp="23889715" timestamp2="23889715">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5047" _type="InsertStringCommand" date="Sun Dec 03 20:20:07 EST 2023" starttimestamp="1701628917814" timestamp="23889715" timestamp2="23889715">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5048" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Dec 03 20:20:07 EST 2023" start_end="START" starttimestamp="1701628917814" timestamp="23889721" />
  <Command __id="5053" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Dec 03 20:20:08 EST 2023" start_end="END" starttimestamp="1701628917814" timestamp="23890941" />
  <Command __id="5055" _type="InsertStringCommand" date="Sun Dec 03 20:20:08 EST 2023" starttimestamp="1701628917814" timestamp="23890968" timestamp2="23890968">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5056" _type="InsertStringCommand" date="Sun Dec 03 20:20:08 EST 2023" starttimestamp="1701628917814" timestamp="23890968" timestamp2="23890968">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5073" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:20:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23897221" type="Run" />
  <Command __id="5074" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:20:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23897221" type="Run" />
  <Command __id="5075" _type="ShellCommand" date="Sun Dec 03 20:20:15 EST 2023" starttimestamp="1701628917814" timestamp="23897537" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5076" _type="ShellCommand" date="Sun Dec 03 20:20:16 EST 2023" starttimestamp="1701628917814" timestamp="23898671" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5077" _type="PasteCommand" date="Sun Dec 03 20:20:16 EST 2023" starttimestamp="1701628917814" timestamp="23898949" />
  <Command __id="5078" _type="ConsoleOutput" date="Sun Dec 03 20:20:17 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23899412" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="5104" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:21:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23947406" type="Run" />
  <Command __id="5105" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:21:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23947406" type="Run" />
  <Command __id="5106" _type="PasteCommand" date="Sun Dec 03 20:21:06 EST 2023" starttimestamp="1701628917814" timestamp="23948626" />
  <Command __id="5107" _type="ConsoleOutput" date="Sun Dec 03 20:21:06 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23948845" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5108" _type="ShellCommand" date="Sun Dec 03 20:21:07 EST 2023" starttimestamp="1701628917814" timestamp="23949870" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5109" _type="ShellCommand" date="Sun Dec 03 20:21:10 EST 2023" starttimestamp="1701628917814" timestamp="23952200" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5110" _type="PasteCommand" date="Sun Dec 03 20:21:10 EST 2023" starttimestamp="1701628917814" timestamp="23952437" />
  <Command __id="5111" _type="ConsoleOutput" date="Sun Dec 03 20:21:10 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23952666" type="ConsoleOutput">
    <outputString><![CDATA[7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5112" _type="ShellCommand" date="Sun Dec 03 20:21:11 EST 2023" starttimestamp="1701628917814" timestamp="23953470" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5113" _type="ShellCommand" date="Sun Dec 03 20:21:13 EST 2023" starttimestamp="1701628917814" timestamp="23956040" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5114" _type="PasteCommand" date="Sun Dec 03 20:21:14 EST 2023" starttimestamp="1701628917814" timestamp="23956213" />
  <Command __id="5115" _type="ConsoleOutput" date="Sun Dec 03 20:21:14 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23956404" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"7"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5116" _type="ShellCommand" date="Sun Dec 03 20:21:14 EST 2023" starttimestamp="1701628917814" timestamp="23956787" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5117" _type="ShellCommand" date="Sun Dec 03 20:21:16 EST 2023" starttimestamp="1701628917814" timestamp="23958891" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5118" _type="PasteCommand" date="Sun Dec 03 20:21:16 EST 2023" starttimestamp="1701628917814" timestamp="23959063" />
  <Command __id="5119" _type="ConsoleOutput" date="Sun Dec 03 20:21:17 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23959218" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5120" _type="ShellCommand" date="Sun Dec 03 20:21:17 EST 2023" starttimestamp="1701628917814" timestamp="23959860" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5121" _type="ShellCommand" date="Sun Dec 03 20:21:20 EST 2023" starttimestamp="1701628917814" timestamp="23962325" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5122" _type="ConsoleInput" date="Sun Dec 03 20:21:21 EST 2023" starttimestamp="1701628917814" timestamp="23964042" type="Exception">
    <outputString><![CDATA[(cond (t) ((+ 3 4)))(cond (nil) ((+ 3 4)))(cond (T))(cond (Nil))(cond)
]]></outputString>
  </Command>
  <Command __id="5123" _type="ConsoleOutput" date="Sun Dec 03 20:21:21 EST 2023" overflow="false" starttimestamp="1701628917814" timestamp="23964047" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="5124" _type="ShellCommand" date="Sun Dec 03 20:21:22 EST 2023" starttimestamp="1701628917814" timestamp="23964645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5125" _type="ShellCommand" date="Sun Dec 03 20:21:25 EST 2023" starttimestamp="1701628917814" timestamp="23967971" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5126" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:21:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="23968963" type="Debug" />
  <Command __id="5127" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:21:26 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23968963" type="Run" />
  <Command __id="5128" _type="ProgramExecutionEvent" className="(Unknown)" date="Sun Dec 03 20:21:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701628917814" timestamp="23968963" type="Debug" />
  <Command __id="5129" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Sun Dec 03 20:21:26 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701628917814" timestamp="23968963" type="Run" />
  <Command __id="5130" _type="ShellCommand" date="Sun Dec 03 20:21:28 EST 2023" starttimestamp="1701628917814" timestamp="23970497" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5131" _type="ShellCommand" date="Sun Dec 03 20:21:49 EST 2023" starttimestamp="1701628917814" timestamp="23991962" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5132" _type="ShellCommand" date="Sun Dec 03 20:21:50 EST 2023" starttimestamp="1701628917814" timestamp="23992943" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5133" _type="ShellCommand" date="Sun Dec 03 20:22:21 EST 2023" starttimestamp="1701628917814" timestamp="24024017" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5134" _type="ShellCommand" date="Sun Dec 03 20:22:23 EST 2023" starttimestamp="1701628917814" timestamp="24025530" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5135" _type="ShellCommand" date="Sun Dec 03 20:22:27 EST 2023" starttimestamp="1701628917814" timestamp="24029307" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5136" _type="ShellCommand" date="Sun Dec 03 20:22:38 EST 2023" starttimestamp="1701628917814" timestamp="24041020" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5137" _type="PasteCommand" date="Sun Dec 03 20:22:57 EST 2023" starttimestamp="1701628917814" timestamp="24059392" />
  <Command __id="5138" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Sun Dec 03 20:23:03 EST 2023" starttimestamp="1701628917814" timestamp="24065366" />
  <Command __id="5139" _type="ShellCommand" date="Sun Dec 03 20:23:10 EST 2023" starttimestamp="1701628917814" timestamp="24072922" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5140" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:23:10 EST 2023" starttimestamp="1701628917814" timestamp="24072972" />
  <Command __id="5141" _type="EclipseCommand" commandID="" date="Sun Dec 03 20:23:10 EST 2023" starttimestamp="1701628917814" timestamp="24072977" />
  <Command __id="5143" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 20:23:10 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="24073082" />
  <Command __id="5144" _type="MoveCaretCommand" caretOffset="14" date="Sun Dec 03 20:23:12 EST 2023" docOffset="14" starttimestamp="1701628917814" timestamp="24074452" />
  <Command __id="5146" _type="InsertStringCommand" date="Sun Dec 03 20:23:12 EST 2023" starttimestamp="1701628917814" timestamp="24075111" timestamp2="24075111">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5148" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24075204" timestamp2="24075204">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5150" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24075461" timestamp2="24075461">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5152" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24075536" timestamp2="24075536">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5154" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24075639" timestamp2="24075639">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5156" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24075809" timestamp2="24075809">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5158" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24075895" timestamp2="24075895">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5160" _type="InsertStringCommand" date="Sun Dec 03 20:23:13 EST 2023" starttimestamp="1701628917814" timestamp="24076061" timestamp2="24076061">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5162" _type="InsertStringCommand" date="Sun Dec 03 20:23:14 EST 2023" starttimestamp="1701628917814" timestamp="24076542" timestamp2="24076542">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5164" _type="PasteCommand" date="Sun Dec 03 20:23:14 EST 2023" starttimestamp="1701628917814" timestamp="24076693" />
  <Command __id="5166" _type="InsertStringCommand" date="Sun Dec 03 20:23:15 EST 2023" starttimestamp="1701628917814" timestamp="24077275" timestamp2="24077275">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5167" _type="MoveCaretCommand" caretOffset="106" date="Sun Dec 03 20:23:16 EST 2023" docOffset="106" starttimestamp="1701628917814" timestamp="24078879" />
  <Command __id="5169" _type="InsertStringCommand" date="Sun Dec 03 20:23:17 EST 2023" starttimestamp="1701628917814" timestamp="24079513" timestamp2="24079513">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5171" _type="InsertStringCommand" date="Sun Dec 03 20:23:17 EST 2023" starttimestamp="1701628917814" timestamp="24079580" timestamp2="24079580">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5173" _type="InsertStringCommand" date="Sun Dec 03 20:23:17 EST 2023" starttimestamp="1701628917814" timestamp="24079704" timestamp2="24079704">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5175" _type="InsertStringCommand" date="Sun Dec 03 20:23:17 EST 2023" starttimestamp="1701628917814" timestamp="24079874" timestamp2="24079874">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5177" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24080218" timestamp2="24080218">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5179" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24080460" timestamp2="24080460">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5181" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24080579" timestamp2="24080579">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5183" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24080639" timestamp2="24080639">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5185" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24080712" timestamp2="24080712">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5187" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24080814" timestamp2="24080814">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5189" _type="InsertStringCommand" date="Sun Dec 03 20:23:18 EST 2023" starttimestamp="1701628917814" timestamp="24081146" timestamp2="24081146">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5191" _type="InsertStringCommand" date="Sun Dec 03 20:23:19 EST 2023" starttimestamp="1701628917814" timestamp="24081325" timestamp2="24081325">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="5193" _type="InsertStringCommand" date="Sun Dec 03 20:23:19 EST 2023" starttimestamp="1701628917814" timestamp="24081598" timestamp2="24081598">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="5195" _type="InsertStringCommand" date="Sun Dec 03 20:23:19 EST 2023" starttimestamp="1701628917814" timestamp="24081762" timestamp2="24081762">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5197" _type="InsertStringCommand" date="Sun Dec 03 20:23:19 EST 2023" starttimestamp="1701628917814" timestamp="24081900" timestamp2="24081900">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5199" _type="InsertStringCommand" date="Sun Dec 03 20:23:19 EST 2023" starttimestamp="1701628917814" timestamp="24082048" timestamp2="24082048">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5201" _type="InsertStringCommand" date="Sun Dec 03 20:23:19 EST 2023" starttimestamp="1701628917814" timestamp="24082096" timestamp2="24082096">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5203" _type="InsertStringCommand" date="Sun Dec 03 20:23:20 EST 2023" starttimestamp="1701628917814" timestamp="24082247" timestamp2="24082247">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5205" _type="InsertStringCommand" date="Sun Dec 03 20:23:20 EST 2023" starttimestamp="1701628917814" timestamp="24082378" timestamp2="24082378">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5207" _type="InsertStringCommand" date="Sun Dec 03 20:23:20 EST 2023" starttimestamp="1701628917814" timestamp="24082618" timestamp2="24082618">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5209" _type="InsertStringCommand" date="Sun Dec 03 20:23:20 EST 2023" starttimestamp="1701628917814" timestamp="24082756" timestamp2="24082756">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5211" _type="InsertStringCommand" date="Sun Dec 03 20:23:20 EST 2023" starttimestamp="1701628917814" timestamp="24082858" timestamp2="24082858">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5213" _type="InsertStringCommand" date="Sun Dec 03 20:23:21 EST 2023" starttimestamp="1701628917814" timestamp="24083467" timestamp2="24083467">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5215" _type="InsertStringCommand" date="Sun Dec 03 20:23:21 EST 2023" starttimestamp="1701628917814" timestamp="24083833" timestamp2="24083833">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5217" _type="InsertStringCommand" date="Sun Dec 03 20:23:21 EST 2023" starttimestamp="1701628917814" timestamp="24083919" timestamp2="24083919">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5219" _type="InsertStringCommand" date="Sun Dec 03 20:23:21 EST 2023" starttimestamp="1701628917814" timestamp="24083998" timestamp2="24083998">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5221" _type="InsertStringCommand" date="Sun Dec 03 20:23:21 EST 2023" starttimestamp="1701628917814" timestamp="24084147" timestamp2="24084147">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5223" _type="InsertStringCommand" date="Sun Dec 03 20:23:22 EST 2023" starttimestamp="1701628917814" timestamp="24084223" timestamp2="24084223">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5225" _type="InsertStringCommand" date="Sun Dec 03 20:23:22 EST 2023" starttimestamp="1701628917814" timestamp="24084295" timestamp2="24084295">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5227" _type="InsertStringCommand" date="Sun Dec 03 20:23:22 EST 2023" starttimestamp="1701628917814" timestamp="24084342" timestamp2="24084342">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5228" _type="MoveCaretCommand" caretOffset="141" date="Sun Dec 03 20:23:24 EST 2023" docOffset="141" starttimestamp="1701628917814" timestamp="24086869" />
  <Command __id="5229" _type="MoveCaretCommand" caretOffset="64" date="Sun Dec 03 20:23:25 EST 2023" docOffset="64" starttimestamp="1701628917814" timestamp="24087597" />
  <Command __id="5230" _type="SelectTextCommand" caretOffset="74" date="Sun Dec 03 20:23:25 EST 2023" end="74" start="55" starttimestamp="1701628917814" timestamp="24087726" />
  <Command __id="5231" _type="CopyCommand" date="Sun Dec 03 20:23:25 EST 2023" starttimestamp="1701628917814" timestamp="24087847" />
  <Command __id="5232" _type="MoveCaretCommand" caretOffset="127" date="Sun Dec 03 20:23:25 EST 2023" docOffset="127" starttimestamp="1701628917814" timestamp="24088081" />
  <Command __id="5233" _type="MoveCaretCommand" caretOffset="127" date="Sun Dec 03 20:23:26 EST 2023" docOffset="127" starttimestamp="1701628917814" timestamp="24088237" />
  <Command __id="5234" _type="MoveCaretCommand" caretOffset="127" date="Sun Dec 03 20:23:26 EST 2023" docOffset="127" starttimestamp="1701628917814" timestamp="24088616" />
  <Command __id="5235" _type="SelectTextCommand" caretOffset="136" date="Sun Dec 03 20:23:26 EST 2023" end="136" start="117" starttimestamp="1701628917814" timestamp="24088754" />
  <Command __id="5237" _type="PasteCommand" date="Sun Dec 03 20:23:26 EST 2023" starttimestamp="1701628917814" timestamp="24088979" />
  <Command __id="5238" _type="MoveCaretCommand" caretOffset="140" date="Sun Dec 03 20:23:27 EST 2023" docOffset="140" starttimestamp="1701628917814" timestamp="24089421" />
  <DocumentChange __id="4988" _type="Insert" date="Sun Dec 03 20:20:03 EST 2023" docASTNodeCount="157" docActiveCodeLength="881" docExpressionCount="112" docLength="881" length="16" offset="628" repeat="16" starttimestamp="1701628917814" timestamp="23885501" timestamp2="23887626">
    <text><![CDATA[return expr.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="5030" _type="Replace" date="Sun Dec 03 20:20:05 EST 2023" docASTNodeCount="157" docActiveCodeLength="886" docExpressionCount="112" docLength="886" endLine="21" insertionLength="9" int_docASTNodeCount="155" int_docActiveCodeLength="877" int_docExpressionCount="110" int_docLength="877" length="4" offset="640" startLine="21" starttimestamp="1701628917814" timestamp="23887841">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5033" _type="Insert" date="Sun Dec 03 20:20:05 EST 2023" docASTNodeCount="159" docActiveCodeLength="891" docExpressionCount="114" docLength="891" length="5" offset="649" repeat="5" starttimestamp="1701628917814" timestamp="23888060" timestamp2="23889277">
    <text><![CDATA[.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="5042" _type="Replace" date="Sun Dec 03 20:20:07 EST 2023" docASTNodeCount="159" docActiveCodeLength="896" docExpressionCount="114" docLength="896" endLine="21" insertionLength="9" int_docASTNodeCount="157" int_docActiveCodeLength="887" int_docExpressionCount="112" int_docLength="887" length="4" offset="650" startLine="21" starttimestamp="1701628917814" timestamp="23889455">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5045" _type="Insert" date="Sun Dec 03 20:20:07 EST 2023" docASTNodeCount="161" docActiveCodeLength="901" docExpressionCount="116" docLength="901" length="5" offset="659" repeat="5" starttimestamp="1701628917814" timestamp="23889711" timestamp2="23890743">
    <text><![CDATA[.eval]]></text>
  </DocumentChange>
  <DocumentChange __id="5054" _type="Replace" date="Sun Dec 03 20:20:08 EST 2023" docASTNodeCount="162" docActiveCodeLength="914" docExpressionCount="117" docLength="914" endLine="21" insertionLength="17" int_docASTNodeCount="159" int_docActiveCodeLength="897" int_docExpressionCount="114" int_docLength="897" length="4" offset="660" startLine="21" starttimestamp="1701628917814" timestamp="23890944">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5061" _type="Insert" date="Sun Dec 03 20:20:11 EST 2023" docASTNodeCount="162" docActiveCodeLength="915" docExpressionCount="117" docLength="915" length="1" offset="677" starttimestamp="1701628917814" timestamp="23893468">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5083" _type="Replace" date="Sun Dec 03 20:21:02 EST 2023" docASTNodeCount="162" docActiveCodeLength="912" docExpressionCount="117" docLength="912" endLine="21" insertionLength="1" int_docASTNodeCount="162" int_docActiveCodeLength="911" int_docExpressionCount="117" int_docLength="911" length="4" offset="653" startLine="21" starttimestamp="1701628917814" timestamp="23944437">
    <deletedText><![CDATA[Tail]]></deletedText>
    <insertedText><![CDATA[H]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5086" _type="Insert" date="Sun Dec 03 20:21:02 EST 2023" docASTNodeCount="162" docActiveCodeLength="915" docExpressionCount="117" docLength="915" length="3" offset="654" repeat="3" starttimestamp="1701628917814" timestamp="23944580" timestamp2="23944859">
    <text><![CDATA[ead]]></text>
  </DocumentChange>
  <Command __id="5142" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:23:10 EST 2023" docASTNodeCount="6" docActiveCodeLength="50" docExpressionCount="2" docLength="50" projectName="Assignment5" starttimestamp="1701628917814" timestamp="24073034">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class EnvironmentImpl {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5145" _type="Insert" date="Sun Dec 03 20:23:12 EST 2023" docASTNodeCount="16" docActiveCodeLength="111" docExpressionCount="11" docLength="111" length="61" offset="14" repeat="11" starttimestamp="1701628917814" timestamp="24075109" timestamp2="24077275">
    <text><![CDATA[

import main.lisp.evaluator.environment.AbstractEnvironment;]]></text>
  </DocumentChange>
  <DocumentChange __id="5168" _type="Insert" date="Sun Dec 03 20:23:17 EST 2023" docASTNodeCount="18" docActiveCodeLength="141" docExpressionCount="12" docLength="141" length="30" offset="106" repeat="30" starttimestamp="1701628917814" timestamp="24079512" timestamp2="24084341">
    <text><![CDATA[implements AbstractEnvironment]]></text>
  </DocumentChange>
  <DocumentChange __id="5236" _type="Replace" date="Sun Dec 03 20:23:26 EST 2023" docASTNodeCount="18" docActiveCodeLength="141" docExpressionCount="12" docLength="141" endLine="4" insertionLength="19" int_docASTNodeCount="16" int_docActiveCodeLength="122" int_docExpressionCount="11" int_docLength="122" length="19" offset="117" startLine="4" starttimestamp="1701628917814" timestamp="24088974">
    <deletedText><![CDATA[AbstractEnvironment]]></deletedText>
    <insertedText><![CDATA[AbstractEnvironment]]></insertedText>
  </DocumentChange>
  <Command __id="5239" _type="MoveCaretCommand" caretOffset="138" date="Sun Dec 03 20:23:28 EST 2023" docOffset="138" starttimestamp="1701628917814" timestamp="24091007" />
  <Command __id="5241" _type="InsertStringCommand" date="Sun Dec 03 20:23:30 EST 2023" starttimestamp="1701628917814" timestamp="24092700" timestamp2="24092700">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="5242" _type="ShellCommand" date="Sun Dec 03 20:23:34 EST 2023" starttimestamp="1701628917814" timestamp="24096655" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5243" _type="ShellCommand" date="Sun Dec 03 20:23:35 EST 2023" starttimestamp="1701628917814" timestamp="24098074" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5244" _type="MoveCaretCommand" caretOffset="76" date="Sun Dec 03 20:23:36 EST 2023" docOffset="76" starttimestamp="1701628917814" timestamp="24098619" />
  <Command __id="5245" _type="SelectTextCommand" caretOffset="83" date="Sun Dec 03 20:23:36 EST 2023" end="83" start="76" starttimestamp="1701628917814" timestamp="24098760" />
  <Command __id="5246" _type="MoveCaretCommand" caretOffset="114" date="Sun Dec 03 20:23:36 EST 2023" docOffset="114" starttimestamp="1701628917814" timestamp="24099138" />
  <Command __id="5247" _type="SelectTextCommand" caretOffset="116" date="Sun Dec 03 20:23:37 EST 2023" end="116" start="106" starttimestamp="1701628917814" timestamp="24099276" />
  <Command __id="5249" _type="InsertStringCommand" date="Sun Dec 03 20:23:37 EST 2023" starttimestamp="1701628917814" timestamp="24099709" timestamp2="24099709">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5251" _type="InsertStringCommand" date="Sun Dec 03 20:23:37 EST 2023" starttimestamp="1701628917814" timestamp="24099934" timestamp2="24099934">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5253" _type="InsertStringCommand" date="Sun Dec 03 20:23:37 EST 2023" starttimestamp="1701628917814" timestamp="24100150" timestamp2="24100150">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5255" _type="InsertStringCommand" date="Sun Dec 03 20:23:38 EST 2023" starttimestamp="1701628917814" timestamp="24100334" timestamp2="24100334">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5257" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Dec 03 20:23:38 EST 2023" starttimestamp="1701628917814" timestamp="24100814" />
  <Command __id="5259" _type="InsertStringCommand" date="Sun Dec 03 20:23:38 EST 2023" starttimestamp="1701628917814" timestamp="24100903" timestamp2="24100903">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5261" _type="InsertStringCommand" date="Sun Dec 03 20:23:38 EST 2023" starttimestamp="1701628917814" timestamp="24101006" timestamp2="24101006">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5263" _type="InsertStringCommand" date="Sun Dec 03 20:23:38 EST 2023" starttimestamp="1701628917814" timestamp="24101083" timestamp2="24101083">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5265" _type="InsertStringCommand" date="Sun Dec 03 20:23:38 EST 2023" starttimestamp="1701628917814" timestamp="24101126" timestamp2="24101126">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5266" _type="ShellCommand" date="Sun Dec 03 20:23:43 EST 2023" starttimestamp="1701628917814" timestamp="24105911" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5267" _type="ShellCommand" date="Sun Dec 03 20:23:43 EST 2023" starttimestamp="1701628917814" timestamp="24105999" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5302" _type="MoveCaretCommand" caretOffset="447" date="Sun Dec 03 20:23:48 EST 2023" docOffset="447" starttimestamp="1701628917814" timestamp="24110827" />
  <Command __id="5303" _type="ShellCommand" date="Sun Dec 03 20:23:49 EST 2023" starttimestamp="1701628917814" timestamp="24112042" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="5240" _type="Insert" date="Sun Dec 03 20:23:30 EST 2023" docASTNodeCount="18" docActiveCodeLength="142" docExpressionCount="12" docLength="142" length="1" offset="138" starttimestamp="1701628917814" timestamp="24092698">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="5248" _type="Replace" date="Sun Dec 03 20:23:37 EST 2023" docASTNodeCount="23" docActiveCodeLength="133" docExpressionCount="13" docLength="133" endLine="4" insertionLength="1" int_docASTNodeCount="18" int_docActiveCodeLength="132" int_docExpressionCount="11" int_docLength="132" length="10" offset="106" startLine="4" starttimestamp="1701628917814" timestamp="24099704">
    <deletedText><![CDATA[implements]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5250" _type="Insert" date="Sun Dec 03 20:23:37 EST 2023" docASTNodeCount="23" docActiveCodeLength="136" docExpressionCount="13" docLength="136" length="3" offset="107" repeat="3" starttimestamp="1701628917814" timestamp="24099934" timestamp2="24100333">
    <text><![CDATA[xtn]]></text>
  </DocumentChange>
  <DocumentChange __id="5256" _type="Delete" date="Sun Dec 03 20:23:38 EST 2023" docASTNodeCount="23" docActiveCodeLength="135" docExpressionCount="13" docLength="135" endLine="4" length="1" offset="109" startLine="4" starttimestamp="1701628917814" timestamp="24100811">
    <text><![CDATA[n]]></text>
  </DocumentChange>
  <DocumentChange __id="5258" _type="Insert" date="Sun Dec 03 20:23:38 EST 2023" docASTNodeCount="18" docActiveCodeLength="139" docExpressionCount="12" docLength="139" length="4" offset="109" repeat="4" starttimestamp="1701628917814" timestamp="24100902" timestamp2="24101126">
    <text><![CDATA[ends]]></text>
  </DocumentChange>
  <DocumentChange __id="5268" _type="Insert" date="Sun Dec 03 20:23:43 EST 2023" docASTNodeCount="106" docActiveCodeLength="641" docExpressionCount="56" docLength="845" length="706" offset="134" repeat="24" starttimestamp="1701628917814" timestamp="24106050" timestamp2="24106063">
    <text><![CDATA[

	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Environment copy() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Environment newChild() {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="5292" _type="Insert" date="Sun Dec 03 20:23:43 EST 2023" docASTNodeCount="136" docActiveCodeLength="776" docExpressionCount="83" docLength="980" length="135" offset="75" repeat="6" starttimestamp="1701628917814" timestamp="24106063" timestamp2="24106071">
    <text><![CDATA[
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="5298" _type="Insert" date="Sun Dec 03 20:23:43 EST 2023" docASTNodeCount="150" docActiveCodeLength="844" docExpressionCount="95" docLength="1048" length="68" offset="16" repeat="4" starttimestamp="1701628917814" timestamp="24106071" timestamp2="24106071">
    <text><![CDATA[import java.util.Optional;

import main.lisp.evaluator.Environment;
]]></text>
  </DocumentChange>
  <Command __id="5304" _type="ShellCommand" date="Sun Dec 03 20:59:47 EST 2023" starttimestamp="1701628917814" timestamp="26269395" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5305" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:59:51 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" projectName="Assignment5" starttimestamp="1701628917814" timestamp="26273798">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression implements SExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	@Override	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}	@Override	public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	@Override	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	@Override	public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}	@Override	public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}	@Override	public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5306" _type="MoveCaretCommand" caretOffset="313" date="Sun Dec 03 20:59:51 EST 2023" docOffset="313" starttimestamp="1701628917814" timestamp="26273888" />
  <Command __id="5307" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:59:53 EST 2023" docASTNodeCount="283" docActiveCodeLength="1868" docExpressionCount="197" docLength="1868" projectName="Assignment5" starttimestamp="1701628917814" timestamp="26276043">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ArithmeticEvaluatorHelper.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.NilAtomicExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.TAtomicExpressionFactory;public class ArithmeticEvaluatorHelper {		public static SExpression getDifference(SExpression expr, Environment environment, String comparator) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}		double difference = firstInt.getValue() - secondInt.getValue();		if(comparator.equals("greater")) {			if(difference > 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else if(comparator.equals("lesser")) {			if(difference < 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else if(comparator.equals("GreaterEqual")){			if(difference >= 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else {			if(difference <= 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5308" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 20:59:53 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="26276124" />
  <Command __id="5309" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 20:59:59 EST 2023" docASTNodeCount="163" docActiveCodeLength="1014" docExpressionCount="123" docLength="1014" projectName="Assignment5" starttimestamp="1701628917814" timestamp="26281747">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		expr = expr.getTail().getHead();
		return evalHelper(expr, environment);
		
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr;
		}
		if(!expr.getTail().getHead().isAtom()) {
			SExpression expression = ExpressionFactory.newInstance(expr.getHead(), evalHelper(expr.getTail().getHead(), environment));
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expression, environment);
		}else {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5310" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 20:59:59 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="26281817" />
  <Command __id="5312" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 21:00:01 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="26284128" />
  <Command __id="5313" _type="BalloonCommand" date="Sun Dec 03 21:00:12 EST 2023" message="*******************************************
Worked 32 minutes(fixed)/60 minutes(context based) from
Sun Dec 03 19:41:45 EST 2023 to Sun Dec 03 21:00:01 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 3 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java
Number of insert: 1174
Number of delete: 512
" starttimestamp="1701628917814" timestamp="26294845">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[1174]]></insert>
    <startTime><![CDATA[1701650505331]]></startTime>
    <endTime><![CDATA[1701655201942]]></endTime>
    <workTime><![CDATA[32]]></workTime>
    <delete><![CDATA[512]]></delete>
  </Command>
  <Command __id="5314" _type="ShellCommand" date="Sun Dec 03 21:00:34 EST 2023" starttimestamp="1701628917814" timestamp="26316802" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5315" _type="ShellCommand" date="Sun Dec 03 21:00:36 EST 2023" starttimestamp="1701628917814" timestamp="26318759" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5316" _type="ShellCommand" date="Sun Dec 03 21:00:45 EST 2023" starttimestamp="1701628917814" timestamp="26327745" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5317" _type="ShellCommand" date="Sun Dec 03 21:00:49 EST 2023" starttimestamp="1701628917814" timestamp="26331733" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5318" _type="ShellCommand" date="Sun Dec 03 21:00:51 EST 2023" starttimestamp="1701628917814" timestamp="26333503" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5319" _type="ShellCommand" date="Sun Dec 03 21:00:59 EST 2023" starttimestamp="1701628917814" timestamp="26341737" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5320" _type="ShellCommand" date="Sun Dec 03 21:01:01 EST 2023" starttimestamp="1701628917814" timestamp="26343481" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5321" _type="ShellCommand" date="Sun Dec 03 21:02:02 EST 2023" starttimestamp="1701628917814" timestamp="26404629" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5322" _type="ShellCommand" date="Sun Dec 03 21:02:03 EST 2023" starttimestamp="1701628917814" timestamp="26405688" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5323" _type="ShellCommand" date="Sun Dec 03 21:23:18 EST 2023" starttimestamp="1701628917814" timestamp="27680745" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5324" _type="ShellCommand" date="Sun Dec 03 21:23:18 EST 2023" starttimestamp="1701628917814" timestamp="27681101" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5325" _type="ShellCommand" date="Sun Dec 03 21:26:26 EST 2023" starttimestamp="1701628917814" timestamp="27869171" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5326" _type="ShellCommand" date="Sun Dec 03 21:26:28 EST 2023" starttimestamp="1701628917814" timestamp="27870367" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5327" _type="BalloonCommand" date="Sun Dec 03 22:00:12 EST 2023" message="*******************************************
Worked 0 minutes(fixed)/26 minutes(context based) from
Sun Dec 03 21:00:12 EST 2023 to Sun Dec 03 21:26:28 EST 2023
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1701628917814" timestamp="29894858">
    <fineGrainedWorkTime><![CDATA[26]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1701655212659]]></startTime>
    <endTime><![CDATA[1701656788181]]></endTime>
    <workTime><![CDATA[0]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="5311" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 21:00:01 EST 2023" docASTNodeCount="197" docActiveCodeLength="1725" docExpressionCount="136" docLength="1725" projectName="Assignment5" starttimestamp="1701628917814" timestamp="26284028">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BasicOperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());
	}
	
	public static void registerLogic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerAll();
	}
	
	public static void registerAll() {
		registerBasic();
		registerArithmetic();
		registerLogic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="5328" _type="ShellCommand" date="Sun Dec 03 22:20:59 EST 2023" starttimestamp="1701628917814" timestamp="31141213" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5329" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:05 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31147808">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression implements SExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	@Override	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}	@Override	public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	@Override	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	@Override	public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}	@Override	public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}	@Override	public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5330" _type="MoveCaretCommand" caretOffset="313" date="Sun Dec 03 22:21:05 EST 2023" docOffset="313" starttimestamp="1701628917814" timestamp="31147872" />
  <Command __id="5331" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:08 EST 2023" docASTNodeCount="283" docActiveCodeLength="1868" docExpressionCount="197" docLength="1868" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31150681">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ArithmeticEvaluatorHelper.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.NilAtomicExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.TAtomicExpressionFactory;public class ArithmeticEvaluatorHelper {		public static SExpression getDifference(SExpression expr, Environment environment, String comparator) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}		double difference = firstInt.getValue() - secondInt.getValue();		if(comparator.equals("greater")) {			if(difference > 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else if(comparator.equals("lesser")) {			if(difference < 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else if(comparator.equals("GreaterEqual")){			if(difference >= 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else {			if(difference <= 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5332" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 22:21:08 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="31150731" />
  <Command __id="5333" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:09 EST 2023" docASTNodeCount="126" docActiveCodeLength="827" docExpressionCount="84" docLength="827" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31151751">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        if (expr instanceof NilAtom) {            return lastEvaluated;        }        SExpression current = expr.getHead().eval(environment);        if (current.isNIL()) {            return current;        } else {            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5334" _type="MoveCaretCommand" caretOffset="15" date="Sun Dec 03 22:21:09 EST 2023" docOffset="15" starttimestamp="1701628917814" timestamp="31151802" />
  <Command __id="5336" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 22:21:13 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="31155442" />
  <Command __id="5335" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:13 EST 2023" docASTNodeCount="283" docActiveCodeLength="1868" docExpressionCount="197" docLength="1868" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31155396">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ArithmeticEvaluatorHelper.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.DecimalAtom;import main.lisp.parser.terms.IntegerAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.NilAtomicExpressionFactory;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.TAtomicExpressionFactory;public class ArithmeticEvaluatorHelper {		public static SExpression getDifference(SExpression expr, Environment environment, String comparator) {		expr = expr.getTail();				SExpression firstEvaled = expr.getHead().eval(environment);		SExpression secondEvaled = expr.getTail().getHead().eval(environment);				IntegerAtom firstInt = null;		IntegerAtom secondInt = null;		DecimalAtom firstDec = null;		DecimalAtom secondDec = null;				if (firstEvaled instanceof IntegerAtom) {			firstInt = (IntegerAtom)firstEvaled;			secondInt = (IntegerAtom)secondEvaled;		}		if (firstEvaled instanceof DecimalAtom) {			firstDec = (DecimalAtom)firstEvaled;			secondDec = (DecimalAtom)secondEvaled;		}		double difference = firstInt.getValue() - secondInt.getValue();		if(comparator.equals("greater")) {			if(difference > 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else if(comparator.equals("lesser")) {			if(difference < 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else if(comparator.equals("GreaterEqual")){			if(difference >= 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}else {			if(difference <= 0) {				return TAtomicExpressionFactory.newInstance();			}else {				return NilAtomicExpressionFactory.newInstance();			}		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5337" _type="MoveCaretCommand" caretOffset="231" date="Sun Dec 03 22:21:16 EST 2023" docOffset="231" starttimestamp="1701628917814" timestamp="31159124" />
  <Command __id="5338" _type="MoveCaretCommand" caretOffset="368" date="Sun Dec 03 22:21:17 EST 2023" docOffset="368" starttimestamp="1701628917814" timestamp="31159566" />
  <Command __id="5339" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:21 EST 2023" docASTNodeCount="126" docActiveCodeLength="827" docExpressionCount="84" docLength="827" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31163949">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/AndEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.NilAtom;public class AndEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();        return evalHelper(expr, environment, null);    }    public static SExpression evalHelper(SExpression expr, Environment environment, SExpression lastEvaluated) {        if (expr instanceof NilAtom) {            return lastEvaluated;        }        SExpression current = expr.getHead().eval(environment);        if (current.isNIL()) {            return current;        } else {            return evalHelper(expr.getTail(), environment, current);        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5340" _type="MoveCaretCommand" caretOffset="15" date="Sun Dec 03 22:21:21 EST 2023" docOffset="15" starttimestamp="1701628917814" timestamp="31164005" />
  <Command __id="5341" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:23 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31166172">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression implements SExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	@Override	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}	@Override	public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	@Override	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	@Override	public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}	@Override	public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}	@Override	public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5342" _type="MoveCaretCommand" caretOffset="313" date="Sun Dec 03 22:21:24 EST 2023" docOffset="313" starttimestamp="1701628917814" timestamp="31166226" />
  <Command __id="5343" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:25 EST 2023" docASTNodeCount="197" docActiveCodeLength="1725" docExpressionCount="136" docLength="1725" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31168029">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5344" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 22:21:25 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="31168082" />
  <Command __id="5346" _type="MoveCaretCommand" caretOffset="447" date="Sun Dec 03 22:21:28 EST 2023" docOffset="447" starttimestamp="1701628917814" timestamp="31171008" />
  <Command __id="5347" _type="MoveCaretCommand" caretOffset="267" date="Sun Dec 03 22:21:29 EST 2023" docOffset="267" starttimestamp="1701628917814" timestamp="31171888" />
  <Command __id="5348" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sun Dec 03 22:21:32 EST 2023" starttimestamp="1701628917814" timestamp="31174718" />
  <Command __id="5349" _type="EclipseCommand" commandID="" date="Sun Dec 03 22:21:32 EST 2023" starttimestamp="1701628917814" timestamp="31174818" />
  <Command __id="5350" _type="EclipseCommand" commandID="" date="Sun Dec 03 22:21:32 EST 2023" starttimestamp="1701628917814" timestamp="31174828" />
  <Command __id="5351" _type="ShellCommand" date="Sun Dec 03 22:21:33 EST 2023" starttimestamp="1701628917814" timestamp="31176088" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5345" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:21:28 EST 2023" docASTNodeCount="150" docActiveCodeLength="844" docExpressionCount="95" docLength="1048" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31170976">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class EnvironmentImpl {"), Diff(INSERT,"import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		// TODO Auto-generated method stub			}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {		// TODO Auto-generated method stub			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		// TODO Auto-generated method stub		return null;	}	"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.environment.AbstractEnvironment;
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class EnvironmentImpl extends AbstractEnvironment{

	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Environment copy() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Environment newChild() {
		// TODO Auto-generated method stub
		return null;
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5352" _type="ShellCommand" date="Sun Dec 03 22:25:18 EST 2023" starttimestamp="1701628917814" timestamp="31400239" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5353" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:25:19 EST 2023" docASTNodeCount="233" docActiveCodeLength="1448" docExpressionCount="171" docLength="1448" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31401619">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression implements SExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	@Override	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}	@Override	public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	@Override	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	@Override	public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}	@Override	public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}	@Override	public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5354" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 22:25:19 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="31401674" />
  <Command __id="5356" _type="MoveCaretCommand" caretOffset="0" date="Sun Dec 03 22:25:23 EST 2023" docOffset="0" starttimestamp="1701628917814" timestamp="31405652" />
  <Command __id="5357" _type="ShellCommand" date="Sun Dec 03 22:25:27 EST 2023" starttimestamp="1701628917814" timestamp="31409684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5358" _type="ShellCommand" date="Sun Dec 03 22:25:28 EST 2023" starttimestamp="1701628917814" timestamp="31410187" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5359" _type="ShellCommand" date="Sun Dec 03 22:25:28 EST 2023" starttimestamp="1701628917814" timestamp="31410606" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5360" _type="ShellCommand" date="Sun Dec 03 22:25:28 EST 2023" starttimestamp="1701628917814" timestamp="31410910" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5361" _type="ShellCommand" date="Sun Dec 03 22:25:37 EST 2023" starttimestamp="1701628917814" timestamp="31420012" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5362" _type="ShellCommand" date="Sun Dec 03 22:26:04 EST 2023" starttimestamp="1701628917814" timestamp="31446354" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5363" _type="ShellCommand" date="Sun Dec 03 22:26:06 EST 2023" starttimestamp="1701628917814" timestamp="31448617" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5364" _type="ShellCommand" date="Sun Dec 03 22:26:10 EST 2023" starttimestamp="1701628917814" timestamp="31453058" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5365" _type="ShellCommand" date="Sun Dec 03 22:26:12 EST 2023" starttimestamp="1701628917814" timestamp="31455004" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5366" _type="ShellCommand" date="Sun Dec 03 22:26:14 EST 2023" starttimestamp="1701628917814" timestamp="31456761" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5367" _type="ShellCommand" date="Sun Dec 03 22:26:15 EST 2023" starttimestamp="1701628917814" timestamp="31457974" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5368" _type="ShellCommand" date="Sun Dec 03 22:26:16 EST 2023" starttimestamp="1701628917814" timestamp="31458547" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5369" _type="ShellCommand" date="Sun Dec 03 22:26:18 EST 2023" starttimestamp="1701628917814" timestamp="31460900" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5370" _type="ShellCommand" date="Sun Dec 03 22:26:20 EST 2023" starttimestamp="1701628917814" timestamp="31462626" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5371" _type="ShellCommand" date="Sun Dec 03 22:26:20 EST 2023" starttimestamp="1701628917814" timestamp="31462970" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5372" _type="ShellCommand" date="Sun Dec 03 22:27:30 EST 2023" starttimestamp="1701628917814" timestamp="31532738" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5373" _type="ShellCommand" date="Sun Dec 03 22:27:32 EST 2023" starttimestamp="1701628917814" timestamp="31534262" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5374" _type="ShellCommand" date="Sun Dec 03 22:27:44 EST 2023" starttimestamp="1701628917814" timestamp="31546367" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5375" _type="ShellCommand" date="Sun Dec 03 22:27:45 EST 2023" starttimestamp="1701628917814" timestamp="31547287" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5376" _type="ShellCommand" date="Sun Dec 03 22:27:46 EST 2023" starttimestamp="1701628917814" timestamp="31548186" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5377" _type="ShellCommand" date="Sun Dec 03 22:27:48 EST 2023" starttimestamp="1701628917814" timestamp="31550797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5378" _type="ShellCommand" date="Sun Dec 03 22:28:16 EST 2023" starttimestamp="1701628917814" timestamp="31578653" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5379" _type="ShellCommand" date="Sun Dec 03 22:28:18 EST 2023" starttimestamp="1701628917814" timestamp="31580525" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5380" _type="ShellCommand" date="Sun Dec 03 22:28:20 EST 2023" starttimestamp="1701628917814" timestamp="31582343" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5381" _type="ShellCommand" date="Sun Dec 03 22:28:20 EST 2023" starttimestamp="1701628917814" timestamp="31583032" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5382" _type="ShellCommand" date="Sun Dec 03 22:28:23 EST 2023" starttimestamp="1701628917814" timestamp="31586020" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5383" _type="ShellCommand" date="Sun Dec 03 22:28:24 EST 2023" starttimestamp="1701628917814" timestamp="31586975" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5384" _type="ShellCommand" date="Sun Dec 03 22:28:25 EST 2023" starttimestamp="1701628917814" timestamp="31588103" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5385" _type="MoveCaretCommand" caretOffset="1173" date="Sun Dec 03 22:28:27 EST 2023" docOffset="1287" starttimestamp="1701628917814" timestamp="31589670" />
  <Command __id="5386" _type="MoveCaretCommand" caretOffset="1173" date="Sun Dec 03 22:28:27 EST 2023" docOffset="1287" starttimestamp="1701628917814" timestamp="31589671" />
  <Command __id="5387" _type="SelectTextCommand" caretOffset="1190" date="Sun Dec 03 22:28:27 EST 2023" end="1190" start="1158" starttimestamp="1701628917814" timestamp="31589794" />
  <Command __id="5388" _type="SelectTextCommand" caretOffset="1190" date="Sun Dec 03 22:28:27 EST 2023" end="1190" start="1158" starttimestamp="1701628917814" timestamp="31589795" />
  <Command __id="5389" _type="CopyCommand" date="Sun Dec 03 22:28:27 EST 2023" starttimestamp="1701628917814" timestamp="31589912" />
  <Command __id="5390" _type="ShellCommand" date="Sun Dec 03 22:28:28 EST 2023" starttimestamp="1701628917814" timestamp="31590779" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5391" _type="ShellCommand" date="Sun Dec 03 22:28:49 EST 2023" starttimestamp="1701628917814" timestamp="31611450" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5392" _type="ShellCommand" date="Sun Dec 03 22:28:50 EST 2023" starttimestamp="1701628917814" timestamp="31612924" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5393" _type="ShellCommand" date="Sun Dec 03 22:29:03 EST 2023" starttimestamp="1701628917814" timestamp="31625514" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5394" _type="ShellCommand" date="Sun Dec 03 22:29:04 EST 2023" starttimestamp="1701628917814" timestamp="31626413" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5395" _type="BalloonCommand" date="Sun Dec 03 23:00:12 EST 2023" message="*******************************************
Worked 4 minutes(fixed)/28 minutes(context based) from
Sun Dec 03 22:00:12 EST 2023 to Sun Dec 03 22:29:04 EST 2023
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1701628917814" timestamp="33494858">
    <fineGrainedWorkTime><![CDATA[28]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1701658812672]]></startTime>
    <endTime><![CDATA[1701660544227]]></endTime>
    <workTime><![CDATA[4]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="5398" _type="MoveCaretCommand" caretOffset="1384" date="Sun Dec 03 23:10:30 EST 2023" docOffset="1498" starttimestamp="1701628917814" timestamp="34113125" />
  <Command __id="5399" _type="ShellCommand" date="Sun Dec 03 23:10:36 EST 2023" starttimestamp="1701628917814" timestamp="34118953" type="ECLIPSE_CLOSED" />
  <Command __id="5355" _type="DiffBasedFileOpenCommand" date="Sun Dec 03 22:25:23 EST 2023" docASTNodeCount="197" docActiveCodeLength="1725" docExpressionCount="136" docLength="1725" projectName="Assignment5" starttimestamp="1701628917814" timestamp="31405607">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}			@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
</Events>
