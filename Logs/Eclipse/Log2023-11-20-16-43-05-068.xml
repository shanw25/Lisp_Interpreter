<Events startTimestamp="1700516585068" logVersion="1.0.0.202308221630">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="985" date="Mon Nov 20 16:43:06 EST 2023" docOffset="1111" starttimestamp="1700516585068" timestamp="1866" />
  <Command __id="2" _type="MoveCaretCommand" caretOffset="1075" date="Mon Nov 20 16:43:08 EST 2023" docOffset="1201" starttimestamp="1700516585068" timestamp="3424" />
  <Command __id="4" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:43:09 EST 2023" starttimestamp="1700516585068" timestamp="4298" />
  <Command __id="6" _type="InsertStringCommand" date="Mon Nov 20 16:43:09 EST 2023" starttimestamp="1700516585068" timestamp="4426" timestamp2="4426">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="7" _type="MoveCaretCommand" caretOffset="1109" date="Mon Nov 20 16:43:10 EST 2023" docOffset="1235" starttimestamp="1700516585068" timestamp="5645" />
  <Command __id="9" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:43:11 EST 2023" starttimestamp="1700516585068" timestamp="6024" />
  <Command __id="11" _type="InsertStringCommand" date="Mon Nov 20 16:43:11 EST 2023" starttimestamp="1700516585068" timestamp="6254" timestamp2="6254">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="12" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:43:11 EST 2023" docOffset="1237" starttimestamp="1700516585068" timestamp="6764" />
  <Command __id="13" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:43:12 EST 2023" starttimestamp="1700516585068" timestamp="7284" />
  <Command __id="14" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:43:12 EST 2023" starttimestamp="1700516585068" timestamp="7315" />
  <Command __id="15" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:43:12 EST 2023" starttimestamp="1700516585068" timestamp="7352" />
  <Command __id="16" _type="MoveCaretCommand" caretOffset="874" date="Mon Nov 20 16:43:15 EST 2023" docOffset="1000" starttimestamp="1700516585068" timestamp="9986" />
  <Command __id="17" _type="MoveCaretCommand" caretOffset="1190" date="Mon Nov 20 16:43:16 EST 2023" docOffset="1316" starttimestamp="1700516585068" timestamp="11248" />
  <Command __id="18" _type="MoveCaretCommand" caretOffset="1194" date="Mon Nov 20 16:43:17 EST 2023" docOffset="1320" starttimestamp="1700516585068" timestamp="12075" />
  <Command __id="19" _type="MoveCaretCommand" caretOffset="1180" date="Mon Nov 20 16:43:43 EST 2023" docOffset="1306" starttimestamp="1700516585068" timestamp="38427" />
  <Command __id="20" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:43:44 EST 2023" docOffset="1237" starttimestamp="1700516585068" timestamp="39862" />
  <Command __id="21" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:43:46 EST 2023" docOffset="1305" starttimestamp="1700516585068" timestamp="41801" />
  <Command __id="22" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:43:47 EST 2023" docOffset="1237" starttimestamp="1700516585068" timestamp="42393" />
  <Command __id="23" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 16:43:55 EST 2023" docOffset="1078" starttimestamp="1700516585068" timestamp="50427" />
  <Command __id="24" _type="MoveCaretCommand" caretOffset="902" date="Mon Nov 20 16:43:55 EST 2023" docOffset="1028" starttimestamp="1700516585068" timestamp="50921" />
  <Command __id="25" _type="ShellCommand" date="Mon Nov 20 16:44:11 EST 2023" starttimestamp="1700516585068" timestamp="66850" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="26" _type="ShellCommand" date="Mon Nov 20 16:44:12 EST 2023" starttimestamp="1700516585068" timestamp="67615" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="27" _type="MoveCaretCommand" caretOffset="939" date="Mon Nov 20 16:44:38 EST 2023" docOffset="1065" starttimestamp="1700516585068" timestamp="93099" />
  <Command __id="28" _type="ShellCommand" date="Mon Nov 20 16:45:39 EST 2023" starttimestamp="1700516585068" timestamp="154178" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="29" _type="ShellCommand" date="Mon Nov 20 16:45:41 EST 2023" starttimestamp="1700516585068" timestamp="156728" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="30" _type="MoveCaretCommand" caretOffset="980" date="Mon Nov 20 16:45:41 EST 2023" docOffset="1106" starttimestamp="1700516585068" timestamp="156790" />
  <Command __id="31" _type="MoveCaretCommand" caretOffset="851" date="Mon Nov 20 16:46:38 EST 2023" docOffset="977" starttimestamp="1700516585068" timestamp="213436" />
  <Command __id="32" _type="MoveCaretCommand" caretOffset="1014" date="Mon Nov 20 16:46:39 EST 2023" docOffset="1140" starttimestamp="1700516585068" timestamp="214581" />
  <Command __id="33" _type="MoveCaretCommand" caretOffset="1046" date="Mon Nov 20 16:46:40 EST 2023" docOffset="1172" starttimestamp="1700516585068" timestamp="215571" />
  <Command __id="34" _type="MoveCaretCommand" caretOffset="1055" date="Mon Nov 20 16:46:41 EST 2023" docOffset="1181" starttimestamp="1700516585068" timestamp="216351" />
  <Command __id="35" _type="MoveCaretCommand" caretOffset="1043" date="Mon Nov 20 16:46:41 EST 2023" docOffset="1169" starttimestamp="1700516585068" timestamp="216880" />
  <Command __id="36" _type="MoveCaretCommand" caretOffset="1051" date="Mon Nov 20 16:46:42 EST 2023" docOffset="1177" starttimestamp="1700516585068" timestamp="217453" />
  <Command __id="37" _type="MoveCaretCommand" caretOffset="1055" date="Mon Nov 20 16:46:43 EST 2023" docOffset="1181" starttimestamp="1700516585068" timestamp="218078" />
  <Command __id="38" _type="MoveCaretCommand" caretOffset="1076" date="Mon Nov 20 16:46:43 EST 2023" docOffset="1202" starttimestamp="1700516585068" timestamp="218625" />
  <Command __id="39" _type="MoveCaretCommand" caretOffset="1075" date="Mon Nov 20 16:46:44 EST 2023" docOffset="1201" starttimestamp="1700516585068" timestamp="219153" />
  <Command __id="40" _type="ShellCommand" date="Mon Nov 20 16:46:46 EST 2023" starttimestamp="1700516585068" timestamp="221419" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="41" _type="ShellCommand" date="Mon Nov 20 16:46:47 EST 2023" starttimestamp="1700516585068" timestamp="222010" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="42" _type="ShellCommand" date="Mon Nov 20 16:46:47 EST 2023" starttimestamp="1700516585068" timestamp="222618" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="43" _type="ShellCommand" date="Mon Nov 20 16:47:03 EST 2023" starttimestamp="1700516585068" timestamp="238710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="44" _type="ShellCommand" date="Mon Nov 20 16:47:08 EST 2023" starttimestamp="1700516585068" timestamp="243411" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="45" _type="ShellCommand" date="Mon Nov 20 16:47:14 EST 2023" starttimestamp="1700516585068" timestamp="249289" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="46" _type="SelectTextCommand" caretOffset="1073" date="Mon Nov 20 16:47:58 EST 2023" end="1079" start="1073" starttimestamp="1700516585068" timestamp="293888" />
  <Command __id="48" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:47:59 EST 2023" starttimestamp="1700516585068" timestamp="294231" />
  <Command __id="49" _type="MoveCaretCommand" caretOffset="1104" date="Mon Nov 20 16:48:00 EST 2023" docOffset="1230" starttimestamp="1700516585068" timestamp="295221" />
  <Command __id="51" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:48:00 EST 2023" starttimestamp="1700516585068" timestamp="295321" />
  <Command __id="53" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:48:00 EST 2023" starttimestamp="1700516585068" timestamp="295447" />
  <Command __id="55" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:48:00 EST 2023" starttimestamp="1700516585068" timestamp="295560" />
  <Command __id="57" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:48:00 EST 2023" starttimestamp="1700516585068" timestamp="295689" />
  <Command __id="59" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:48:00 EST 2023" starttimestamp="1700516585068" timestamp="295822" />
  <Command __id="61" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:48:01 EST 2023" starttimestamp="1700516585068" timestamp="296214" />
  <Command __id="62" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:48:02 EST 2023" starttimestamp="1700516585068" timestamp="296940" />
  <Command __id="63" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:48:02 EST 2023" starttimestamp="1700516585068" timestamp="297044" />
  <Command __id="64" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:48:02 EST 2023" starttimestamp="1700516585068" timestamp="297053" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:43:06 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1741">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return "[" + this.getHead().toString() + "]";
		}else {
			return this.getHead().toString() + this.getTail().toString();
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3" _type="Delete" date="Mon Nov 20 16:43:09 EST 2023" docASTNodeCount="214" docActiveCodeLength="1326" docExpressionCount="154" docLength="1326" endLine="45" length="1" offset="1200" startLine="45" starttimestamp="1700516585068" timestamp="4277">
    <text><![CDATA[[]]></text>
  </DocumentChange>
  <DocumentChange __id="5" _type="Insert" date="Mon Nov 20 16:43:09 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="1" offset="1200" starttimestamp="1700516585068" timestamp="4424">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="8" _type="Delete" date="Mon Nov 20 16:43:11 EST 2023" docASTNodeCount="214" docActiveCodeLength="1326" docExpressionCount="154" docLength="1326" endLine="45" length="1" offset="1234" startLine="45" starttimestamp="1700516585068" timestamp="6022">
    <text><![CDATA[]]]></text>
  </DocumentChange>
  <DocumentChange __id="10" _type="Insert" date="Mon Nov 20 16:43:11 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="1" offset="1234" starttimestamp="1700516585068" timestamp="6252">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="47" _type="Delete" date="Mon Nov 20 16:47:59 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" endLine="45" length="6" offset="1199" startLine="45" starttimestamp="1700516585068" timestamp="294223">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="50" _type="Delete" date="Mon Nov 20 16:48:00 EST 2023" docASTNodeCount="211" docActiveCodeLength="1315" docExpressionCount="151" docLength="1315" endLine="45" length="6" offset="1224" repeat="6" startLine="45" starttimestamp="1700516585068" timestamp="295318" timestamp2="296209">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="65" _type="MoveCaretCommand" caretOffset="813" date="Mon Nov 20 16:48:03 EST 2023" docOffset="939" starttimestamp="1700516585068" timestamp="298205" />
  <Command __id="66" _type="MoveCaretCommand" caretOffset="812" date="Mon Nov 20 16:48:03 EST 2023" docOffset="938" starttimestamp="1700516585068" timestamp="298896" />
  <Command __id="68" _type="InsertStringCommand" date="Mon Nov 20 16:48:05 EST 2023" starttimestamp="1700516585068" timestamp="300245" timestamp2="300245">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="70" _type="InsertStringCommand" date="Mon Nov 20 16:48:05 EST 2023" starttimestamp="1700516585068" timestamp="300536" timestamp2="300536">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="71" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:48:05 EST 2023" starttimestamp="1700516585068" timestamp="300891" />
  <Command __id="73" _type="InsertStringCommand" date="Mon Nov 20 16:48:06 EST 2023" starttimestamp="1700516585068" timestamp="301819" timestamp2="301819">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="74" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:48:07 EST 2023" starttimestamp="1700516585068" timestamp="302076" />
  <Command __id="76" _type="InsertStringCommand" date="Mon Nov 20 16:48:07 EST 2023" starttimestamp="1700516585068" timestamp="302638" timestamp2="302638">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="78" _type="InsertStringCommand" date="Mon Nov 20 16:48:08 EST 2023" starttimestamp="1700516585068" timestamp="303146" timestamp2="303146">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="80" _type="InsertStringCommand" date="Mon Nov 20 16:48:08 EST 2023" starttimestamp="1700516585068" timestamp="303308" timestamp2="303308">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="81" _type="MoveCaretCommand" caretOffset="874" date="Mon Nov 20 16:48:09 EST 2023" docOffset="1000" starttimestamp="1700516585068" timestamp="304358" />
  <Command __id="83" _type="InsertStringCommand" date="Mon Nov 20 16:48:09 EST 2023" starttimestamp="1700516585068" timestamp="304650" timestamp2="304650">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="85" _type="InsertStringCommand" date="Mon Nov 20 16:48:09 EST 2023" starttimestamp="1700516585068" timestamp="304783" timestamp2="304783">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="87" _type="InsertStringCommand" date="Mon Nov 20 16:48:09 EST 2023" starttimestamp="1700516585068" timestamp="304878" timestamp2="304878">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="89" _type="InsertStringCommand" date="Mon Nov 20 16:48:10 EST 2023" starttimestamp="1700516585068" timestamp="305063" timestamp2="305063">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="91" _type="InsertStringCommand" date="Mon Nov 20 16:48:10 EST 2023" starttimestamp="1700516585068" timestamp="305844" timestamp2="305844">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="92" _type="MoveCaretCommand" caretOffset="886" date="Mon Nov 20 16:48:11 EST 2023" docOffset="1012" starttimestamp="1700516585068" timestamp="306243" />
  <Command __id="93" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:48:11 EST 2023" starttimestamp="1700516585068" timestamp="306394" />
  <Command __id="94" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:48:11 EST 2023" starttimestamp="1700516585068" timestamp="306497" />
  <Command __id="95" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:48:11 EST 2023" starttimestamp="1700516585068" timestamp="306505" />
  <Command __id="96" _type="ShellCommand" date="Mon Nov 20 16:48:30 EST 2023" starttimestamp="1700516585068" timestamp="325827" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="97" _type="ShellCommand" date="Mon Nov 20 16:48:42 EST 2023" starttimestamp="1700516585068" timestamp="337681" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="98" _type="ShellCommand" date="Mon Nov 20 16:48:43 EST 2023" starttimestamp="1700516585068" timestamp="338477" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="99" _type="ShellCommand" date="Mon Nov 20 16:48:45 EST 2023" starttimestamp="1700516585068" timestamp="340180" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="100" _type="ShellCommand" date="Mon Nov 20 16:48:56 EST 2023" starttimestamp="1700516585068" timestamp="351787" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="101" _type="ShellCommand" date="Mon Nov 20 16:48:57 EST 2023" starttimestamp="1700516585068" timestamp="352360" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="102" _type="ShellCommand" date="Mon Nov 20 16:49:21 EST 2023" starttimestamp="1700516585068" timestamp="376295" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="67" _type="Insert" date="Mon Nov 20 16:48:05 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" length="6" offset="938" repeat="6" starttimestamp="1700516585068" timestamp="300241" timestamp2="303304">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="82" _type="Insert" date="Mon Nov 20 16:48:09 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="6" offset="1000" repeat="5" starttimestamp="1700516585068" timestamp="304646" timestamp2="305842">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="103" _type="ShellCommand" date="Mon Nov 20 16:49:44 EST 2023" starttimestamp="1700516585068" timestamp="399406" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="104" _type="Insert" date="Mon Nov 20 16:49:46 EST 2023" docASTNodeCount="214" docActiveCodeLength="1329" docExpressionCount="154" docLength="1329" length="2" offset="1012" repeat="2" starttimestamp="1700516585068" timestamp="401762" timestamp2="402574">
    <text><![CDATA[ss]]></text>
  </DocumentChange>
  <Command __id="105" _type="InsertStringCommand" date="Mon Nov 20 16:49:46 EST 2023" starttimestamp="1700516585068" timestamp="401763" timestamp2="401763">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="107" _type="InsertStringCommand" date="Mon Nov 20 16:49:47 EST 2023" starttimestamp="1700516585068" timestamp="402577" timestamp2="402577">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="108" _type="Delete" date="Mon Nov 20 16:49:48 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" endLine="38" length="2" offset="1012" startLine="38" starttimestamp="1700516585068" timestamp="403816">
    <text><![CDATA[ss]]></text>
  </DocumentChange>
  <Command __id="109" _type="UndoCommand" date="Mon Nov 20 16:49:48 EST 2023" starttimestamp="1700516585068" timestamp="403821" />
  <DocumentChange __id="110" _type="Delete" date="Mon Nov 20 16:49:49 EST 2023" docASTNodeCount="214" docActiveCodeLength="1326" docExpressionCount="154" docLength="1326" endLine="36" length="1" offset="1004" startLine="36" starttimestamp="1700516585068" timestamp="404125">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="111" _type="UndoCommand" date="Mon Nov 20 16:49:49 EST 2023" starttimestamp="1700516585068" timestamp="404135" />
  <DocumentChange __id="112" _type="Insert" date="Mon Nov 20 16:49:51 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="1" offset="1004" starttimestamp="1700516585068" timestamp="406286">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="113" _type="InsertStringCommand" date="Mon Nov 20 16:49:51 EST 2023" starttimestamp="1700516585068" timestamp="406292" timestamp2="406292">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="114" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:49:51 EST 2023" starttimestamp="1700516585068" timestamp="406657" />
  <Command __id="115" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:49:51 EST 2023" starttimestamp="1700516585068" timestamp="406759" />
  <Command __id="116" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:49:51 EST 2023" starttimestamp="1700516585068" timestamp="406767" />
  <Command __id="118" _type="MoveCaretCommand" caretOffset="746" date="Mon Nov 20 16:49:52 EST 2023" docOffset="863" starttimestamp="1700516585068" timestamp="407747" />
  <Command __id="119" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:49:54 EST 2023" starttimestamp="1700516585068" timestamp="409836" />
  <Command __id="120" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:49:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="409946" type="Run" />
  <Command __id="121" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:49:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="409946" type="Run" />
  <Command __id="122" _type="ShellCommand" date="Mon Nov 20 16:49:55 EST 2023" starttimestamp="1700516585068" timestamp="410233" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="123" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412424" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="124" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412428" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="125" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412431" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="126" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412441" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="127" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412444" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="128" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412452" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

(5)
(5)
Test execution time (ms):1
Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶Test execution time (ms):1¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="129" _type="ExceptionCommand" date="Mon Nov 20 16:49:57 EST 2023" starttimestamp="1700516585068" timestamp="412456" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):4
Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="130" _type="ConsoleOutput" date="Mon Nov 20 16:49:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="412493" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶Test execution time (ms):1¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7)))"), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="131" _type="ExceptionCommand" date="Mon Nov 20 16:49:57 EST 2023" starttimestamp="1700516585068" timestamp="412501" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="117" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:49:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="407682">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="132" _type="ShellCommand" date="Mon Nov 20 16:50:23 EST 2023" starttimestamp="1700516585068" timestamp="438815" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="133" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 16:50:23 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="438895" />
  <Command __id="135" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 16:50:25 EST 2023" docOffset="1005" starttimestamp="1700516585068" timestamp="440071" />
  <Command __id="136" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 16:50:30 EST 2023" docOffset="1231" starttimestamp="1700516585068" timestamp="445862" />
  <Command __id="137" _type="MoveCaretCommand" caretOffset="816" date="Mon Nov 20 16:50:33 EST 2023" docOffset="942" starttimestamp="1700516585068" timestamp="448834" />
  <Command __id="139" _type="InsertStringCommand" date="Mon Nov 20 16:50:34 EST 2023" starttimestamp="1700516585068" timestamp="449212" timestamp2="449212">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="141" _type="InsertStringCommand" date="Mon Nov 20 16:50:34 EST 2023" starttimestamp="1700516585068" timestamp="449335" timestamp2="449335">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="143" _type="InsertStringCommand" date="Mon Nov 20 16:50:34 EST 2023" starttimestamp="1700516585068" timestamp="449476" timestamp2="449476">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:34 EST 2023" starttimestamp="1700516585068" timestamp="449726" />
  <Command __id="147" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:34 EST 2023" starttimestamp="1700516585068" timestamp="449867" />
  <Command __id="149" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:35 EST 2023" starttimestamp="1700516585068" timestamp="449988" />
  <Command __id="151" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:35 EST 2023" starttimestamp="1700516585068" timestamp="450107" />
  <Command __id="153" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:35 EST 2023" starttimestamp="1700516585068" timestamp="450394" />
  <Command __id="155" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:35 EST 2023" starttimestamp="1700516585068" timestamp="450645" />
  <Command __id="157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:35 EST 2023" starttimestamp="1700516585068" timestamp="450777" />
  <Command __id="158" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:50:36 EST 2023" starttimestamp="1700516585068" timestamp="451496" />
  <Command __id="159" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:50:36 EST 2023" starttimestamp="1700516585068" timestamp="451610" />
  <Command __id="161" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:36 EST 2023" starttimestamp="1700516585068" timestamp="451913" />
  <Command __id="163" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:37 EST 2023" starttimestamp="1700516585068" timestamp="452154" />
  <Command __id="164" _type="MoveCaretCommand" caretOffset="874" date="Mon Nov 20 16:50:38 EST 2023" docOffset="1000" starttimestamp="1700516585068" timestamp="453482" />
  <Command __id="165" _type="LocalChecksRawCommand" date="Mon Nov 20 16:50:38 EST 2023" starttimestamp="1700516585068" timestamp="453524">
    <CSVRow><![CDATA[73,Mon Nov 20 16:49:57 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,38,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="166" _type="LocalChecksRawCommand" date="Mon Nov 20 16:50:38 EST 2023" starttimestamp="1700516585068" timestamp="453524">
    <CSVRow><![CDATA[73,Mon Nov 20 16:49:57 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,38,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="168" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:38 EST 2023" starttimestamp="1700516585068" timestamp="453554" />
  <Command __id="170" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:38 EST 2023" starttimestamp="1700516585068" timestamp="453851" />
  <Command __id="172" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:39 EST 2023" starttimestamp="1700516585068" timestamp="454120" />
  <Command __id="174" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:39 EST 2023" starttimestamp="1700516585068" timestamp="454262" />
  <Command __id="176" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:39 EST 2023" starttimestamp="1700516585068" timestamp="454398" />
  <Command __id="178" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:39 EST 2023" starttimestamp="1700516585068" timestamp="454654" />
  <Command __id="134" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:50:25 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" projectName="Assignment5" starttimestamp="1700516585068" timestamp="440029">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(INSERT," "(" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(INSERT," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return"), Diff(DELETE," "[" +"), Diff(EQUAL," this.getHead().toString()"), Diff(DELETE," + "]""), Diff(EQUAL,";		}else {			return this.getHead().toString() + this.getTail().toString();					}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + this.getTail().toString();
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="138" _type="Insert" date="Mon Nov 20 16:50:34 EST 2023" docASTNodeCount="214" docActiveCodeLength="1330" docExpressionCount="154" docLength="1330" length="3" offset="942" repeat="3" starttimestamp="1700516585068" timestamp="449208" timestamp2="449475">
    <text><![CDATA[\\\]]></text>
  </DocumentChange>
  <DocumentChange __id="144" _type="Delete" date="Mon Nov 20 16:50:34 EST 2023" docASTNodeCount="214" docActiveCodeLength="1323" docExpressionCount="154" docLength="1323" endLine="36" length="7" offset="938" repeat="7" startLine="36" starttimestamp="1700516585068" timestamp="449723" timestamp2="450774">
    <text><![CDATA["(" \\\]]></text>
  </DocumentChange>
  <DocumentChange __id="160" _type="Delete" date="Mon Nov 20 16:50:36 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" endLine="36" length="2" offset="938" repeat="2" startLine="36" starttimestamp="1700516585068" timestamp="451909" timestamp2="452149">
    <text><![CDATA[+ ]]></text>
  </DocumentChange>
  <DocumentChange __id="167" _type="Delete" date="Mon Nov 20 16:50:38 EST 2023" docASTNodeCount="211" docActiveCodeLength="1315" docExpressionCount="151" docLength="1315" endLine="36" length="6" offset="994" repeat="6" startLine="36" starttimestamp="1700516585068" timestamp="453553" timestamp2="454650">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="179" _type="MoveCaretCommand" caretOffset="1120" date="Mon Nov 20 16:50:40 EST 2023" docOffset="1246" starttimestamp="1700516585068" timestamp="455909" />
  <DocumentChange __id="180" _type="Insert" date="Mon Nov 20 16:50:42 EST 2023" docASTNodeCount="211" docActiveCodeLength="1319" docExpressionCount="151" docLength="1319" length="4" offset="1246" repeat="4" starttimestamp="1700516585068" timestamp="457638" timestamp2="459230">
    <text><![CDATA["( "]]></text>
  </DocumentChange>
  <Command __id="181" _type="InsertStringCommand" date="Mon Nov 20 16:50:42 EST 2023" starttimestamp="1700516585068" timestamp="457642" timestamp2="457642">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="183" _type="InsertStringCommand" date="Mon Nov 20 16:50:42 EST 2023" starttimestamp="1700516585068" timestamp="457767" timestamp2="457767">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="184" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:50:43 EST 2023" starttimestamp="1700516585068" timestamp="458259" />
  <Command __id="186" _type="InsertStringCommand" date="Mon Nov 20 16:50:43 EST 2023" starttimestamp="1700516585068" timestamp="458893" timestamp2="458893">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="188" _type="InsertStringCommand" date="Mon Nov 20 16:50:44 EST 2023" starttimestamp="1700516585068" timestamp="459233" timestamp2="459233">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="189" _type="Delete" date="Mon Nov 20 16:50:44 EST 2023" docASTNodeCount="211" docActiveCodeLength="1318" docExpressionCount="151" docLength="1318" endLine="47" length="1" offset="1248" startLine="47" starttimestamp="1700516585068" timestamp="459904">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="190" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:44 EST 2023" starttimestamp="1700516585068" timestamp="459905" />
  <Command __id="191" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:50:45 EST 2023" starttimestamp="1700516585068" timestamp="460269" />
  <Command __id="193" _type="InsertStringCommand" date="Mon Nov 20 16:50:45 EST 2023" starttimestamp="1700516585068" timestamp="460738" timestamp2="460738">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="195" _type="InsertStringCommand" date="Mon Nov 20 16:50:45 EST 2023" starttimestamp="1700516585068" timestamp="460875" timestamp2="460875">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="197" _type="InsertStringCommand" date="Mon Nov 20 16:50:46 EST 2023" starttimestamp="1700516585068" timestamp="460969" timestamp2="460969">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="192" _type="Insert" date="Mon Nov 20 16:50:45 EST 2023" docASTNodeCount="212" docActiveCodeLength="1321" docExpressionCount="152" docLength="1321" length="3" offset="1249" repeat="3" starttimestamp="1700516585068" timestamp="460734" timestamp2="460965">
    <text><![CDATA[ + ]]></text>
  </DocumentChange>
  <Command __id="198" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:50:47 EST 2023" docOffset="1305" starttimestamp="1700516585068" timestamp="462800" />
  <DocumentChange __id="199" _type="Insert" date="Mon Nov 20 16:50:49 EST 2023" docASTNodeCount="212" docActiveCodeLength="1324" docExpressionCount="152" docLength="1324" length="3" offset="1305" repeat="2" starttimestamp="1700516585068" timestamp="464025" timestamp2="464176">
    <text><![CDATA[ ""]]></text>
  </DocumentChange>
  <Command __id="200" _type="InsertStringCommand" date="Mon Nov 20 16:50:49 EST 2023" starttimestamp="1700516585068" timestamp="464029" timestamp2="464029">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="202" _type="InsertStringCommand" date="Mon Nov 20 16:50:49 EST 2023" starttimestamp="1700516585068" timestamp="464180" timestamp2="464180">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="203" _type="Delete" date="Mon Nov 20 16:50:49 EST 2023" docASTNodeCount="212" docActiveCodeLength="1322" docExpressionCount="152" docLength="1322" endLine="47" length="2" offset="1306" repeat="2" startLine="47" starttimestamp="1700516585068" timestamp="464699" timestamp2="464703">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <Command __id="205" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:49 EST 2023" starttimestamp="1700516585068" timestamp="464704" />
  <DocumentChange __id="206" _type="Insert" date="Mon Nov 20 16:50:50 EST 2023" docASTNodeCount="213" docActiveCodeLength="1327" docExpressionCount="153" docLength="1327" length="5" offset="1306" repeat="4" starttimestamp="1700516585068" timestamp="465599" timestamp2="466158">
    <text><![CDATA[+ "O"]]></text>
  </DocumentChange>
  <Command __id="207" _type="InsertStringCommand" date="Mon Nov 20 16:50:50 EST 2023" starttimestamp="1700516585068" timestamp="465601" timestamp2="465601">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="209" _type="InsertStringCommand" date="Mon Nov 20 16:50:50 EST 2023" starttimestamp="1700516585068" timestamp="465803" timestamp2="465803">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="211" _type="InsertStringCommand" date="Mon Nov 20 16:50:51 EST 2023" starttimestamp="1700516585068" timestamp="466146" timestamp2="466146">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="213" _type="InsertStringCommand" date="Mon Nov 20 16:50:51 EST 2023" starttimestamp="1700516585068" timestamp="466158" timestamp2="466158">
    <data><![CDATA[O]]></data>
  </Command>
  <DocumentChange __id="214" _type="Delete" date="Mon Nov 20 16:50:51 EST 2023" docASTNodeCount="212" docActiveCodeLength="1324" docExpressionCount="152" docLength="1324" endLine="47" length="3" offset="1308" repeat="3" startLine="47" starttimestamp="1700516585068" timestamp="466715" timestamp2="466872">
    <text><![CDATA["O"]]></text>
  </DocumentChange>
  <Command __id="215" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:51 EST 2023" starttimestamp="1700516585068" timestamp="466716" />
  <Command __id="218" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:50:51 EST 2023" starttimestamp="1700516585068" timestamp="466873" />
  <Command __id="220" _type="InsertStringCommand" date="Mon Nov 20 16:50:52 EST 2023" starttimestamp="1700516585068" timestamp="467569" timestamp2="467569">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="222" _type="InsertStringCommand" date="Mon Nov 20 16:50:53 EST 2023" starttimestamp="1700516585068" timestamp="468140" timestamp2="468140">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="223" _type="MoveCaretCommand" caretOffset="1062" date="Mon Nov 20 16:50:53 EST 2023" docOffset="1188" starttimestamp="1700516585068" timestamp="468715" />
  <Command __id="224" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:50:53 EST 2023" starttimestamp="1700516585068" timestamp="468927" />
  <Command __id="225" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:50:54 EST 2023" starttimestamp="1700516585068" timestamp="469029" />
  <Command __id="226" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:50:54 EST 2023" starttimestamp="1700516585068" timestamp="469036" />
  <Command __id="227" _type="ShellCommand" date="Mon Nov 20 16:50:55 EST 2023" starttimestamp="1700516585068" timestamp="470786" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="228" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:50:56 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="470979" type="Run" />
  <Command __id="229" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:50:56 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="470979" type="Run" />
  <Command __id="230" _type="ShellCommand" date="Mon Nov 20 16:50:56 EST 2023" starttimestamp="1700516585068" timestamp="470987" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="232" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 16:50:56 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="471924" />
  <Command __id="233" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:50:59 EST 2023" starttimestamp="1700516585068" timestamp="474807" />
  <Command __id="234" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:51:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="474932" type="Run" />
  <Command __id="235" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:51:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="474932" type="Run" />
  <Command __id="236" _type="ShellCommand" date="Mon Nov 20 16:51:00 EST 2023" starttimestamp="1700516585068" timestamp="475222" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="237" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477576" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="238" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477578" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="239" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477591" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="240" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477597" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

5
5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶5¶5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="241" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477598" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"24¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶5¶5"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="242" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477599" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="243" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477602" type="ConsoleOutput">
    <outputString><![CDATA[(5(("A" . "6")7))
(5(("A" . "6")7))
(5(("A" . "6")7))

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 5"), Diff(INSERT,"(5(("A" . "6")7))¶(5(("A" . "6")7))¶(5(("A" . "6")7))¶¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="244" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477603" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5(("A" . "6")7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5(("A" . "6")7))¶"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:"), Diff(EQUAL,"(5"), Diff(INSERT," "), Diff(EQUAL,"(("A" . "6")"), Diff(DELETE,"7))¶(5(("A" . "6")7))¶¶Test execution time (ms):2"), Diff(INSERT,") (7))actual string (5(("A" . "6")7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="245" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477605" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5(("A" . "6")7))"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="246" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477607" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="247" _type="ConsoleOutput" date="Mon Nov 20 16:51:02 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="477666" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"14"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"6"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"9"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:6"), Diff(DELETE,"2"), Diff(INSERT,"638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:50"), Diff(INSERT,"11"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"325"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"7"), Diff(INSERT,"448"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"5"), Diff(INSERT,"230"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"72"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"71"), Diff(EQUAL,"5"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"348"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"74"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="248" _type="ExceptionCommand" date="Mon Nov 20 16:51:02 EST 2023" starttimestamp="1700516585068" timestamp="477673" type="Exception">
    <exceptionString><![CDATA[(5(("A" . "6")7))
(5(("A" . "6")7))
(5(("A" . "6")7))
(5(("A" . "6")7))
(5(("A" . "6")7))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="249" _type="ShellCommand" date="Mon Nov 20 16:51:04 EST 2023" starttimestamp="1700516585068" timestamp="479392" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="250" _type="LocalChecksRawCommand" date="Mon Nov 20 16:51:04 EST 2023" starttimestamp="1700516585068" timestamp="479397">
    <CSVRow><![CDATA[74,Mon Nov 20 16:51:02 EST 2023,6,-2,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker- ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,39,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="251" _type="LocalChecksRawCommand" date="Mon Nov 20 16:51:04 EST 2023" starttimestamp="1700516585068" timestamp="479397">
    <CSVRow><![CDATA[74,Mon Nov 20 16:51:02 EST 2023,6,-2,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker- ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,39,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="253" _type="MoveCaretCommand" caretOffset="1062" date="Mon Nov 20 16:51:04 EST 2023" docOffset="1188" starttimestamp="1700516585068" timestamp="479523" />
  <Command __id="254" _type="SelectTextCommand" caretOffset="1120" date="Mon Nov 20 16:51:12 EST 2023" end="1126" start="1120" starttimestamp="1700516585068" timestamp="487793" />
  <Command __id="256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:51:13 EST 2023" starttimestamp="1700516585068" timestamp="488159" />
  <Command __id="257" _type="SelectTextCommand" caretOffset="1173" date="Mon Nov 20 16:51:15 EST 2023" end="1179" start="1173" starttimestamp="1700516585068" timestamp="490360" />
  <Command __id="259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:51:15 EST 2023" starttimestamp="1700516585068" timestamp="490473" />
  <Command __id="260" _type="MoveCaretCommand" caretOffset="1073" date="Mon Nov 20 16:51:16 EST 2023" docOffset="1199" starttimestamp="1700516585068" timestamp="491639" />
  <Command __id="261" _type="MoveCaretCommand" caretOffset="1082" date="Mon Nov 20 16:51:29 EST 2023" docOffset="1208" starttimestamp="1700516585068" timestamp="504051" />
  <Command __id="262" _type="MoveCaretCommand" caretOffset="1091" date="Mon Nov 20 16:51:30 EST 2023" docOffset="1217" starttimestamp="1700516585068" timestamp="505861" />
  <Command __id="263" _type="SelectTextCommand" caretOffset="1096" date="Mon Nov 20 16:51:31 EST 2023" end="1096" start="1088" starttimestamp="1700516585068" timestamp="506025" />
  <Command __id="264" _type="MoveCaretCommand" caretOffset="1099" date="Mon Nov 20 16:51:31 EST 2023" docOffset="1225" starttimestamp="1700516585068" timestamp="506865" />
  <Command __id="265" _type="MoveCaretCommand" caretOffset="1092" date="Mon Nov 20 16:51:32 EST 2023" docOffset="1218" starttimestamp="1700516585068" timestamp="507644" />
  <Command __id="266" _type="SelectTextCommand" caretOffset="1096" date="Mon Nov 20 16:51:32 EST 2023" end="1096" start="1088" starttimestamp="1700516585068" timestamp="507860" />
  <Command __id="267" _type="MoveCaretCommand" caretOffset="1143" date="Mon Nov 20 16:51:33 EST 2023" docOffset="1269" starttimestamp="1700516585068" timestamp="508361" />
  <Command __id="268" _type="MoveCaretCommand" caretOffset="1144" date="Mon Nov 20 16:51:33 EST 2023" docOffset="1270" starttimestamp="1700516585068" timestamp="508516" />
  <Command __id="269" _type="MoveCaretCommand" caretOffset="1155" date="Mon Nov 20 16:51:34 EST 2023" docOffset="1281" starttimestamp="1700516585068" timestamp="509028" />
  <Command __id="270" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 16:51:34 EST 2023" end="1160" start="1153" starttimestamp="1700516585068" timestamp="509194" />
  <Command __id="271" _type="MoveCaretCommand" caretOffset="1165" date="Mon Nov 20 16:51:34 EST 2023" docOffset="1291" starttimestamp="1700516585068" timestamp="509785" />
  <Command __id="272" _type="SelectTextCommand" caretOffset="1171" date="Mon Nov 20 16:51:35 EST 2023" end="1171" start="1163" starttimestamp="1700516585068" timestamp="509955" />
  <Command __id="273" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 16:51:39 EST 2023" docOffset="1295" starttimestamp="1700516585068" timestamp="513981" />
  <Command __id="274" _type="SelectTextCommand" caretOffset="1171" date="Mon Nov 20 16:51:39 EST 2023" end="1171" start="1163" starttimestamp="1700516585068" timestamp="514134" />
  <Command __id="275" _type="MoveCaretCommand" caretOffset="794" date="Mon Nov 20 16:51:40 EST 2023" docOffset="920" starttimestamp="1700516585068" timestamp="515576" />
  <Command __id="276" _type="SelectTextCommand" caretOffset="798" date="Mon Nov 20 16:51:40 EST 2023" end="798" start="784" starttimestamp="1700516585068" timestamp="515730" />
  <Command __id="277" _type="ShellCommand" date="Mon Nov 20 16:51:44 EST 2023" starttimestamp="1700516585068" timestamp="519885" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="278" _type="ShellCommand" date="Mon Nov 20 16:51:45 EST 2023" starttimestamp="1700516585068" timestamp="520374" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="279" _type="ShellCommand" date="Mon Nov 20 16:51:46 EST 2023" starttimestamp="1700516585068" timestamp="521102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="280" _type="ShellCommand" date="Mon Nov 20 16:51:47 EST 2023" starttimestamp="1700516585068" timestamp="521965" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="281" _type="MoveCaretCommand" caretOffset="1080" date="Mon Nov 20 16:51:51 EST 2023" docOffset="1206" starttimestamp="1700516585068" timestamp="525948" />
  <Command __id="282" _type="SelectTextCommand" caretOffset="1085" date="Mon Nov 20 16:51:51 EST 2023" end="1085" start="1078" starttimestamp="1700516585068" timestamp="526070" />
  <Command __id="283" _type="MoveCaretCommand" caretOffset="1128" date="Mon Nov 20 16:51:51 EST 2023" docOffset="1254" starttimestamp="1700516585068" timestamp="526658" />
  <Command __id="284" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 16:51:51 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="526825" />
  <Command __id="285" _type="MoveCaretCommand" caretOffset="1083" date="Mon Nov 20 16:51:52 EST 2023" docOffset="1209" starttimestamp="1700516585068" timestamp="527364" />
  <Command __id="286" _type="SelectTextCommand" caretOffset="1085" date="Mon Nov 20 16:51:52 EST 2023" end="1085" start="1078" starttimestamp="1700516585068" timestamp="527502" />
  <Command __id="287" _type="MoveCaretCommand" caretOffset="1178" date="Mon Nov 20 16:51:53 EST 2023" docOffset="1304" starttimestamp="1700516585068" timestamp="527999" />
  <Command __id="288" _type="MoveCaretCommand" caretOffset="1178" date="Mon Nov 20 16:51:53 EST 2023" docOffset="1304" starttimestamp="1700516585068" timestamp="528146" />
  <Command __id="289" _type="MoveCaretCommand" caretOffset="1130" date="Mon Nov 20 16:51:53 EST 2023" docOffset="1256" starttimestamp="1700516585068" timestamp="528611" />
  <Command __id="290" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 16:51:53 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="528781" />
  <Command __id="291" _type="MoveCaretCommand" caretOffset="1109" date="Mon Nov 20 16:51:54 EST 2023" docOffset="1235" starttimestamp="1700516585068" timestamp="529272" />
  <Command __id="292" _type="SelectTextCommand" caretOffset="1181" date="Mon Nov 20 16:51:54 EST 2023" end="1181" start="1109" starttimestamp="1700516585068" timestamp="529411" />
  <Command __id="293" _type="MoveCaretCommand" caretOffset="1085" date="Mon Nov 20 16:51:55 EST 2023" docOffset="1211" starttimestamp="1700516585068" timestamp="529992" />
  <Command __id="294" _type="MoveCaretCommand" caretOffset="1086" date="Mon Nov 20 16:51:55 EST 2023" docOffset="1212" starttimestamp="1700516585068" timestamp="530138" />
  <Command __id="295" _type="MoveCaretCommand" caretOffset="1130" date="Mon Nov 20 16:51:55 EST 2023" docOffset="1256" starttimestamp="1700516585068" timestamp="530604" />
  <Command __id="296" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 16:51:55 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="530756" />
  <Command __id="297" _type="MoveCaretCommand" caretOffset="1084" date="Mon Nov 20 16:51:56 EST 2023" docOffset="1210" starttimestamp="1700516585068" timestamp="531329" />
  <Command __id="298" _type="SelectTextCommand" caretOffset="1085" date="Mon Nov 20 16:51:56 EST 2023" end="1085" start="1078" starttimestamp="1700516585068" timestamp="531476" />
  <Command __id="299" _type="MoveCaretCommand" caretOffset="1178" date="Mon Nov 20 16:51:57 EST 2023" docOffset="1304" starttimestamp="1700516585068" timestamp="532324" />
  <Command __id="300" _type="ShellCommand" date="Mon Nov 20 16:52:05 EST 2023" starttimestamp="1700516585068" timestamp="540401" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="301" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:52:06 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="541061" type="Run" />
  <Command __id="302" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:52:06 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="541062" type="Run" />
  <Command __id="303" _type="ShellCommand" date="Mon Nov 20 16:52:06 EST 2023" starttimestamp="1700516585068" timestamp="541078" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="304" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:52:08 EST 2023" starttimestamp="1700516585068" timestamp="542982" />
  <Command __id="305" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:52:08 EST 2023" starttimestamp="1700516585068" timestamp="543080" />
  <Command __id="306" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:52:08 EST 2023" starttimestamp="1700516585068" timestamp="543088" />
  <Command __id="307" _type="ShellCommand" date="Mon Nov 20 16:52:34 EST 2023" starttimestamp="1700516585068" timestamp="569347" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="308" _type="ShellCommand" date="Mon Nov 20 16:52:35 EST 2023" starttimestamp="1700516585068" timestamp="570691" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="309" _type="MoveCaretCommand" caretOffset="768" date="Mon Nov 20 16:52:35 EST 2023" docOffset="894" starttimestamp="1700516585068" timestamp="570740" />
  <Command __id="310" _type="ShellCommand" date="Mon Nov 20 16:52:45 EST 2023" starttimestamp="1700516585068" timestamp="580855" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="311" _type="ShellCommand" date="Mon Nov 20 16:59:25 EST 2023" starttimestamp="1700516585068" timestamp="980518" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="312" _type="ShellCommand" date="Mon Nov 20 16:59:28 EST 2023" starttimestamp="1700516585068" timestamp="982950" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="313" _type="ShellCommand" date="Mon Nov 20 16:59:28 EST 2023" starttimestamp="1700516585068" timestamp="983017" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="314" _type="ShellCommand" date="Mon Nov 20 16:59:35 EST 2023" starttimestamp="1700516585068" timestamp="989937" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="315" _type="ShellCommand" date="Mon Nov 20 16:59:49 EST 2023" starttimestamp="1700516585068" timestamp="1004220" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="316" _type="ShellCommand" date="Mon Nov 20 16:59:54 EST 2023" starttimestamp="1700516585068" timestamp="1009400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="317" _type="ShellCommand" date="Mon Nov 20 16:59:57 EST 2023" starttimestamp="1700516585068" timestamp="1012351" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="318" _type="ShellCommand" date="Mon Nov 20 16:59:57 EST 2023" starttimestamp="1700516585068" timestamp="1012474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="319" _type="ShellCommand" date="Mon Nov 20 17:00:05 EST 2023" starttimestamp="1700516585068" timestamp="1020298" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="320" _type="MoveCaretCommand" caretOffset="902" date="Mon Nov 20 17:00:14 EST 2023" docOffset="1028" starttimestamp="1700516585068" timestamp="1029018" />
  <Command __id="321" _type="MoveCaretCommand" caretOffset="872" date="Mon Nov 20 17:00:15 EST 2023" docOffset="998" starttimestamp="1700516585068" timestamp="1030446" />
  <Command __id="322" _type="MoveCaretCommand" caretOffset="810" date="Mon Nov 20 17:00:15 EST 2023" docOffset="936" starttimestamp="1700516585068" timestamp="1030911" />
  <Command __id="323" _type="MoveCaretCommand" caretOffset="814" date="Mon Nov 20 17:00:16 EST 2023" docOffset="940" starttimestamp="1700516585068" timestamp="1031329" />
  <Command __id="324" _type="MoveCaretCommand" caretOffset="1014" date="Mon Nov 20 17:00:18 EST 2023" docOffset="1140" starttimestamp="1700516585068" timestamp="1033845" />
  <Command __id="325" _type="MoveCaretCommand" caretOffset="902" date="Mon Nov 20 17:00:20 EST 2023" docOffset="1028" starttimestamp="1700516585068" timestamp="1035131" />
  <Command __id="326" _type="MoveCaretCommand" caretOffset="983" date="Mon Nov 20 17:00:21 EST 2023" docOffset="1109" starttimestamp="1700516585068" timestamp="1036113" />
  <Command __id="327" _type="MoveCaretCommand" caretOffset="985" date="Mon Nov 20 17:00:21 EST 2023" docOffset="1111" starttimestamp="1700516585068" timestamp="1036678" />
  <Command __id="328" _type="MoveCaretCommand" caretOffset="1095" date="Mon Nov 20 17:00:22 EST 2023" docOffset="1221" starttimestamp="1700516585068" timestamp="1037130" />
  <Command __id="329" _type="MoveCaretCommand" caretOffset="1031" date="Mon Nov 20 17:00:23 EST 2023" docOffset="1157" starttimestamp="1700516585068" timestamp="1038129" />
  <Command __id="330" _type="MoveCaretCommand" caretOffset="1140" date="Mon Nov 20 17:00:46 EST 2023" docOffset="1266" starttimestamp="1700516585068" timestamp="1061181" />
  <Command __id="331" _type="MoveCaretCommand" caretOffset="1128" date="Mon Nov 20 17:00:47 EST 2023" docOffset="1254" starttimestamp="1700516585068" timestamp="1062150" />
  <Command __id="332" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 17:00:47 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="1062317" />
  <Command __id="333" _type="MoveCaretCommand" caretOffset="1140" date="Mon Nov 20 17:00:47 EST 2023" docOffset="1266" starttimestamp="1700516585068" timestamp="1062845" />
  <Command __id="334" _type="SelectTextCommand" caretOffset="1143" date="Mon Nov 20 17:00:48 EST 2023" end="1143" start="1135" starttimestamp="1700516585068" timestamp="1062998" />
  <Command __id="335" _type="MoveCaretCommand" caretOffset="1128" date="Mon Nov 20 17:00:48 EST 2023" docOffset="1254" starttimestamp="1700516585068" timestamp="1063483" />
  <Command __id="336" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 17:00:48 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="1063648" />
  <Command __id="337" _type="MoveCaretCommand" caretOffset="1135" date="Mon Nov 20 17:00:49 EST 2023" docOffset="1261" starttimestamp="1700516585068" timestamp="1064132" />
  <Command __id="338" _type="SelectTextCommand" caretOffset="1143" date="Mon Nov 20 17:00:49 EST 2023" end="1143" start="1135" starttimestamp="1700516585068" timestamp="1064299" />
  <Command __id="339" _type="MoveCaretCommand" caretOffset="1130" date="Mon Nov 20 17:00:49 EST 2023" docOffset="1256" starttimestamp="1700516585068" timestamp="1064733" />
  <Command __id="340" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 17:00:49 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="1064882" />
  <Command __id="341" _type="MoveCaretCommand" caretOffset="1139" date="Mon Nov 20 17:00:50 EST 2023" docOffset="1265" starttimestamp="1700516585068" timestamp="1065381" />
  <Command __id="342" _type="SelectTextCommand" caretOffset="1143" date="Mon Nov 20 17:00:50 EST 2023" end="1143" start="1135" starttimestamp="1700516585068" timestamp="1065549" />
  <Command __id="343" _type="MoveCaretCommand" caretOffset="1131" date="Mon Nov 20 17:00:51 EST 2023" docOffset="1257" starttimestamp="1700516585068" timestamp="1065998" />
  <Command __id="344" _type="SelectTextCommand" caretOffset="1132" date="Mon Nov 20 17:00:51 EST 2023" end="1132" start="1125" starttimestamp="1700516585068" timestamp="1066162" />
  <Command __id="345" _type="MoveCaretCommand" caretOffset="1109" date="Mon Nov 20 17:00:51 EST 2023" docOffset="1235" starttimestamp="1700516585068" timestamp="1066769" />
  <Command __id="346" _type="SelectTextCommand" caretOffset="1181" date="Mon Nov 20 17:00:52 EST 2023" end="1181" start="1109" starttimestamp="1700516585068" timestamp="1066934" />
  <Command __id="347" _type="MoveCaretCommand" caretOffset="1139" date="Mon Nov 20 17:00:52 EST 2023" docOffset="1265" starttimestamp="1700516585068" timestamp="1067431" />
  <Command __id="348" _type="SelectTextCommand" caretOffset="1143" date="Mon Nov 20 17:00:52 EST 2023" end="1143" start="1135" starttimestamp="1700516585068" timestamp="1067566" />
  <Command __id="349" _type="MoveCaretCommand" caretOffset="1094" date="Mon Nov 20 17:00:53 EST 2023" docOffset="1220" starttimestamp="1700516585068" timestamp="1068704" />
  <Command __id="350" _type="MoveCaretCommand" caretOffset="983" date="Mon Nov 20 17:00:57 EST 2023" docOffset="1109" starttimestamp="1700516585068" timestamp="1072066" />
  <Command __id="351" _type="ShellCommand" date="Mon Nov 20 17:01:06 EST 2023" starttimestamp="1700516585068" timestamp="1081629" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="352" _type="ShellCommand" date="Mon Nov 20 17:01:14 EST 2023" starttimestamp="1700516585068" timestamp="1089248" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="353" _type="ShellCommand" date="Mon Nov 20 17:01:19 EST 2023" starttimestamp="1700516585068" timestamp="1094505" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="354" _type="ShellCommand" date="Mon Nov 20 17:01:22 EST 2023" starttimestamp="1700516585068" timestamp="1097032" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="355" _type="ShellCommand" date="Mon Nov 20 17:01:25 EST 2023" starttimestamp="1700516585068" timestamp="1100586" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="356" _type="ShellCommand" date="Mon Nov 20 17:01:27 EST 2023" starttimestamp="1700516585068" timestamp="1102705" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="357" _type="ShellCommand" date="Mon Nov 20 17:01:30 EST 2023" starttimestamp="1700516585068" timestamp="1105808" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="358" _type="ShellCommand" date="Mon Nov 20 17:01:31 EST 2023" starttimestamp="1700516585068" timestamp="1106329" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="359" _type="MoveCaretCommand" caretOffset="939" date="Mon Nov 20 17:01:41 EST 2023" docOffset="1065" starttimestamp="1700516585068" timestamp="1116700" />
  <Command __id="360" _type="MoveCaretCommand" caretOffset="1058" date="Mon Nov 20 17:01:53 EST 2023" docOffset="1184" starttimestamp="1700516585068" timestamp="1128084" />
  <Command __id="361" _type="ShellCommand" date="Mon Nov 20 17:01:55 EST 2023" starttimestamp="1700516585068" timestamp="1130043" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="362" _type="ShellCommand" date="Mon Nov 20 17:01:55 EST 2023" starttimestamp="1700516585068" timestamp="1130834" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="363" _type="ShellCommand" date="Mon Nov 20 17:01:58 EST 2023" starttimestamp="1700516585068" timestamp="1133351" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="364" _type="ShellCommand" date="Mon Nov 20 17:02:01 EST 2023" starttimestamp="1700516585068" timestamp="1136108" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="365" _type="ShellCommand" date="Mon Nov 20 17:02:02 EST 2023" starttimestamp="1700516585068" timestamp="1137130" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="366" _type="ShellCommand" date="Mon Nov 20 17:02:05 EST 2023" starttimestamp="1700516585068" timestamp="1140231" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="367" _type="ShellCommand" date="Mon Nov 20 17:02:06 EST 2023" starttimestamp="1700516585068" timestamp="1140977" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="368" _type="ShellCommand" date="Mon Nov 20 17:02:09 EST 2023" starttimestamp="1700516585068" timestamp="1143980" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="369" _type="ShellCommand" date="Mon Nov 20 17:02:12 EST 2023" starttimestamp="1700516585068" timestamp="1147520" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="370" _type="ShellCommand" date="Mon Nov 20 17:02:13 EST 2023" starttimestamp="1700516585068" timestamp="1148173" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="371" _type="ShellCommand" date="Mon Nov 20 17:02:17 EST 2023" starttimestamp="1700516585068" timestamp="1152042" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="372" _type="ShellCommand" date="Mon Nov 20 17:02:19 EST 2023" starttimestamp="1700516585068" timestamp="1154515" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="373" _type="ShellCommand" date="Mon Nov 20 17:02:20 EST 2023" starttimestamp="1700516585068" timestamp="1155104" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="374" _type="ShellCommand" date="Mon Nov 20 17:02:26 EST 2023" starttimestamp="1700516585068" timestamp="1161642" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="375" _type="ShellCommand" date="Mon Nov 20 17:02:31 EST 2023" starttimestamp="1700516585068" timestamp="1166079" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="376" _type="ShellCommand" date="Mon Nov 20 17:02:35 EST 2023" starttimestamp="1700516585068" timestamp="1170245" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="219" _type="Insert" date="Mon Nov 20 16:50:52 EST 2023" docASTNodeCount="213" docActiveCodeLength="1327" docExpressionCount="153" docLength="1327" length="3" offset="1308" repeat="2" starttimestamp="1700516585068" timestamp="467565" timestamp2="468139">
    <text><![CDATA[")"]]></text>
  </DocumentChange>
  <Command __id="231" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:50:56 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="471870">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="252" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:51:04 EST 2023" docASTNodeCount="213" docActiveCodeLength="1327" docExpressionCount="153" docLength="1327" projectName="Assignment5" starttimestamp="1700516585068" timestamp="479480">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(DELETE," "(" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(DELETE," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return"), Diff(INSERT," "(" +"), Diff(EQUAL," this.getHead().toString() + this.getTail().toString()"), Diff(INSERT," + ")""), Diff(EQUAL,";					}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return "(" + this.getHead().toString() + this.getTail().toString() + ")";
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="255" _type="Delete" date="Mon Nov 20 16:51:13 EST 2023" docASTNodeCount="212" docActiveCodeLength="1321" docExpressionCount="152" docLength="1321" endLine="47" length="6" offset="1246" startLine="47" starttimestamp="1700516585068" timestamp="488150">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="258" _type="Delete" date="Mon Nov 20 16:51:15 EST 2023" docASTNodeCount="211" docActiveCodeLength="1315" docExpressionCount="151" docLength="1315" endLine="47" length="6" offset="1299" startLine="47" starttimestamp="1700516585068" timestamp="490466">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="377" _type="MoveCaretCommand" caretOffset="812" date="Mon Nov 20 17:02:37 EST 2023" docOffset="938" starttimestamp="1700516585068" timestamp="1172238" />
  <Command __id="379" _type="InsertStringCommand" date="Mon Nov 20 17:02:40 EST 2023" starttimestamp="1700516585068" timestamp="1175013" timestamp2="1175013">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="381" _type="InsertStringCommand" date="Mon Nov 20 17:02:40 EST 2023" starttimestamp="1700516585068" timestamp="1175172" timestamp2="1175172">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="382" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:02:40 EST 2023" starttimestamp="1700516585068" timestamp="1175511" />
  <Command __id="383" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 17:02:40 EST 2023" starttimestamp="1700516585068" timestamp="1175911" />
  <Command __id="385" _type="InsertStringCommand" date="Mon Nov 20 17:02:41 EST 2023" starttimestamp="1700516585068" timestamp="1176401" timestamp2="1176401">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="387" _type="InsertStringCommand" date="Mon Nov 20 17:02:41 EST 2023" starttimestamp="1700516585068" timestamp="1176504" timestamp2="1176504">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="389" _type="InsertStringCommand" date="Mon Nov 20 17:02:41 EST 2023" starttimestamp="1700516585068" timestamp="1176607" timestamp2="1176607">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="390" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 17:02:41 EST 2023" starttimestamp="1700516585068" timestamp="1176921" />
  <Command __id="391" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 17:02:42 EST 2023" starttimestamp="1700516585068" timestamp="1177073" />
  <Command __id="392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:02:42 EST 2023" starttimestamp="1700516585068" timestamp="1177332" />
  <Command __id="393" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 17:02:42 EST 2023" starttimestamp="1700516585068" timestamp="1177527" />
  <Command __id="394" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 17:02:42 EST 2023" starttimestamp="1700516585068" timestamp="1177726" />
  <Command __id="395" _type="MoveCaretCommand" caretOffset="813" date="Mon Nov 20 17:02:43 EST 2023" docOffset="939" starttimestamp="1700516585068" timestamp="1178823" />
  <Command __id="397" _type="InsertStringCommand" date="Mon Nov 20 17:02:44 EST 2023" starttimestamp="1700516585068" timestamp="1179524" timestamp2="1179524">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="378" _type="Insert" date="Mon Nov 20 17:02:40 EST 2023" docASTNodeCount="213" docActiveCodeLength="1320" docExpressionCount="153" docLength="1320" length="5" offset="938" repeat="5" starttimestamp="1700516585068" timestamp="1175010" timestamp2="1176603">
    <text><![CDATA["" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="396" _type="Insert" date="Mon Nov 20 17:02:44 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" length="1" offset="939" starttimestamp="1700516585068" timestamp="1179520">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <Command __id="398" _type="MoveCaretCommand" caretOffset="874" date="Mon Nov 20 17:02:46 EST 2023" docOffset="1000" starttimestamp="1700516585068" timestamp="1180955" />
  <DocumentChange __id="399" _type="Insert" date="Mon Nov 20 17:02:47 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="6" offset="1000" repeat="5" starttimestamp="1700516585068" timestamp="1182524" timestamp2="1183917">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="400" _type="InsertStringCommand" date="Mon Nov 20 17:02:47 EST 2023" starttimestamp="1700516585068" timestamp="1182528" timestamp2="1182528">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="402" _type="InsertStringCommand" date="Mon Nov 20 17:02:47 EST 2023" starttimestamp="1700516585068" timestamp="1182701" timestamp2="1182701">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="404" _type="InsertStringCommand" date="Mon Nov 20 17:02:47 EST 2023" starttimestamp="1700516585068" timestamp="1182776" timestamp2="1182776">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="406" _type="InsertStringCommand" date="Mon Nov 20 17:02:47 EST 2023" starttimestamp="1700516585068" timestamp="1182919" timestamp2="1182919">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="408" _type="InsertStringCommand" date="Mon Nov 20 17:02:48 EST 2023" starttimestamp="1700516585068" timestamp="1183919" timestamp2="1183919">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="409" _type="MoveCaretCommand" caretOffset="914" date="Mon Nov 20 17:02:49 EST 2023" docOffset="1040" starttimestamp="1700516585068" timestamp="1184520" />
  <Command __id="410" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:02:49 EST 2023" starttimestamp="1700516585068" timestamp="1184648" />
  <Command __id="411" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:02:49 EST 2023" starttimestamp="1700516585068" timestamp="1184748" />
  <Command __id="412" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:02:49 EST 2023" starttimestamp="1700516585068" timestamp="1184757" />
  <Command __id="414" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 17:02:51 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="1186748" />
  <Command __id="415" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:02:53 EST 2023" starttimestamp="1700516585068" timestamp="1188495" />
  <Command __id="416" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:02:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1188609" type="Run" />
  <Command __id="417" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:02:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1188609" type="Run" />
  <Command __id="418" _type="ShellCommand" date="Mon Nov 20 17:02:54 EST 2023" starttimestamp="1700516585068" timestamp="1188945" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="419" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191495" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="420" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191496" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="421" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191497" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):8¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="422" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191512" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="423" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191515" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="424" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191519" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"26"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="425" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191520" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:BaseCase"), Diff(DELETE,"SExpression"), Diff(INSERT,"List"), Diff(EQUAL,"ToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶(5)¶(5)¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="426" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191522" type="ConsoleOutput">
    <outputString><![CDATA[(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="427" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191523" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="428" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191524" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="429" _type="ExceptionCommand" date="Mon Nov 20 17:02:56 EST 2023" starttimestamp="1700516585068" timestamp="1191528" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="430" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191531" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7)))"), Diff(INSERT,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="431" _type="ConsoleOutput" date="Mon Nov 20 17:02:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1191543" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Compon"), Diff(INSERT,"EventDispatchThread.pumpEvents(Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"EventImpl(Component"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(EQUAL,"1"), Diff(INSERT,"0"), Diff(EQUAL,"1)¶	at java.desktop/java.awt."), Diff(DELETE,"Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.Lightweigh"), Diff(INSERT,"EventDispatchThread.run(Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)"), Diff(INSERT,"Thread.java:90)¶¶Test execution time (ms):4¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="432" _type="ExceptionCommand" date="Mon Nov 20 17:02:56 EST 2023" starttimestamp="1700516585068" timestamp="1191548" type="Exception">
    <exceptionString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="433" _type="ShellCommand" date="Mon Nov 20 17:03:07 EST 2023" starttimestamp="1700516585068" timestamp="1202057" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="434" _type="LocalChecksRawCommand" date="Mon Nov 20 17:03:07 EST 2023" starttimestamp="1700516585068" timestamp="1202064">
    <CSVRow><![CDATA[75,Mon Nov 20 17:02:56 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,40,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="435" _type="LocalChecksRawCommand" date="Mon Nov 20 17:03:07 EST 2023" starttimestamp="1700516585068" timestamp="1202064">
    <CSVRow><![CDATA[75,Mon Nov 20 17:02:56 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,40,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="436" _type="ShellCommand" date="Mon Nov 20 17:03:07 EST 2023" starttimestamp="1700516585068" timestamp="1202894" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="437" _type="ShellCommand" date="Mon Nov 20 17:03:08 EST 2023" starttimestamp="1700516585068" timestamp="1203326" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="439" _type="MoveCaretCommand" caretOffset="914" date="Mon Nov 20 17:03:08 EST 2023" docOffset="1040" starttimestamp="1700516585068" timestamp="1203870" />
  <Command __id="440" _type="MoveCaretCommand" caretOffset="796" date="Mon Nov 20 17:03:10 EST 2023" docOffset="922" starttimestamp="1700516585068" timestamp="1205788" />
  <Command __id="441" _type="MoveCaretCommand" caretOffset="884" date="Mon Nov 20 17:03:11 EST 2023" docOffset="1010" starttimestamp="1700516585068" timestamp="1206236" />
  <Command __id="442" _type="MoveCaretCommand" caretOffset="802" date="Mon Nov 20 17:03:11 EST 2023" docOffset="928" starttimestamp="1700516585068" timestamp="1206721" />
  <Command __id="443" _type="MoveCaretCommand" caretOffset="856" date="Mon Nov 20 17:03:12 EST 2023" docOffset="982" starttimestamp="1700516585068" timestamp="1207187" />
  <Command __id="444" _type="MoveCaretCommand" caretOffset="856" date="Mon Nov 20 17:03:13 EST 2023" docOffset="982" starttimestamp="1700516585068" timestamp="1208304" />
  <Command __id="445" _type="SelectTextCommand" caretOffset="872" date="Mon Nov 20 17:03:13 EST 2023" end="872" start="846" starttimestamp="1700516585068" timestamp="1208472" />
  <Command __id="446" _type="ShellCommand" date="Mon Nov 20 17:03:14 EST 2023" starttimestamp="1700516585068" timestamp="1209098" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="447" _type="ShellCommand" date="Mon Nov 20 17:03:14 EST 2023" starttimestamp="1700516585068" timestamp="1209593" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="448" _type="ShellCommand" date="Mon Nov 20 17:03:15 EST 2023" starttimestamp="1700516585068" timestamp="1210330" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="449" _type="ShellCommand" date="Mon Nov 20 17:03:16 EST 2023" starttimestamp="1700516585068" timestamp="1211602" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="450" _type="ShellCommand" date="Mon Nov 20 17:03:17 EST 2023" starttimestamp="1700516585068" timestamp="1212730" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="451" _type="ShellCommand" date="Mon Nov 20 17:03:19 EST 2023" starttimestamp="1700516585068" timestamp="1214164" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="452" _type="ShellCommand" date="Mon Nov 20 17:03:19 EST 2023" starttimestamp="1700516585068" timestamp="1214601" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="453" _type="ShellCommand" date="Mon Nov 20 17:03:21 EST 2023" starttimestamp="1700516585068" timestamp="1215977" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="454" _type="ShellCommand" date="Mon Nov 20 17:03:22 EST 2023" starttimestamp="1700516585068" timestamp="1217149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="455" _type="ShellCommand" date="Mon Nov 20 17:03:23 EST 2023" starttimestamp="1700516585068" timestamp="1218481" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="456" _type="MoveCaretCommand" caretOffset="1143" date="Mon Nov 20 17:03:29 EST 2023" docOffset="1269" starttimestamp="1700516585068" timestamp="1224610" />
  <Command __id="457" _type="MoveCaretCommand" caretOffset="1151" date="Mon Nov 20 17:03:30 EST 2023" docOffset="1277" starttimestamp="1700516585068" timestamp="1225422" />
  <Command __id="458" _type="MoveCaretCommand" caretOffset="1194" date="Mon Nov 20 17:03:32 EST 2023" docOffset="1320" starttimestamp="1700516585068" timestamp="1227171" />
  <Command __id="459" _type="ShellCommand" date="Mon Nov 20 17:03:34 EST 2023" starttimestamp="1700516585068" timestamp="1229049" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="460" _type="ShellCommand" date="Mon Nov 20 17:03:34 EST 2023" starttimestamp="1700516585068" timestamp="1229830" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="461" _type="MoveCaretCommand" caretOffset="1152" date="Mon Nov 20 17:03:36 EST 2023" docOffset="1278" starttimestamp="1700516585068" timestamp="1231138" />
  <Command __id="462" _type="ShellCommand" date="Mon Nov 20 17:03:38 EST 2023" starttimestamp="1700516585068" timestamp="1233266" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="463" _type="ShellCommand" date="Mon Nov 20 17:03:48 EST 2023" starttimestamp="1700516585068" timestamp="1243083" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="464" _type="MoveCaretCommand" caretOffset="1171" date="Mon Nov 20 17:03:48 EST 2023" docOffset="1297" starttimestamp="1700516585068" timestamp="1243120" />
  <Command __id="465" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 17:03:49 EST 2023" docOffset="1305" starttimestamp="1700516585068" timestamp="1244506" />
  <Command __id="466" _type="ShellCommand" date="Mon Nov 20 17:03:51 EST 2023" starttimestamp="1700516585068" timestamp="1245998" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="467" _type="ShellCommand" date="Mon Nov 20 17:03:54 EST 2023" starttimestamp="1700516585068" timestamp="1249710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="468" _type="ShellCommand" date="Mon Nov 20 17:04:07 EST 2023" starttimestamp="1700516585068" timestamp="1262918" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="469" _type="ShellCommand" date="Mon Nov 20 17:04:14 EST 2023" starttimestamp="1700516585068" timestamp="1268957" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="470" _type="ShellCommand" date="Mon Nov 20 17:04:15 EST 2023" starttimestamp="1700516585068" timestamp="1269944" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="471" _type="ShellCommand" date="Mon Nov 20 17:04:15 EST 2023" starttimestamp="1700516585068" timestamp="1270432" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="472" _type="ShellCommand" date="Mon Nov 20 17:04:16 EST 2023" starttimestamp="1700516585068" timestamp="1271688" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="473" _type="ShellCommand" date="Mon Nov 20 17:04:17 EST 2023" starttimestamp="1700516585068" timestamp="1272391" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="474" _type="ShellCommand" date="Mon Nov 20 17:04:23 EST 2023" starttimestamp="1700516585068" timestamp="1278434" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="475" _type="ShellCommand" date="Mon Nov 20 17:04:23 EST 2023" starttimestamp="1700516585068" timestamp="1278928" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="476" _type="ShellCommand" date="Mon Nov 20 17:04:24 EST 2023" starttimestamp="1700516585068" timestamp="1279793" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="477" _type="ShellCommand" date="Mon Nov 20 17:04:25 EST 2023" starttimestamp="1700516585068" timestamp="1280809" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="478" _type="ShellCommand" date="Mon Nov 20 17:04:26 EST 2023" starttimestamp="1700516585068" timestamp="1281150" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="479" _type="ShellCommand" date="Mon Nov 20 17:04:26 EST 2023" starttimestamp="1700516585068" timestamp="1281628" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="480" _type="ShellCommand" date="Mon Nov 20 17:04:28 EST 2023" starttimestamp="1700516585068" timestamp="1283296" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="481" _type="ShellCommand" date="Mon Nov 20 17:04:29 EST 2023" starttimestamp="1700516585068" timestamp="1284566" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="482" _type="ShellCommand" date="Mon Nov 20 17:04:44 EST 2023" starttimestamp="1700516585068" timestamp="1298950" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="483" _type="ShellCommand" date="Mon Nov 20 17:04:49 EST 2023" starttimestamp="1700516585068" timestamp="1304672" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="484" _type="MoveCaretCommand" caretOffset="995" date="Mon Nov 20 17:04:49 EST 2023" docOffset="1121" starttimestamp="1700516585068" timestamp="1304713" />
  <Command __id="485" _type="ShellCommand" date="Mon Nov 20 17:05:21 EST 2023" starttimestamp="1700516585068" timestamp="1336108" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="486" _type="ShellCommand" date="Mon Nov 20 17:05:27 EST 2023" starttimestamp="1700516585068" timestamp="1342885" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="487" _type="ShellCommand" date="Mon Nov 20 17:05:28 EST 2023" starttimestamp="1700516585068" timestamp="1343440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="488" _type="ShellCommand" date="Mon Nov 20 17:05:28 EST 2023" starttimestamp="1700516585068" timestamp="1343780" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="489" _type="ShellCommand" date="Mon Nov 20 17:05:29 EST 2023" starttimestamp="1700516585068" timestamp="1344538" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="490" _type="ShellCommand" date="Mon Nov 20 17:05:36 EST 2023" starttimestamp="1700516585068" timestamp="1351898" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="491" _type="ShellCommand" date="Mon Nov 20 17:05:47 EST 2023" starttimestamp="1700516585068" timestamp="1362440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="492" _type="ShellCommand" date="Mon Nov 20 17:05:55 EST 2023" starttimestamp="1700516585068" timestamp="1370898" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="493" _type="SelectTextCommand" caretOffset="811" date="Mon Nov 20 17:06:03 EST 2023" end="818" start="811" starttimestamp="1700516585068" timestamp="1378582" />
  <Command __id="494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.SELECT_COLUMN_NEXT" date="Mon Nov 20 17:06:04 EST 2023" starttimestamp="1700516585068" timestamp="1379566" />
  <Command __id="496" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:04 EST 2023" starttimestamp="1700516585068" timestamp="1379865" />
  <Command __id="497" _type="MoveCaretCommand" caretOffset="874" date="Mon Nov 20 17:06:06 EST 2023" docOffset="1000" starttimestamp="1700516585068" timestamp="1380967" />
  <Command __id="499" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:06 EST 2023" starttimestamp="1700516585068" timestamp="1381202" />
  <Command __id="501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:06 EST 2023" starttimestamp="1700516585068" timestamp="1381314" />
  <Command __id="503" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:06 EST 2023" starttimestamp="1700516585068" timestamp="1381443" />
  <Command __id="505" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:06 EST 2023" starttimestamp="1700516585068" timestamp="1381587" />
  <Command __id="507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:06 EST 2023" starttimestamp="1700516585068" timestamp="1381716" />
  <Command __id="509" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:07 EST 2023" starttimestamp="1700516585068" timestamp="1381982" />
  <Command __id="510" _type="MoveCaretCommand" caretOffset="1078" date="Mon Nov 20 17:06:08 EST 2023" docOffset="1204" starttimestamp="1700516585068" timestamp="1383400" />
  <Command __id="511" _type="MoveCaretCommand" caretOffset="1073" date="Mon Nov 20 17:06:12 EST 2023" docOffset="1199" starttimestamp="1700516585068" timestamp="1387000" />
  <Command __id="513" _type="InsertStringCommand" date="Mon Nov 20 17:06:12 EST 2023" starttimestamp="1700516585068" timestamp="1387614" timestamp2="1387614">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="515" _type="InsertStringCommand" date="Mon Nov 20 17:06:12 EST 2023" starttimestamp="1700516585068" timestamp="1387768" timestamp2="1387768">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:06:13 EST 2023" starttimestamp="1700516585068" timestamp="1388188" />
  <Command __id="518" _type="InsertStringCommand" date="Mon Nov 20 17:06:13 EST 2023" starttimestamp="1700516585068" timestamp="1388897" timestamp2="1388897">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="519" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 17:06:14 EST 2023" starttimestamp="1700516585068" timestamp="1389243" />
  <Command __id="521" _type="InsertStringCommand" date="Mon Nov 20 17:06:14 EST 2023" starttimestamp="1700516585068" timestamp="1389738" timestamp2="1389738">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="523" _type="InsertStringCommand" date="Mon Nov 20 17:06:14 EST 2023" starttimestamp="1700516585068" timestamp="1389844" timestamp2="1389844">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="525" _type="InsertStringCommand" date="Mon Nov 20 17:06:15 EST 2023" starttimestamp="1700516585068" timestamp="1389935" timestamp2="1389935">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="526" _type="MoveCaretCommand" caretOffset="1178" date="Mon Nov 20 17:06:16 EST 2023" docOffset="1304" starttimestamp="1700516585068" timestamp="1391083" />
  <Command __id="413" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:02:51 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1186698">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="438" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:03:08 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1203821">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(INSERT," "(" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(INSERT," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return"), Diff(DELETE," "(" +"), Diff(EQUAL," this.getHead().toString() + this.getTail().toString()"), Diff(DELETE," + ")""), Diff(EQUAL,";					}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + this.getTail().toString();
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="495" _type="Delete" date="Mon Nov 20 17:06:04 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" endLine="36" length="6" offset="938" startLine="36" starttimestamp="1700516585068" timestamp="1379857">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="498" _type="Delete" date="Mon Nov 20 17:06:06 EST 2023" docASTNodeCount="211" docActiveCodeLength="1315" docExpressionCount="151" docLength="1315" endLine="36" length="6" offset="994" repeat="6" startLine="36" starttimestamp="1700516585068" timestamp="1381199" timestamp2="1381978">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <DocumentChange __id="512" _type="Insert" date="Mon Nov 20 17:06:12 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" length="6" offset="1199" repeat="6" starttimestamp="1700516585068" timestamp="1387611" timestamp2="1389932">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="528" _type="Insert" date="Mon Nov 20 17:06:17 EST 2023" docASTNodeCount="215" docActiveCodeLength="1325" docExpressionCount="153" docLength="1325" length="4" offset="1305" repeat="4" starttimestamp="1700516585068" timestamp="1392657" timestamp2="1393065">
    <text><![CDATA[ + {]]></text>
  </DocumentChange>
  <DocumentChange __id="536" _type="Delete" date="Mon Nov 20 17:06:18 EST 2023" docASTNodeCount="213" docActiveCodeLength="1324" docExpressionCount="153" docLength="1324" endLine="47" length="1" offset="1308" startLine="47" starttimestamp="1700516585068" timestamp="1393634">
    <text><![CDATA[{]]></text>
  </DocumentChange>
  <DocumentChange __id="538" _type="Insert" date="Mon Nov 20 17:06:18 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="3" offset="1308" repeat="2" starttimestamp="1700516585068" timestamp="1393903" timestamp2="1395026">
    <text><![CDATA[)""]]></text>
  </DocumentChange>
  <Command __id="527" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 17:06:17 EST 2023" docOffset="1305" starttimestamp="1700516585068" timestamp="1392151" />
  <Command __id="529" _type="InsertStringCommand" date="Mon Nov 20 17:06:17 EST 2023" starttimestamp="1700516585068" timestamp="1392661" timestamp2="1392661">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="531" _type="InsertStringCommand" date="Mon Nov 20 17:06:17 EST 2023" starttimestamp="1700516585068" timestamp="1392790" timestamp2="1392790">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="533" _type="InsertStringCommand" date="Mon Nov 20 17:06:17 EST 2023" starttimestamp="1700516585068" timestamp="1392877" timestamp2="1392877">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="535" _type="InsertStringCommand" date="Mon Nov 20 17:06:18 EST 2023" starttimestamp="1700516585068" timestamp="1393068" timestamp2="1393068">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="537" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:18 EST 2023" starttimestamp="1700516585068" timestamp="1393636" />
  <Command __id="539" _type="InsertStringCommand" date="Mon Nov 20 17:06:18 EST 2023" starttimestamp="1700516585068" timestamp="1393906" timestamp2="1393906">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="540" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:06:19 EST 2023" starttimestamp="1700516585068" timestamp="1394710" />
  <Command __id="542" _type="InsertStringCommand" date="Mon Nov 20 17:06:20 EST 2023" starttimestamp="1700516585068" timestamp="1395029" timestamp2="1395029">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:21 EST 2023" starttimestamp="1700516585068" timestamp="1396040" />
  <Command __id="545" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 17:06:21 EST 2023" starttimestamp="1700516585068" timestamp="1396254" />
  <Command __id="546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 17:06:21 EST 2023" starttimestamp="1700516585068" timestamp="1396365" />
  <Command __id="547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 17:06:22 EST 2023" starttimestamp="1700516585068" timestamp="1397139" />
  <Command __id="548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:06:22 EST 2023" starttimestamp="1700516585068" timestamp="1397188" />
  <Command __id="550" _type="InsertStringCommand" date="Mon Nov 20 17:06:22 EST 2023" starttimestamp="1700516585068" timestamp="1397395" timestamp2="1397395">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="552" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:23 EST 2023" starttimestamp="1700516585068" timestamp="1398148" />
  <Command __id="554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:23 EST 2023" starttimestamp="1700516585068" timestamp="1398484" />
  <Command __id="556" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:23 EST 2023" starttimestamp="1700516585068" timestamp="1398843" />
  <Command __id="558" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:24 EST 2023" starttimestamp="1700516585068" timestamp="1399141" />
  <Command __id="559" _type="MoveCaretCommand" caretOffset="1184" date="Mon Nov 20 17:06:25 EST 2023" docOffset="1310" starttimestamp="1700516585068" timestamp="1399968" />
  <Command __id="560" _type="MoveCaretCommand" caretOffset="1182" date="Mon Nov 20 17:06:25 EST 2023" docOffset="1308" starttimestamp="1700516585068" timestamp="1400501" />
  <Command __id="561" _type="MoveCaretCommand" caretOffset="1182" date="Mon Nov 20 17:06:26 EST 2023" docOffset="1308" starttimestamp="1700516585068" timestamp="1401184" />
  <Command __id="562" _type="MoveCaretCommand" caretOffset="1183" date="Mon Nov 20 17:06:26 EST 2023" docOffset="1309" starttimestamp="1700516585068" timestamp="1401734" />
  <Command __id="564" _type="InsertStringCommand" date="Mon Nov 20 17:06:27 EST 2023" starttimestamp="1700516585068" timestamp="1402320" timestamp2="1402320">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="565" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 17:06:27 EST 2023" docOffset="1231" starttimestamp="1700516585068" timestamp="1402767" />
  <Command __id="566" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:06:27 EST 2023" starttimestamp="1700516585068" timestamp="1402862" />
  <Command __id="567" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:06:28 EST 2023" starttimestamp="1700516585068" timestamp="1402965" />
  <Command __id="568" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:06:28 EST 2023" starttimestamp="1700516585068" timestamp="1402973" />
  <Command __id="570" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:06:31 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1406191" type="Run" />
  <Command __id="571" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:06:31 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1406191" type="Run" />
  <Command __id="572" _type="ShellCommand" date="Mon Nov 20 17:06:31 EST 2023" starttimestamp="1700516585068" timestamp="1406206" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="574" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 17:06:32 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="1407193" />
  <Command __id="575" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:06:34 EST 2023" starttimestamp="1700516585068" timestamp="1409787" />
  <Command __id="576" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:06:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1409892" type="Run" />
  <Command __id="577" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:06:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1409892" type="Run" />
  <Command __id="578" _type="ShellCommand" date="Mon Nov 20 17:06:35 EST 2023" starttimestamp="1700516585068" timestamp="1410183" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="579" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412687" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶Test execution time (ms):2"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="580" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412689" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="581" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412690" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):7¶")]]]></diff>
  </Command>
  <Command __id="582" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412705" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="583" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412708" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="584" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412710" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="585" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412713" type="ConsoleOutput">
    <outputString><![CDATA[(5
(5

Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5¶(5¶¶Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="586" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412714" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string (5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5¶(5¶¶Test execution time (ms):3"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string (5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="587" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412716" type="ConsoleOutput">
    <outputString><![CDATA[5(("A" . "6")((7))
5(("A" . "6")((7))
5(("A" . "6")((7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string (5"), Diff(INSERT,"5(("A" . "6")((7))¶5(("A" . "6")((7))¶5(("A" . "6")((7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="588" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412717" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5(("A" . "6")((7))¶5(("A" . "6")((7))¶5(("A" . "6")((7))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="589" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412717" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6")((7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6")((7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="590" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412720" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6")((7))"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="591" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412721" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="592" _type="ConsoleOutput" date="Mon Nov 20 17:06:37 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1412761" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(INSERT,"35"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:3"), Diff(INSERT,"34"), Diff(EQUAL,"2"), Diff(DELETE,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"7"), Diff(INSERT,"491"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"7"), Diff(INSERT,"72"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4"), Diff(EQUAL,".run("), Diff(DELETE,"ParentRunner"), Diff(INSERT,"EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"45"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:2"), Diff(DELETE,"88"), Diff(INSERT,"03"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="593" _type="ExceptionCommand" date="Mon Nov 20 17:06:37 EST 2023" starttimestamp="1700516585068" timestamp="1412767" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

5(("A" . "6")((7))
5(("A" . "6")((7))
5(("A" . "6")((7))
5(("A" . "6")((7))
5(("A" . "6")((7))
Test execution time (ms):3
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="594" _type="ShellCommand" date="Mon Nov 20 17:06:39 EST 2023" starttimestamp="1700516585068" timestamp="1414380" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="596" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 17:06:39 EST 2023" docOffset="1231" starttimestamp="1700516585068" timestamp="1414493" />
  <Command __id="597" _type="SelectTextCommand" caretOffset="1179" date="Mon Nov 20 17:06:44 EST 2023" end="1185" start="1179" starttimestamp="1700516585068" timestamp="1419452" />
  <Command __id="599" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:06:45 EST 2023" starttimestamp="1700516585068" timestamp="1419980" />
  <DocumentChange __id="543" _type="Delete" date="Mon Nov 20 17:06:21 EST 2023" docASTNodeCount="214" docActiveCodeLength="1326" docExpressionCount="154" docLength="1326" endLine="47" length="1" offset="1308" startLine="47" starttimestamp="1700516585068" timestamp="1396037">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="549" _type="Insert" date="Mon Nov 20 17:06:22 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="1" offset="1314" starttimestamp="1700516585068" timestamp="1397392">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="551" _type="Delete" date="Mon Nov 20 17:06:23 EST 2023" docASTNodeCount="214" docActiveCodeLength="1323" docExpressionCount="154" docLength="1323" endLine="48" length="4" offset="1311" repeat="4" startLine="47" starttimestamp="1700516585068" timestamp="1398145" timestamp2="1399135">
    <text><![CDATA[
		)]]></text>
  </DocumentChange>
  <DocumentChange __id="563" _type="Insert" date="Mon Nov 20 17:06:27 EST 2023" docASTNodeCount="214" docActiveCodeLength="1324" docExpressionCount="154" docLength="1324" length="1" offset="1309" starttimestamp="1700516585068" timestamp="1402316">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="573" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:06:32 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1407144">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="595" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:06:39 EST 2023" docASTNodeCount="214" docActiveCodeLength="1324" docExpressionCount="154" docLength="1324" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1414460">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(DELETE," "(" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(DELETE," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return"), Diff(INSERT," "(" +"), Diff(EQUAL," this.getHead().toString();		}else {			return this.getHead().toString() + this.getTail().toString()"), Diff(DELETE,";		"), Diff(INSERT," + ")";"), Diff(EQUAL,"			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return "(" + this.getHead().toString();
		}else {
			return this.getHead().toString() + this.getTail().toString() + ")";	
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="598" _type="Delete" date="Mon Nov 20 17:06:45 EST 2023" docASTNodeCount="213" docActiveCodeLength="1318" docExpressionCount="153" docLength="1318" endLine="47" length="6" offset="1305" startLine="47" starttimestamp="1700516585068" timestamp="1419970">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="600" _type="MoveCaretCommand" caretOffset="868" date="Mon Nov 20 17:06:48 EST 2023" docOffset="994" starttimestamp="1700516585068" timestamp="1423567" />
  <DocumentChange __id="601" _type="Insert" date="Mon Nov 20 17:06:50 EST 2023" docASTNodeCount="215" docActiveCodeLength="1324" docExpressionCount="155" docLength="1324" length="6" offset="994" repeat="5" starttimestamp="1700516585068" timestamp="1425665" timestamp2="1426912">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="602" _type="InsertStringCommand" date="Mon Nov 20 17:06:50 EST 2023" starttimestamp="1700516585068" timestamp="1425670" timestamp2="1425670">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="604" _type="InsertStringCommand" date="Mon Nov 20 17:06:50 EST 2023" starttimestamp="1700516585068" timestamp="1425759" timestamp2="1425759">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="606" _type="InsertStringCommand" date="Mon Nov 20 17:06:50 EST 2023" starttimestamp="1700516585068" timestamp="1425854" timestamp2="1425854">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="608" _type="InsertStringCommand" date="Mon Nov 20 17:06:51 EST 2023" starttimestamp="1700516585068" timestamp="1426032" timestamp2="1426032">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="610" _type="InsertStringCommand" date="Mon Nov 20 17:06:51 EST 2023" starttimestamp="1700516585068" timestamp="1426912" timestamp2="1426912">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="611" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:06:52 EST 2023" starttimestamp="1700516585068" timestamp="1427270" />
  <Command __id="612" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:06:52 EST 2023" starttimestamp="1700516585068" timestamp="1427373" />
  <Command __id="613" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:06:52 EST 2023" starttimestamp="1700516585068" timestamp="1427383" />
  <Command __id="615" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 17:06:54 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="1429034" />
  <Command __id="619" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:06:58 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1433275" type="Run" />
  <Command __id="620" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:06:58 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1433275" type="Run" />
  <Command __id="621" _type="ConsoleOutput" date="Mon Nov 20 17:06:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434913" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="622" _type="ConsoleOutput" date="Mon Nov 20 17:06:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434915" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="623" _type="ConsoleOutput" date="Mon Nov 20 17:06:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434931" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="624" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434934" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="625" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434936" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="626" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434939" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):2
Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5)¶(5)¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:BaseCase"), Diff(DELETE,"SExpression"), Diff(INSERT,"List"), Diff(EQUAL,"ToStringChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="627" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434942" type="ConsoleOutput">
    <outputString><![CDATA[5(("A" . "6"))((7))))
5(("A" . "6"))((7))))
5(("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"5(("A" . "6"))((7))))¶5(("A" . "6"))((7))))¶5(("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="628" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434943" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5(("A" . "6"))((7))))¶5(("A" . "6"))((7))))¶5(("A" . "6"))((7))))"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="629" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434944" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="630" _type="ExceptionCommand" date="Mon Nov 20 17:07:00 EST 2023" starttimestamp="1700516585068" timestamp="1434948" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="631" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434950" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6"))((7)))"), Diff(INSERT,"	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="632" _type="ConsoleOutput" date="Mon Nov 20 17:07:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1434976" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"348"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"556"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:2"), Diff(INSERT,"30"), Diff(EQUAL,"7"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:2"), Diff(DELETE,"19"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1444"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1906"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1585"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"153"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1531"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(INSERT,"2"), Diff(EQUAL,"4"), Diff(DELETE,"06"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(INSERT,"1"), Diff(EQUAL,"3"), Diff(DELETE,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"46"), Diff(INSERT,"10"), Diff(EQUAL,"9)¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:277)"), Diff(INSERT,"DispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="633" _type="ExceptionCommand" date="Mon Nov 20 17:07:00 EST 2023" starttimestamp="1700516585068" timestamp="1434982" type="Exception">
    <exceptionString><![CDATA[5(("A" . "6"))((7))))
5(("A" . "6"))((7))))
5(("A" . "6"))((7))))
5(("A" . "6"))((7))))
5(("A" . "6"))((7))))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="634" _type="ShellCommand" date="Mon Nov 20 17:07:09 EST 2023" starttimestamp="1700516585068" timestamp="1444608" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="635" _type="LocalChecksRawCommand" date="Mon Nov 20 17:07:09 EST 2023" starttimestamp="1700516585068" timestamp="1444610">
    <CSVRow><![CDATA[77,Mon Nov 20 17:07:00 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,42,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="636" _type="LocalChecksRawCommand" date="Mon Nov 20 17:07:09 EST 2023" starttimestamp="1700516585068" timestamp="1444610">
    <CSVRow><![CDATA[77,Mon Nov 20 17:07:00 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,42,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="637" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:07:09 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1444616" type="Run" />
  <Command __id="638" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:07:09 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1444616" type="Run" />
  <Command __id="639" _type="MoveCaretCommand" caretOffset="640" date="Mon Nov 20 17:07:11 EST 2023" docOffset="757" starttimestamp="1700516585068" timestamp="1446543" />
  <Command __id="641" _type="MoveCaretCommand" caretOffset="873" date="Mon Nov 20 17:07:12 EST 2023" docOffset="999" starttimestamp="1700516585068" timestamp="1447462" />
  <Command __id="642" _type="SelectTextCommand" caretOffset="868" date="Mon Nov 20 17:07:24 EST 2023" end="874" start="868" starttimestamp="1700516585068" timestamp="1459287" />
  <Command __id="644" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:07:24 EST 2023" starttimestamp="1700516585068" timestamp="1459816" />
  <Command __id="645" _type="SelectTextCommand" caretOffset="1072" date="Mon Nov 20 17:07:27 EST 2023" end="1079" start="1072" starttimestamp="1700516585068" timestamp="1462722" />
  <Command __id="647" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 17:07:28 EST 2023" starttimestamp="1700516585068" timestamp="1463288" />
  <Command __id="649" _type="InsertStringCommand" date="Mon Nov 20 17:07:29 EST 2023" starttimestamp="1700516585068" timestamp="1463934" timestamp2="1463934">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="650" _type="MoveCaretCommand" caretOffset="1062" date="Mon Nov 20 17:07:29 EST 2023" docOffset="1188" starttimestamp="1700516585068" timestamp="1464402" />
  <Command __id="651" _type="ShellCommand" date="Mon Nov 20 17:07:33 EST 2023" starttimestamp="1700516585068" timestamp="1468166" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="652" _type="ShellCommand" date="Mon Nov 20 17:07:47 EST 2023" starttimestamp="1700516585068" timestamp="1482486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="653" _type="ShellCommand" date="Mon Nov 20 17:07:51 EST 2023" starttimestamp="1700516585068" timestamp="1486550" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="654" _type="ShellCommand" date="Mon Nov 20 17:07:59 EST 2023" starttimestamp="1700516585068" timestamp="1494606" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="655" _type="ShellCommand" date="Mon Nov 20 17:08:00 EST 2023" starttimestamp="1700516585068" timestamp="1494967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="656" _type="ShellCommand" date="Mon Nov 20 17:08:05 EST 2023" starttimestamp="1700516585068" timestamp="1500087" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="657" _type="ShellCommand" date="Mon Nov 20 17:08:05 EST 2023" starttimestamp="1700516585068" timestamp="1500820" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="658" _type="ShellCommand" date="Mon Nov 20 17:08:06 EST 2023" starttimestamp="1700516585068" timestamp="1501108" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="659" _type="ShellCommand" date="Mon Nov 20 17:08:06 EST 2023" starttimestamp="1700516585068" timestamp="1501621" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="660" _type="ShellCommand" date="Mon Nov 20 17:08:07 EST 2023" starttimestamp="1700516585068" timestamp="1502538" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="661" _type="ShellCommand" date="Mon Nov 20 17:08:08 EST 2023" starttimestamp="1700516585068" timestamp="1503179" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="662" _type="ShellCommand" date="Mon Nov 20 17:08:09 EST 2023" starttimestamp="1700516585068" timestamp="1504087" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="663" _type="ShellCommand" date="Mon Nov 20 17:08:09 EST 2023" starttimestamp="1700516585068" timestamp="1504765" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="664" _type="ShellCommand" date="Mon Nov 20 17:08:18 EST 2023" starttimestamp="1700516585068" timestamp="1513737" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="665" _type="ShellCommand" date="Mon Nov 20 17:08:19 EST 2023" starttimestamp="1700516585068" timestamp="1514337" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="666" _type="ShellCommand" date="Mon Nov 20 17:08:27 EST 2023" starttimestamp="1700516585068" timestamp="1522692" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="667" _type="ShellCommand" date="Mon Nov 20 17:08:33 EST 2023" starttimestamp="1700516585068" timestamp="1527983" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="668" _type="ShellCommand" date="Mon Nov 20 17:08:49 EST 2023" starttimestamp="1700516585068" timestamp="1544427" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="669" _type="ShellCommand" date="Mon Nov 20 17:08:50 EST 2023" starttimestamp="1700516585068" timestamp="1545558" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="670" _type="ShellCommand" date="Mon Nov 20 17:08:54 EST 2023" starttimestamp="1700516585068" timestamp="1549586" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="614" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:06:54 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1428989">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="640" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:07:12 EST 2023" docASTNodeCount="215" docActiveCodeLength="1324" docExpressionCount="155" docLength="1324" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1447426">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(INSERT," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return "(" + this.getHead().toString();		}else {			return this.getHead().toString() + this.getTail().toString()"), Diff(DELETE," + ")""), Diff(EQUAL,";			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return "(" + this.getHead().toString();
		}else {
			return this.getHead().toString() + this.getTail().toString();	
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="643" _type="Delete" date="Mon Nov 20 17:07:24 EST 2023" docASTNodeCount="213" docActiveCodeLength="1318" docExpressionCount="153" docLength="1318" endLine="36" length="6" offset="994" startLine="36" starttimestamp="1700516585068" timestamp="1459808">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <DocumentChange __id="646" _type="Delete" date="Mon Nov 20 17:07:28 EST 2023" docASTNodeCount="211" docActiveCodeLength="1311" docExpressionCount="151" docLength="1311" endLine="45" length="7" offset="1198" startLine="45" starttimestamp="1700516585068" timestamp="1463283">
    <text><![CDATA[ "(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="648" _type="Insert" date="Mon Nov 20 17:07:29 EST 2023" docASTNodeCount="211" docActiveCodeLength="1312" docExpressionCount="151" docLength="1312" length="1" offset="1198" starttimestamp="1700516585068" timestamp="1463932">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="671" _type="MoveCaretCommand" caretOffset="812" date="Mon Nov 20 17:08:57 EST 2023" docOffset="938" starttimestamp="1700516585068" timestamp="1552175" />
  <Command __id="673" _type="InsertStringCommand" date="Mon Nov 20 17:08:59 EST 2023" starttimestamp="1700516585068" timestamp="1554523" timestamp2="1554523">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="675" _type="InsertStringCommand" date="Mon Nov 20 17:09:00 EST 2023" starttimestamp="1700516585068" timestamp="1554940" timestamp2="1554940">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="677" _type="InsertStringCommand" date="Mon Nov 20 17:09:00 EST 2023" starttimestamp="1700516585068" timestamp="1555825" timestamp2="1555825">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="678" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:09:01 EST 2023" starttimestamp="1700516585068" timestamp="1556629" />
  <Command __id="679" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 17:09:01 EST 2023" starttimestamp="1700516585068" timestamp="1556738" />
  <Command __id="681" _type="InsertStringCommand" date="Mon Nov 20 17:09:02 EST 2023" starttimestamp="1700516585068" timestamp="1557597" timestamp2="1557597">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="672" _type="Insert" date="Mon Nov 20 17:08:59 EST 2023" docASTNodeCount="213" docActiveCodeLength="1316" docExpressionCount="153" docLength="1316" length="4" offset="938" repeat="4" starttimestamp="1700516585068" timestamp="1554518" timestamp2="1557595">
    <text><![CDATA["("+]]></text>
  </DocumentChange>
  <Command __id="682" _type="MoveCaretCommand" caretOffset="872" date="Mon Nov 20 17:09:03 EST 2023" docOffset="998" starttimestamp="1700516585068" timestamp="1558743" />
  <DocumentChange __id="683" _type="Insert" date="Mon Nov 20 17:09:04 EST 2023" docASTNodeCount="214" docActiveCodeLength="1320" docExpressionCount="154" docLength="1320" length="4" offset="998" repeat="3" starttimestamp="1700516585068" timestamp="1559429" timestamp2="1560711">
    <text><![CDATA[+")"]]></text>
  </DocumentChange>
  <Command __id="684" _type="InsertStringCommand" date="Mon Nov 20 17:09:04 EST 2023" starttimestamp="1700516585068" timestamp="1559433" timestamp2="1559433">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="686" _type="InsertStringCommand" date="Mon Nov 20 17:09:04 EST 2023" starttimestamp="1700516585068" timestamp="1559674" timestamp2="1559674">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="688" _type="InsertStringCommand" date="Mon Nov 20 17:09:05 EST 2023" starttimestamp="1700516585068" timestamp="1560713" timestamp2="1560713">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="689" _type="MoveCaretCommand" caretOffset="877" date="Mon Nov 20 17:09:06 EST 2023" docOffset="1003" starttimestamp="1700516585068" timestamp="1561209" />
  <Command __id="690" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:09:06 EST 2023" starttimestamp="1700516585068" timestamp="1561347" />
  <Command __id="691" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:09:06 EST 2023" starttimestamp="1700516585068" timestamp="1561448" />
  <Command __id="692" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:09:06 EST 2023" starttimestamp="1700516585068" timestamp="1561456" />
  <Command __id="694" _type="MoveCaretCommand" caretOffset="640" date="Mon Nov 20 17:09:08 EST 2023" docOffset="757" starttimestamp="1700516585068" timestamp="1563725" />
  <Command __id="695" _type="MoveCaretCommand" caretOffset="699" date="Mon Nov 20 17:09:09 EST 2023" docOffset="816" starttimestamp="1700516585068" timestamp="1564127" />
  <Command __id="696" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:09:11 EST 2023" starttimestamp="1700516585068" timestamp="1566398" />
  <Command __id="697" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:09:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1566510" type="Run" />
  <Command __id="698" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:09:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1566510" type="Run" />
  <Command __id="699" _type="ShellCommand" date="Mon Nov 20 17:09:11 EST 2023" starttimestamp="1700516585068" timestamp="1566811" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="700" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568895" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="701" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568897" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="702" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568912" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="703" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568915" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="704" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568917" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="705" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568918" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="706" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568921" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="707" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568922" type="ConsoleOutput">
    <outputString><![CDATA[(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="708" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568923" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="709" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568924" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="710" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568926" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="711" _type="ConsoleOutput" date="Mon Nov 20 17:09:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568928" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="712" _type="ConsoleOutput" date="Mon Nov 20 17:09:14 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1568962" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(INSERT,"663"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:5"), Diff(DELETE,"7"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"71"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"743"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="713" _type="ExceptionCommand" date="Mon Nov 20 17:09:14 EST 2023" starttimestamp="1700516585068" timestamp="1568967" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="693" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:09:08 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1563687">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="714" _type="ShellCommand" date="Mon Nov 20 17:09:47 EST 2023" starttimestamp="1700516585068" timestamp="1602500" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="715" _type="LocalChecksRawCommand" date="Mon Nov 20 17:09:47 EST 2023" starttimestamp="1700516585068" timestamp="1602508">
    <CSVRow><![CDATA[78,Mon Nov 20 17:09:14 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,43,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="716" _type="LocalChecksRawCommand" date="Mon Nov 20 17:09:47 EST 2023" starttimestamp="1700516585068" timestamp="1602508">
    <CSVRow><![CDATA[78,Mon Nov 20 17:09:14 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,43,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="718" _type="MoveCaretCommand" caretOffset="877" date="Mon Nov 20 17:09:49 EST 2023" docOffset="1003" starttimestamp="1700516585068" timestamp="1604037" />
  <Command __id="719" _type="MoveCaretCommand" caretOffset="1091" date="Mon Nov 20 17:09:57 EST 2023" docOffset="1217" starttimestamp="1700516585068" timestamp="1612529" />
  <Command __id="720" _type="ShellCommand" date="Mon Nov 20 17:09:58 EST 2023" starttimestamp="1700516585068" timestamp="1613416" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="721" _type="ShellCommand" date="Mon Nov 20 17:10:02 EST 2023" starttimestamp="1700516585068" timestamp="1617597" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="722" _type="ShellCommand" date="Mon Nov 20 17:10:09 EST 2023" starttimestamp="1700516585068" timestamp="1624699" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="723" _type="ShellCommand" date="Mon Nov 20 17:10:10 EST 2023" starttimestamp="1700516585068" timestamp="1625554" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="724" _type="ShellCommand" date="Mon Nov 20 17:10:11 EST 2023" starttimestamp="1700516585068" timestamp="1626920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="725" _type="ShellCommand" date="Mon Nov 20 17:10:33 EST 2023" starttimestamp="1700516585068" timestamp="1648866" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="726" _type="ShellCommand" date="Mon Nov 20 17:10:34 EST 2023" starttimestamp="1700516585068" timestamp="1649330" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="727" _type="ShellCommand" date="Mon Nov 20 17:10:59 EST 2023" starttimestamp="1700516585068" timestamp="1674152" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="728" _type="ShellCommand" date="Mon Nov 20 17:11:02 EST 2023" starttimestamp="1700516585068" timestamp="1677602" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="729" _type="ShellCommand" date="Mon Nov 20 17:11:07 EST 2023" starttimestamp="1700516585068" timestamp="1682279" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="730" _type="MoveCaretCommand" caretOffset="315" date="Mon Nov 20 17:11:11 EST 2023" docOffset="441" starttimestamp="1700516585068" timestamp="1686447" />
  <Command __id="731" _type="MoveCaretCommand" caretOffset="245" date="Mon Nov 20 17:11:12 EST 2023" docOffset="371" starttimestamp="1700516585068" timestamp="1686997" />
  <Command __id="732" _type="MoveCaretCommand" caretOffset="280" date="Mon Nov 20 17:11:12 EST 2023" docOffset="406" starttimestamp="1700516585068" timestamp="1687565" />
  <Command __id="733" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 17:11:13 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="1688065" />
  <Command __id="734" _type="MoveCaretCommand" caretOffset="279" date="Mon Nov 20 17:11:13 EST 2023" docOffset="405" starttimestamp="1700516585068" timestamp="1688564" />
  <Command __id="735" _type="MoveCaretCommand" caretOffset="273" date="Mon Nov 20 17:11:14 EST 2023" docOffset="399" starttimestamp="1700516585068" timestamp="1689246" />
  <Command __id="736" _type="MoveCaretCommand" caretOffset="279" date="Mon Nov 20 17:11:14 EST 2023" docOffset="405" starttimestamp="1700516585068" timestamp="1689929" />
  <Command __id="737" _type="MoveCaretCommand" caretOffset="274" date="Mon Nov 20 17:11:15 EST 2023" docOffset="400" starttimestamp="1700516585068" timestamp="1690394" />
  <Command __id="738" _type="MoveCaretCommand" caretOffset="279" date="Mon Nov 20 17:11:15 EST 2023" docOffset="405" starttimestamp="1700516585068" timestamp="1690882" />
  <Command __id="739" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 17:11:16 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="1691350" />
  <Command __id="740" _type="MoveCaretCommand" caretOffset="280" date="Mon Nov 20 17:11:16 EST 2023" docOffset="406" starttimestamp="1700516585068" timestamp="1691830" />
  <Command __id="741" _type="MoveCaretCommand" caretOffset="274" date="Mon Nov 20 17:11:17 EST 2023" docOffset="400" starttimestamp="1700516585068" timestamp="1692281" />
  <Command __id="742" _type="MoveCaretCommand" caretOffset="281" date="Mon Nov 20 17:11:17 EST 2023" docOffset="407" starttimestamp="1700516585068" timestamp="1692815" />
  <Command __id="743" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 17:11:18 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="1693298" />
  <Command __id="744" _type="MoveCaretCommand" caretOffset="281" date="Mon Nov 20 17:11:18 EST 2023" docOffset="407" starttimestamp="1700516585068" timestamp="1693798" />
  <Command __id="745" _type="MoveCaretCommand" caretOffset="277" date="Mon Nov 20 17:11:19 EST 2023" docOffset="403" starttimestamp="1700516585068" timestamp="1694262" />
  <Command __id="746" _type="MoveCaretCommand" caretOffset="281" date="Mon Nov 20 17:11:19 EST 2023" docOffset="407" starttimestamp="1700516585068" timestamp="1694740" />
  <Command __id="747" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 17:11:20 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="1695181" />
  <Command __id="748" _type="MoveCaretCommand" caretOffset="282" date="Mon Nov 20 17:11:20 EST 2023" docOffset="408" starttimestamp="1700516585068" timestamp="1695731" />
  <Command __id="749" _type="MoveCaretCommand" caretOffset="276" date="Mon Nov 20 17:11:21 EST 2023" docOffset="402" starttimestamp="1700516585068" timestamp="1696211" />
  <Command __id="750" _type="MoveCaretCommand" caretOffset="281" date="Mon Nov 20 17:11:21 EST 2023" docOffset="407" starttimestamp="1700516585068" timestamp="1696697" />
  <Command __id="751" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 17:11:22 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="1697148" />
  <Command __id="752" _type="MoveCaretCommand" caretOffset="279" date="Mon Nov 20 17:11:22 EST 2023" docOffset="405" starttimestamp="1700516585068" timestamp="1697648" />
  <Command __id="753" _type="MoveCaretCommand" caretOffset="279" date="Mon Nov 20 17:11:24 EST 2023" docOffset="405" starttimestamp="1700516585068" timestamp="1699230" />
  <Command __id="754" _type="SelectTextCommand" caretOffset="282" date="Mon Nov 20 17:11:24 EST 2023" end="282" start="278" starttimestamp="1700516585068" timestamp="1699382" />
  <Command __id="755" _type="ShellCommand" date="Mon Nov 20 17:11:44 EST 2023" starttimestamp="1700516585068" timestamp="1719062" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="756" _type="ShellCommand" date="Mon Nov 20 17:13:00 EST 2023" starttimestamp="1700516585068" timestamp="1795430" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="757" _type="MoveCaretCommand" caretOffset="1027" date="Mon Nov 20 17:13:00 EST 2023" docOffset="1153" starttimestamp="1700516585068" timestamp="1795501" />
  <Command __id="758" _type="SelectTextCommand" caretOffset="1035" date="Mon Nov 20 17:13:00 EST 2023" end="1035" start="1009" starttimestamp="1700516585068" timestamp="1795635" />
  <Command __id="759" _type="CopyCommand" date="Mon Nov 20 17:13:01 EST 2023" starttimestamp="1700516585068" timestamp="1796498" />
  <Command __id="760" _type="MoveCaretCommand" caretOffset="1176" date="Mon Nov 20 17:13:02 EST 2023" docOffset="1302" starttimestamp="1700516585068" timestamp="1797039" />
  <Command __id="761" _type="SelectTextCommand" caretOffset="1179" date="Mon Nov 20 17:13:02 EST 2023" end="1179" start="1171" starttimestamp="1700516585068" timestamp="1797170" />
  <Command __id="763" _type="PasteCommand" date="Mon Nov 20 17:13:02 EST 2023" starttimestamp="1700516585068" timestamp="1797282" />
  <Command __id="764" _type="MoveCaretCommand" caretOffset="1193" date="Mon Nov 20 17:13:02 EST 2023" docOffset="1319" starttimestamp="1700516585068" timestamp="1797796" />
  <Command __id="765" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:13:03 EST 2023" starttimestamp="1700516585068" timestamp="1797978" />
  <Command __id="766" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:13:03 EST 2023" starttimestamp="1700516585068" timestamp="1798078" />
  <Command __id="767" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:13:03 EST 2023" starttimestamp="1700516585068" timestamp="1798086" />
  <Command __id="768" _type="MoveCaretCommand" caretOffset="1156" date="Mon Nov 20 17:13:15 EST 2023" docOffset="1282" starttimestamp="1700516585068" timestamp="1810273" />
  <Command __id="769" _type="SelectTextCommand" caretOffset="838" date="Mon Nov 20 17:13:17 EST 2023" end="838" start="817" starttimestamp="1700516585068" timestamp="1812856" />
  <Command __id="770" _type="CopyCommand" date="Mon Nov 20 17:13:18 EST 2023" starttimestamp="1700516585068" timestamp="1812979" />
  <Command __id="771" _type="MoveCaretCommand" caretOffset="1156" date="Mon Nov 20 17:13:19 EST 2023" docOffset="1282" starttimestamp="1700516585068" timestamp="1814106" />
  <Command __id="773" _type="PasteCommand" date="Mon Nov 20 17:13:19 EST 2023" starttimestamp="1700516585068" timestamp="1814259" />
  <Command __id="774" _type="MoveCaretCommand" caretOffset="1107" date="Mon Nov 20 17:13:20 EST 2023" docOffset="1233" starttimestamp="1700516585068" timestamp="1815438" />
  <Command __id="775" _type="MoveCaretCommand" caretOffset="1156" date="Mon Nov 20 17:13:23 EST 2023" docOffset="1282" starttimestamp="1700516585068" timestamp="1818406" />
  <Command __id="777" _type="InsertStringCommand" date="Mon Nov 20 17:13:24 EST 2023" starttimestamp="1700516585068" timestamp="1819274" timestamp2="1819274">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="778" _type="MoveCaretCommand" caretOffset="1192" date="Mon Nov 20 17:13:25 EST 2023" docOffset="1318" starttimestamp="1700516585068" timestamp="1820339" />
  <Command __id="780" _type="InsertStringCommand" date="Mon Nov 20 17:13:26 EST 2023" starttimestamp="1700516585068" timestamp="1820954" timestamp2="1820954">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="781" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 17:13:26 EST 2023" docOffset="1006" starttimestamp="1700516585068" timestamp="1821471" />
  <Command __id="782" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:13:27 EST 2023" starttimestamp="1700516585068" timestamp="1822443" />
  <Command __id="783" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:13:27 EST 2023" starttimestamp="1700516585068" timestamp="1822544" />
  <Command __id="784" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:13:27 EST 2023" starttimestamp="1700516585068" timestamp="1822551" />
  <Command __id="717" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:09:49 EST 2023" docASTNodeCount="214" docActiveCodeLength="1320" docExpressionCount="154" docLength="1320" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1603989">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "), Diff(INSERT,""("+"), Diff(EQUAL,"((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(DELETE," + "), Diff(INSERT,"+"), Diff(EQUAL,"")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return"), Diff(DELETE," "(" +"), Diff(EQUAL," this.getHead().toString();		}else {			return this.getHead().toString() + this.getTail().toString();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + this.getTail().toString();	
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="762" _type="Replace" date="Mon Nov 20 17:13:02 EST 2023" docASTNodeCount="214" docActiveCodeLength="1338" docExpressionCount="154" docLength="1338" endLine="47" insertionLength="26" int_docASTNodeCount="214" int_docActiveCodeLength="1312" int_docExpressionCount="154" int_docLength="1312" length="8" offset="1297" startLine="47" starttimestamp="1700516585068" timestamp="1797272">
    <deletedText><![CDATA[toString]]></deletedText>
    <insertedText><![CDATA[toStringAsListHelperPublic]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="772" _type="Insert" date="Mon Nov 20 17:13:19 EST 2023" docASTNodeCount="217" docActiveCodeLength="1359" docExpressionCount="156" docLength="1359" length="21" offset="1282" starttimestamp="1700516585068" timestamp="1814253">
    <text><![CDATA[(AbstractSExpression)]]></text>
  </DocumentChange>
  <DocumentChange __id="776" _type="Insert" date="Mon Nov 20 17:13:24 EST 2023" docASTNodeCount="218" docActiveCodeLength="1360" docExpressionCount="157" docLength="1360" length="1" offset="1282" starttimestamp="1700516585068" timestamp="1819269">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="779" _type="Insert" date="Mon Nov 20 17:13:26 EST 2023" docASTNodeCount="218" docActiveCodeLength="1361" docExpressionCount="157" docLength="1361" length="1" offset="1318" starttimestamp="1700516585068" timestamp="1820950">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="785" _type="ShellCommand" date="Mon Nov 20 17:13:29 EST 2023" starttimestamp="1700516585068" timestamp="1823947" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="786" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:13:29 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1824524" type="Run" />
  <Command __id="787" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:13:29 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1824524" type="Run" />
  <Command __id="788" _type="ShellCommand" date="Mon Nov 20 17:13:29 EST 2023" starttimestamp="1700516585068" timestamp="1824535" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="790" _type="MoveCaretCommand" caretOffset="699" date="Mon Nov 20 17:13:33 EST 2023" docOffset="816" starttimestamp="1700516585068" timestamp="1828471" />
  <Command __id="791" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:13:35 EST 2023" starttimestamp="1700516585068" timestamp="1830327" />
  <Command __id="792" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:13:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1830424" type="Run" />
  <Command __id="793" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:13:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1830424" type="Run" />
  <Command __id="794" _type="ShellCommand" date="Mon Nov 20 17:13:35 EST 2023" starttimestamp="1700516585068" timestamp="1830720" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="795" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833511" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="796" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833513" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="797" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833514" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="798" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833528" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="799" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833532" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="800" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833534" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="801" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833536" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="802" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833538" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="803" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833539" type="ConsoleOutput">
    <outputString><![CDATA[(5(("A" . "6"))(7))
(5(("A" . "6"))(7))
(5(("A" . "6"))(7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5(("A" . "6"))(7))¶(5(("A" . "6"))(7))¶(5(("A" . "6"))(7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="804" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833540" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5(("A" . "6"))(7))¶(5(("A" . "6"))(7))¶(5(("A" . "6"))(7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="805" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833541" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="806" _type="ExceptionCommand" date="Mon Nov 20 17:13:38 EST 2023" starttimestamp="1700516585068" timestamp="1833543" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="807" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833544" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="808" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833552" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"12"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶")]]]></diff>
  </Command>
  <Command __id="809" _type="ConsoleOutput" date="Mon Nov 20 17:13:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="1833584" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(INSERT,"538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"135"), Diff(EQUAL,"7"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"57"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRun"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Contai"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"90"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"2"), Diff(INSERT,"44"), Diff(EQUAL,"88)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.jun"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.secur"), Diff(EQUAL,"it"), Diff(INSERT,"y"), Diff(EQUAL,".A"), Diff(DELETE,"GradableJUnitSuite.test(AGradableJUnitSuit"), Diff(INSERT,"ccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"348"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"9"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="810" _type="ExceptionCommand" date="Mon Nov 20 17:13:38 EST 2023" starttimestamp="1700516585068" timestamp="1833590" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="811" _type="ShellCommand" date="Mon Nov 20 17:13:43 EST 2023" starttimestamp="1700516585068" timestamp="1838846" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="812" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 17:13:43 EST 2023" docOffset="453" starttimestamp="1700516585068" timestamp="1838911" />
  <Command __id="789" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:13:33 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1828415">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="813" _type="ShellCommand" date="Mon Nov 20 17:13:45 EST 2023" starttimestamp="1700516585068" timestamp="1840095" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="814" _type="LocalChecksRawCommand" date="Mon Nov 20 17:13:45 EST 2023" starttimestamp="1700516585068" timestamp="1840097">
    <CSVRow><![CDATA[79,Mon Nov 20 17:13:38 EST 2023,10,2,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic+ ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,44,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="815" _type="LocalChecksRawCommand" date="Mon Nov 20 17:13:45 EST 2023" starttimestamp="1700516585068" timestamp="1840097">
    <CSVRow><![CDATA[79,Mon Nov 20 17:13:38 EST 2023,10,2,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic+ ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,44,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="816" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:13:45 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1840366" type="Run" />
  <Command __id="817" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:13:45 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1840366" type="Run" />
  <Command __id="818" _type="ShellCommand" date="Mon Nov 20 17:13:45 EST 2023" starttimestamp="1700516585068" timestamp="1840378" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="819" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:13:46 EST 2023" docASTNodeCount="218" docActiveCodeLength="1361" docExpressionCount="157" docLength="1361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1841459">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + "), Diff(INSERT,"((AbstractSExpression)"), Diff(EQUAL,"this.getTail()"), Diff(INSERT,")"), Diff(EQUAL,".toString"), Diff(INSERT,"AsListHelperPublic"), Diff(EQUAL,"();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="820" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 17:13:46 EST 2023" docOffset="1006" starttimestamp="1700516585068" timestamp="1841493" />
  <Command __id="821" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:13:47 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1842900">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="822" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 17:13:48 EST 2023" docOffset="453" starttimestamp="1700516585068" timestamp="1842967" />
  <Command __id="823" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:13:51 EST 2023" docASTNodeCount="218" docActiveCodeLength="1361" docExpressionCount="157" docLength="1361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1846467">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="824" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 17:13:51 EST 2023" docOffset="1006" starttimestamp="1700516585068" timestamp="1846516" />
  <Command __id="826" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 17:13:58 EST 2023" docOffset="1006" starttimestamp="1700516585068" timestamp="1853897" />
  <Command __id="825" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:13:58 EST 2023" docASTNodeCount="218" docActiveCodeLength="1361" docExpressionCount="157" docLength="1361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1853850">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="827" _type="MoveCaretCommand" caretOffset="665" date="Mon Nov 20 17:14:02 EST 2023" docOffset="791" starttimestamp="1700516585068" timestamp="1857807" />
  <Command __id="828" _type="MoveCaretCommand" caretOffset="665" date="Mon Nov 20 17:14:02 EST 2023" docOffset="791" starttimestamp="1700516585068" timestamp="1857807" />
  <Command __id="829" _type="InsertStringCommand" date="Mon Nov 20 17:14:03 EST 2023" starttimestamp="1700516585068" timestamp="1857963" timestamp2="1857963">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="830" _type="InsertStringCommand" date="Mon Nov 20 17:14:03 EST 2023" starttimestamp="1700516585068" timestamp="1857963" timestamp2="1857963">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="832" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 17:14:04 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="1859431" />
  <Command __id="833" _type="ShellCommand" date="Mon Nov 20 17:14:05 EST 2023" starttimestamp="1700516585068" timestamp="1860317" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="831" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:14:04 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="1859331">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="834" _type="ShellCommand" date="Mon Nov 20 17:16:43 EST 2023" starttimestamp="1700516585068" timestamp="2018394" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="835" _type="ShellCommand" date="Mon Nov 20 17:16:43 EST 2023" starttimestamp="1700516585068" timestamp="2018833" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="836" _type="ShellCommand" date="Mon Nov 20 17:16:44 EST 2023" starttimestamp="1700516585068" timestamp="2019214" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="838" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 17:16:45 EST 2023" docOffset="223" starttimestamp="1700516585068" timestamp="2020760" />
  <Command __id="839" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:16:48 EST 2023" starttimestamp="1700516585068" timestamp="2023632" />
  <Command __id="840" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 17:16:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2023728" type="Run" />
  <Command __id="841" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Mon Nov 20 17:16:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2023728" type="Run" />
  <Command __id="842" _type="ShellCommand" date="Mon Nov 20 17:16:50 EST 2023" starttimestamp="1700516585068" timestamp="2025620" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="843" _type="ShellCommand" date="Mon Nov 20 17:16:53 EST 2023" starttimestamp="1700516585068" timestamp="2028080" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="844" _type="PasteCommand" date="Mon Nov 20 17:16:53 EST 2023" starttimestamp="1700516585068" timestamp="2028524" />
  <Command __id="845" _type="ConsoleOutput" date="Mon Nov 20 17:16:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2029934" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5"), Diff(INSERT,"(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="846" _type="ShellCommand" date="Mon Nov 20 17:16:55 EST 2023" starttimestamp="1700516585068" timestamp="2030479" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="847" _type="ShellCommand" date="Mon Nov 20 17:16:58 EST 2023" starttimestamp="1700516585068" timestamp="2033725" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="848" _type="PasteCommand" date="Mon Nov 20 17:16:59 EST 2023" starttimestamp="1700516585068" timestamp="2034118" />
  <Command __id="849" _type="ConsoleOutput" date="Mon Nov 20 17:16:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2034433" type="ConsoleOutput">
    <outputString><![CDATA[(6.25)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(INSERT,"6.2"), Diff(EQUAL,"5)¶")]]]></diff>
  </Command>
  <Command __id="850" _type="ShellCommand" date="Mon Nov 20 17:17:00 EST 2023" starttimestamp="1700516585068" timestamp="2035011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="851" _type="ShellCommand" date="Mon Nov 20 17:17:01 EST 2023" starttimestamp="1700516585068" timestamp="2035944" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="852" _type="ShellCommand" date="Mon Nov 20 17:17:01 EST 2023" starttimestamp="1700516585068" timestamp="2036768" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="837" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:16:45 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2020702">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class index {

	public static void main(String[] args) {
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="853" _type="ShellCommand" date="Mon Nov 20 17:17:03 EST 2023" starttimestamp="1700516585068" timestamp="2038214" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="854" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:17:09 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2044806">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="855" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 17:17:09 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="2044851" />
  <Command __id="856" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:17:11 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2046311">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="857" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 17:17:11 EST 2023" docOffset="223" starttimestamp="1700516585068" timestamp="2046360" />
  <Command __id="858" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:17:25 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2060130">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="859" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 17:17:25 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="2060172" />
  <Command __id="861" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 17:17:27 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="2062544" />
  <Command __id="860" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:17:27 EST 2023" docASTNodeCount="218" docActiveCodeLength="1361" docExpressionCount="157" docLength="1361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2062494">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="862" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 17:17:37 EST 2023" docOffset="1232" starttimestamp="1700516585068" timestamp="2072386" />
  <Command __id="863" _type="MoveCaretCommand" caretOffset="1107" date="Mon Nov 20 17:17:38 EST 2023" docOffset="1233" starttimestamp="1700516585068" timestamp="2073099" />
  <Command __id="864" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 17:17:38 EST 2023" docOffset="1232" starttimestamp="1700516585068" timestamp="2073734" />
  <Command __id="865" _type="MoveCaretCommand" caretOffset="1107" date="Mon Nov 20 17:17:39 EST 2023" docOffset="1233" starttimestamp="1700516585068" timestamp="2074270" />
  <Command __id="866" _type="MoveCaretCommand" caretOffset="1154" date="Mon Nov 20 17:17:39 EST 2023" docOffset="1280" starttimestamp="1700516585068" timestamp="2074904" />
  <Command __id="867" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 17:17:40 EST 2023" docOffset="1283" starttimestamp="1700516585068" timestamp="2075403" />
  <Command __id="868" _type="MoveCaretCommand" caretOffset="1156" date="Mon Nov 20 17:17:41 EST 2023" docOffset="1282" starttimestamp="1700516585068" timestamp="2076237" />
  <DocumentChange __id="869" _type="Insert" date="Mon Nov 20 17:17:42 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" length="6" offset="1282" repeat="5" starttimestamp="1700516585068" timestamp="2076986" timestamp2="2079345">
    <text><![CDATA[" " + ]]></text>
  </DocumentChange>
  <Command __id="870" _type="InsertStringCommand" date="Mon Nov 20 17:17:42 EST 2023" starttimestamp="1700516585068" timestamp="2076996" timestamp2="2076996">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="872" _type="InsertStringCommand" date="Mon Nov 20 17:17:42 EST 2023" starttimestamp="1700516585068" timestamp="2077638" timestamp2="2077638">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="873" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 17:17:42 EST 2023" starttimestamp="1700516585068" timestamp="2077808" />
  <Command __id="875" _type="InsertStringCommand" date="Mon Nov 20 17:17:44 EST 2023" starttimestamp="1700516585068" timestamp="2079189" timestamp2="2079189">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="877" _type="InsertStringCommand" date="Mon Nov 20 17:17:44 EST 2023" starttimestamp="1700516585068" timestamp="2079280" timestamp2="2079280">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Mon Nov 20 17:17:44 EST 2023" starttimestamp="1700516585068" timestamp="2079348" timestamp2="2079348">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="880" _type="MoveCaretCommand" caretOffset="993" date="Mon Nov 20 17:17:44 EST 2023" docOffset="1119" starttimestamp="1700516585068" timestamp="2079917" />
  <Command __id="881" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 17:17:45 EST 2023" starttimestamp="1700516585068" timestamp="2080088" />
  <Command __id="882" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:17:45 EST 2023" starttimestamp="1700516585068" timestamp="2080189" />
  <Command __id="883" _type="EclipseCommand" commandID="" date="Mon Nov 20 17:17:45 EST 2023" starttimestamp="1700516585068" timestamp="2080196" />
  <Command __id="884" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:17:47 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2082687">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="885" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 17:17:47 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="2082736" />
  <Command __id="887" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 17:17:49 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="2084562" />
  <Command __id="888" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:17:51 EST 2023" starttimestamp="1700516585068" timestamp="2086524" />
  <Command __id="889" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:17:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2086609" type="Run" />
  <Command __id="890" _type="ShellCommand" date="Mon Nov 20 17:17:51 EST 2023" starttimestamp="1700516585068" timestamp="2086920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="891" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089258" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(6.25)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="892" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089259" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="893" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089260" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="894" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089260" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="895" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089274" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="896" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089277" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="897" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089279" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="898" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089281" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="899" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089282" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):1¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="900" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089285" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="901" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089285" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="902" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089286" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="903" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089288" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="904" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089289" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="905" _type="ConsoleOutput" date="Mon Nov 20 17:17:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2089306" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"14"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶"), Diff(INSERT,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶")]]]></diff>
  </Command>
  <Command __id="906" _type="ExceptionCommand" date="Mon Nov 20 17:17:54 EST 2023" starttimestamp="1700516585068" timestamp="2089312" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="907" _type="ShellCommand" date="Mon Nov 20 17:18:00 EST 2023" starttimestamp="1700516585068" timestamp="2095921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="908" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:18:00 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2095927" type="Run" />
  <Command __id="909" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 17:18:00 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2095928" type="Run" />
  <Command __id="910" _type="LocalChecksRawCommand" date="Mon Nov 20 17:18:00 EST 2023" starttimestamp="1700516585068" timestamp="2095928">
    <CSVRow><![CDATA[80,Mon Nov 20 17:17:54 EST 2023,10,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,45,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="911" _type="LocalChecksRawCommand" date="Mon Nov 20 17:18:00 EST 2023" starttimestamp="1700516585068" timestamp="2095928">
    <CSVRow><![CDATA[80,Mon Nov 20 17:17:54 EST 2023,10,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,45,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="912" _type="MoveCaretCommand" caretOffset="282" date="Mon Nov 20 17:18:02 EST 2023" docOffset="399" starttimestamp="1700516585068" timestamp="2097049" />
  <Command __id="914" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 17:18:02 EST 2023" docOffset="223" starttimestamp="1700516585068" timestamp="2097761" />
  <Command __id="915" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 17:18:07 EST 2023" starttimestamp="1700516585068" timestamp="2102152" />
  <Command __id="916" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 17:18:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2102276" type="Run" />
  <Command __id="917" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Mon Nov 20 17:18:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2102277" type="Run" />
  <Command __id="918" _type="ShellCommand" date="Mon Nov 20 17:18:10 EST 2023" starttimestamp="1700516585068" timestamp="2105216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="919" _type="ShellCommand" date="Mon Nov 20 17:18:11 EST 2023" starttimestamp="1700516585068" timestamp="2106325" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="920" _type="PasteCommand" date="Mon Nov 20 17:18:11 EST 2023" starttimestamp="1700516585068" timestamp="2106522" />
  <Command __id="921" _type="ConsoleOutput" date="Mon Nov 20 17:18:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2106870" type="ConsoleOutput">
    <outputString><![CDATA[(6.2 5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406"), Diff(INSERT,"(6.2 5"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="922" _type="ShellCommand" date="Mon Nov 20 17:18:12 EST 2023" starttimestamp="1700516585068" timestamp="2107524" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="923" _type="ShellCommand" date="Mon Nov 20 17:18:16 EST 2023" starttimestamp="1700516585068" timestamp="2111031" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="924" _type="PasteCommand" date="Mon Nov 20 17:18:16 EST 2023" starttimestamp="1700516585068" timestamp="2111399" />
  <Command __id="925" _type="ConsoleOutput" date="Mon Nov 20 17:18:16 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2111582" type="ConsoleOutput">
    <outputString><![CDATA[("Hello" 6.2 5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(INSERT,""Hello" "), Diff(EQUAL,"6.2 5)¶")]]]></diff>
  </Command>
  <Command __id="926" _type="ShellCommand" date="Mon Nov 20 17:18:17 EST 2023" starttimestamp="1700516585068" timestamp="2112203" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="927" _type="ShellCommand" date="Mon Nov 20 17:18:21 EST 2023" starttimestamp="1700516585068" timestamp="2116432" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="928" _type="PasteCommand" date="Mon Nov 20 17:18:21 EST 2023" starttimestamp="1700516585068" timestamp="2116763" />
  <Command __id="929" _type="ConsoleOutput" date="Mon Nov 20 17:18:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2116987" type="ConsoleOutput">
    <outputString><![CDATA[(("A" 4) 6.2 5)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"("), Diff(EQUAL,"(""), Diff(DELETE,"Hello""), Diff(INSERT,"A" 4)"), Diff(EQUAL," 6.2 5)¶")]]]></diff>
  </Command>
  <Command __id="930" _type="ShellCommand" date="Mon Nov 20 17:18:22 EST 2023" starttimestamp="1700516585068" timestamp="2117571" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="931" _type="ShellCommand" date="Mon Nov 20 17:18:23 EST 2023" starttimestamp="1700516585068" timestamp="2118400" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="932" _type="ShellCommand" date="Mon Nov 20 17:18:24 EST 2023" starttimestamp="1700516585068" timestamp="2119309" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="933" _type="ShellCommand" date="Mon Nov 20 17:18:26 EST 2023" starttimestamp="1700516585068" timestamp="2121713" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="934" _type="ShellCommand" date="Mon Nov 20 17:18:27 EST 2023" starttimestamp="1700516585068" timestamp="2122175" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="935" _type="ShellCommand" date="Mon Nov 20 17:18:28 EST 2023" starttimestamp="1700516585068" timestamp="2122983" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="936" _type="ShellCommand" date="Mon Nov 20 17:18:28 EST 2023" starttimestamp="1700516585068" timestamp="2123648" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="937" _type="ShellCommand" date="Mon Nov 20 17:18:39 EST 2023" starttimestamp="1700516585068" timestamp="2134139" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="938" _type="PasteCommand" date="Mon Nov 20 17:18:39 EST 2023" starttimestamp="1700516585068" timestamp="2134489" />
  <Command __id="939" _type="ConsoleOutput" date="Mon Nov 20 17:18:40 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2135032" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(("A" 4) 6.2 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="940" _type="ShellCommand" date="Mon Nov 20 17:18:40 EST 2023" starttimestamp="1700516585068" timestamp="2135608" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="941" _type="ShellCommand" date="Mon Nov 20 17:18:43 EST 2023" starttimestamp="1700516585068" timestamp="2138294" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="942" _type="PasteCommand" date="Mon Nov 20 17:18:43 EST 2023" starttimestamp="1700516585068" timestamp="2138490" />
  <Command __id="943" _type="ConsoleOutput" date="Mon Nov 20 17:18:43 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2138608" type="ConsoleOutput">
    <outputString><![CDATA[6.2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"6.2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="944" _type="ShellCommand" date="Mon Nov 20 17:18:44 EST 2023" starttimestamp="1700516585068" timestamp="2139010" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="945" _type="ShellCommand" date="Mon Nov 20 17:18:47 EST 2023" starttimestamp="1700516585068" timestamp="2142216" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="946" _type="PasteCommand" date="Mon Nov 20 17:18:47 EST 2023" starttimestamp="1700516585068" timestamp="2142386" />
  <Command __id="947" _type="ConsoleOutput" date="Mon Nov 20 17:18:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2142511" type="ConsoleOutput">
    <outputString><![CDATA[("A" 4)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"6.2"), Diff(INSERT,"("A" 4)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="948" _type="ShellCommand" date="Mon Nov 20 17:18:48 EST 2023" starttimestamp="1700516585068" timestamp="2143200" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="949" _type="ShellCommand" date="Mon Nov 20 17:18:48 EST 2023" starttimestamp="1700516585068" timestamp="2143773" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="950" _type="ShellCommand" date="Mon Nov 20 17:18:49 EST 2023" starttimestamp="1700516585068" timestamp="2144482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="951" _type="ShellCommand" date="Mon Nov 20 17:18:56 EST 2023" starttimestamp="1700516585068" timestamp="2151893" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="952" _type="PasteCommand" date="Mon Nov 20 17:18:57 EST 2023" starttimestamp="1700516585068" timestamp="2152242" />
  <Command __id="953" _type="ConsoleOutput" date="Mon Nov 20 17:18:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2152444" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("A" 4)"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="954" _type="ShellCommand" date="Mon Nov 20 17:18:58 EST 2023" starttimestamp="1700516585068" timestamp="2152991" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="955" _type="ShellCommand" date="Mon Nov 20 17:19:01 EST 2023" starttimestamp="1700516585068" timestamp="2156059" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="956" _type="PasteCommand" date="Mon Nov 20 17:19:01 EST 2023" starttimestamp="1700516585068" timestamp="2156328" />
  <Command __id="957" _type="ConsoleOutput" date="Mon Nov 20 17:19:01 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2156584" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="958" _type="ShellCommand" date="Mon Nov 20 17:19:02 EST 2023" starttimestamp="1700516585068" timestamp="2157219" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="959" _type="ShellCommand" date="Mon Nov 20 17:19:05 EST 2023" starttimestamp="1700516585068" timestamp="2160038" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="960" _type="PasteCommand" date="Mon Nov 20 17:19:05 EST 2023" starttimestamp="1700516585068" timestamp="2160384" />
  <Command __id="961" _type="ConsoleOutput" date="Mon Nov 20 17:19:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2160570" type="ConsoleOutput">
    <outputString><![CDATA[(6.2 5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(INSERT,"6.2 "), Diff(EQUAL,"5)¶")]]]></diff>
  </Command>
  <Command __id="962" _type="ShellCommand" date="Mon Nov 20 17:19:06 EST 2023" starttimestamp="1700516585068" timestamp="2161286" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="963" _type="ShellCommand" date="Mon Nov 20 17:19:06 EST 2023" starttimestamp="1700516585068" timestamp="2161868" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="964" _type="ShellCommand" date="Mon Nov 20 17:19:07 EST 2023" starttimestamp="1700516585068" timestamp="2162455" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="965" _type="ShellCommand" date="Mon Nov 20 17:20:08 EST 2023" starttimestamp="1700516585068" timestamp="2223167" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="966" _type="PasteCommand" date="Mon Nov 20 17:20:08 EST 2023" starttimestamp="1700516585068" timestamp="2223858" />
  <Command __id="967" _type="ConsoleOutput" date="Mon Nov 20 17:20:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2224114" type="ConsoleOutput">
    <outputString><![CDATA[5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(6.2 5)"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="968" _type="ShellCommand" date="Mon Nov 20 17:20:09 EST 2023" starttimestamp="1700516585068" timestamp="2224763" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="969" _type="ShellCommand" date="Mon Nov 20 17:20:13 EST 2023" starttimestamp="1700516585068" timestamp="2228551" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="970" _type="PasteCommand" date="Mon Nov 20 17:20:13 EST 2023" starttimestamp="1700516585068" timestamp="2228788" />
  <Command __id="971" _type="ConsoleOutput" date="Mon Nov 20 17:20:14 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="2229026" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(INSERT,"(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="972" _type="ShellCommand" date="Mon Nov 20 17:20:14 EST 2023" starttimestamp="1700516585068" timestamp="2229448" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="973" _type="ShellCommand" date="Mon Nov 20 17:20:17 EST 2023" starttimestamp="1700516585068" timestamp="2232151" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="974" _type="PasteCommand" date="Mon Nov 20 17:20:17 EST 2023" starttimestamp="1700516585068" timestamp="2232349" />
  <Command __id="975" _type="ExceptionCommand" date="Mon Nov 20 17:20:17 EST 2023" starttimestamp="1700516585068" timestamp="2232477" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: No evaluator registered for operator 'QUOTE'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:10)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="976" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 17:20:17 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2232481" type="Run" />
  <Command __id="977" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 17:20:17 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2232481" type="Run" />
  <Command __id="978" _type="ShellCommand" date="Mon Nov 20 17:20:17 EST 2023" starttimestamp="1700516585068" timestamp="2232878" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="979" _type="ShellCommand" date="Mon Nov 20 17:20:18 EST 2023" starttimestamp="1700516585068" timestamp="2233176" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="980" _type="ShellCommand" date="Mon Nov 20 17:20:19 EST 2023" starttimestamp="1700516585068" timestamp="2234011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="981" _type="ShellCommand" date="Mon Nov 20 17:20:20 EST 2023" starttimestamp="1700516585068" timestamp="2235208" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="982" _type="ShellCommand" date="Mon Nov 20 17:20:24 EST 2023" starttimestamp="1700516585068" timestamp="2239112" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="983" _type="ShellCommand" date="Mon Nov 20 17:20:43 EST 2023" starttimestamp="1700516585068" timestamp="2258285" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="984" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 17:20:44 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="2259760" />
  <Command __id="985" _type="ShellCommand" date="Mon Nov 20 17:20:45 EST 2023" starttimestamp="1700516585068" timestamp="2260508" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="986" _type="BalloonCommand" date="Mon Nov 20 18:52:40 EST 2023" message="*******************************************
Worked 23 minutes(fixed)/37 minutes(context based) from
Mon Nov 20 16:43:06 EST 2023 to Mon Nov 20 17:20:45 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 1 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java
Number of insert: 109
Number of delete: 87
" starttimestamp="1700516585068" timestamp="7775505">
    <fineGrainedWorkTime><![CDATA[37]]></fineGrainedWorkTime>
    <insert><![CDATA[109]]></insert>
    <startTime><![CDATA[1700516586809]]></startTime>
    <endTime><![CDATA[1700518845576]]></endTime>
    <workTime><![CDATA[23]]></workTime>
    <delete><![CDATA[87]]></delete>
  </Command>
  <Command __id="987" _type="ShellCommand" date="Mon Nov 20 21:12:39 EST 2023" starttimestamp="1700516585068" timestamp="16174892" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="988" _type="ShellCommand" date="Mon Nov 20 21:12:50 EST 2023" starttimestamp="1700516585068" timestamp="16184964" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="989" _type="ShellCommand" date="Mon Nov 20 21:12:56 EST 2023" starttimestamp="1700516585068" timestamp="16191139" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="886" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:17:49 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2084513">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="913" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 17:18:02 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="2097714">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="997" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:02 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16197037">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() +"), Diff(INSERT," " " +"), Diff(EQUAL," ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();	
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="990" _type="MoveCaretCommand" caretOffset="172" date="Mon Nov 20 21:12:59 EST 2023" docOffset="221" starttimestamp="1700516585068" timestamp="16194495" />
  <Command __id="991" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 21:13:00 EST 2023" docOffset="147" starttimestamp="1700516585068" timestamp="16195028" />
  <Command __id="992" _type="MoveCaretCommand" caretOffset="178" date="Mon Nov 20 21:13:00 EST 2023" docOffset="227" starttimestamp="1700516585068" timestamp="16195526" />
  <Command __id="993" _type="MoveCaretCommand" caretOffset="177" date="Mon Nov 20 21:13:00 EST 2023" docOffset="226" starttimestamp="1700516585068" timestamp="16195812" />
  <Command __id="994" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 21:13:01 EST 2023" docOffset="147" starttimestamp="1700516585068" timestamp="16196083" />
  <Command __id="995" _type="MoveCaretCommand" caretOffset="177" date="Mon Nov 20 21:13:01 EST 2023" docOffset="226" starttimestamp="1700516585068" timestamp="16196341" />
  <Command __id="996" _type="MoveCaretCommand" caretOffset="56" date="Mon Nov 20 21:13:01 EST 2023" docOffset="105" starttimestamp="1700516585068" timestamp="16196584" />
  <Command __id="998" _type="MoveCaretCommand" caretOffset="993" date="Mon Nov 20 21:13:02 EST 2023" docOffset="1119" starttimestamp="1700516585068" timestamp="16197078" />
  <Command __id="1000" _type="MoveCaretCommand" caretOffset="282" date="Mon Nov 20 21:13:04 EST 2023" docOffset="399" starttimestamp="1700516585068" timestamp="16199448" />
  <Command __id="1002" _type="MoveCaretCommand" caretOffset="993" date="Mon Nov 20 21:13:05 EST 2023" docOffset="1119" starttimestamp="1700516585068" timestamp="16200191" />
  <Command __id="1004" _type="MoveCaretCommand" caretOffset="56" date="Mon Nov 20 21:13:05 EST 2023" docOffset="105" starttimestamp="1700516585068" timestamp="16200486" />
  <Command __id="1006" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 21:13:05 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="16200877" />
  <Command __id="1008" _type="MoveCaretCommand" caretOffset="56" date="Mon Nov 20 21:13:06 EST 2023" docOffset="105" starttimestamp="1700516585068" timestamp="16201208" />
  <Command __id="1010" _type="MoveCaretCommand" caretOffset="993" date="Mon Nov 20 21:13:06 EST 2023" docOffset="1119" starttimestamp="1700516585068" timestamp="16201454" />
  <Command __id="1011" _type="ShellCommand" date="Mon Nov 20 21:13:06 EST 2023" starttimestamp="1700516585068" timestamp="16201744" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="999" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:04 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16199399">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1001" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:05 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16200158">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1003" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:05 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16200451">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1005" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:05 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16200825">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1007" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:06 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16201161">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1009" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:13:06 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16201412">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1012" _type="ShellCommand" date="Mon Nov 20 21:25:22 EST 2023" starttimestamp="1700516585068" timestamp="16937340" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1013" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:25:23 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16938874">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1014" _type="MoveCaretCommand" caretOffset="282" date="Mon Nov 20 21:25:23 EST 2023" docOffset="399" starttimestamp="1700516585068" timestamp="16938924" />
  <Command __id="1015" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 21:25:24 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="16939631" />
  <Command __id="1017" _type="MoveCaretCommand" caretOffset="56" date="Mon Nov 20 21:25:25 EST 2023" docOffset="105" starttimestamp="1700516585068" timestamp="16940114" />
  <Command __id="1018" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 21:25:28 EST 2023" starttimestamp="1700516585068" timestamp="16943143" />
  <Command __id="1019" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16943375" type="Run" />
  <Command __id="1020" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16943375" type="Run" />
  <Command __id="1021" _type="ShellCommand" date="Mon Nov 20 21:25:29 EST 2023" starttimestamp="1700516585068" timestamp="16944533" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1022" _type="ShellCommand" date="Mon Nov 20 21:25:32 EST 2023" starttimestamp="1700516585068" timestamp="16946981" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1023" _type="PasteCommand" date="Mon Nov 20 21:25:32 EST 2023" starttimestamp="1700516585068" timestamp="16947300" />
  <Command __id="1024" _type="ExceptionCommand" date="Mon Nov 20 21:25:32 EST 2023" starttimestamp="1700516585068" timestamp="16947509" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: No evaluator registered for operator 'QUOTE'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1025" _type="ConsoleOutput" date="Mon Nov 20 21:25:32 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="16947511" type="ConsoleOutput">
    <outputString><![CDATA[
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:10)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5"), Diff(INSERT,"¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:10"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1026" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:32 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16947526" type="Run" />
  <Command __id="1027" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:32 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16947526" type="Run" />
  <Command __id="1028" _type="ShellCommand" date="Mon Nov 20 21:25:33 EST 2023" starttimestamp="1700516585068" timestamp="16948851" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1029" _type="ShellCommand" date="Mon Nov 20 21:25:39 EST 2023" starttimestamp="1700516585068" timestamp="16953989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1030" _type="PasteCommand" date="Mon Nov 20 21:25:39 EST 2023" starttimestamp="1700516585068" timestamp="16954231" />
  <Command __id="1031" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 21:25:43 EST 2023" starttimestamp="1700516585068" timestamp="16958186" />
  <Command __id="1032" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16958303" type="Run" />
  <Command __id="1033" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16958303" type="Run" />
  <Command __id="1034" _type="PasteCommand" date="Mon Nov 20 21:25:45 EST 2023" starttimestamp="1700516585068" timestamp="16960196" />
  <Command __id="1035" _type="ExceptionCommand" date="Mon Nov 20 21:25:45 EST 2023" starttimestamp="1700516585068" timestamp="16960472" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: No evaluator registered for operator 'EVAL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1036" _type="ConsoleOutput" date="Mon Nov 20 21:25:45 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="16960476" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:10)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶"), Diff(EQUAL,"	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:10)¶")]]]></diff>
  </Command>
  <Command __id="1037" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:45 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16960477" type="Run" />
  <Command __id="1038" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 21:25:45 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16960477" type="Run" />
  <Command __id="1039" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 21:25:48 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="16963651" />
  <Command __id="1040" _type="ShellCommand" date="Mon Nov 20 21:25:49 EST 2023" starttimestamp="1700516585068" timestamp="16964029" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1041" _type="BalloonCommand" date="Mon Nov 20 21:51:50 EST 2023" message="*******************************************
Worked 0 minutes(fixed)/13 minutes(context based) from
Mon Nov 20 21:12:39 EST 2023 to Mon Nov 20 21:25:49 EST 2023
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1700516585068" timestamp="18525067">
    <fineGrainedWorkTime><![CDATA[13]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1700532759960]]></startTime>
    <endTime><![CDATA[1700533549097]]></endTime>
    <workTime><![CDATA[0]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="1042" _type="ShellCommand" date="Mon Nov 20 21:55:01 EST 2023" starttimestamp="1700516585068" timestamp="18716820" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1043" _type="ShellCommand" date="Mon Nov 20 21:55:03 EST 2023" starttimestamp="1700516585068" timestamp="18717935" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1016" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:25:25 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="16940067">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1044" _type="ShellCommand" date="Mon Nov 20 21:57:04 EST 2023" starttimestamp="1700516585068" timestamp="18839194" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1045" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:57:07 EST 2023" docASTNodeCount="219" docActiveCodeLength="1367" docExpressionCount="158" docLength="1367" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18842606">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "("+((AbstractSExpression)this).toStringAsListHelperPublic()+")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return this.getHead().toString();		}else {			return this.getHead().toString() + " " + ((AbstractSExpression)this.getTail()).toStringAsListHelperPublic();			}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1046" _type="MoveCaretCommand" caretOffset="993" date="Mon Nov 20 21:57:07 EST 2023" docOffset="1119" starttimestamp="1700516585068" timestamp="18842644" />
  <Command __id="1047" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:57:09 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18844181">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1048" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 21:57:09 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="18844231" />
  <Command __id="1049" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:57:09 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18844769">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1050" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 21:57:09 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="18844814" />
  <Command __id="1051" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:57:11 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18846062">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1052" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 21:57:11 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="18846109" />
  <Command __id="1054" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 21:57:11 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="18846367" />
  <Command __id="1055" _type="ShellCommand" date="Mon Nov 20 21:57:12 EST 2023" starttimestamp="1700516585068" timestamp="18846942" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1053" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:57:11 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18846332">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1056" _type="ShellCommand" date="Mon Nov 20 21:58:18 EST 2023" starttimestamp="1700516585068" timestamp="18913689" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1058" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 21:58:20 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="18914998" />
  <Command __id="1059" _type="MoveCaretCommand" caretOffset="992" date="Mon Nov 20 21:58:21 EST 2023" docOffset="1109" starttimestamp="1700516585068" timestamp="18916330" />
  <Command __id="1060" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 21:58:22 EST 2023" starttimestamp="1700516585068" timestamp="18917865" />
  <Command __id="1061" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 21:58:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18918008" type="Run" />
  <Command __id="1062" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 21:58:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18918008" type="Run" />
  <Command __id="1063" _type="ShellCommand" date="Mon Nov 20 21:58:23 EST 2023" starttimestamp="1700516585068" timestamp="18918368" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1064" _type="ShellCommand" date="Mon Nov 20 21:58:35 EST 2023" starttimestamp="1700516585068" timestamp="18930565" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1065" _type="ShellCommand" date="Mon Nov 20 21:58:36 EST 2023" starttimestamp="1700516585068" timestamp="18931078" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1066" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942682" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:10)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1067" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942683" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1068" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942684" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1069" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942686" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1070" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942702" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1071" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1072" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942706" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1073" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942708" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1074" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942708" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1075" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1076" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942711" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1077" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942714" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1078" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942715" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,¶"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1079" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942716" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1080" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942723" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.Basic"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluator.eval(Basic"), Diff(INSERT,"Checker.test(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluato"), Diff(INSERT,"Checke"), Diff(EQUAL,"r.java:"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"4)¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"111"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"317"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1081" _type="ConsoleOutput" date="Mon Nov 20 21:58:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="18942749" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"er.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(INSERT,"663"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:5"), Diff(DELETE,"7"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"71"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"20"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"101"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1082" _type="ExceptionCommand" date="Mon Nov 20 21:58:47 EST 2023" starttimestamp="1700516585068" timestamp="18942754" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1083" _type="ShellCommand" date="Mon Nov 20 21:59:13 EST 2023" starttimestamp="1700516585068" timestamp="18968177" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1084" _type="LocalChecksRawCommand" date="Mon Nov 20 21:59:13 EST 2023" starttimestamp="1700516585068" timestamp="18968180">
    <CSVRow><![CDATA[81,Mon Nov 20 21:58:47 EST 2023,10,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,46,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1085" _type="LocalChecksRawCommand" date="Mon Nov 20 21:59:13 EST 2023" starttimestamp="1700516585068" timestamp="18968180">
    <CSVRow><![CDATA[81,Mon Nov 20 21:58:47 EST 2023,10,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,46,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1086" _type="LocalChecksRawCommand" date="Mon Nov 20 21:59:13 EST 2023" starttimestamp="1700516585068" timestamp="18968180">
    <CSVRow><![CDATA[82,Mon Nov 20 21:58:51 EST 2023,10,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,46,1,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1087" _type="LocalChecksRawCommand" date="Mon Nov 20 21:59:13 EST 2023" starttimestamp="1700516585068" timestamp="18968180">
    <CSVRow><![CDATA[82,Mon Nov 20 21:58:51 EST 2023,10,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,46,1,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic , , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(15.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1088" _type="ShellCommand" date="Mon Nov 20 21:59:13 EST 2023" starttimestamp="1700516585068" timestamp="18968638" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1089" _type="ShellCommand" date="Mon Nov 20 21:59:14 EST 2023" starttimestamp="1700516585068" timestamp="18969475" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1090" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 21:59:14 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18969485" type="Run" />
  <Command __id="1091" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 21:59:14 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18969485" type="Run" />
  <Command __id="1092" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 21:59:15 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="18970118" />
  <Command __id="1093" _type="ShellCommand" date="Mon Nov 20 21:59:15 EST 2023" starttimestamp="1700516585068" timestamp="18970906" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1094" _type="ShellCommand" date="Mon Nov 20 22:01:49 EST 2023" starttimestamp="1700516585068" timestamp="19123980" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1095" _type="ShellCommand" date="Mon Nov 20 22:01:49 EST 2023" starttimestamp="1700516585068" timestamp="19124503" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1096" _type="ShellCommand" date="Mon Nov 20 22:01:49 EST 2023" starttimestamp="1700516585068" timestamp="19124734" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1097" _type="ShellCommand" date="Mon Nov 20 22:01:50 EST 2023" starttimestamp="1700516585068" timestamp="19125159" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1098" _type="ShellCommand" date="Mon Nov 20 22:01:52 EST 2023" starttimestamp="1700516585068" timestamp="19127479" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1099" _type="ShellCommand" date="Mon Nov 20 22:01:53 EST 2023" starttimestamp="1700516585068" timestamp="19128055" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1100" _type="ShellCommand" date="Mon Nov 20 22:02:14 EST 2023" starttimestamp="1700516585068" timestamp="19149865" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1101" _type="ShellCommand" date="Mon Nov 20 22:02:18 EST 2023" starttimestamp="1700516585068" timestamp="19153227" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1102" _type="ShellCommand" date="Mon Nov 20 22:02:20 EST 2023" starttimestamp="1700516585068" timestamp="19155344" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1103" _type="ShellCommand" date="Mon Nov 20 22:02:21 EST 2023" starttimestamp="1700516585068" timestamp="19156630" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1104" _type="ShellCommand" date="Mon Nov 20 22:02:22 EST 2023" starttimestamp="1700516585068" timestamp="19157356" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1105" _type="ShellCommand" date="Mon Nov 20 22:02:23 EST 2023" starttimestamp="1700516585068" timestamp="19158098" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1106" _type="ShellCommand" date="Mon Nov 20 22:03:17 EST 2023" starttimestamp="1700516585068" timestamp="19212484" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1107" _type="ShellCommand" date="Mon Nov 20 22:03:23 EST 2023" starttimestamp="1700516585068" timestamp="19218080" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1108" _type="ShellCommand" date="Mon Nov 20 22:03:24 EST 2023" starttimestamp="1700516585068" timestamp="19219614" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1109" _type="ShellCommand" date="Mon Nov 20 22:03:25 EST 2023" starttimestamp="1700516585068" timestamp="19220064" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1110" _type="ShellCommand" date="Mon Nov 20 22:03:25 EST 2023" starttimestamp="1700516585068" timestamp="19220619" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1111" _type="ShellCommand" date="Mon Nov 20 22:03:30 EST 2023" starttimestamp="1700516585068" timestamp="19225802" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1112" _type="PasteCommand" date="Mon Nov 20 22:03:36 EST 2023" starttimestamp="1700516585068" timestamp="19231767" />
  <Command __id="1113" _type="ShellCommand" date="Mon Nov 20 22:03:41 EST 2023" starttimestamp="1700516585068" timestamp="19236040" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1114" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:03:41 EST 2023" starttimestamp="1700516585068" timestamp="19236083" />
  <Command __id="1115" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:03:41 EST 2023" starttimestamp="1700516585068" timestamp="19236089" />
  <Command __id="1117" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:03:41 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="19236189" />
  <Command __id="1118" _type="ShellCommand" date="Mon Nov 20 22:03:41 EST 2023" starttimestamp="1700516585068" timestamp="19236757" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1119" _type="ShellCommand" date="Mon Nov 20 22:03:44 EST 2023" starttimestamp="1700516585068" timestamp="19239569" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1120" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 22:03:45 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="19240086" />
  <Command __id="1122" _type="InsertStringCommand" date="Mon Nov 20 22:03:45 EST 2023" starttimestamp="1700516585068" timestamp="19240712" timestamp2="19240712">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1124" _type="InsertStringCommand" date="Mon Nov 20 22:03:45 EST 2023" starttimestamp="1700516585068" timestamp="19240814" timestamp2="19240814">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 22:03:46 EST 2023" starttimestamp="1700516585068" timestamp="19241254" />
  <Command __id="1127" _type="InsertStringCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19241938" timestamp2="19241938">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1129" _type="InsertStringCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19242016" timestamp2="19242016">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1131" _type="InsertStringCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19242102" timestamp2="19242102">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1133" _type="InsertStringCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19242289" timestamp2="19242289">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1135" _type="InsertStringCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19242499" timestamp2="19242499">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1137" _type="InsertStringCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19242621" timestamp2="19242621">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1139" _type="PasteCommand" date="Mon Nov 20 22:03:47 EST 2023" starttimestamp="1700516585068" timestamp="19242790" />
  <Command __id="1141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:03:48 EST 2023" starttimestamp="1700516585068" timestamp="19243091" />
  <Command __id="1143" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:03:48 EST 2023" starttimestamp="1700516585068" timestamp="19243205" />
  <Command __id="1145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:03:48 EST 2023" starttimestamp="1700516585068" timestamp="19243325" />
  <Command __id="1147" _type="UndoCommand" date="Mon Nov 20 22:03:48 EST 2023" starttimestamp="1700516585068" timestamp="19243630" />
  <Command __id="1149" _type="UndoCommand" date="Mon Nov 20 22:03:48 EST 2023" starttimestamp="1700516585068" timestamp="19243886" />
  <Command __id="1151" _type="UndoCommand" date="Mon Nov 20 22:03:49 EST 2023" starttimestamp="1700516585068" timestamp="19244094" />
  <Command __id="1153" _type="InsertStringCommand" date="Mon Nov 20 22:03:49 EST 2023" starttimestamp="1700516585068" timestamp="19244784" timestamp2="19244784">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1155" _type="InsertStringCommand" date="Mon Nov 20 22:03:49 EST 2023" starttimestamp="1700516585068" timestamp="19244888" timestamp2="19244888">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1157" _type="InsertStringCommand" date="Mon Nov 20 22:03:50 EST 2023" starttimestamp="1700516585068" timestamp="19245010" timestamp2="19245010">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1159" _type="InsertStringCommand" date="Mon Nov 20 22:03:50 EST 2023" starttimestamp="1700516585068" timestamp="19245171" timestamp2="19245171">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1161" _type="InsertStringCommand" date="Mon Nov 20 22:03:50 EST 2023" starttimestamp="1700516585068" timestamp="19245253" timestamp2="19245253">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1163" _type="InsertStringCommand" date="Mon Nov 20 22:03:50 EST 2023" starttimestamp="1700516585068" timestamp="19245373" timestamp2="19245373">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1057" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 21:58:20 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="18914958">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1116" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:03:41 EST 2023" docASTNodeCount="6" docActiveCodeLength="58" docExpressionCount="2" docLength="58" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19236154">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class OperationRegistererImpl {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1121" _type="Insert" date="Mon Nov 20 22:03:45 EST 2023" docASTNodeCount="6" docActiveCodeLength="105" docExpressionCount="2" docLength="105" length="47" offset="15" repeat="9" starttimestamp="1700516585068" timestamp="19240711" timestamp2="19242788">
    <text><![CDATA[
impot main.lisp.evaluator.OperationRegisterer
]]></text>
  </DocumentChange>
  <DocumentChange __id="1140" _type="Delete" date="Mon Nov 20 22:03:48 EST 2023" docASTNodeCount="6" docActiveCodeLength="102" docExpressionCount="2" docLength="102" endLine="2" length="3" offset="58" repeat="3" startLine="2" starttimestamp="1700516585068" timestamp="19243088" timestamp2="19243322">
    <text><![CDATA[rer]]></text>
  </DocumentChange>
  <DocumentChange __id="1146" _type="Insert" date="Mon Nov 20 22:03:48 EST 2023" docASTNodeCount="6" docActiveCodeLength="105" docExpressionCount="2" docLength="105" length="3" offset="58" starttimestamp="1700516585068" timestamp="19243625">
    <text><![CDATA[rer]]></text>
  </DocumentChange>
  <DocumentChange __id="1148" _type="Delete" date="Mon Nov 20 22:03:48 EST 2023" docASTNodeCount="6" docActiveCodeLength="60" docExpressionCount="2" docLength="60" endLine="2" length="45" offset="16" repeat="2" startLine="2" starttimestamp="1700516585068" timestamp="19243880" timestamp2="19244090">
    <text><![CDATA[impot main.lisp.evaluator.OperationRegisterer]]></text>
  </DocumentChange>
  <Command __id="1165" _type="InsertStringCommand" date="Mon Nov 20 22:03:50 EST 2023" starttimestamp="1700516585068" timestamp="19245458" timestamp2="19245458">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1167" _type="PasteCommand" date="Mon Nov 20 22:03:50 EST 2023" starttimestamp="1700516585068" timestamp="19245609" />
  <Command __id="1169" _type="InsertStringCommand" date="Mon Nov 20 22:03:51 EST 2023" starttimestamp="1700516585068" timestamp="19246776" timestamp2="19246776">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1170" _type="MoveCaretCommand" caretOffset="58" date="Mon Nov 20 22:03:52 EST 2023" docOffset="58" starttimestamp="1700516585068" timestamp="19247798" />
  <Command __id="1171" _type="SelectTextCommand" caretOffset="62" date="Mon Nov 20 22:03:52 EST 2023" end="62" start="43" starttimestamp="1700516585068" timestamp="19247926" />
  <Command __id="1172" _type="CopyCommand" date="Mon Nov 20 22:03:53 EST 2023" starttimestamp="1700516585068" timestamp="19248014" />
  <Command __id="1173" _type="MoveCaretCommand" caretOffset="101" date="Mon Nov 20 22:03:53 EST 2023" docOffset="101" starttimestamp="1700516585068" timestamp="19248269" />
  <Command __id="1174" _type="MoveCaretCommand" caretOffset="103" date="Mon Nov 20 22:03:53 EST 2023" docOffset="103" starttimestamp="1700516585068" timestamp="19248483" />
  <Command __id="1175" _type="MoveCaretCommand" caretOffset="102" date="Mon Nov 20 22:03:53 EST 2023" docOffset="102" starttimestamp="1700516585068" timestamp="19248821" />
  <Command __id="1177" _type="InsertStringCommand" date="Mon Nov 20 22:03:54 EST 2023" starttimestamp="1700516585068" timestamp="19249421" timestamp2="19249421">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1179" _type="InsertStringCommand" date="Mon Nov 20 22:03:54 EST 2023" starttimestamp="1700516585068" timestamp="19249487" timestamp2="19249487">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1181" _type="InsertStringCommand" date="Mon Nov 20 22:03:54 EST 2023" starttimestamp="1700516585068" timestamp="19249563" timestamp2="19249563">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1183" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250109" timestamp2="19250109">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1185" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250246" timestamp2="19250246">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1187" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250377" timestamp2="19250377">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1189" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250468" timestamp2="19250468">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1191" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250574" timestamp2="19250574">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1193" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250650" timestamp2="19250650">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1195" _type="InsertStringCommand" date="Mon Nov 20 22:03:55 EST 2023" starttimestamp="1700516585068" timestamp="19250754" timestamp2="19250754">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1197" _type="InsertStringCommand" date="Mon Nov 20 22:03:56 EST 2023" starttimestamp="1700516585068" timestamp="19250979" timestamp2="19250979">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1199" _type="PasteCommand" date="Mon Nov 20 22:03:56 EST 2023" starttimestamp="1700516585068" timestamp="19251237" />
  <Command __id="1200" _type="ShellCommand" date="Mon Nov 20 22:03:58 EST 2023" starttimestamp="1700516585068" timestamp="19253345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1201" _type="ShellCommand" date="Mon Nov 20 22:03:58 EST 2023" starttimestamp="1700516585068" timestamp="19253435" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1206" _type="MoveCaretCommand" caretOffset="221" date="Mon Nov 20 22:03:59 EST 2023" docOffset="221" starttimestamp="1700516585068" timestamp="19254162" />
  <Command __id="1207" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 22:03:59 EST 2023" docOffset="181" starttimestamp="1700516585068" timestamp="19254604" />
  <Command __id="1208" _type="MoveCaretCommand" caretOffset="221" date="Mon Nov 20 22:04:00 EST 2023" docOffset="221" starttimestamp="1700516585068" timestamp="19254980" />
  <Command __id="1209" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 22:04:00 EST 2023" docOffset="181" starttimestamp="1700516585068" timestamp="19255315" />
  <Command __id="1210" _type="MoveCaretCommand" caretOffset="221" date="Mon Nov 20 22:04:00 EST 2023" docOffset="221" starttimestamp="1700516585068" timestamp="19255470" />
  <Command __id="1211" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 22:04:00 EST 2023" docOffset="181" starttimestamp="1700516585068" timestamp="19255750" />
  <Command __id="1212" _type="MoveCaretCommand" caretOffset="224" date="Mon Nov 20 22:04:01 EST 2023" docOffset="224" starttimestamp="1700516585068" timestamp="19256091" />
  <Command __id="1213" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 22:04:01 EST 2023" docOffset="181" starttimestamp="1700516585068" timestamp="19256471" />
  <Command __id="1214" _type="MoveCaretCommand" caretOffset="224" date="Mon Nov 20 22:04:02 EST 2023" docOffset="224" starttimestamp="1700516585068" timestamp="19256953" />
  <Command __id="1215" _type="SelectTextCommand" caretOffset="207" date="Mon Nov 20 22:04:02 EST 2023" end="207" start="181" starttimestamp="1700516585068" timestamp="19257556" />
  <Command __id="1216" _type="MoveCaretCommand" caretOffset="218" date="Mon Nov 20 22:04:02 EST 2023" docOffset="218" starttimestamp="1700516585068" timestamp="19257793" />
  <Command __id="1217" _type="ShellCommand" date="Mon Nov 20 22:04:03 EST 2023" starttimestamp="1700516585068" timestamp="19258863" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1218" _type="ShellCommand" date="Mon Nov 20 22:04:29 EST 2023" starttimestamp="1700516585068" timestamp="19284659" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1219" _type="ShellCommand" date="Mon Nov 20 22:04:30 EST 2023" starttimestamp="1700516585068" timestamp="19285589" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1220" _type="ShellCommand" date="Mon Nov 20 22:04:33 EST 2023" starttimestamp="1700516585068" timestamp="19288425" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1221" _type="MoveCaretCommand" caretOffset="224" date="Mon Nov 20 22:04:34 EST 2023" docOffset="224" starttimestamp="1700516585068" timestamp="19289174" />
  <Command __id="1222" _type="ShellCommand" date="Mon Nov 20 22:04:34 EST 2023" starttimestamp="1700516585068" timestamp="19289768" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1223" _type="ShellCommand" date="Mon Nov 20 22:04:35 EST 2023" starttimestamp="1700516585068" timestamp="19290197" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1224" _type="MoveCaretCommand" caretOffset="133" date="Mon Nov 20 22:04:35 EST 2023" docOffset="133" starttimestamp="1700516585068" timestamp="19290779" />
  <Command __id="1226" _type="InsertStringCommand" date="Mon Nov 20 22:04:36 EST 2023" starttimestamp="1700516585068" timestamp="19291309" timestamp2="19291309">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1228" _type="InsertStringCommand" date="Mon Nov 20 22:04:36 EST 2023" starttimestamp="1700516585068" timestamp="19291413" timestamp2="19291413">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1230" _type="InsertStringCommand" date="Mon Nov 20 22:04:36 EST 2023" starttimestamp="1700516585068" timestamp="19291561" timestamp2="19291561">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1232" _type="InsertStringCommand" date="Mon Nov 20 22:04:36 EST 2023" starttimestamp="1700516585068" timestamp="19291735" timestamp2="19291735">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1233" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 22:04:37 EST 2023" starttimestamp="1700516585068" timestamp="19292392" />
  <Command __id="1234" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 22:04:37 EST 2023" starttimestamp="1700516585068" timestamp="19292523" />
  <Command __id="1236" _type="PasteCommand" date="Mon Nov 20 22:04:37 EST 2023" starttimestamp="1700516585068" timestamp="19292793" />
  <Command __id="1237" _type="MoveCaretCommand" caretOffset="208" date="Mon Nov 20 22:04:38 EST 2023" docOffset="208" starttimestamp="1700516585068" timestamp="19293660" />
  <Command __id="1238" _type="MoveCaretCommand" caretOffset="168" date="Mon Nov 20 22:04:38 EST 2023" docOffset="168" starttimestamp="1700516585068" timestamp="19293915" />
  <Command __id="1239" _type="SelectTextCommand" caretOffset="174" date="Mon Nov 20 22:04:39 EST 2023" end="174" start="156" starttimestamp="1700516585068" timestamp="19294058" />
  <Command __id="1240" _type="ShellCommand" date="Mon Nov 20 22:04:39 EST 2023" starttimestamp="1700516585068" timestamp="19294343" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1241" _type="ShellCommand" date="Mon Nov 20 22:04:39 EST 2023" starttimestamp="1700516585068" timestamp="19294586" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1242" _type="ShellCommand" date="Mon Nov 20 22:04:40 EST 2023" starttimestamp="1700516585068" timestamp="19295073" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1243" _type="ShellCommand" date="Mon Nov 20 22:04:46 EST 2023" starttimestamp="1700516585068" timestamp="19301017" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1244" _type="MoveCaretCommand" caretOffset="165" date="Mon Nov 20 22:04:47 EST 2023" docOffset="165" starttimestamp="1700516585068" timestamp="19302310" />
  <Command __id="1245" _type="SelectTextCommand" caretOffset="174" date="Mon Nov 20 22:04:47 EST 2023" end="174" start="156" starttimestamp="1700516585068" timestamp="19302451" />
  <Command __id="1246" _type="MoveCaretCommand" caretOffset="168" date="Mon Nov 20 22:04:47 EST 2023" docOffset="168" starttimestamp="1700516585068" timestamp="19302821" />
  <Command __id="1247" _type="SelectTextCommand" caretOffset="174" date="Mon Nov 20 22:04:48 EST 2023" end="174" start="164" starttimestamp="1700516585068" timestamp="19303872" />
  <Command __id="1249" _type="InsertStringCommand" date="Mon Nov 20 22:04:49 EST 2023" starttimestamp="1700516585068" timestamp="19304282" timestamp2="19304282">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1251" _type="InsertStringCommand" date="Mon Nov 20 22:04:49 EST 2023" starttimestamp="1700516585068" timestamp="19304471" timestamp2="19304471">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1253" _type="InsertStringCommand" date="Mon Nov 20 22:04:49 EST 2023" starttimestamp="1700516585068" timestamp="19304604" timestamp2="19304604">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1255" _type="InsertStringCommand" date="Mon Nov 20 22:04:49 EST 2023" starttimestamp="1700516585068" timestamp="19304725" timestamp2="19304725">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1257" _type="InsertStringCommand" date="Mon Nov 20 22:04:49 EST 2023" starttimestamp="1700516585068" timestamp="19304798" timestamp2="19304798">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1258" _type="MoveCaretCommand" caretOffset="327" date="Mon Nov 20 22:04:50 EST 2023" docOffset="327" starttimestamp="1700516585068" timestamp="19305659" />
  <Command __id="1259" _type="InsertStringCommand" date="Mon Nov 20 22:04:50 EST 2023" starttimestamp="1700516585068" timestamp="19305780" timestamp2="19305780">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1260" _type="InsertStringCommand" date="Mon Nov 20 22:04:50 EST 2023" starttimestamp="1700516585068" timestamp="19305925" timestamp2="19305925">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1261" _type="MoveCaretCommand" caretOffset="335" date="Mon Nov 20 22:04:51 EST 2023" docOffset="335" starttimestamp="1700516585068" timestamp="19306453" />
  <Command __id="1262" _type="InsertStringCommand" date="Mon Nov 20 22:04:51 EST 2023" starttimestamp="1700516585068" timestamp="19306669" timestamp2="19306669">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1263" _type="MoveCaretCommand" caretOffset="360" date="Mon Nov 20 22:04:52 EST 2023" docOffset="360" starttimestamp="1700516585068" timestamp="19307211" />
  <Command __id="1265" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:04:52 EST 2023" starttimestamp="1700516585068" timestamp="19307563" />
  <Command __id="1267" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:04:52 EST 2023" starttimestamp="1700516585068" timestamp="19307738" />
  <Command __id="1269" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:04:53 EST 2023" starttimestamp="1700516585068" timestamp="19308046" />
  <Command __id="1270" _type="MoveCaretCommand" caretOffset="235" date="Mon Nov 20 22:04:53 EST 2023" docOffset="235" starttimestamp="1700516585068" timestamp="19308319" />
  <Command __id="1271" _type="ShellCommand" date="Mon Nov 20 22:04:53 EST 2023" starttimestamp="1700516585068" timestamp="19308520" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1272" _type="ShellCommand" date="Mon Nov 20 22:04:54 EST 2023" starttimestamp="1700516585068" timestamp="19309183" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1273" _type="ShellCommand" date="Mon Nov 20 22:04:55 EST 2023" starttimestamp="1700516585068" timestamp="19310536" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1274" _type="ShellCommand" date="Mon Nov 20 22:05:06 EST 2023" starttimestamp="1700516585068" timestamp="19321254" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1275" _type="ShellCommand" date="Mon Nov 20 22:05:06 EST 2023" starttimestamp="1700516585068" timestamp="19321822" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1276" _type="ShellCommand" date="Mon Nov 20 22:05:12 EST 2023" starttimestamp="1700516585068" timestamp="19327588" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1152" _type="Insert" date="Mon Nov 20 22:03:49 EST 2023" docASTNodeCount="14" docActiveCodeLength="107" docExpressionCount="9" docLength="107" length="47" offset="16" repeat="9" starttimestamp="1700516585068" timestamp="19244783" timestamp2="19246775">
    <text><![CDATA[import main.lisp.evaluator.OperationRegisterer;]]></text>
  </DocumentChange>
  <DocumentChange __id="1176" _type="Insert" date="Mon Nov 20 22:03:54 EST 2023" docASTNodeCount="16" docActiveCodeLength="137" docExpressionCount="10" docLength="137" length="30" offset="102" repeat="12" starttimestamp="1700516585068" timestamp="19249420" timestamp2="19251234">
    <text><![CDATA[implements OperationRegisterer]]></text>
  </DocumentChange>
  <DocumentChange __id="1202" _type="Insert" date="Mon Nov 20 22:03:58 EST 2023" docASTNodeCount="23" docActiveCodeLength="194" docExpressionCount="13" docLength="228" length="91" offset="133" repeat="4" starttimestamp="1700516585068" timestamp="19253457" timestamp2="19253458">
    <text><![CDATA[

	@Override
	public void registerOperations() {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1225" _type="Insert" date="Mon Nov 20 22:04:36 EST 2023" docASTNodeCount="23" docActiveCodeLength="202" docExpressionCount="13" docLength="236" length="8" offset="133" repeat="4" starttimestamp="1700516585068" timestamp="19291306" timestamp2="19291731">
    <text><![CDATA[
	
	
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1235" _type="Replace" date="Mon Nov 20 22:04:37 EST 2023" docASTNodeCount="69" docActiveCodeLength="622" docExpressionCount="46" docLength="656" endLine="6" insertionLength="421" int_docASTNodeCount="23" int_docActiveCodeLength="201" int_docExpressionCount="13" int_docLength="235" length="1" offset="136" startLine="6" starttimestamp="1700516585068" timestamp="19292783">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new SumEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("-", new DifferenceEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("*", new ProductEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("/", new QuotientEvaluator());
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1248" _type="Replace" date="Mon Nov 20 22:04:49 EST 2023" docASTNodeCount="69" docActiveCodeLength="613" docExpressionCount="46" docLength="647" endLine="6" insertionLength="1" int_docASTNodeCount="69" int_docActiveCodeLength="612" int_docExpressionCount="46" int_docLength="646" length="10" offset="164" startLine="6" starttimestamp="1700516585068" timestamp="19304275">
    <deletedText><![CDATA[Arithmetic]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1250" _type="Insert" date="Mon Nov 20 22:04:49 EST 2023" docASTNodeCount="69" docActiveCodeLength="617" docExpressionCount="46" docLength="651" length="4" offset="165" repeat="4" starttimestamp="1700516585068" timestamp="19304466" timestamp2="19304795">
    <text><![CDATA[asic]]></text>
  </DocumentChange>
  <DocumentChange __id="1264" _type="Delete" date="Mon Nov 20 22:04:52 EST 2023" docASTNodeCount="39" docActiveCodeLength="331" docExpressionCount="22" docLength="365" endLine="11" length="286" offset="264" repeat="3" startLine="8" starttimestamp="1700516585068" timestamp="19307558" timestamp2="19308044">
    <text><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("-", new DifferenceEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("*", new ProductEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("/", new QuotientEvaluator());
]]></text>
  </DocumentChange>
  <Command __id="1277" _type="MoveCaretCommand" caretOffset="64" date="Mon Nov 20 22:05:13 EST 2023" docOffset="64" starttimestamp="1700516585068" timestamp="19328711" />
  <Command __id="1279" _type="InsertStringCommand" date="Mon Nov 20 22:05:14 EST 2023" starttimestamp="1700516585068" timestamp="19329504" timestamp2="19329504">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1281" _type="InsertStringCommand" date="Mon Nov 20 22:05:14 EST 2023" starttimestamp="1700516585068" timestamp="19329560" timestamp2="19329560">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1283" _type="InsertStringCommand" date="Mon Nov 20 22:05:14 EST 2023" starttimestamp="1700516585068" timestamp="19329653" timestamp2="19329653">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1285" _type="InsertStringCommand" date="Mon Nov 20 22:05:14 EST 2023" starttimestamp="1700516585068" timestamp="19329810" timestamp2="19329810">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1287" _type="InsertStringCommand" date="Mon Nov 20 22:05:14 EST 2023" starttimestamp="1700516585068" timestamp="19329894" timestamp2="19329894">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1289" _type="InsertStringCommand" date="Mon Nov 20 22:05:15 EST 2023" starttimestamp="1700516585068" timestamp="19330044" timestamp2="19330044">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1291" _type="InsertStringCommand" date="Mon Nov 20 22:05:15 EST 2023" starttimestamp="1700516585068" timestamp="19330192" timestamp2="19330192">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1293" _type="PasteCommand" date="Mon Nov 20 22:05:15 EST 2023" starttimestamp="1700516585068" timestamp="19330384" />
  <Command __id="1295" _type="InsertStringCommand" date="Mon Nov 20 22:05:16 EST 2023" starttimestamp="1700516585068" timestamp="19331062" timestamp2="19331062">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1297" _type="InsertStringCommand" date="Mon Nov 20 22:05:17 EST 2023" starttimestamp="1700516585068" timestamp="19332159" timestamp2="19332159">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1298" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 22:05:17 EST 2023" docOffset="379" starttimestamp="1700516585068" timestamp="19332814" />
  <Command __id="1299" _type="ShellCommand" date="Mon Nov 20 22:05:18 EST 2023" starttimestamp="1700516585068" timestamp="19333105" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1300" _type="ShellCommand" date="Mon Nov 20 22:05:18 EST 2023" starttimestamp="1700516585068" timestamp="19333631" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1301" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:05:19 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19334360" />
  <Command __id="1302" _type="SelectTextCommand" caretOffset="320" date="Mon Nov 20 22:05:19 EST 2023" end="320" start="308" starttimestamp="1700516585068" timestamp="19334529" />
  <Command __id="1303" _type="ShellCommand" date="Mon Nov 20 22:05:38 EST 2023" starttimestamp="1700516585068" timestamp="19352959" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1304" _type="ShellCommand" date="Mon Nov 20 22:05:50 EST 2023" starttimestamp="1700516585068" timestamp="19365065" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1305" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:05:50 EST 2023" starttimestamp="1700516585068" timestamp="19365106" />
  <Command __id="1306" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:05:50 EST 2023" starttimestamp="1700516585068" timestamp="19365112" />
  <Command __id="1308" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:05:50 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="19365235" />
  <Command __id="1309" _type="MoveCaretCommand" caretOffset="43" date="Mon Nov 20 22:05:51 EST 2023" docOffset="43" starttimestamp="1700516585068" timestamp="19366252" />
  <Command __id="1310" _type="MoveCaretCommand" caretOffset="43" date="Mon Nov 20 22:05:51 EST 2023" docOffset="43" starttimestamp="1700516585068" timestamp="19366638" />
  <Command __id="1311" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 22:05:51 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="19366872" />
  <Command __id="1313" _type="InsertStringCommand" date="Mon Nov 20 22:05:52 EST 2023" starttimestamp="1700516585068" timestamp="19367610" timestamp2="19367610">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1315" _type="InsertStringCommand" date="Mon Nov 20 22:05:52 EST 2023" starttimestamp="1700516585068" timestamp="19367697" timestamp2="19367697">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1316" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 22:05:53 EST 2023" starttimestamp="1700516585068" timestamp="19368033" />
  <Command __id="1317" _type="ShellCommand" date="Mon Nov 20 22:05:53 EST 2023" starttimestamp="1700516585068" timestamp="19368428" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1278" _type="Insert" date="Mon Nov 20 22:05:14 EST 2023" docASTNodeCount="47" docActiveCodeLength="392" docExpressionCount="29" docLength="426" length="61" offset="64" repeat="10" starttimestamp="1700516585068" timestamp="19329502" timestamp2="19332156">
    <text><![CDATA[import main.lisp.evaluator.BuiltinOperationManagerSingleton;
]]></text>
  </DocumentChange>
  <Command __id="1307" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:05:50 EST 2023" docASTNodeCount="6" docActiveCodeLength="49" docExpressionCount="2" docLength="49" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19365183">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class quoteEvaluator {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1312" _type="Insert" date="Mon Nov 20 22:05:52 EST 2023" docASTNodeCount="6" docActiveCodeLength="51" docExpressionCount="2" docLength="51" length="2" offset="15" repeat="2" starttimestamp="1700516585068" timestamp="19367608" timestamp2="19367696">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <Command __id="1318" _type="ShellCommand" date="Mon Nov 20 22:05:59 EST 2023" starttimestamp="1700516585068" timestamp="19374824" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1319" _type="Insert" date="Mon Nov 20 22:06:00 EST 2023" docASTNodeCount="6" docActiveCodeLength="81" docExpressionCount="2" docLength="81" length="30" offset="16" repeat="2" starttimestamp="1700516585068" timestamp="19375183" timestamp2="19376226">
    <text><![CDATA[main.lisp.evaluator.Evaluator;]]></text>
  </DocumentChange>
  <Command __id="1320" _type="PasteCommand" date="Mon Nov 20 22:06:00 EST 2023" starttimestamp="1700516585068" timestamp="19375185" />
  <Command __id="1322" _type="InsertStringCommand" date="Mon Nov 20 22:06:01 EST 2023" starttimestamp="1700516585068" timestamp="19376227" timestamp2="19376227">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1323" _type="MoveCaretCommand" caretOffset="77" date="Mon Nov 20 22:06:02 EST 2023" docOffset="77" starttimestamp="1700516585068" timestamp="19377037" />
  <Command __id="1324" _type="MoveCaretCommand" caretOffset="76" date="Mon Nov 20 22:06:02 EST 2023" docOffset="76" starttimestamp="1700516585068" timestamp="19377368" />
  <Command __id="1326" _type="InsertStringCommand" date="Mon Nov 20 22:06:03 EST 2023" starttimestamp="1700516585068" timestamp="19378001" timestamp2="19378001">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1328" _type="InsertStringCommand" date="Mon Nov 20 22:06:03 EST 2023" starttimestamp="1700516585068" timestamp="19378069" timestamp2="19378069">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1330" _type="InsertStringCommand" date="Mon Nov 20 22:06:03 EST 2023" starttimestamp="1700516585068" timestamp="19378145" timestamp2="19378145">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1332" _type="InsertStringCommand" date="Mon Nov 20 22:06:03 EST 2023" starttimestamp="1700516585068" timestamp="19378543" timestamp2="19378543">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1334" _type="InsertStringCommand" date="Mon Nov 20 22:06:03 EST 2023" starttimestamp="1700516585068" timestamp="19378671" timestamp2="19378671">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1336" _type="InsertStringCommand" date="Mon Nov 20 22:06:03 EST 2023" starttimestamp="1700516585068" timestamp="19378777" timestamp2="19378777">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1338" _type="InsertStringCommand" date="Mon Nov 20 22:06:04 EST 2023" starttimestamp="1700516585068" timestamp="19379316" timestamp2="19379316">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1340" _type="InsertStringCommand" date="Mon Nov 20 22:06:04 EST 2023" starttimestamp="1700516585068" timestamp="19379394" timestamp2="19379394">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1342" _type="InsertStringCommand" date="Mon Nov 20 22:06:04 EST 2023" starttimestamp="1700516585068" timestamp="19379449" timestamp2="19379449">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1344" _type="InsertStringCommand" date="Mon Nov 20 22:06:04 EST 2023" starttimestamp="1700516585068" timestamp="19379553" timestamp2="19379553">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1346" _type="InsertStringCommand" date="Mon Nov 20 22:06:05 EST 2023" starttimestamp="1700516585068" timestamp="19380153" timestamp2="19380153">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1348" _type="InsertStringCommand" date="Mon Nov 20 22:06:05 EST 2023" starttimestamp="1700516585068" timestamp="19380422" timestamp2="19380422">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1350" _type="InsertStringCommand" date="Mon Nov 20 22:06:05 EST 2023" starttimestamp="1700516585068" timestamp="19380655" timestamp2="19380655">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1352" _type="InsertStringCommand" date="Mon Nov 20 22:06:05 EST 2023" starttimestamp="1700516585068" timestamp="19380661" timestamp2="19380661">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1354" _type="InsertStringCommand" date="Mon Nov 20 22:06:05 EST 2023" starttimestamp="1700516585068" timestamp="19380785" timestamp2="19380785">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1356" _type="InsertStringCommand" date="Mon Nov 20 22:06:05 EST 2023" starttimestamp="1700516585068" timestamp="19380892" timestamp2="19380892">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1358" _type="InsertStringCommand" date="Mon Nov 20 22:06:06 EST 2023" starttimestamp="1700516585068" timestamp="19380969" timestamp2="19380969">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1360" _type="InsertStringCommand" date="Mon Nov 20 22:06:06 EST 2023" starttimestamp="1700516585068" timestamp="19381009" timestamp2="19381009">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1362" _type="InsertStringCommand" date="Mon Nov 20 22:06:06 EST 2023" starttimestamp="1700516585068" timestamp="19381116" timestamp2="19381116">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1364" _type="InsertStringCommand" date="Mon Nov 20 22:06:06 EST 2023" starttimestamp="1700516585068" timestamp="19381177" timestamp2="19381177">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1365" _type="MoveCaretCommand" caretOffset="42" date="Mon Nov 20 22:06:08 EST 2023" docOffset="42" starttimestamp="1700516585068" timestamp="19383896" />
  <Command __id="1366" _type="SelectTextCommand" caretOffset="45" date="Mon Nov 20 22:06:09 EST 2023" end="45" start="36" starttimestamp="1700516585068" timestamp="19384021" />
  <Command __id="1367" _type="CopyCommand" date="Mon Nov 20 22:06:09 EST 2023" starttimestamp="1700516585068" timestamp="19384111" />
  <Command __id="1368" _type="MoveCaretCommand" caretOffset="90" date="Mon Nov 20 22:06:09 EST 2023" docOffset="90" starttimestamp="1700516585068" timestamp="19384320" />
  <Command __id="1369" _type="SelectTextCommand" caretOffset="96" date="Mon Nov 20 22:06:09 EST 2023" end="96" start="87" starttimestamp="1700516585068" timestamp="19384480" />
  <Command __id="1371" _type="PasteCommand" date="Mon Nov 20 22:06:09 EST 2023" starttimestamp="1700516585068" timestamp="19384568" />
  <Command __id="1372" _type="MoveCaretCommand" caretOffset="47" date="Mon Nov 20 22:06:09 EST 2023" docOffset="47" starttimestamp="1700516585068" timestamp="19384768" />
  <Command __id="1373" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 22:06:10 EST 2023" docOffset="98" starttimestamp="1700516585068" timestamp="19385549" />
  <Command __id="1374" _type="SelectTextCommand" caretOffset="16" date="Mon Nov 20 22:06:11 EST 2023" end="17" start="16" starttimestamp="1700516585068" timestamp="19386878" />
  <Command __id="1375" _type="MoveCaretCommand" caretOffset="16" date="Mon Nov 20 22:06:12 EST 2023" docOffset="16" starttimestamp="1700516585068" timestamp="19387180" />
  <Command __id="1377" _type="InsertStringCommand" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19387963" timestamp2="19387963">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1379" _type="InsertStringCommand" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19388061" timestamp2="19388061">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1381" _type="InsertStringCommand" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19388258" timestamp2="19388258">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1383" _type="InsertStringCommand" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19388303" timestamp2="19388303">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1385" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19388587" />
  <Command __id="1387" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19388690" />
  <Command __id="1389" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:06:13 EST 2023" starttimestamp="1700516585068" timestamp="19388812" />
  <Command __id="1391" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19388944" />
  <Command __id="1393" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389171" timestamp2="19389171">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1395" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389213" timestamp2="19389213">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1397" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389321" timestamp2="19389321">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1399" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389488" timestamp2="19389488">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1401" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389568" timestamp2="19389568">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1403" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389666" timestamp2="19389666">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1405" _type="InsertStringCommand" date="Mon Nov 20 22:06:14 EST 2023" starttimestamp="1700516585068" timestamp="19389727" timestamp2="19389727">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1406" _type="MoveCaretCommand" caretOffset="76" date="Mon Nov 20 22:06:15 EST 2023" docOffset="76" starttimestamp="1700516585068" timestamp="19390772" />
  <Command __id="1407" _type="ShellCommand" date="Mon Nov 20 22:06:16 EST 2023" starttimestamp="1700516585068" timestamp="19391794" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1408" _type="ShellCommand" date="Mon Nov 20 22:06:16 EST 2023" starttimestamp="1700516585068" timestamp="19391868" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1417" _type="MoveCaretCommand" caretOffset="199" date="Mon Nov 20 22:06:17 EST 2023" docOffset="199" starttimestamp="1700516585068" timestamp="19392489" />
  <Command __id="1418" _type="MoveCaretCommand" caretOffset="228" date="Mon Nov 20 22:06:17 EST 2023" docOffset="228" starttimestamp="1700516585068" timestamp="19392762" />
  <Command __id="1419" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:18 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19393382" />
  <Command __id="1420" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:18 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19393667" />
  <Command __id="1421" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 22:06:18 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="19393904" />
  <Command __id="1422" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:19 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19394113" />
  <Command __id="1423" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:19 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19394311" />
  <Command __id="1424" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:20 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19395092" />
  <Command __id="1425" _type="MoveCaretCommand" caretOffset="215" date="Mon Nov 20 22:06:20 EST 2023" docOffset="215" starttimestamp="1700516585068" timestamp="19395671" />
  <Command __id="1426" _type="MoveCaretCommand" caretOffset="227" date="Mon Nov 20 22:06:20 EST 2023" docOffset="227" starttimestamp="1700516585068" timestamp="19395902" />
  <Command __id="1427" _type="MoveCaretCommand" caretOffset="215" date="Mon Nov 20 22:06:21 EST 2023" docOffset="215" starttimestamp="1700516585068" timestamp="19396205" />
  <Command __id="1428" _type="MoveCaretCommand" caretOffset="230" date="Mon Nov 20 22:06:21 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="19396459" />
  <Command __id="1429" _type="MoveCaretCommand" caretOffset="214" date="Mon Nov 20 22:06:22 EST 2023" docOffset="214" starttimestamp="1700516585068" timestamp="19397062" />
  <Command __id="1430" _type="MoveCaretCommand" caretOffset="231" date="Mon Nov 20 22:06:22 EST 2023" docOffset="231" starttimestamp="1700516585068" timestamp="19397567" />
  <Command __id="1431" _type="MoveCaretCommand" caretOffset="215" date="Mon Nov 20 22:06:22 EST 2023" docOffset="215" starttimestamp="1700516585068" timestamp="19397807" />
  <Command __id="1432" _type="MoveCaretCommand" caretOffset="230" date="Mon Nov 20 22:06:23 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="19398092" />
  <Command __id="1433" _type="MoveCaretCommand" caretOffset="211" date="Mon Nov 20 22:06:23 EST 2023" docOffset="211" starttimestamp="1700516585068" timestamp="19398442" />
  <Command __id="1434" _type="MoveCaretCommand" caretOffset="234" date="Mon Nov 20 22:06:24 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="19398950" />
  <Command __id="1435" _type="MoveCaretCommand" caretOffset="214" date="Mon Nov 20 22:06:24 EST 2023" docOffset="214" starttimestamp="1700516585068" timestamp="19399444" />
  <Command __id="1436" _type="SelectTextCommand" caretOffset="200" date="Mon Nov 20 22:06:32 EST 2023" end="317" start="200" starttimestamp="1700516585068" timestamp="19407082" />
  <Command __id="1437" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 22:06:32 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="19407393" />
  <Command __id="1438" _type="MoveCaretCommand" caretOffset="216" date="Mon Nov 20 22:06:33 EST 2023" docOffset="216" starttimestamp="1700516585068" timestamp="19408020" />
  <Command __id="1439" _type="ShellCommand" date="Mon Nov 20 22:06:33 EST 2023" starttimestamp="1700516585068" timestamp="19408670" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1440" _type="ShellCommand" date="Mon Nov 20 22:06:39 EST 2023" starttimestamp="1700516585068" timestamp="19414919" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1441" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 22:06:40 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="19415583" />
  <Command __id="1442" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:41 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19416068" />
  <Command __id="1443" _type="MoveCaretCommand" caretOffset="262" date="Mon Nov 20 22:06:41 EST 2023" docOffset="262" starttimestamp="1700516585068" timestamp="19416588" />
  <Command __id="1444" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:42 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19417045" />
  <Command __id="1445" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:42 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19417532" />
  <Command __id="1446" _type="MoveCaretCommand" caretOffset="262" date="Mon Nov 20 22:06:42 EST 2023" docOffset="262" starttimestamp="1700516585068" timestamp="19417731" />
  <Command __id="1447" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:43 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19417939" />
  <Command __id="1448" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 22:06:43 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="19418118" />
  <Command __id="1449" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:43 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19418379" />
  <Command __id="1450" _type="MoveCaretCommand" caretOffset="262" date="Mon Nov 20 22:06:43 EST 2023" docOffset="262" starttimestamp="1700516585068" timestamp="19418575" />
  <Command __id="1451" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:43 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19418814" />
  <Command __id="1452" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:44 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19419000" />
  <Command __id="1453" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:44 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19419233" />
  <Command __id="1454" _type="MoveCaretCommand" caretOffset="262" date="Mon Nov 20 22:06:44 EST 2023" docOffset="262" starttimestamp="1700516585068" timestamp="19419422" />
  <Command __id="1455" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:44 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19419671" />
  <Command __id="1456" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:44 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19419846" />
  <Command __id="1457" _type="MoveCaretCommand" caretOffset="262" date="Mon Nov 20 22:06:45 EST 2023" docOffset="262" starttimestamp="1700516585068" timestamp="19420100" />
  <Command __id="1458" _type="MoveCaretCommand" caretOffset="262" date="Mon Nov 20 22:06:45 EST 2023" docOffset="262" starttimestamp="1700516585068" timestamp="19420293" />
  <Command __id="1459" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:45 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19420625" />
  <Command __id="1460" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:06:45 EST 2023" docOffset="299" starttimestamp="1700516585068" timestamp="19420814" />
  <Command __id="1461" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:06:46 EST 2023" starttimestamp="1700516585068" timestamp="19421132" />
  <Command __id="1462" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:06:46 EST 2023" starttimestamp="1700516585068" timestamp="19421236" />
  <Command __id="1463" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:06:46 EST 2023" starttimestamp="1700516585068" timestamp="19421243" />
  <Command __id="1464" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:06:46 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19421389" />
  <Command __id="1465" _type="ShellCommand" date="Mon Nov 20 22:06:46 EST 2023" starttimestamp="1700516585068" timestamp="19421565" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1325" _type="Insert" date="Mon Nov 20 22:06:03 EST 2023" docASTNodeCount="8" docActiveCodeLength="101" docExpressionCount="3" docLength="101" length="20" offset="76" repeat="20" starttimestamp="1700516585068" timestamp="19378000" timestamp2="19381176">
    <text><![CDATA[implements Evaluator]]></text>
  </DocumentChange>
  <DocumentChange __id="1370" _type="Replace" date="Mon Nov 20 22:06:09 EST 2023" docASTNodeCount="8" docActiveCodeLength="101" docExpressionCount="3" docLength="101" endLine="4" insertionLength="9" int_docASTNodeCount="6" int_docActiveCodeLength="92" int_docExpressionCount="2" int_docLength="92" length="9" offset="87" startLine="4" starttimestamp="1700516585068" timestamp="19384566">
    <deletedText><![CDATA[Evaluator]]></deletedText>
    <insertedText><![CDATA[Evaluator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1376" _type="Insert" date="Mon Nov 20 22:06:13 EST 2023" docASTNodeCount="8" docActiveCodeLength="105" docExpressionCount="3" docLength="105" length="4" offset="16" repeat="4" starttimestamp="1700516585068" timestamp="19387963" timestamp2="19388302">
    <text><![CDATA[mpor]]></text>
  </DocumentChange>
  <DocumentChange __id="1384" _type="Delete" date="Mon Nov 20 22:06:13 EST 2023" docASTNodeCount="8" docActiveCodeLength="101" docExpressionCount="3" docLength="101" endLine="2" length="4" offset="16" repeat="4" startLine="2" starttimestamp="1700516585068" timestamp="19388584" timestamp2="19388942">
    <text><![CDATA[mpor]]></text>
  </DocumentChange>
  <DocumentChange __id="1392" _type="Insert" date="Mon Nov 20 22:06:14 EST 2023" docASTNodeCount="16" docActiveCodeLength="108" docExpressionCount="10" docLength="108" length="7" offset="16" repeat="7" starttimestamp="1700516585068" timestamp="19389170" timestamp2="19389726">
    <text><![CDATA[import ]]></text>
  </DocumentChange>
  <DocumentChange __id="1409" _type="Insert" date="Mon Nov 20 22:06:16 EST 2023" docASTNodeCount="34" docActiveCodeLength="204" docExpressionCount="19" docLength="238" length="130" offset="104" repeat="4" starttimestamp="1700516585068" timestamp="19391887" timestamp2="19391887">
    <text><![CDATA[

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1413" _type="Insert" date="Mon Nov 20 22:06:16 EST 2023" docASTNodeCount="44" docActiveCodeLength="247" docExpressionCount="28" docLength="281" length="43" offset="53" repeat="2" starttimestamp="1700516585068" timestamp="19391887" timestamp2="19391887">
    <text><![CDATA[
import main.lisp.parser.terms.SExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="1415" _type="Insert" date="Mon Nov 20 22:06:16 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" length="40" offset="16" repeat="2" starttimestamp="1700516585068" timestamp="19391888" timestamp2="19391888">
    <text><![CDATA[import main.lisp.evaluator.Environment;
]]></text>
  </DocumentChange>
  <Command __id="1466" _type="ShellCommand" date="Mon Nov 20 22:06:50 EST 2023" starttimestamp="1700516585068" timestamp="19424948" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1468" _type="SelectTextCommand" caretOffset="320" date="Mon Nov 20 22:06:51 EST 2023" end="320" start="308" starttimestamp="1700516585068" timestamp="19426424" />
  <Command __id="1469" _type="MoveCaretCommand" caretOffset="196" date="Mon Nov 20 22:06:52 EST 2023" docOffset="196" starttimestamp="1700516585068" timestamp="19426958" />
  <Command __id="1470" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:06:52 EST 2023" starttimestamp="1700516585068" timestamp="19427125" />
  <Command __id="1471" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:06:52 EST 2023" starttimestamp="1700516585068" timestamp="19427225" />
  <Command __id="1472" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:06:52 EST 2023" starttimestamp="1700516585068" timestamp="19427232" />
  <Command __id="1473" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 22:06:53 EST 2023" docOffset="379" starttimestamp="1700516585068" timestamp="19428550" />
  <Command __id="1467" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:06:51 EST 2023" docASTNodeCount="47" docActiveCodeLength="392" docExpressionCount="29" docLength="426" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19426376">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class OperationRegistererImpl {"), Diff(INSERT,"import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new SumEvaluator());	}			@Override	public void registerOperations() {		// TODO Auto-generated method stub			}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new SumEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		// TODO Auto-generated method stub
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1475" _type="Insert" date="Mon Nov 20 22:06:57 EST 2023" docASTNodeCount="47" docActiveCodeLength="393" docExpressionCount="29" docLength="427" length="1" offset="124" starttimestamp="1700516585068" timestamp="19432614">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="1477" _type="Delete" date="Mon Nov 20 22:06:59 EST 2023" docASTNodeCount="47" docActiveCodeLength="392" docExpressionCount="29" docLength="426" endLine="4" length="1" offset="124" startLine="3" starttimestamp="1700516585068" timestamp="19434276">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1479" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:00 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19435053">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class quoteEvaluator {"), Diff(INSERT,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class quoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="1481" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:00 EST 2023" docASTNodeCount="47" docActiveCodeLength="392" docExpressionCount="29" docLength="426" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19435557">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new SumEvaluator());	}			@Override	public void registerOperations() {		// TODO Auto-generated method stub			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1474" _type="MoveCaretCommand" caretOffset="124" date="Mon Nov 20 22:06:57 EST 2023" docOffset="124" starttimestamp="1700516585068" timestamp="19432106" />
  <Command __id="1476" _type="InsertStringCommand" date="Mon Nov 20 22:06:57 EST 2023" starttimestamp="1700516585068" timestamp="19432617" timestamp2="19432617">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:06:59 EST 2023" starttimestamp="1700516585068" timestamp="19434278" />
  <Command __id="1480" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:07:00 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19435105" />
  <Command __id="1482" _type="MoveCaretCommand" caretOffset="124" date="Mon Nov 20 22:07:00 EST 2023" docOffset="124" starttimestamp="1700516585068" timestamp="19435606" />
  <Command __id="1483" _type="MoveCaretCommand" caretOffset="315" date="Mon Nov 20 22:07:01 EST 2023" docOffset="315" starttimestamp="1700516585068" timestamp="19436075" />
  <Command __id="1484" _type="SelectTextCommand" caretOffset="320" date="Mon Nov 20 22:07:01 EST 2023" end="320" start="308" starttimestamp="1700516585068" timestamp="19436222" />
  <Command __id="1486" _type="InsertStringCommand" date="Mon Nov 20 22:07:02 EST 2023" starttimestamp="1700516585068" timestamp="19437421" timestamp2="19437421">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="1488" _type="InsertStringCommand" date="Mon Nov 20 22:07:02 EST 2023" starttimestamp="1700516585068" timestamp="19437496" timestamp2="19437496">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1490" _type="InsertStringCommand" date="Mon Nov 20 22:07:02 EST 2023" starttimestamp="1700516585068" timestamp="19437558" timestamp2="19437558">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1492" _type="InsertStringCommand" date="Mon Nov 20 22:07:02 EST 2023" starttimestamp="1700516585068" timestamp="19437618" timestamp2="19437618">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1494" _type="InsertStringCommand" date="Mon Nov 20 22:07:02 EST 2023" starttimestamp="1700516585068" timestamp="19437696" timestamp2="19437696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1496" _type="InsertStringCommand" date="Mon Nov 20 22:07:02 EST 2023" starttimestamp="1700516585068" timestamp="19437927" timestamp2="19437927">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1498" _type="InsertStringCommand" date="Mon Nov 20 22:07:03 EST 2023" starttimestamp="1700516585068" timestamp="19438176" timestamp2="19438176">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1500" _type="InsertStringCommand" date="Mon Nov 20 22:07:03 EST 2023" starttimestamp="1700516585068" timestamp="19438204" timestamp2="19438204">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1502" _type="InsertStringCommand" date="Mon Nov 20 22:07:03 EST 2023" starttimestamp="1700516585068" timestamp="19438907" timestamp2="19438907">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1504" _type="InsertStringCommand" date="Mon Nov 20 22:07:04 EST 2023" starttimestamp="1700516585068" timestamp="19439014" timestamp2="19439014">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1506" _type="InsertStringCommand" date="Mon Nov 20 22:07:04 EST 2023" starttimestamp="1700516585068" timestamp="19439100" timestamp2="19439100">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1508" _type="InsertStringCommand" date="Mon Nov 20 22:07:04 EST 2023" starttimestamp="1700516585068" timestamp="19439176" timestamp2="19439176">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1510" _type="InsertStringCommand" date="Mon Nov 20 22:07:04 EST 2023" starttimestamp="1700516585068" timestamp="19439304" timestamp2="19439304">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1512" _type="InsertStringCommand" date="Mon Nov 20 22:07:04 EST 2023" starttimestamp="1700516585068" timestamp="19439437" timestamp2="19439437">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1513" _type="MoveCaretCommand" caretOffset="381" date="Mon Nov 20 22:07:05 EST 2023" docOffset="381" starttimestamp="1700516585068" timestamp="19440011" />
  <Command __id="1514" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 22:07:06 EST 2023" docOffset="331" starttimestamp="1700516585068" timestamp="19440972" />
  <Command __id="1515" _type="SelectTextCommand" caretOffset="384" date="Mon Nov 20 22:07:09 EST 2023" end="418" start="384" starttimestamp="1700516585068" timestamp="19444048" />
  <Command __id="1517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:07:09 EST 2023" starttimestamp="1700516585068" timestamp="19444493" />
  <Command __id="1519" _type="InsertStringCommand" date="Mon Nov 20 22:07:09 EST 2023" starttimestamp="1700516585068" timestamp="19444504" timestamp2="19444504">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:07:10 EST 2023" starttimestamp="1700516585068" timestamp="19445141" />
  <Command __id="1523" _type="InsertStringCommand" date="Mon Nov 20 22:07:10 EST 2023" starttimestamp="1700516585068" timestamp="19445643" timestamp2="19445643">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1525" _type="InsertStringCommand" date="Mon Nov 20 22:07:10 EST 2023" starttimestamp="1700516585068" timestamp="19445703" timestamp2="19445703">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1527" _type="InsertStringCommand" date="Mon Nov 20 22:07:10 EST 2023" starttimestamp="1700516585068" timestamp="19445748" timestamp2="19445748">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1529" _type="InsertStringCommand" date="Mon Nov 20 22:07:10 EST 2023" starttimestamp="1700516585068" timestamp="19445870" timestamp2="19445870">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1531" _type="InsertStringCommand" date="Mon Nov 20 22:07:11 EST 2023" starttimestamp="1700516585068" timestamp="19445946" timestamp2="19445946">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1532" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:07:11 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="19445983" />
  <Command __id="1543" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:07:13 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="19448352" />
  <Command __id="1545" _type="InsertStringCommand" date="Mon Nov 20 22:07:13 EST 2023" starttimestamp="1700516585068" timestamp="19448357" timestamp2="19448357">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1546" _type="MoveCaretCommand" caretOffset="410" date="Mon Nov 20 22:07:14 EST 2023" docOffset="410" starttimestamp="1700516585068" timestamp="19449486" />
  <Command __id="1547" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 22:07:15 EST 2023" docOffset="403" starttimestamp="1700516585068" timestamp="19449955" />
  <Command __id="1549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:07:15 EST 2023" starttimestamp="1700516585068" timestamp="19450400" />
  <Command __id="1551" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:07:15 EST 2023" starttimestamp="1700516585068" timestamp="19450579" />
  <Command __id="1553" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:07:15 EST 2023" starttimestamp="1700516585068" timestamp="19450821" />
  <Command __id="1554" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:07:16 EST 2023" starttimestamp="1700516585068" timestamp="19451180" />
  <Command __id="1555" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:07:16 EST 2023" starttimestamp="1700516585068" timestamp="19451276" />
  <Command __id="1556" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:07:16 EST 2023" starttimestamp="1700516585068" timestamp="19451285" />
  <Command __id="1557" _type="MoveCaretCommand" caretOffset="234" date="Mon Nov 20 22:07:16 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="19451525" />
  <Command __id="1558" _type="MoveCaretCommand" caretOffset="125" date="Mon Nov 20 22:07:18 EST 2023" docOffset="125" starttimestamp="1700516585068" timestamp="19453276" />
  <Command __id="1559" _type="MoveCaretCommand" caretOffset="182" date="Mon Nov 20 22:07:18 EST 2023" docOffset="182" starttimestamp="1700516585068" timestamp="19453528" />
  <Command __id="1560" _type="SelectTextCommand" caretOffset="167" date="Mon Nov 20 22:07:19 EST 2023" end="168" start="167" starttimestamp="1700516585068" timestamp="19454187" />
  <Command __id="1561" _type="MoveCaretCommand" caretOffset="158" date="Mon Nov 20 22:07:19 EST 2023" docOffset="158" starttimestamp="1700516585068" timestamp="19454444" />
  <Command __id="1562" _type="ShellCommand" date="Mon Nov 20 22:07:19 EST 2023" starttimestamp="1700516585068" timestamp="19454736" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1563" _type="ShellCommand" date="Mon Nov 20 22:07:29 EST 2023" starttimestamp="1700516585068" timestamp="19464791" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1564" _type="MoveCaretCommand" caretOffset="400" date="Mon Nov 20 22:07:30 EST 2023" docOffset="400" starttimestamp="1700516585068" timestamp="19465522" />
  <Command __id="1565" _type="MoveCaretCommand" caretOffset="355" date="Mon Nov 20 22:07:31 EST 2023" docOffset="355" starttimestamp="1700516585068" timestamp="19466017" />
  <Command __id="1566" _type="MoveCaretCommand" caretOffset="370" date="Mon Nov 20 22:07:33 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="19468845" />
  <Command __id="1567" _type="ShellCommand" date="Mon Nov 20 22:07:35 EST 2023" starttimestamp="1700516585068" timestamp="19470020" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1568" _type="ShellCommand" date="Mon Nov 20 22:07:39 EST 2023" starttimestamp="1700516585068" timestamp="19474806" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1569" _type="ShellCommand" date="Mon Nov 20 22:07:40 EST 2023" starttimestamp="1700516585068" timestamp="19475788" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1570" _type="ShellCommand" date="Mon Nov 20 22:07:41 EST 2023" starttimestamp="1700516585068" timestamp="19476201" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1571" _type="ShellCommand" date="Mon Nov 20 22:07:41 EST 2023" starttimestamp="1700516585068" timestamp="19476791" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1572" _type="ShellCommand" date="Mon Nov 20 22:07:42 EST 2023" starttimestamp="1700516585068" timestamp="19477594" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1485" _type="Replace" date="Mon Nov 20 22:07:02 EST 2023" docASTNodeCount="47" docActiveCodeLength="381" docExpressionCount="29" docLength="415" endLine="8" insertionLength="1" int_docASTNodeCount="37" int_docActiveCodeLength="380" int_docExpressionCount="21" int_docLength="414" length="12" offset="308" startLine="8" starttimestamp="1700516585068" timestamp="19437418">
    <deletedText><![CDATA[SumEvaluator]]></deletedText>
    <insertedText><![CDATA[q]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1487" _type="Insert" date="Mon Nov 20 22:07:02 EST 2023" docASTNodeCount="47" docActiveCodeLength="394" docExpressionCount="29" docLength="428" length="13" offset="309" repeat="13" starttimestamp="1700516585068" timestamp="19437494" timestamp2="19439433">
    <text><![CDATA[uoteEvaluator]]></text>
  </DocumentChange>
  <DocumentChange __id="1516" _type="Delete" date="Mon Nov 20 22:07:09 EST 2023" docASTNodeCount="47" docActiveCodeLength="394" docExpressionCount="29" docLength="394" endLine="15" length="34" offset="384" startLine="15" starttimestamp="1700516585068" timestamp="19444488">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="1518" _type="Insert" date="Mon Nov 20 22:07:09 EST 2023" docASTNodeCount="47" docActiveCodeLength="395" docExpressionCount="29" docLength="395" length="1" offset="384" starttimestamp="1700516585068" timestamp="19444502">
    <text><![CDATA[=]]></text>
  </DocumentChange>
  <DocumentChange __id="1520" _type="Delete" date="Mon Nov 20 22:07:10 EST 2023" docASTNodeCount="47" docActiveCodeLength="394" docExpressionCount="29" docLength="394" endLine="15" length="1" offset="384" startLine="15" starttimestamp="1700516585068" timestamp="19445138">
    <text><![CDATA[=]]></text>
  </DocumentChange>
  <DocumentChange __id="1522" _type="Insert" date="Mon Nov 20 22:07:10 EST 2023" docASTNodeCount="51" docActiveCodeLength="399" docExpressionCount="32" docLength="399" length="5" offset="384" repeat="5" starttimestamp="1700516585068" timestamp="19445640" timestamp2="19445944">
    <text><![CDATA[this.]]></text>
  </DocumentChange>
  <DocumentChange __id="1533" _type="Delete" date="Mon Nov 20 22:07:11 EST 2023" docASTNodeCount="47" docActiveCodeLength="394" docExpressionCount="29" docLength="394" endLine="15" length="5" offset="384" repeat="5" startLine="15" starttimestamp="1700516585068" timestamp="19446190" timestamp2="19446681">
    <text><![CDATA[this.]]></text>
  </DocumentChange>
  <DocumentChange __id="1538" _type="Insert" date="Mon Nov 20 22:07:12 EST 2023" docASTNodeCount="49" docActiveCodeLength="399" docExpressionCount="30" docLength="399" length="5" offset="384" repeat="5" starttimestamp="1700516585068" timestamp="19447419" timestamp2="19447794">
    <text><![CDATA[regis]]></text>
  </DocumentChange>
  <DocumentChange __id="1544" _type="Replace" date="Mon Nov 20 22:07:13 EST 2023" docASTNodeCount="50" docActiveCodeLength="410" docExpressionCount="31" docLength="410" endLine="15" insertionLength="16" int_docASTNodeCount="47" int_docActiveCodeLength="394" int_docExpressionCount="29" int_docLength="394" length="5" offset="384" startLine="15" starttimestamp="1700516585068" timestamp="19448354">
    <deletedText><![CDATA[regis]]></deletedText>
    <insertedText><![CDATA[registerBasic();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1548" _type="Delete" date="Mon Nov 20 22:07:15 EST 2023" docASTNodeCount="50" docActiveCodeLength="407" docExpressionCount="31" docLength="407" endLine="16" length="3" offset="400" repeat="3" startLine="15" starttimestamp="1700516585068" timestamp="19450397" timestamp2="19450818">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="1573" _type="MoveCaretCommand" caretOffset="157" date="Mon Nov 20 22:07:43 EST 2023" docOffset="157" starttimestamp="1700516585068" timestamp="19478791" />
  <Command __id="1574" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:45 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19479946">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1575" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:07:45 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19479987" />
  <Command __id="1576" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:45 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19480805">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1577" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:07:45 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19480840" />
  <Command __id="1578" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:47 EST 2023" docASTNodeCount="50" docActiveCodeLength="407" docExpressionCount="31" docLength="407" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19482075">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new "), Diff(DELETE,"Sum"), Diff(INSERT,"quote"), Diff(EQUAL,"Evaluator());	}			@Override	public void registerOperations() {		"), Diff(DELETE,"// TODO Auto-generated method stub		"), Diff(INSERT,"registerBasic();"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new quoteEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1579" _type="MoveCaretCommand" caretOffset="157" date="Mon Nov 20 22:07:47 EST 2023" docOffset="157" starttimestamp="1700516585068" timestamp="19482110" />
  <Command __id="1580" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19487686">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1581" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:07:52 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19487729" />
  <Command __id="1582" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:53 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19488109">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1583" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 22:07:53 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="19488160" />
  <Command __id="1584" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:53 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19488535">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1585" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 22:07:53 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="19488576" />
  <Command __id="1586" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:54 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19489090">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1587" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 22:07:54 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="19489139" />
  <Command __id="1588" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 22:07:55 EST 2023" docOffset="147" starttimestamp="1700516585068" timestamp="19490136" />
  <Command __id="1589" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 22:07:55 EST 2023" docOffset="147" starttimestamp="1700516585068" timestamp="19490136" />
  <Command __id="1590" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:07:56 EST 2023" docASTNodeCount="50" docActiveCodeLength="407" docExpressionCount="31" docLength="407" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19491301">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1591" _type="MoveCaretCommand" caretOffset="157" date="Mon Nov 20 22:07:56 EST 2023" docOffset="157" starttimestamp="1700516585068" timestamp="19491346" />
  <Command __id="1592" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:08:06 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19501326">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1593" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:08:06 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19501376" />
  <Command __id="1594" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:08:06 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19501861">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1595" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 22:08:06 EST 2023" docOffset="147" starttimestamp="1700516585068" timestamp="19501904" />
  <DocumentChange __id="1596" _type="Insert" date="Mon Nov 20 22:08:15 EST 2023" docASTNodeCount="47" docActiveCodeLength="235" docExpressionCount="27" docLength="235" length="5" offset="147" repeat="3" starttimestamp="1700516585068" timestamp="19510225" timestamp2="19511132">
    <text><![CDATA[
		op]]></text>
  </DocumentChange>
  <Command __id="1597" _type="InsertStringCommand" date="Mon Nov 20 22:08:15 EST 2023" starttimestamp="1700516585068" timestamp="19510229" timestamp2="19510229">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1598" _type="InsertStringCommand" date="Mon Nov 20 22:08:15 EST 2023" starttimestamp="1700516585068" timestamp="19510229" timestamp2="19510229">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1600" _type="InsertStringCommand" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19510959" timestamp2="19510959">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1601" _type="InsertStringCommand" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19510959" timestamp2="19510959">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1603" _type="InsertStringCommand" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19511134" timestamp2="19511134">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1604" _type="InsertStringCommand" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19511134" timestamp2="19511134">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="1605" _type="Delete" date="Mon Nov 20 22:08:16 EST 2023" docASTNodeCount="43" docActiveCodeLength="233" docExpressionCount="26" docLength="233" endLine="8" length="2" offset="150" repeat="2" startLine="8" starttimestamp="1700516585068" timestamp="19511366" timestamp2="19511490">
    <text><![CDATA[op]]></text>
  </DocumentChange>
  <Command __id="1606" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19511368" />
  <Command __id="1607" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19511368" />
  <Command __id="1609" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19511492" />
  <Command __id="1610" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:08:16 EST 2023" starttimestamp="1700516585068" timestamp="19511492" />
  <Command __id="1612" _type="MoveCaretCommand" caretOffset="157" date="Mon Nov 20 22:08:17 EST 2023" docOffset="157" starttimestamp="1700516585068" timestamp="19512530" />
  <Command __id="1611" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:08:17 EST 2023" docASTNodeCount="50" docActiveCodeLength="407" docExpressionCount="31" docLength="407" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19512486">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1618" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:08:21 EST 2023" docASTNodeCount="43" docActiveCodeLength="233" docExpressionCount="26" docLength="233" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19516453">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		"), Diff(INSERT,"		"), Diff(EQUAL,"ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class index {

	public static void main(String[] args) {
		
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1620" _type="Replace" date="Mon Nov 20 22:08:22 EST 2023" docASTNodeCount="47" docActiveCodeLength="256" docExpressionCount="27" docLength="256" endLine="8" insertionLength="25" int_docASTNodeCount="43" int_docActiveCodeLength="231" int_docExpressionCount="26" int_docLength="231" length="2" offset="148" startLine="8" starttimestamp="1700516585068" timestamp="19517028">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		OperationRegistererImpl]]></insertedText>
  </DocumentChange>
  <Command __id="1613" _type="MoveCaretCommand" caretOffset="125" date="Mon Nov 20 22:08:19 EST 2023" docOffset="125" starttimestamp="1700516585068" timestamp="19514891" />
  <Command __id="1614" _type="SelectTextCommand" caretOffset="132" date="Mon Nov 20 22:08:20 EST 2023" end="132" start="125" starttimestamp="1700516585068" timestamp="19515051" />
  <Command __id="1615" _type="MoveCaretCommand" caretOffset="150" date="Mon Nov 20 22:08:20 EST 2023" docOffset="150" starttimestamp="1700516585068" timestamp="19515443" />
  <Command __id="1616" _type="SelectTextCommand" caretOffset="162" date="Mon Nov 20 22:08:20 EST 2023" end="162" start="139" starttimestamp="1700516585068" timestamp="19515596" />
  <Command __id="1617" _type="CopyCommand" date="Mon Nov 20 22:08:21 EST 2023" starttimestamp="1700516585068" timestamp="19516247" />
  <Command __id="1619" _type="MoveCaretCommand" caretOffset="101" date="Mon Nov 20 22:08:21 EST 2023" docOffset="150" starttimestamp="1700516585068" timestamp="19516510" />
  <Command __id="1621" _type="PasteCommand" date="Mon Nov 20 22:08:22 EST 2023" starttimestamp="1700516585068" timestamp="19517032" />
  <Command __id="1623" _type="InsertStringCommand" date="Mon Nov 20 22:08:22 EST 2023" starttimestamp="1700516585068" timestamp="19517751" timestamp2="19517751">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1624" _type="InsertStringCommand" date="Mon Nov 20 22:08:22 EST 2023" starttimestamp="1700516585068" timestamp="19517751" timestamp2="19517751">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1626" _type="InsertStringCommand" date="Mon Nov 20 22:08:23 EST 2023" starttimestamp="1700516585068" timestamp="19518232" timestamp2="19518232">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1627" _type="InsertStringCommand" date="Mon Nov 20 22:08:23 EST 2023" starttimestamp="1700516585068" timestamp="19518232" timestamp2="19518232">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1629" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520061" timestamp2="19520061">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1630" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520061" timestamp2="19520061">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1632" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520163" timestamp2="19520163">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1633" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520164" timestamp2="19520164">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1635" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520280" timestamp2="19520280">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1636" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520280" timestamp2="19520280">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1638" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520406" timestamp2="19520406">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1639" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520406" timestamp2="19520406">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1641" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520485" timestamp2="19520485">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1642" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520485" timestamp2="19520485">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1644" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520542" timestamp2="19520542">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1645" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520542" timestamp2="19520542">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1647" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520655" timestamp2="19520655">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1648" _type="InsertStringCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520655" timestamp2="19520655">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1650" _type="PasteCommand" date="Mon Nov 20 22:08:25 EST 2023" starttimestamp="1700516585068" timestamp="19520842" />
  <Command __id="1652" _type="InsertStringCommand" date="Mon Nov 20 22:08:26 EST 2023" starttimestamp="1700516585068" timestamp="19521078" timestamp2="19521078">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1653" _type="InsertStringCommand" date="Mon Nov 20 22:08:26 EST 2023" starttimestamp="1700516585068" timestamp="19521078" timestamp2="19521078">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="1622" _type="Insert" date="Mon Nov 20 22:08:22 EST 2023" docASTNodeCount="51" docActiveCodeLength="290" docExpressionCount="30" docLength="290" length="34" offset="173" repeat="11" starttimestamp="1700516585068" timestamp="19517749" timestamp2="19521075">
    <text><![CDATA[ o = new OperationRegistererImpl()]]></text>
  </DocumentChange>
  <Command __id="1654" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:08:28 EST 2023" starttimestamp="1700516585068" timestamp="19522995" />
  <Command __id="1655" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:08:28 EST 2023" starttimestamp="1700516585068" timestamp="19522996" />
  <DocumentChange __id="1656" _type="Insert" date="Mon Nov 20 22:08:28 EST 2023" docASTNodeCount="53" docActiveCodeLength="296" docExpressionCount="32" docLength="296" length="6" offset="207" repeat="4" starttimestamp="1700516585068" timestamp="19523176" timestamp2="19524961">
    <text><![CDATA[;
		o.]]></text>
  </DocumentChange>
  <Command __id="1657" _type="InsertStringCommand" date="Mon Nov 20 22:08:28 EST 2023" starttimestamp="1700516585068" timestamp="19523179" timestamp2="19523179">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1658" _type="InsertStringCommand" date="Mon Nov 20 22:08:28 EST 2023" starttimestamp="1700516585068" timestamp="19523179" timestamp2="19523179">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1660" _type="InsertStringCommand" date="Mon Nov 20 22:08:29 EST 2023" starttimestamp="1700516585068" timestamp="19524471" timestamp2="19524471">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1661" _type="InsertStringCommand" date="Mon Nov 20 22:08:29 EST 2023" starttimestamp="1700516585068" timestamp="19524471" timestamp2="19524471">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1663" _type="InsertStringCommand" date="Mon Nov 20 22:08:29 EST 2023" starttimestamp="1700516585068" timestamp="19524774" timestamp2="19524774">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1664" _type="InsertStringCommand" date="Mon Nov 20 22:08:29 EST 2023" starttimestamp="1700516585068" timestamp="19524774" timestamp2="19524774">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1666" _type="InsertStringCommand" date="Mon Nov 20 22:08:30 EST 2023" starttimestamp="1700516585068" timestamp="19524963" timestamp2="19524963">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1667" _type="InsertStringCommand" date="Mon Nov 20 22:08:30 EST 2023" starttimestamp="1700516585068" timestamp="19524963" timestamp2="19524963">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1668" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:08:30 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="19524969" />
  <DocumentChange __id="1669" _type="Insert" date="Mon Nov 20 22:08:32 EST 2023" docASTNodeCount="57" docActiveCodeLength="298" docExpressionCount="33" docLength="298" length="2" offset="213" repeat="2" starttimestamp="1700516585068" timestamp="19527582" timestamp2="19527638">
    <text><![CDATA[re]]></text>
  </DocumentChange>
  <Command __id="1671" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:08:33 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="19528287" />
  <Command __id="1673" _type="InsertStringCommand" date="Mon Nov 20 22:08:33 EST 2023" starttimestamp="1700516585068" timestamp="19528292" timestamp2="19528292">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1674" _type="InsertStringCommand" date="Mon Nov 20 22:08:33 EST 2023" starttimestamp="1700516585068" timestamp="19528292" timestamp2="19528292">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1675" _type="MoveCaretCommand" caretOffset="264" date="Mon Nov 20 22:08:35 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="19530706" />
  <Command __id="1676" _type="MoveCaretCommand" caretOffset="264" date="Mon Nov 20 22:08:35 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="19530706" />
  <Command __id="1677" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:08:35 EST 2023" starttimestamp="1700516585068" timestamp="19530919" />
  <Command __id="1678" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:08:36 EST 2023" starttimestamp="1700516585068" timestamp="19531017" />
  <Command __id="1679" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:08:36 EST 2023" starttimestamp="1700516585068" timestamp="19531025" />
  <Command __id="1680" _type="MoveCaretCommand" caretOffset="130" date="Mon Nov 20 22:08:37 EST 2023" docOffset="179" starttimestamp="1700516585068" timestamp="19531982" />
  <Command __id="1681" _type="MoveCaretCommand" caretOffset="130" date="Mon Nov 20 22:08:37 EST 2023" docOffset="179" starttimestamp="1700516585068" timestamp="19531982" />
  <Command __id="1682" _type="MoveCaretCommand" caretOffset="129" date="Mon Nov 20 22:08:37 EST 2023" docOffset="178" starttimestamp="1700516585068" timestamp="19532351" />
  <Command __id="1683" _type="MoveCaretCommand" caretOffset="129" date="Mon Nov 20 22:08:37 EST 2023" docOffset="178" starttimestamp="1700516585068" timestamp="19532351" />
  <Command __id="1684" _type="MoveCaretCommand" caretOffset="185" date="Mon Nov 20 22:08:37 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="19532839" />
  <Command __id="1685" _type="MoveCaretCommand" caretOffset="185" date="Mon Nov 20 22:08:37 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="19532839" />
  <Command __id="1686" _type="SelectTextCommand" caretOffset="126" date="Mon Nov 20 22:08:39 EST 2023" end="126" start="125" starttimestamp="1700516585068" timestamp="19534036" />
  <Command __id="1687" _type="SelectTextCommand" caretOffset="126" date="Mon Nov 20 22:08:39 EST 2023" end="126" start="125" starttimestamp="1700516585068" timestamp="19534037" />
  <Command __id="1688" _type="SelectTextCommand" caretOffset="124" date="Mon Nov 20 22:08:40 EST 2023" end="124" start="101" starttimestamp="1700516585068" timestamp="19535655" />
  <Command __id="1689" _type="SelectTextCommand" caretOffset="124" date="Mon Nov 20 22:08:40 EST 2023" end="124" start="101" starttimestamp="1700516585068" timestamp="19535655" />
  <Command __id="1690" _type="CopyCommand" date="Mon Nov 20 22:08:40 EST 2023" starttimestamp="1700516585068" timestamp="19535742" />
  <Command __id="1691" _type="SelectTextCommand" caretOffset="126" date="Mon Nov 20 22:08:41 EST 2023" end="127" start="126" starttimestamp="1700516585068" timestamp="19535952" />
  <Command __id="1692" _type="SelectTextCommand" caretOffset="126" date="Mon Nov 20 22:08:41 EST 2023" end="127" start="126" starttimestamp="1700516585068" timestamp="19535952" />
  <Command __id="1693" _type="MoveCaretCommand" caretOffset="185" date="Mon Nov 20 22:08:41 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="19536303" />
  <Command __id="1694" _type="MoveCaretCommand" caretOffset="185" date="Mon Nov 20 22:08:41 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="19536303" />
  <Command __id="1695" _type="SelectTextCommand" caretOffset="125" date="Mon Nov 20 22:08:42 EST 2023" end="126" start="125" starttimestamp="1700516585068" timestamp="19537353" />
  <Command __id="1696" _type="SelectTextCommand" caretOffset="125" date="Mon Nov 20 22:08:42 EST 2023" end="126" start="125" starttimestamp="1700516585068" timestamp="19537354" />
  <Command __id="1698" _type="PasteCommand" date="Mon Nov 20 22:08:42 EST 2023" starttimestamp="1700516585068" timestamp="19537430" />
  <Command __id="1699" _type="MoveCaretCommand" caretOffset="126" date="Mon Nov 20 22:08:43 EST 2023" docOffset="175" starttimestamp="1700516585068" timestamp="19537964" />
  <Command __id="1700" _type="MoveCaretCommand" caretOffset="126" date="Mon Nov 20 22:08:43 EST 2023" docOffset="175" starttimestamp="1700516585068" timestamp="19537964" />
  <Command __id="1702" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:08:43 EST 2023" starttimestamp="1700516585068" timestamp="19538805" />
  <Command __id="1703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:08:43 EST 2023" starttimestamp="1700516585068" timestamp="19538805" />
  <Command __id="1705" _type="InsertStringCommand" date="Mon Nov 20 22:08:44 EST 2023" starttimestamp="1700516585068" timestamp="19538990" timestamp2="19538990">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1706" _type="InsertStringCommand" date="Mon Nov 20 22:08:44 EST 2023" starttimestamp="1700516585068" timestamp="19538990" timestamp2="19538990">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1707" _type="MoveCaretCommand" caretOffset="92" date="Mon Nov 20 22:08:44 EST 2023" docOffset="141" starttimestamp="1700516585068" timestamp="19539776" />
  <Command __id="1708" _type="MoveCaretCommand" caretOffset="92" date="Mon Nov 20 22:08:44 EST 2023" docOffset="141" starttimestamp="1700516585068" timestamp="19539776" />
  <Command __id="1709" _type="SelectTextCommand" caretOffset="95" date="Mon Nov 20 22:08:45 EST 2023" end="95" start="91" starttimestamp="1700516585068" timestamp="19539932" />
  <Command __id="1710" _type="SelectTextCommand" caretOffset="95" date="Mon Nov 20 22:08:45 EST 2023" end="95" start="91" starttimestamp="1700516585068" timestamp="19539933" />
  <Command __id="1711" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 22:08:45 EST 2023" docOffset="181" starttimestamp="1700516585068" timestamp="19540204" />
  <Command __id="1712" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 22:08:45 EST 2023" docOffset="181" starttimestamp="1700516585068" timestamp="19540205" />
  <Command __id="1713" _type="SelectTextCommand" caretOffset="148" date="Mon Nov 20 22:08:45 EST 2023" end="148" start="125" starttimestamp="1700516585068" timestamp="19540339" />
  <Command __id="1714" _type="SelectTextCommand" caretOffset="148" date="Mon Nov 20 22:08:45 EST 2023" end="148" start="125" starttimestamp="1700516585068" timestamp="19540339" />
  <Command __id="1715" _type="CopyCommand" date="Mon Nov 20 22:08:45 EST 2023" starttimestamp="1700516585068" timestamp="19540435" />
  <Command __id="1716" _type="SelectTextCommand" caretOffset="184" date="Mon Nov 20 22:08:46 EST 2023" end="185" start="184" starttimestamp="1700516585068" timestamp="19541453" />
  <Command __id="1717" _type="SelectTextCommand" caretOffset="184" date="Mon Nov 20 22:08:46 EST 2023" end="185" start="184" starttimestamp="1700516585068" timestamp="19541453" />
  <Command __id="1719" _type="PasteCommand" date="Mon Nov 20 22:08:46 EST 2023" starttimestamp="1700516585068" timestamp="19541592" />
  <Command __id="1720" _type="MoveCaretCommand" caretOffset="260" date="Mon Nov 20 22:08:46 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19541745" />
  <Command __id="1721" _type="MoveCaretCommand" caretOffset="260" date="Mon Nov 20 22:08:46 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19541746" />
  <Command __id="1722" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:08:47 EST 2023" starttimestamp="1700516585068" timestamp="19541941" />
  <Command __id="1723" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:08:47 EST 2023" starttimestamp="1700516585068" timestamp="19542042" />
  <Command __id="1724" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:08:47 EST 2023" starttimestamp="1700516585068" timestamp="19542053" />
  <Command __id="1726" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 22:08:47 EST 2023" docOffset="2099" starttimestamp="1700516585068" timestamp="19542724" />
  <Command __id="1727" _type="MoveCaretCommand" caretOffset="1813" date="Mon Nov 20 22:08:59 EST 2023" docOffset="1942" starttimestamp="1700516585068" timestamp="19554455" />
  <Command __id="1728" _type="MoveCaretCommand" caretOffset="1813" date="Mon Nov 20 22:08:59 EST 2023" docOffset="1942" starttimestamp="1700516585068" timestamp="19554456" />
  <DocumentChange __id="1672" _type="Replace" date="Mon Nov 20 22:08:33 EST 2023" docASTNodeCount="55" docActiveCodeLength="317" docExpressionCount="33" docLength="317" endLine="9" insertionLength="21" int_docASTNodeCount="53" int_docActiveCodeLength="296" int_docExpressionCount="32" int_docLength="296" length="2" offset="213" startLine="9" starttimestamp="1700516585068" timestamp="19528288">
    <deletedText><![CDATA[re]]></deletedText>
    <insertedText><![CDATA[registerOperations();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1697" _type="Replace" date="Mon Nov 20 22:08:42 EST 2023" docASTNodeCount="55" docActiveCodeLength="339" docExpressionCount="33" docLength="339" endLine="8" insertionLength="23" int_docASTNodeCount="53" int_docActiveCodeLength="316" int_docExpressionCount="33" int_docLength="316" length="1" offset="174" startLine="8" starttimestamp="1700516585068" timestamp="19537423">
    <deletedText><![CDATA[o]]></deletedText>
    <insertedText><![CDATA[OperationRegistererImpl]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1701" _type="Delete" date="Mon Nov 20 22:08:43 EST 2023" docASTNodeCount="55" docActiveCodeLength="338" docExpressionCount="33" docLength="338" endLine="8" length="1" offset="174" startLine="8" starttimestamp="1700516585068" timestamp="19538803">
    <text><![CDATA[O]]></text>
  </DocumentChange>
  <DocumentChange __id="1704" _type="Insert" date="Mon Nov 20 22:08:44 EST 2023" docASTNodeCount="55" docActiveCodeLength="339" docExpressionCount="33" docLength="339" length="1" offset="174" starttimestamp="1700516585068" timestamp="19538987">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="1718" _type="Replace" date="Mon Nov 20 22:08:46 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" endLine="9" insertionLength="25" int_docASTNodeCount="54" int_docActiveCodeLength="336" int_docExpressionCount="32" int_docLength="336" length="3" offset="231" startLine="9" starttimestamp="1700516585068" timestamp="19541590">
    <deletedText><![CDATA[		o]]></deletedText>
    <insertedText><![CDATA[		operationRegistererImpl]]></insertedText>
  </DocumentChange>
  <Command __id="1725" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:08:47 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19542688">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1737" _type="Replace" date="Mon Nov 20 22:09:02 EST 2023" docASTNodeCount="250" docActiveCodeLength="1596" docExpressionCount="120" docLength="2106" endLine="90" insertionLength="1" int_docASTNodeCount="249" int_docActiveCodeLength="1595" int_docExpressionCount="119" int_docLength="2105" length="4" offset="1937" startLine="90" starttimestamp="1700516585068" timestamp="19557804">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[q]]></insertedText>
  </DocumentChange>
  <Command __id="1729" _type="MoveCaretCommand" caretOffset="1816" date="Mon Nov 20 22:09:01 EST 2023" docOffset="1945" starttimestamp="1700516585068" timestamp="19556400" />
  <Command __id="1730" _type="MoveCaretCommand" caretOffset="1816" date="Mon Nov 20 22:09:01 EST 2023" docOffset="1945" starttimestamp="1700516585068" timestamp="19556400" />
  <Command __id="1731" _type="SelectTextCommand" caretOffset="1815" date="Mon Nov 20 22:09:01 EST 2023" end="1815" start="1761" starttimestamp="1700516585068" timestamp="19556538" />
  <Command __id="1732" _type="SelectTextCommand" caretOffset="1815" date="Mon Nov 20 22:09:01 EST 2023" end="1815" start="1761" starttimestamp="1700516585068" timestamp="19556538" />
  <Command __id="1733" _type="MoveCaretCommand" caretOffset="1810" date="Mon Nov 20 22:09:01 EST 2023" docOffset="1939" starttimestamp="1700516585068" timestamp="19556859" />
  <Command __id="1734" _type="MoveCaretCommand" caretOffset="1810" date="Mon Nov 20 22:09:01 EST 2023" docOffset="1939" starttimestamp="1700516585068" timestamp="19556859" />
  <Command __id="1735" _type="SelectTextCommand" caretOffset="1812" date="Mon Nov 20 22:09:02 EST 2023" end="1812" start="1808" starttimestamp="1700516585068" timestamp="19556963" />
  <Command __id="1736" _type="SelectTextCommand" caretOffset="1812" date="Mon Nov 20 22:09:02 EST 2023" end="1812" start="1808" starttimestamp="1700516585068" timestamp="19556963" />
  <Command __id="1738" _type="InsertStringCommand" date="Mon Nov 20 22:09:02 EST 2023" starttimestamp="1700516585068" timestamp="19557809" timestamp2="19557809">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="1739" _type="InsertStringCommand" date="Mon Nov 20 22:09:02 EST 2023" starttimestamp="1700516585068" timestamp="19557809" timestamp2="19557809">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="1741" _type="InsertStringCommand" date="Mon Nov 20 22:09:02 EST 2023" starttimestamp="1700516585068" timestamp="19557878" timestamp2="19557878">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1742" _type="InsertStringCommand" date="Mon Nov 20 22:09:02 EST 2023" starttimestamp="1700516585068" timestamp="19557878" timestamp2="19557878">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1744" _type="InsertStringCommand" date="Mon Nov 20 22:09:02 EST 2023" starttimestamp="1700516585068" timestamp="19557925" timestamp2="19557925">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1745" _type="InsertStringCommand" date="Mon Nov 20 22:09:02 EST 2023" starttimestamp="1700516585068" timestamp="19557925" timestamp2="19557925">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1747" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558016" timestamp2="19558016">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1748" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558017" timestamp2="19558017">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1750" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558105" timestamp2="19558105">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1751" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558105" timestamp2="19558105">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1753" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558297" timestamp2="19558297">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1754" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558297" timestamp2="19558297">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1756" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558566" timestamp2="19558566">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1757" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558566" timestamp2="19558566">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1759" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558685" timestamp2="19558685">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1760" _type="InsertStringCommand" date="Mon Nov 20 22:09:03 EST 2023" starttimestamp="1700516585068" timestamp="19558685" timestamp2="19558685">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="1740" _type="Insert" date="Mon Nov 20 22:09:02 EST 2023" docASTNodeCount="252" docActiveCodeLength="1615" docExpressionCount="121" docLength="2125" length="19" offset="1938" repeat="19" starttimestamp="1700516585068" timestamp="19557877" timestamp2="19561032">
    <text><![CDATA[uoteEvaluator.class]]></text>
  </DocumentChange>
  <Command __id="1762" _type="InsertStringCommand" date="Mon Nov 20 22:09:04 EST 2023" starttimestamp="1700516585068" timestamp="19559781" timestamp2="19559781">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1763" _type="InsertStringCommand" date="Mon Nov 20 22:09:04 EST 2023" starttimestamp="1700516585068" timestamp="19559781" timestamp2="19559781">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1765" _type="InsertStringCommand" date="Mon Nov 20 22:09:04 EST 2023" starttimestamp="1700516585068" timestamp="19559900" timestamp2="19559900">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1766" _type="InsertStringCommand" date="Mon Nov 20 22:09:04 EST 2023" starttimestamp="1700516585068" timestamp="19559900" timestamp2="19559900">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1768" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560005" timestamp2="19560005">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1769" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560005" timestamp2="19560005">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1771" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560095" timestamp2="19560095">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1772" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560095" timestamp2="19560095">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1774" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560217" timestamp2="19560217">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1775" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560217" timestamp2="19560217">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1777" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560287" timestamp2="19560287">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1778" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560288" timestamp2="19560288">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1780" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560392" timestamp2="19560392">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1781" _type="InsertStringCommand" date="Mon Nov 20 22:09:05 EST 2023" starttimestamp="1700516585068" timestamp="19560392" timestamp2="19560392">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1782" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:09:05 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="19560399" />
  <Command __id="1788" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:09:06 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="19561501" />
  <Command __id="1789" _type="MoveCaretCommand" caretOffset="1692" date="Mon Nov 20 22:09:06 EST 2023" docOffset="1821" starttimestamp="1700516585068" timestamp="19561568" />
  <Command __id="1790" _type="MoveCaretCommand" caretOffset="1692" date="Mon Nov 20 22:09:06 EST 2023" docOffset="1821" starttimestamp="1700516585068" timestamp="19561568" />
  <Command __id="1791" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:09:07 EST 2023" starttimestamp="1700516585068" timestamp="19562324" />
  <Command __id="1792" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:09:07 EST 2023" starttimestamp="1700516585068" timestamp="19562421" />
  <Command __id="1793" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:09:07 EST 2023" starttimestamp="1700516585068" timestamp="19562429" />
  <Command __id="1794" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:10 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19565689">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		"), Diff(INSERT,"OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();"), Diff(EQUAL,"		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class index {

	public static void main(String[] args) {
		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();
		operationRegistererImpl.registerOperations();
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="1795" _type="MoveCaretCommand" caretOffset="260" date="Mon Nov 20 22:09:10 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19565731" />
  <Command __id="1796" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:11 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19566123">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1797" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:09:11 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19566168" />
  <Command __id="1799" _type="SelectTextCommand" caretOffset="162" date="Mon Nov 20 22:09:12 EST 2023" end="162" start="139" starttimestamp="1700516585068" timestamp="19567875" />
  <Command __id="1798" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:12 EST 2023" docASTNodeCount="50" docActiveCodeLength="407" docExpressionCount="31" docLength="407" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19567833">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("+", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1800" _type="SelectTextCommand" caretOffset="300" date="Mon Nov 20 22:09:17 EST 2023" end="301" start="300" starttimestamp="1700516585068" timestamp="19572114" />
  <DocumentChange __id="1801" _type="Replace" date="Mon Nov 20 22:09:18 EST 2023" docASTNodeCount="50" docActiveCodeLength="407" docExpressionCount="31" docLength="407" endLine="8" insertionLength="1" int_docASTNodeCount="50" int_docActiveCodeLength="406" int_docExpressionCount="31" int_docLength="406" length="1" offset="300" startLine="8" starttimestamp="1700516585068" timestamp="19573130">
    <deletedText><![CDATA[+]]></deletedText>
    <insertedText><![CDATA[q]]></insertedText>
  </DocumentChange>
  <Command __id="1802" _type="InsertStringCommand" date="Mon Nov 20 22:09:18 EST 2023" starttimestamp="1700516585068" timestamp="19573139" timestamp2="19573139">
    <data><![CDATA[q]]></data>
  </Command>
  <DocumentChange __id="1803" _type="Insert" date="Mon Nov 20 22:09:18 EST 2023" docASTNodeCount="50" docActiveCodeLength="411" docExpressionCount="31" docLength="411" length="4" offset="301" repeat="4" starttimestamp="1700516585068" timestamp="19573232" timestamp2="19573423">
    <text><![CDATA[uote]]></text>
  </DocumentChange>
  <Command __id="1804" _type="InsertStringCommand" date="Mon Nov 20 22:09:18 EST 2023" starttimestamp="1700516585068" timestamp="19573234" timestamp2="19573234">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1806" _type="InsertStringCommand" date="Mon Nov 20 22:09:18 EST 2023" starttimestamp="1700516585068" timestamp="19573290" timestamp2="19573290">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1808" _type="InsertStringCommand" date="Mon Nov 20 22:09:18 EST 2023" starttimestamp="1700516585068" timestamp="19573364" timestamp2="19573364">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1810" _type="InsertStringCommand" date="Mon Nov 20 22:09:18 EST 2023" starttimestamp="1700516585068" timestamp="19573425" timestamp2="19573425">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1811" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 22:09:19 EST 2023" docOffset="333" starttimestamp="1700516585068" timestamp="19574074" />
  <Command __id="1812" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:09:19 EST 2023" starttimestamp="1700516585068" timestamp="19574205" />
  <Command __id="1813" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:09:19 EST 2023" starttimestamp="1700516585068" timestamp="19574305" />
  <Command __id="1814" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:09:19 EST 2023" starttimestamp="1700516585068" timestamp="19574312" />
  <Command __id="1815" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:21 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19576839">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1816" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:09:21 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19576881" />
  <Command __id="1817" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:22 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19577776">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1818" _type="MoveCaretCommand" caretOffset="260" date="Mon Nov 20 22:09:22 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19577826" />
  <Command __id="1819" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:23 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19578364">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1820" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:09:23 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19578416" />
  <Command __id="1822" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 22:09:23 EST 2023" docOffset="333" starttimestamp="1700516585068" timestamp="19578708" />
  <Command __id="1823" _type="ShellCommand" date="Mon Nov 20 22:09:24 EST 2023" starttimestamp="1700516585068" timestamp="19579693" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1824" _type="ShellCommand" date="Mon Nov 20 22:09:27 EST 2023" starttimestamp="1700516585068" timestamp="19582913" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1825" _type="ShellCommand" date="Mon Nov 20 22:09:28 EST 2023" starttimestamp="1700516585068" timestamp="19583242" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1826" _type="ShellCommand" date="Mon Nov 20 22:09:28 EST 2023" starttimestamp="1700516585068" timestamp="19583471" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1827" _type="ShellCommand" date="Mon Nov 20 22:09:29 EST 2023" starttimestamp="1700516585068" timestamp="19583977" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1828" _type="ShellCommand" date="Mon Nov 20 22:09:29 EST 2023" starttimestamp="1700516585068" timestamp="19584307" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1829" _type="ShellCommand" date="Mon Nov 20 22:09:29 EST 2023" starttimestamp="1700516585068" timestamp="19584556" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1830" _type="ShellCommand" date="Mon Nov 20 22:09:29 EST 2023" starttimestamp="1700516585068" timestamp="19584798" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1831" _type="ShellCommand" date="Mon Nov 20 22:09:30 EST 2023" starttimestamp="1700516585068" timestamp="19585057" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1821" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:09:23 EST 2023" docASTNodeCount="50" docActiveCodeLength="411" docExpressionCount="31" docLength="411" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19578660">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"+"), Diff(INSERT,"quote"), Diff(EQUAL,"", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1832" _type="ShellCommand" date="Mon Nov 20 22:10:03 EST 2023" starttimestamp="1700516585068" timestamp="19618467" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1834" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:10:05 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="19619958" />
  <Command __id="1835" _type="ShellCommand" date="Mon Nov 20 22:10:06 EST 2023" starttimestamp="1700516585068" timestamp="19621338" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1836" _type="ShellCommand" date="Mon Nov 20 22:10:06 EST 2023" starttimestamp="1700516585068" timestamp="19621671" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1837" _type="ShellCommand" date="Mon Nov 20 22:10:06 EST 2023" starttimestamp="1700516585068" timestamp="19621893" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1838" _type="ShellCommand" date="Mon Nov 20 22:10:07 EST 2023" starttimestamp="1700516585068" timestamp="19622067" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1839" _type="ShellCommand" date="Mon Nov 20 22:10:07 EST 2023" starttimestamp="1700516585068" timestamp="19622327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1840" _type="ShellCommand" date="Mon Nov 20 22:10:15 EST 2023" starttimestamp="1700516585068" timestamp="19630238" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1841" _type="SelectTextCommand" caretOffset="265" date="Mon Nov 20 22:10:17 EST 2023" end="314" start="265" starttimestamp="1700516585068" timestamp="19632230" />
  <Command __id="1843" _type="PasteCommand" date="Mon Nov 20 22:10:17 EST 2023" starttimestamp="1700516585068" timestamp="19632379" />
  <Command __id="1844" _type="MoveCaretCommand" caretOffset="287" date="Mon Nov 20 22:10:18 EST 2023" docOffset="287" starttimestamp="1700516585068" timestamp="19633148" />
  <Command __id="1846" _type="InsertStringCommand" date="Mon Nov 20 22:10:18 EST 2023" starttimestamp="1700516585068" timestamp="19633851" timestamp2="19633851">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1847" _type="ShellCommand" date="Mon Nov 20 22:10:19 EST 2023" starttimestamp="1700516585068" timestamp="19634345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1848" _type="ShellCommand" date="Mon Nov 20 22:10:21 EST 2023" starttimestamp="1700516585068" timestamp="19636526" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1849" _type="MoveCaretCommand" caretOffset="240" date="Mon Nov 20 22:10:22 EST 2023" docOffset="240" starttimestamp="1700516585068" timestamp="19637564" />
  <Command __id="1850" _type="SelectTextCommand" caretOffset="241" date="Mon Nov 20 22:10:22 EST 2023" end="241" start="237" starttimestamp="1700516585068" timestamp="19637710" />
  <Command __id="1851" _type="ShellCommand" date="Mon Nov 20 22:10:22 EST 2023" starttimestamp="1700516585068" timestamp="19637927" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1852" _type="ShellCommand" date="Mon Nov 20 22:10:23 EST 2023" starttimestamp="1700516585068" timestamp="19638604" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1854" _type="InsertStringCommand" date="Mon Nov 20 22:10:23 EST 2023" starttimestamp="1700516585068" timestamp="19638782" timestamp2="19638782">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1856" _type="InsertStringCommand" date="Mon Nov 20 22:10:24 EST 2023" starttimestamp="1700516585068" timestamp="19638963" timestamp2="19638963">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1858" _type="InsertStringCommand" date="Mon Nov 20 22:10:24 EST 2023" starttimestamp="1700516585068" timestamp="19639113" timestamp2="19639113">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1860" _type="InsertStringCommand" date="Mon Nov 20 22:10:24 EST 2023" starttimestamp="1700516585068" timestamp="19639202" timestamp2="19639202">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1861" _type="MoveCaretCommand" caretOffset="287" date="Mon Nov 20 22:10:25 EST 2023" docOffset="287" starttimestamp="1700516585068" timestamp="19640169" />
  <Command __id="1862" _type="MoveCaretCommand" caretOffset="287" date="Mon Nov 20 22:10:25 EST 2023" docOffset="287" starttimestamp="1700516585068" timestamp="19640318" />
  <Command __id="1863" _type="MoveCaretCommand" caretOffset="258" date="Mon Nov 20 22:10:25 EST 2023" docOffset="258" starttimestamp="1700516585068" timestamp="19640604" />
  <Command __id="1864" _type="SelectTextCommand" caretOffset="259" date="Mon Nov 20 22:10:25 EST 2023" end="259" start="255" starttimestamp="1700516585068" timestamp="19640741" />
  <Command __id="1866" _type="InsertStringCommand" date="Mon Nov 20 22:10:26 EST 2023" starttimestamp="1700516585068" timestamp="19641293" timestamp2="19641293">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1868" _type="InsertStringCommand" date="Mon Nov 20 22:10:26 EST 2023" starttimestamp="1700516585068" timestamp="19641574" timestamp2="19641574">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1870" _type="InsertStringCommand" date="Mon Nov 20 22:10:27 EST 2023" starttimestamp="1700516585068" timestamp="19641950" timestamp2="19641950">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1872" _type="InsertStringCommand" date="Mon Nov 20 22:10:27 EST 2023" starttimestamp="1700516585068" timestamp="19642295" timestamp2="19642295">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1874" _type="InsertStringCommand" date="Mon Nov 20 22:10:27 EST 2023" starttimestamp="1700516585068" timestamp="19642891" timestamp2="19642891">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1876" _type="InsertStringCommand" date="Mon Nov 20 22:10:28 EST 2023" starttimestamp="1700516585068" timestamp="19643056" timestamp2="19643056">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1878" _type="InsertStringCommand" date="Mon Nov 20 22:10:28 EST 2023" starttimestamp="1700516585068" timestamp="19643222" timestamp2="19643222">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1880" _type="InsertStringCommand" date="Mon Nov 20 22:10:28 EST 2023" starttimestamp="1700516585068" timestamp="19643411" timestamp2="19643411">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1882" _type="InsertStringCommand" date="Mon Nov 20 22:10:28 EST 2023" starttimestamp="1700516585068" timestamp="19643518" timestamp2="19643518">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1884" _type="InsertStringCommand" date="Mon Nov 20 22:10:28 EST 2023" starttimestamp="1700516585068" timestamp="19643581" timestamp2="19643581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1886" _type="InsertStringCommand" date="Mon Nov 20 22:10:28 EST 2023" starttimestamp="1700516585068" timestamp="19643689" timestamp2="19643689">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1887" _type="MoveCaretCommand" caretOffset="300" date="Mon Nov 20 22:10:29 EST 2023" docOffset="300" starttimestamp="1700516585068" timestamp="19644358" />
  <Command __id="1888" _type="ShellCommand" date="Mon Nov 20 22:10:34 EST 2023" starttimestamp="1700516585068" timestamp="19648983" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1889" _type="ShellCommand" date="Mon Nov 20 22:10:34 EST 2023" starttimestamp="1700516585068" timestamp="19649059" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1895" _type="MoveCaretCommand" caretOffset="304" date="Mon Nov 20 22:10:37 EST 2023" docOffset="304" starttimestamp="1700516585068" timestamp="19652370" />
  <Command __id="1897" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653021" timestamp2="19653021">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1899" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653095" timestamp2="19653095">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1901" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653244" timestamp2="19653244">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1903" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653319" timestamp2="19653319">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1905" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653438" timestamp2="19653438">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1907" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653465" timestamp2="19653465">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1909" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653586" timestamp2="19653586">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1911" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653690" timestamp2="19653690">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1913" _type="InsertStringCommand" date="Mon Nov 20 22:10:38 EST 2023" starttimestamp="1700516585068" timestamp="19653872" timestamp2="19653872">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1915" _type="InsertStringCommand" date="Mon Nov 20 22:10:39 EST 2023" starttimestamp="1700516585068" timestamp="19653980" timestamp2="19653980">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1917" _type="InsertStringCommand" date="Mon Nov 20 22:10:39 EST 2023" starttimestamp="1700516585068" timestamp="19654115" timestamp2="19654115">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1919" _type="InsertStringCommand" date="Mon Nov 20 22:10:39 EST 2023" starttimestamp="1700516585068" timestamp="19654233" timestamp2="19654233">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1920" _type="MoveCaretCommand" caretOffset="276" date="Mon Nov 20 22:10:40 EST 2023" docOffset="276" starttimestamp="1700516585068" timestamp="19655158" />
  <Command __id="1921" _type="SelectTextCommand" caretOffset="278" date="Mon Nov 20 22:10:40 EST 2023" end="278" start="272" starttimestamp="1700516585068" timestamp="19655300" />
  <Command __id="1923" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:10:40 EST 2023" starttimestamp="1700516585068" timestamp="19655722" />
  <Command __id="1925" _type="InsertStringCommand" date="Mon Nov 20 22:10:40 EST 2023" starttimestamp="1700516585068" timestamp="19655733" timestamp2="19655733">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="1927" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:10:41 EST 2023" starttimestamp="1700516585068" timestamp="19656560" />
  <Command __id="1928" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:10:42 EST 2023" starttimestamp="1700516585068" timestamp="19657453" />
  <Command __id="1930" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:10:42 EST 2023" starttimestamp="1700516585068" timestamp="19657516" />
  <Command __id="1931" _type="ShellCommand" date="Mon Nov 20 22:10:42 EST 2023" starttimestamp="1700516585068" timestamp="19657740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1932" _type="ShellCommand" date="Mon Nov 20 22:10:43 EST 2023" starttimestamp="1700516585068" timestamp="19658772" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1933" _type="ShellCommand" date="Mon Nov 20 22:10:44 EST 2023" starttimestamp="1700516585068" timestamp="19659400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1934" _type="ShellCommand" date="Mon Nov 20 22:11:15 EST 2023" starttimestamp="1700516585068" timestamp="19690672" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1935" _type="MoveCaretCommand" caretOffset="309" date="Mon Nov 20 22:11:16 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19691729" />
  <Command __id="1936" _type="MoveCaretCommand" caretOffset="294" date="Mon Nov 20 22:11:17 EST 2023" docOffset="294" starttimestamp="1700516585068" timestamp="19692127" />
  <Command __id="1937" _type="MoveCaretCommand" caretOffset="309" date="Mon Nov 20 22:11:17 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19692327" />
  <Command __id="1938" _type="MoveCaretCommand" caretOffset="294" date="Mon Nov 20 22:11:17 EST 2023" docOffset="294" starttimestamp="1700516585068" timestamp="19692529" />
  <Command __id="1939" _type="MoveCaretCommand" caretOffset="309" date="Mon Nov 20 22:11:17 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19692881" />
  <Command __id="1940" _type="MoveCaretCommand" caretOffset="273" date="Mon Nov 20 22:11:18 EST 2023" docOffset="273" starttimestamp="1700516585068" timestamp="19693649" />
  <Command __id="1941" _type="MoveCaretCommand" caretOffset="272" date="Mon Nov 20 22:11:19 EST 2023" docOffset="272" starttimestamp="1700516585068" timestamp="19693957" />
  <Command __id="1942" _type="MoveCaretCommand" caretOffset="278" date="Mon Nov 20 22:11:23 EST 2023" docOffset="278" starttimestamp="1700516585068" timestamp="19698819" />
  <Command __id="1943" _type="MoveCaretCommand" caretOffset="294" date="Mon Nov 20 22:11:25 EST 2023" docOffset="294" starttimestamp="1700516585068" timestamp="19700207" />
  <Command __id="1944" _type="MoveCaretCommand" caretOffset="250" date="Mon Nov 20 22:11:25 EST 2023" docOffset="250" starttimestamp="1700516585068" timestamp="19700810" />
  <Command __id="1945" _type="MoveCaretCommand" caretOffset="261" date="Mon Nov 20 22:11:26 EST 2023" docOffset="261" starttimestamp="1700516585068" timestamp="19701033" />
  <Command __id="1946" _type="ShellCommand" date="Mon Nov 20 22:11:26 EST 2023" starttimestamp="1700516585068" timestamp="19701345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1947" _type="ShellCommand" date="Mon Nov 20 22:11:27 EST 2023" starttimestamp="1700516585068" timestamp="19702419" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1948" _type="ShellCommand" date="Mon Nov 20 22:11:28 EST 2023" starttimestamp="1700516585068" timestamp="19703422" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1949" _type="ShellCommand" date="Mon Nov 20 22:11:33 EST 2023" starttimestamp="1700516585068" timestamp="19708899" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1950" _type="ShellCommand" date="Mon Nov 20 22:11:34 EST 2023" starttimestamp="1700516585068" timestamp="19709454" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1951" _type="ShellCommand" date="Mon Nov 20 22:11:44 EST 2023" starttimestamp="1700516585068" timestamp="19719158" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1833" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:10:04 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19619908">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1842" _type="Replace" date="Mon Nov 20 22:10:17 EST 2023" docASTNodeCount="56" docActiveCodeLength="294" docExpressionCount="39" docLength="294" endLine="11" insertionLength="24" int_docASTNodeCount="50" int_docActiveCodeLength="270" int_docExpressionCount="34" int_docLength="270" length="51" offset="263" startLine="10" starttimestamp="1700516585068" timestamp="19632375">
    <deletedText><![CDATA[		// TODO Auto-generated method stub
		return null;]]></deletedText>
    <insertedText><![CDATA[		expr = expr.getTail();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1845" _type="Insert" date="Mon Nov 20 22:10:18 EST 2023" docASTNodeCount="56" docActiveCodeLength="297" docExpressionCount="39" docLength="297" length="3" offset="287" starttimestamp="1700516585068" timestamp="19633847">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1853" _type="Replace" date="Mon Nov 20 22:10:23 EST 2023" docASTNodeCount="56" docActiveCodeLength="294" docExpressionCount="39" docLength="294" endLine="9" insertionLength="1" int_docASTNodeCount="42" int_docActiveCodeLength="293" int_docExpressionCount="30" int_docLength="293" length="4" offset="237" startLine="9" starttimestamp="1700516585068" timestamp="19638778">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1855" _type="Insert" date="Mon Nov 20 22:10:24 EST 2023" docASTNodeCount="56" docActiveCodeLength="297" docExpressionCount="39" docLength="297" length="3" offset="238" repeat="3" starttimestamp="1700516585068" timestamp="19638960" timestamp2="19639200">
    <text><![CDATA[xpr]]></text>
  </DocumentChange>
  <DocumentChange __id="1865" _type="Replace" date="Mon Nov 20 22:10:26 EST 2023" docASTNodeCount="56" docActiveCodeLength="294" docExpressionCount="39" docLength="294" endLine="9" insertionLength="1" int_docASTNodeCount="46" int_docActiveCodeLength="293" int_docExpressionCount="32" int_docLength="293" length="4" offset="255" startLine="9" starttimestamp="1700516585068" timestamp="19641288">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1867" _type="Insert" date="Mon Nov 20 22:10:26 EST 2023" docASTNodeCount="56" docActiveCodeLength="304" docExpressionCount="39" docLength="304" length="10" offset="256" repeat="10" starttimestamp="1700516585068" timestamp="19641571" timestamp2="19643687">
    <text><![CDATA[nvironment]]></text>
  </DocumentChange>
  <DocumentChange __id="1890" _type="Delete" date="Mon Nov 20 22:10:34 EST 2023" docASTNodeCount="50" docActiveCodeLength="282" docExpressionCount="34" docLength="282" endLine="10" length="22" offset="272" repeat="2" startLine="10" starttimestamp="1700516585068" timestamp="19649068" timestamp2="19649068">
    <text><![CDATA[expr = expr.getTail();]]></text>
  </DocumentChange>
  <DocumentChange __id="1892" _type="Insert" date="Mon Nov 20 22:10:34 EST 2023" docASTNodeCount="56" docActiveCodeLength="311" docExpressionCount="39" docLength="311" length="29" offset="272" repeat="3" starttimestamp="1700516585068" timestamp="19649068" timestamp2="19649068">
    <text><![CDATA[return expr = expr.getTail();]]></text>
  </DocumentChange>
  <DocumentChange __id="1896" _type="Insert" date="Mon Nov 20 22:10:38 EST 2023" docASTNodeCount="58" docActiveCodeLength="323" docExpressionCount="40" docLength="323" length="12" offset="304" repeat="12" starttimestamp="1700516585068" timestamp="19653019" timestamp2="19654229">
    <text><![CDATA[return null;]]></text>
  </DocumentChange>
  <DocumentChange __id="1922" _type="Delete" date="Mon Nov 20 22:10:40 EST 2023" docASTNodeCount="58" docActiveCodeLength="317" docExpressionCount="40" docLength="317" endLine="10" length="6" offset="272" startLine="10" starttimestamp="1700516585068" timestamp="19655717">
    <text><![CDATA[return]]></text>
  </DocumentChange>
  <DocumentChange __id="1924" _type="Insert" date="Mon Nov 20 22:10:40 EST 2023" docASTNodeCount="58" docActiveCodeLength="318" docExpressionCount="40" docLength="318" length="1" offset="272" starttimestamp="1700516585068" timestamp="19655731">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <DocumentChange __id="1926" _type="Delete" date="Mon Nov 20 22:10:41 EST 2023" docASTNodeCount="58" docActiveCodeLength="316" docExpressionCount="40" docLength="316" endLine="10" length="2" offset="272" repeat="2" startLine="10" starttimestamp="1700516585068" timestamp="19656557" timestamp2="19657513">
    <text><![CDATA[\ ]]></text>
  </DocumentChange>
  <DocumentChange __id="1956" _type="Replace" date="Mon Nov 20 22:11:47 EST 2023" docASTNodeCount="56" docActiveCodeLength="311" docExpressionCount="38" docLength="311" endLine="10" insertionLength="1" int_docASTNodeCount="56" int_docActiveCodeLength="310" int_docExpressionCount="38" int_docLength="310" length="6" offset="272" startLine="10" starttimestamp="1700516585068" timestamp="19722436">
    <deletedText><![CDATA[expr =]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1958" _type="Insert" date="Mon Nov 20 22:11:47 EST 2023" docASTNodeCount="56" docActiveCodeLength="316" docExpressionCount="38" docLength="316" length="5" offset="273" repeat="5" starttimestamp="1700516585068" timestamp="19722523" timestamp2="19722835">
    <text><![CDATA[eturn]]></text>
  </DocumentChange>
  <DocumentChange __id="1972" _type="Delete" date="Mon Nov 20 22:11:49 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" endLine="12" length="15" offset="295" startLine="11" starttimestamp="1700516585068" timestamp="19724878">
    <text><![CDATA[		return null;
]]></text>
  </DocumentChange>
  <Command __id="1952" _type="MoveCaretCommand" caretOffset="277" date="Mon Nov 20 22:11:45 EST 2023" docOffset="277" starttimestamp="1700516585068" timestamp="19720216" />
  <Command __id="1953" _type="SelectTextCommand" caretOffset="277" date="Mon Nov 20 22:11:45 EST 2023" end="279" start="277" starttimestamp="1700516585068" timestamp="19720881" />
  <Command __id="1954" _type="MoveCaretCommand" caretOffset="278" date="Mon Nov 20 22:11:46 EST 2023" docOffset="278" starttimestamp="1700516585068" timestamp="19721088" />
  <Command __id="1955" _type="SelectTextCommand" caretOffset="272" date="Mon Nov 20 22:11:47 EST 2023" end="278" start="272" starttimestamp="1700516585068" timestamp="19722051" />
  <Command __id="1957" _type="InsertStringCommand" date="Mon Nov 20 22:11:47 EST 2023" starttimestamp="1700516585068" timestamp="19722441" timestamp2="19722441">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1959" _type="InsertStringCommand" date="Mon Nov 20 22:11:47 EST 2023" starttimestamp="1700516585068" timestamp="19722525" timestamp2="19722525">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1961" _type="InsertStringCommand" date="Mon Nov 20 22:11:47 EST 2023" starttimestamp="1700516585068" timestamp="19722623" timestamp2="19722623">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1963" _type="InsertStringCommand" date="Mon Nov 20 22:11:47 EST 2023" starttimestamp="1700516585068" timestamp="19722672" timestamp2="19722672">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1965" _type="InsertStringCommand" date="Mon Nov 20 22:11:47 EST 2023" starttimestamp="1700516585068" timestamp="19722808" timestamp2="19722808">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1967" _type="InsertStringCommand" date="Mon Nov 20 22:11:47 EST 2023" starttimestamp="1700516585068" timestamp="19722837" timestamp2="19722837">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1968" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 22:11:48 EST 2023" docOffset="292" starttimestamp="1700516585068" timestamp="19723652" />
  <Command __id="1969" _type="InsertStringCommand" date="Mon Nov 20 22:11:48 EST 2023" starttimestamp="1700516585068" timestamp="19723798" timestamp2="19723798">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1970" _type="MoveCaretCommand" caretOffset="309" date="Mon Nov 20 22:11:49 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="19724262" />
  <Command __id="1971" _type="InsertStringCommand" date="Mon Nov 20 22:11:49 EST 2023" starttimestamp="1700516585068" timestamp="19724363" timestamp2="19724363">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1973" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:11:49 EST 2023" starttimestamp="1700516585068" timestamp="19724882" />
  <Command __id="1974" _type="MoveCaretCommand" caretOffset="297" date="Mon Nov 20 22:11:50 EST 2023" docOffset="297" starttimestamp="1700516585068" timestamp="19725245" />
  <Command __id="1975" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:11:50 EST 2023" starttimestamp="1700516585068" timestamp="19725386" />
  <Command __id="1976" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:11:50 EST 2023" starttimestamp="1700516585068" timestamp="19725489" />
  <Command __id="1977" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:11:50 EST 2023" starttimestamp="1700516585068" timestamp="19725496" />
  <Command __id="1978" _type="MoveCaretCommand" caretOffset="242" date="Mon Nov 20 22:11:51 EST 2023" docOffset="242" starttimestamp="1700516585068" timestamp="19726030" />
  <Command __id="1980" _type="MoveCaretCommand" caretOffset="898" date="Mon Nov 20 22:11:52 EST 2023" docOffset="1015" starttimestamp="1700516585068" timestamp="19727560" />
  <Command __id="1981" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 22:11:54 EST 2023" starttimestamp="1700516585068" timestamp="19729020" />
  <Command __id="1982" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:11:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19729163" type="Run" />
  <Command __id="1983" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:11:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19729163" type="Run" />
  <Command __id="1984" _type="ShellCommand" date="Mon Nov 20 22:11:54 EST 2023" starttimestamp="1700516585068" timestamp="19729481" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1985" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735609" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)"), Diff(INSERT,"¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1986" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735611" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1987" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735616" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1988" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735617" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1989" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735618" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1990" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735618" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1991" _type="ExceptionCommand" date="Mon Nov 20 22:12:00 EST 2023" starttimestamp="1700516585068" timestamp="19735635" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1992" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735637" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1993" _type="ConsoleOutput" date="Mon Nov 20 22:12:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19735677" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtual"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"144"), Diff(EQUAL,"4"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"78"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"158"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"58"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"268"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"31"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContex"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Componen"), Diff(EQUAL,"t.java:"), Diff(DELETE,"52"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvir"), Diff(INSERT,"java.desktop/javax.swing.JComp"), Diff(EQUAL,"on"), Diff(DELETE,"m"), Diff(EQUAL,"ent."), Diff(DELETE,"getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvir"), Diff(INSERT,"processMouseEvent(JComp"), Diff(EQUAL,"on"), Diff(DELETE,"m"), Diff(EQUAL,"ent.java:"), Diff(DELETE,"6"), Diff(INSERT,"334"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:2"), Diff(INSERT,"26"), Diff(EQUAL,"3"), Diff(DELETE,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(INSERT,"50"), Diff(EQUAL,"11)¶	at java."), Diff(DELETE,"base/jdk."), Diff(INSERT,"desktop/java.awt.Conta"), Diff(EQUAL,"in"), Diff(DELETE,"t"), Diff(EQUAL,"er"), Diff(DELETE,"nal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,".dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(INSERT,"45"), Diff(EQUAL,"5"), Diff(DELETE,"6"), Diff(EQUAL,"6)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"230"), Diff(EQUAL,"7)¶")]]]></diff>
  </Command>
  <Command __id="1994" _type="ExceptionCommand" date="Mon Nov 20 22:12:00 EST 2023" starttimestamp="1700516585068" timestamp="19735683" type="Exception">
    <exceptionString><![CDATA[
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1995" _type="ShellCommand" date="Mon Nov 20 22:12:06 EST 2023" starttimestamp="1700516585068" timestamp="19741363" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1996" _type="LocalChecksRawCommand" date="Mon Nov 20 22:12:06 EST 2023" starttimestamp="1700516585068" timestamp="19741366">
    <CSVRow><![CDATA[83,Mon Nov 20 22:12:00 EST 2023,10,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,47,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1997" _type="LocalChecksRawCommand" date="Mon Nov 20 22:12:06 EST 2023" starttimestamp="1700516585068" timestamp="19741366">
    <CSVRow><![CDATA[83,Mon Nov 20 22:12:00 EST 2023,10,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,47,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1998" _type="ShellCommand" date="Mon Nov 20 22:12:20 EST 2023" starttimestamp="1700516585068" timestamp="19755651" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1999" _type="ShellCommand" date="Mon Nov 20 22:12:27 EST 2023" starttimestamp="1700516585068" timestamp="19762912" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2000" _type="ShellCommand" date="Mon Nov 20 22:12:29 EST 2023" starttimestamp="1700516585068" timestamp="19764916" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2001" _type="ConsoleOutput" date="Mon Nov 20 22:12:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="19774172" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)"), Diff(INSERT,"¶Test execution time (ms):2¶Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2013" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:12:55 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19790328" type="Run" />
  <Command __id="2014" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:12:55 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19790328" type="Run" />
  <Command __id="2015" _type="ShellCommand" date="Mon Nov 20 22:12:55 EST 2023" starttimestamp="1700516585068" timestamp="19790332" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2016" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 22:12:59 EST 2023" docOffset="631" starttimestamp="1700516585068" timestamp="19794014" />
  <Command __id="2017" _type="LocalChecksRawCommand" date="Mon Nov 20 22:12:59 EST 2023" starttimestamp="1700516585068" timestamp="19794018">
    <CSVRow><![CDATA[84,Mon Nov 20 22:12:39 EST 2023,10,0,QuoteTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,47,1,false, , , ,QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2018" _type="LocalChecksRawCommand" date="Mon Nov 20 22:12:59 EST 2023" starttimestamp="1700516585068" timestamp="19794018">
    <CSVRow><![CDATA[84,Mon Nov 20 22:12:39 EST 2023,10,0,QuoteTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,47,1,false, , , ,QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2019" _type="LocalChecksRawCommand" date="Mon Nov 20 22:12:59 EST 2023" starttimestamp="1700516585068" timestamp="19794018">
    <CSVRow><![CDATA[85,Mon Nov 20 22:12:42 EST 2023,10,0,A5AssignmentSpecificSourceChecks,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,47,2,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2020" _type="LocalChecksRawCommand" date="Mon Nov 20 22:12:59 EST 2023" starttimestamp="1700516585068" timestamp="19794018">
    <CSVRow><![CDATA[85,Mon Nov 20 22:12:42 EST 2023,10,0,A5AssignmentSpecificSourceChecks,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,47,2,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LorETestedChecker LorETestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2021" _type="ShellCommand" date="Mon Nov 20 22:12:59 EST 2023" starttimestamp="1700516585068" timestamp="19794403" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2022" _type="ShellCommand" date="Mon Nov 20 22:12:59 EST 2023" starttimestamp="1700516585068" timestamp="19794874" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2023" _type="ShellCommand" date="Mon Nov 20 22:13:00 EST 2023" starttimestamp="1700516585068" timestamp="19795334" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2024" _type="ShellCommand" date="Mon Nov 20 22:14:39 EST 2023" starttimestamp="1700516585068" timestamp="19894718" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2025" _type="ShellCommand" date="Mon Nov 20 22:14:40 EST 2023" starttimestamp="1700516585068" timestamp="19895165" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2026" _type="ShellCommand" date="Mon Nov 20 22:16:03 EST 2023" starttimestamp="1700516585068" timestamp="19978049" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2027" _type="ShellCommand" date="Mon Nov 20 22:16:05 EST 2023" starttimestamp="1700516585068" timestamp="19980119" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1979" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:11:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19727495">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2028" _type="ShellCommand" date="Mon Nov 20 22:16:22 EST 2023" starttimestamp="1700516585068" timestamp="19997361" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2029" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:24 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="19999471">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1) {		// TODO Auto-generated method stub		return null"), Diff(INSERT,"environment) {		return expr.getTail()"), Diff(EQUAL,";	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class quoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail();
	}

}
]]></snapshot>
  </Command>
  <Command __id="2030" _type="MoveCaretCommand" caretOffset="242" date="Mon Nov 20 22:16:24 EST 2023" docOffset="242" starttimestamp="1700516585068" timestamp="19999529" />
  <Command __id="2031" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:26 EST 2023" docASTNodeCount="50" docActiveCodeLength="411" docExpressionCount="31" docLength="411" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20001909">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2032" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 22:16:27 EST 2023" docOffset="333" starttimestamp="1700516585068" timestamp="20001956" />
  <Command __id="2033" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:29 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20004553">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2034" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 22:16:29 EST 2023" docOffset="631" starttimestamp="1700516585068" timestamp="20004604" />
  <Command __id="2035" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:30 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20005586">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2036" _type="MoveCaretCommand" caretOffset="260" date="Mon Nov 20 22:16:30 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="20005625" />
  <Command __id="2038" _type="MoveCaretCommand" caretOffset="1692" date="Mon Nov 20 22:16:31 EST 2023" docOffset="1821" starttimestamp="1700516585068" timestamp="20006457" />
  <Command __id="2039" _type="ShellCommand" date="Mon Nov 20 22:16:38 EST 2023" starttimestamp="1700516585068" timestamp="20013755" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2040" _type="ShellCommand" date="Mon Nov 20 22:16:46 EST 2023" starttimestamp="1700516585068" timestamp="20021551" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2041" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:16:46 EST 2023" starttimestamp="1700516585068" timestamp="20021596" />
  <Command __id="2042" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:16:46 EST 2023" starttimestamp="1700516585068" timestamp="20021602" />
  <Command __id="2044" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:16:46 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="20021686" />
  <Command __id="2045" _type="ShellCommand" date="Mon Nov 20 22:16:47 EST 2023" starttimestamp="1700516585068" timestamp="20022338" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2046" _type="ShellCommand" date="Mon Nov 20 22:16:49 EST 2023" starttimestamp="1700516585068" timestamp="20024718" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2047" _type="MoveCaretCommand" caretOffset="43" date="Mon Nov 20 22:16:50 EST 2023" docOffset="43" starttimestamp="1700516585068" timestamp="20025532" />
  <Command __id="2048" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 22:16:51 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="20026111" />
  <Command __id="2050" _type="MoveCaretCommand" caretOffset="242" date="Mon Nov 20 22:16:52 EST 2023" docOffset="242" starttimestamp="1700516585068" timestamp="20027029" />
  <Command __id="2051" _type="MoveCaretCommand" caretOffset="55" date="Mon Nov 20 22:16:53 EST 2023" docOffset="55" starttimestamp="1700516585068" timestamp="20028152" />
  <Command __id="2052" _type="MoveCaretCommand" caretOffset="93" date="Mon Nov 20 22:16:53 EST 2023" docOffset="93" starttimestamp="1700516585068" timestamp="20028471" />
  <Command __id="2053" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 22:16:54 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="20029467" />
  <Command __id="2054" _type="CopyCommand" date="Mon Nov 20 22:16:54 EST 2023" starttimestamp="1700516585068" timestamp="20029599" />
  <Command __id="2056" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 22:16:55 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="20030081" />
  <Command __id="2058" _type="InsertStringCommand" date="Mon Nov 20 22:16:56 EST 2023" starttimestamp="1700516585068" timestamp="20031050" timestamp2="20031050">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2060" _type="InsertStringCommand" date="Mon Nov 20 22:16:56 EST 2023" starttimestamp="1700516585068" timestamp="20031171" timestamp2="20031171">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2061" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 22:16:56 EST 2023" starttimestamp="1700516585068" timestamp="20031406" />
  <Command __id="2063" _type="PasteCommand" date="Mon Nov 20 22:16:56 EST 2023" starttimestamp="1700516585068" timestamp="20031658" />
  <Command __id="2064" _type="MoveCaretCommand" caretOffset="82" date="Mon Nov 20 22:16:57 EST 2023" docOffset="82" starttimestamp="1700516585068" timestamp="20032631" />
  <Command __id="2066" _type="InsertStringCommand" date="Mon Nov 20 22:16:58 EST 2023" starttimestamp="1700516585068" timestamp="20033401" timestamp2="20033401">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2068" _type="InsertStringCommand" date="Mon Nov 20 22:16:58 EST 2023" starttimestamp="1700516585068" timestamp="20033487" timestamp2="20033487">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2070" _type="InsertStringCommand" date="Mon Nov 20 22:16:58 EST 2023" starttimestamp="1700516585068" timestamp="20033560" timestamp2="20033560">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2072" _type="InsertStringCommand" date="Mon Nov 20 22:16:58 EST 2023" starttimestamp="1700516585068" timestamp="20033742" timestamp2="20033742">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2074" _type="InsertStringCommand" date="Mon Nov 20 22:16:58 EST 2023" starttimestamp="1700516585068" timestamp="20033896" timestamp2="20033896">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2076" _type="InsertStringCommand" date="Mon Nov 20 22:16:59 EST 2023" starttimestamp="1700516585068" timestamp="20034092" timestamp2="20034092">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2078" _type="InsertStringCommand" date="Mon Nov 20 22:16:59 EST 2023" starttimestamp="1700516585068" timestamp="20034177" timestamp2="20034177">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2080" _type="InsertStringCommand" date="Mon Nov 20 22:16:59 EST 2023" starttimestamp="1700516585068" timestamp="20034283" timestamp2="20034283">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2082" _type="InsertStringCommand" date="Mon Nov 20 22:16:59 EST 2023" starttimestamp="1700516585068" timestamp="20034311" timestamp2="20034311">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2084" _type="InsertStringCommand" date="Mon Nov 20 22:16:59 EST 2023" starttimestamp="1700516585068" timestamp="20034419" timestamp2="20034419">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2086" _type="InsertStringCommand" date="Mon Nov 20 22:16:59 EST 2023" starttimestamp="1700516585068" timestamp="20034810" timestamp2="20034810">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2088" _type="InsertStringCommand" date="Mon Nov 20 22:17:00 EST 2023" starttimestamp="1700516585068" timestamp="20035328" timestamp2="20035328">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2090" _type="InsertStringCommand" date="Mon Nov 20 22:17:00 EST 2023" starttimestamp="1700516585068" timestamp="20035570" timestamp2="20035570">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2092" _type="InsertStringCommand" date="Mon Nov 20 22:17:00 EST 2023" starttimestamp="1700516585068" timestamp="20035615" timestamp2="20035615">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2094" _type="InsertStringCommand" date="Mon Nov 20 22:17:00 EST 2023" starttimestamp="1700516585068" timestamp="20035740" timestamp2="20035740">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2096" _type="InsertStringCommand" date="Mon Nov 20 22:17:00 EST 2023" starttimestamp="1700516585068" timestamp="20035815" timestamp2="20035815">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2098" _type="InsertStringCommand" date="Mon Nov 20 22:17:00 EST 2023" starttimestamp="1700516585068" timestamp="20035889" timestamp2="20035889">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2100" _type="InsertStringCommand" date="Mon Nov 20 22:17:01 EST 2023" starttimestamp="1700516585068" timestamp="20035979" timestamp2="20035979">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2102" _type="InsertStringCommand" date="Mon Nov 20 22:17:01 EST 2023" starttimestamp="1700516585068" timestamp="20036065" timestamp2="20036065">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2104" _type="InsertStringCommand" date="Mon Nov 20 22:17:01 EST 2023" starttimestamp="1700516585068" timestamp="20036142" timestamp2="20036142">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2105" _type="MoveCaretCommand" caretOffset="77" date="Mon Nov 20 22:17:03 EST 2023" docOffset="77" starttimestamp="1700516585068" timestamp="20038814" />
  <Command __id="2106" _type="ShellCommand" date="Mon Nov 20 22:17:06 EST 2023" starttimestamp="1700516585068" timestamp="20041459" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2107" _type="ShellCommand" date="Mon Nov 20 22:17:06 EST 2023" starttimestamp="1700516585068" timestamp="20041530" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2116" _type="MoveCaretCommand" caretOffset="198" date="Mon Nov 20 22:17:07 EST 2023" docOffset="198" starttimestamp="1700516585068" timestamp="20042536" />
  <Command __id="2117" _type="MoveCaretCommand" caretOffset="313" date="Mon Nov 20 22:17:07 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="20042775" />
  <Command __id="2118" _type="MoveCaretCommand" caretOffset="198" date="Mon Nov 20 22:17:08 EST 2023" docOffset="198" starttimestamp="1700516585068" timestamp="20043242" />
  <Command __id="2119" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 22:17:08 EST 2023" docOffset="187" starttimestamp="1700516585068" timestamp="20043745" />
  <Command __id="2120" _type="MoveCaretCommand" caretOffset="186" date="Mon Nov 20 22:17:09 EST 2023" docOffset="186" starttimestamp="1700516585068" timestamp="20044100" />
  <Command __id="2121" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 22:17:09 EST 2023" docOffset="187" starttimestamp="1700516585068" timestamp="20044271" />
  <Command __id="2122" _type="MoveCaretCommand" caretOffset="298" date="Mon Nov 20 22:17:09 EST 2023" docOffset="298" starttimestamp="1700516585068" timestamp="20044636" />
  <Command __id="2123" _type="MoveCaretCommand" caretOffset="316" date="Mon Nov 20 22:17:09 EST 2023" docOffset="316" starttimestamp="1700516585068" timestamp="20044926" />
  <Command __id="2124" _type="ShellCommand" date="Mon Nov 20 22:17:10 EST 2023" starttimestamp="1700516585068" timestamp="20045173" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2125" _type="ShellCommand" date="Mon Nov 20 22:17:11 EST 2023" starttimestamp="1700516585068" timestamp="20046066" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2126" _type="MoveCaretCommand" caretOffset="238" date="Mon Nov 20 22:17:11 EST 2023" docOffset="238" starttimestamp="1700516585068" timestamp="20046589" />
  <Command __id="2127" _type="SelectTextCommand" caretOffset="240" date="Mon Nov 20 22:17:11 EST 2023" end="240" start="236" starttimestamp="1700516585068" timestamp="20046726" />
  <Command __id="2129" _type="InsertStringCommand" date="Mon Nov 20 22:17:12 EST 2023" starttimestamp="1700516585068" timestamp="20047486" timestamp2="20047486">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2131" _type="InsertStringCommand" date="Mon Nov 20 22:17:12 EST 2023" starttimestamp="1700516585068" timestamp="20047590" timestamp2="20047590">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2133" _type="InsertStringCommand" date="Mon Nov 20 22:17:12 EST 2023" starttimestamp="1700516585068" timestamp="20047630" timestamp2="20047630">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2135" _type="InsertStringCommand" date="Mon Nov 20 22:17:12 EST 2023" starttimestamp="1700516585068" timestamp="20047721" timestamp2="20047721">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2136" _type="MoveCaretCommand" caretOffset="257" date="Mon Nov 20 22:17:13 EST 2023" docOffset="257" starttimestamp="1700516585068" timestamp="20048538" />
  <Command __id="2137" _type="MoveCaretCommand" caretOffset="257" date="Mon Nov 20 22:17:13 EST 2023" docOffset="257" starttimestamp="1700516585068" timestamp="20048702" />
  <Command __id="2138" _type="MoveCaretCommand" caretOffset="255" date="Mon Nov 20 22:17:14 EST 2023" docOffset="255" starttimestamp="1700516585068" timestamp="20049236" />
  <Command __id="2139" _type="SelectTextCommand" caretOffset="258" date="Mon Nov 20 22:17:14 EST 2023" end="258" start="254" starttimestamp="1700516585068" timestamp="20049366" />
  <Command __id="2140" _type="ShellCommand" date="Mon Nov 20 22:17:15 EST 2023" starttimestamp="1700516585068" timestamp="20050696" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2141" _type="ShellCommand" date="Mon Nov 20 22:17:16 EST 2023" starttimestamp="1700516585068" timestamp="20051380" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2142" _type="ShellCommand" date="Mon Nov 20 22:17:16 EST 2023" starttimestamp="1700516585068" timestamp="20051667" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2143" _type="ShellCommand" date="Mon Nov 20 22:17:24 EST 2023" starttimestamp="1700516585068" timestamp="20059293" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2144" _type="MoveCaretCommand" caretOffset="237" date="Mon Nov 20 22:17:25 EST 2023" docOffset="237" starttimestamp="1700516585068" timestamp="20059956" />
  <Command __id="2145" _type="SelectTextCommand" caretOffset="240" date="Mon Nov 20 22:17:25 EST 2023" end="240" start="236" starttimestamp="1700516585068" timestamp="20060091" />
  <Command __id="2147" _type="PasteCommand" date="Mon Nov 20 22:17:25 EST 2023" starttimestamp="1700516585068" timestamp="20060201" />
  <Command __id="2148" _type="ShellCommand" date="Mon Nov 20 22:17:25 EST 2023" starttimestamp="1700516585068" timestamp="20060492" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2149" _type="ShellCommand" date="Mon Nov 20 22:17:26 EST 2023" starttimestamp="1700516585068" timestamp="20061471" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2150" _type="MoveCaretCommand" caretOffset="256" date="Mon Nov 20 22:17:27 EST 2023" docOffset="256" starttimestamp="1700516585068" timestamp="20061937" />
  <Command __id="2151" _type="SelectTextCommand" caretOffset="258" date="Mon Nov 20 22:17:27 EST 2023" end="258" start="254" starttimestamp="1700516585068" timestamp="20062060" />
  <Command __id="2153" _type="PasteCommand" date="Mon Nov 20 22:17:27 EST 2023" starttimestamp="1700516585068" timestamp="20062110" />
  <Command __id="2154" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 22:17:27 EST 2023" docOffset="320" starttimestamp="1700516585068" timestamp="20062443" />
  <Command __id="2155" _type="ShellCommand" date="Mon Nov 20 22:17:27 EST 2023" starttimestamp="1700516585068" timestamp="20062831" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2156" _type="ShellCommand" date="Mon Nov 20 22:17:55 EST 2023" starttimestamp="1700516585068" timestamp="20090155" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2157" _type="ShellCommand" date="Mon Nov 20 22:17:56 EST 2023" starttimestamp="1700516585068" timestamp="20091916" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2158" _type="ShellCommand" date="Mon Nov 20 22:18:01 EST 2023" starttimestamp="1700516585068" timestamp="20096747" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2159" _type="ShellCommand" date="Mon Nov 20 22:18:04 EST 2023" starttimestamp="1700516585068" timestamp="20099789" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2160" _type="ShellCommand" date="Mon Nov 20 22:18:32 EST 2023" starttimestamp="1700516585068" timestamp="20127211" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2161" _type="MoveCaretCommand" caretOffset="136" date="Mon Nov 20 22:18:34 EST 2023" docOffset="136" starttimestamp="1700516585068" timestamp="20129209" />
  <Command __id="2162" _type="ShellCommand" date="Mon Nov 20 22:18:34 EST 2023" starttimestamp="1700516585068" timestamp="20129587" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2037" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:31 EST 2023" docASTNodeCount="252" docActiveCodeLength="1615" docExpressionCount="121" docLength="2125" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20006405">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"quoteEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return quoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="2043" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:46 EST 2023" docASTNodeCount="6" docActiveCodeLength="48" docExpressionCount="2" docLength="48" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20021647">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class listEvaluator {

}
]]></snapshot>
  </Command>
  <Command __id="2049" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:52 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20026979">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2055" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:16:55 EST 2023" docASTNodeCount="6" docActiveCodeLength="48" docExpressionCount="2" docLength="48" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20030021">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;public class listEvaluator {}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="2057" _type="Insert" date="Mon Nov 20 22:16:56 EST 2023" docASTNodeCount="14" docActiveCodeLength="87" docExpressionCount="9" docLength="87" length="39" offset="15" repeat="3" starttimestamp="1700516585068" timestamp="20031049" timestamp2="20031656">
    <text><![CDATA[
import main.lisp.evaluator.Evaluator;
]]></text>
  </DocumentChange>
  <DocumentChange __id="2065" _type="Insert" date="Mon Nov 20 22:16:58 EST 2023" docASTNodeCount="16" docActiveCodeLength="107" docExpressionCount="10" docLength="107" length="20" offset="82" repeat="20" starttimestamp="1700516585068" timestamp="20033399" timestamp2="20036141">
    <text><![CDATA[implements Evaluator]]></text>
  </DocumentChange>
  <DocumentChange __id="2108" _type="Insert" date="Mon Nov 20 22:17:06 EST 2023" docASTNodeCount="34" docActiveCodeLength="203" docExpressionCount="19" docLength="237" length="130" offset="103" repeat="4" starttimestamp="1700516585068" timestamp="20041542" timestamp2="20041542">
    <text><![CDATA[

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2112" _type="Insert" date="Mon Nov 20 22:17:06 EST 2023" docASTNodeCount="44" docActiveCodeLength="246" docExpressionCount="28" docLength="280" length="43" offset="53" repeat="2" starttimestamp="1700516585068" timestamp="20041542" timestamp2="20041542">
    <text><![CDATA[
import main.lisp.parser.terms.SExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="2114" _type="Insert" date="Mon Nov 20 22:17:06 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" length="40" offset="16" repeat="2" starttimestamp="1700516585068" timestamp="20041542" timestamp2="20041542">
    <text><![CDATA[import main.lisp.evaluator.Environment;
]]></text>
  </DocumentChange>
  <DocumentChange __id="2128" _type="Replace" date="Mon Nov 20 22:17:12 EST 2023" docASTNodeCount="52" docActiveCodeLength="283" docExpressionCount="35" docLength="317" endLine="9" insertionLength="1" int_docASTNodeCount="42" int_docActiveCodeLength="282" int_docExpressionCount="30" int_docLength="316" length="4" offset="236" startLine="9" starttimestamp="1700516585068" timestamp="20047480">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2130" _type="Insert" date="Mon Nov 20 22:17:12 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" length="3" offset="237" repeat="3" starttimestamp="1700516585068" timestamp="20047587" timestamp2="20047719">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <DocumentChange __id="2146" _type="Replace" date="Mon Nov 20 22:17:25 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" endLine="9" insertionLength="4" int_docASTNodeCount="42" int_docActiveCodeLength="282" int_docExpressionCount="30" int_docLength="316" length="4" offset="236" startLine="9" starttimestamp="1700516585068" timestamp="20060198">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[expr]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2152" _type="Replace" date="Mon Nov 20 22:17:27 EST 2023" docASTNodeCount="52" docActiveCodeLength="293" docExpressionCount="35" docLength="327" endLine="9" insertionLength="11" int_docASTNodeCount="46" int_docActiveCodeLength="282" int_docExpressionCount="32" int_docLength="316" length="4" offset="254" startLine="9" starttimestamp="1700516585068" timestamp="20062104">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <Command __id="2163" _type="ShellCommand" date="Mon Nov 20 22:18:40 EST 2023" starttimestamp="1700516585068" timestamp="20135882" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2164" _type="Insert" date="Mon Nov 20 22:18:41 EST 2023" docASTNodeCount="56" docActiveCodeLength="310" docExpressionCount="38" docLength="344" length="17" offset="136" repeat="17" starttimestamp="1700516585068" timestamp="20136898" timestamp2="20139694">
    <text><![CDATA[
import main.lisp]]></text>
  </DocumentChange>
  <Command __id="2165" _type="InsertStringCommand" date="Mon Nov 20 22:18:41 EST 2023" starttimestamp="1700516585068" timestamp="20136902" timestamp2="20136902">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2167" _type="InsertStringCommand" date="Mon Nov 20 22:18:42 EST 2023" starttimestamp="1700516585068" timestamp="20137619" timestamp2="20137619">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2169" _type="InsertStringCommand" date="Mon Nov 20 22:18:42 EST 2023" starttimestamp="1700516585068" timestamp="20137719" timestamp2="20137719">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2171" _type="InsertStringCommand" date="Mon Nov 20 22:18:42 EST 2023" starttimestamp="1700516585068" timestamp="20137783" timestamp2="20137783">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2173" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20137970" timestamp2="20137970">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2175" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138027" timestamp2="20138027">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2177" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138184" timestamp2="20138184">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2179" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138259" timestamp2="20138259">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2181" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138533" timestamp2="20138533">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2183" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138638" timestamp2="20138638">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2185" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138725" timestamp2="20138725">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2187" _type="InsertStringCommand" date="Mon Nov 20 22:18:43 EST 2023" starttimestamp="1700516585068" timestamp="20138775" timestamp2="20138775">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2189" _type="InsertStringCommand" date="Mon Nov 20 22:18:44 EST 2023" starttimestamp="1700516585068" timestamp="20138932" timestamp2="20138932">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2190" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:18:44 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20138937" />
  <Command __id="2195" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:18:44 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20139909" />
  <DocumentChange __id="2196" _type="Replace" date="Mon Nov 20 22:18:44 EST 2023" docASTNodeCount="56" docActiveCodeLength="331" docExpressionCount="38" docLength="365" endLine="5" insertionLength="25" int_docASTNodeCount="52" int_docActiveCodeLength="306" int_docExpressionCount="35" int_docLength="340" length="4" offset="149" startLine="5" starttimestamp="1700516585068" timestamp="20139912">
    <deletedText><![CDATA[lisp]]></deletedText>
    <insertedText><![CDATA[LispInterpreterSettings;.]]></insertedText>
  </DocumentChange>
  <Command __id="2197" _type="InsertStringCommand" date="Mon Nov 20 22:18:44 EST 2023" starttimestamp="1700516585068" timestamp="20139917" timestamp2="20139917">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2198" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:18:44 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20139926" />
  <DocumentChange __id="2199" _type="Replace" date="Mon Nov 20 22:18:46 EST 2023" docASTNodeCount="56" docActiveCodeLength="310" docExpressionCount="38" docLength="344" endLine="5" insertionLength="4" int_docASTNodeCount="52" int_docActiveCodeLength="306" int_docExpressionCount="35" int_docLength="340" length="25" offset="149" startLine="5" starttimestamp="1700516585068" timestamp="20141029">
    <deletedText><![CDATA[LispInterpreterSettings;.]]></deletedText>
    <insertedText><![CDATA[lisp]]></insertedText>
  </DocumentChange>
  <Command __id="2200" _type="UndoCommand" date="Mon Nov 20 22:18:46 EST 2023" starttimestamp="1700516585068" timestamp="20141034" />
  <Command __id="2201" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:18:46 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20141646" />
  <DocumentChange __id="2202" _type="Replace" date="Mon Nov 20 22:18:46 EST 2023" docASTNodeCount="56" docActiveCodeLength="331" docExpressionCount="38" docLength="365" endLine="5" insertionLength="25" int_docASTNodeCount="52" int_docActiveCodeLength="306" int_docExpressionCount="35" int_docLength="340" length="4" offset="149" startLine="5" starttimestamp="1700516585068" timestamp="20141648">
    <deletedText><![CDATA[lisp]]></deletedText>
    <insertedText><![CDATA[LispInterpreterSettings;.]]></insertedText>
  </DocumentChange>
  <Command __id="2203" _type="InsertStringCommand" date="Mon Nov 20 22:18:46 EST 2023" starttimestamp="1700516585068" timestamp="20141653" timestamp2="20141653">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2204" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:18:46 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20141664" />
  <DocumentChange __id="2205" _type="Delete" date="Mon Nov 20 22:18:47 EST 2023" docASTNodeCount="56" docActiveCodeLength="330" docExpressionCount="38" docLength="364" endLine="5" length="1" offset="173" startLine="5" starttimestamp="1700516585068" timestamp="20142159">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2206" _type="Insert" date="Mon Nov 20 22:18:47 EST 2023" docASTNodeCount="56" docActiveCodeLength="331" docExpressionCount="38" docLength="365" length="1" offset="173" starttimestamp="1700516585068" timestamp="20142534">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2207" _type="UndoCommand" date="Mon Nov 20 22:18:47 EST 2023" starttimestamp="1700516585068" timestamp="20142540" />
  <Command __id="2209" _type="UndoCommand" date="Mon Nov 20 22:18:47 EST 2023" starttimestamp="1700516585068" timestamp="20142899" />
  <Command __id="2210" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:18:49 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20144322" />
  <Command __id="2212" _type="InsertStringCommand" date="Mon Nov 20 22:18:49 EST 2023" starttimestamp="1700516585068" timestamp="20144330" timestamp2="20144330">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2213" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:18:49 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20144339" />
  <Command __id="2215" _type="UndoCommand" date="Mon Nov 20 22:18:50 EST 2023" starttimestamp="1700516585068" timestamp="20145041" />
  <Command __id="2216" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:18:51 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20146074" />
  <Command __id="2217" _type="MoveCaretCommand" caretOffset="153" date="Mon Nov 20 22:18:51 EST 2023" docOffset="153" starttimestamp="1700516585068" timestamp="20146188" />
  <Command __id="2219" _type="InsertStringCommand" date="Mon Nov 20 22:18:52 EST 2023" starttimestamp="1700516585068" timestamp="20146949" timestamp2="20146949">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2220" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:18:52 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20146955" />
  <Command __id="2221" _type="ShellCommand" date="Mon Nov 20 22:18:52 EST 2023" starttimestamp="1700516585068" timestamp="20147745" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2222" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:18:52 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20147774" />
  <DocumentChange __id="2208" _type="Replace" date="Mon Nov 20 22:18:47 EST 2023" docASTNodeCount="56" docActiveCodeLength="310" docExpressionCount="38" docLength="344" endLine="5" insertionLength="4" int_docASTNodeCount="52" int_docActiveCodeLength="306" int_docExpressionCount="35" int_docLength="340" length="25" offset="149" startLine="5" starttimestamp="1700516585068" timestamp="20142894">
    <deletedText><![CDATA[LispInterpreterSettings;.]]></deletedText>
    <insertedText><![CDATA[lisp]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2211" _type="Replace" date="Mon Nov 20 22:18:49 EST 2023" docASTNodeCount="56" docActiveCodeLength="331" docExpressionCount="38" docLength="365" endLine="5" insertionLength="25" int_docASTNodeCount="52" int_docActiveCodeLength="306" int_docExpressionCount="35" int_docLength="340" length="4" offset="149" startLine="5" starttimestamp="1700516585068" timestamp="20144324">
    <deletedText><![CDATA[lisp]]></deletedText>
    <insertedText><![CDATA[LispInterpreterSettings;.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2214" _type="Replace" date="Mon Nov 20 22:18:50 EST 2023" docASTNodeCount="56" docActiveCodeLength="310" docExpressionCount="38" docLength="344" endLine="5" insertionLength="4" int_docASTNodeCount="52" int_docActiveCodeLength="306" int_docExpressionCount="35" int_docLength="340" length="25" offset="149" startLine="5" starttimestamp="1700516585068" timestamp="20145036">
    <deletedText><![CDATA[LispInterpreterSettings;.]]></deletedText>
    <insertedText><![CDATA[lisp]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2218" _type="Insert" date="Mon Nov 20 22:18:52 EST 2023" docASTNodeCount="52" docActiveCodeLength="311" docExpressionCount="35" docLength="345" length="1" offset="153" starttimestamp="1700516585068" timestamp="20146946">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2224" _type="Insert" date="Mon Nov 20 22:18:58 EST 2023" docASTNodeCount="52" docActiveCodeLength="323" docExpressionCount="35" docLength="357" length="12" offset="154" repeat="12" starttimestamp="1700516585068" timestamp="20153511" timestamp2="20155311">
    <text><![CDATA[parser.term.]]></text>
  </DocumentChange>
  <DocumentChange __id="2247" _type="Delete" date="Mon Nov 20 22:19:01 EST 2023" docASTNodeCount="60" docActiveCodeLength="322" docExpressionCount="42" docLength="356" endLine="5" length="1" offset="165" startLine="5" starttimestamp="1700516585068" timestamp="20156557">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2223" _type="ShellCommand" date="Mon Nov 20 22:18:57 EST 2023" starttimestamp="1700516585068" timestamp="20152757" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2225" _type="InsertStringCommand" date="Mon Nov 20 22:18:58 EST 2023" starttimestamp="1700516585068" timestamp="20153513" timestamp2="20153513">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2227" _type="InsertStringCommand" date="Mon Nov 20 22:18:58 EST 2023" starttimestamp="1700516585068" timestamp="20153634" timestamp2="20153634">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2229" _type="InsertStringCommand" date="Mon Nov 20 22:18:58 EST 2023" starttimestamp="1700516585068" timestamp="20153791" timestamp2="20153791">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2231" _type="InsertStringCommand" date="Mon Nov 20 22:18:59 EST 2023" starttimestamp="1700516585068" timestamp="20154010" timestamp2="20154010">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2233" _type="InsertStringCommand" date="Mon Nov 20 22:18:59 EST 2023" starttimestamp="1700516585068" timestamp="20154134" timestamp2="20154134">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2235" _type="InsertStringCommand" date="Mon Nov 20 22:18:59 EST 2023" starttimestamp="1700516585068" timestamp="20154271" timestamp2="20154271">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2237" _type="InsertStringCommand" date="Mon Nov 20 22:18:59 EST 2023" starttimestamp="1700516585068" timestamp="20154416" timestamp2="20154416">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2238" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:18:59 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20154423" />
  <Command __id="2244" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:00 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20155325" />
  <Command __id="2245" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:00 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20155325" />
  <Command __id="2246" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:00 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20155329" />
  <Command __id="2248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:19:01 EST 2023" starttimestamp="1700516585068" timestamp="20156561" />
  <Command __id="2250" _type="InsertStringCommand" date="Mon Nov 20 22:19:01 EST 2023" starttimestamp="1700516585068" timestamp="20156621" timestamp2="20156621">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2252" _type="InsertStringCommand" date="Mon Nov 20 22:19:01 EST 2023" starttimestamp="1700516585068" timestamp="20156784" timestamp2="20156784">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2253" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:01 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20156789" />
  <Command __id="2257" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:05 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20160714" />
  <Command __id="2259" _type="InsertStringCommand" date="Mon Nov 20 22:19:05 EST 2023" starttimestamp="1700516585068" timestamp="20160727" timestamp2="20160727">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2261" _type="InsertStringCommand" date="Mon Nov 20 22:19:06 EST 2023" starttimestamp="1700516585068" timestamp="20161068" timestamp2="20161068">
    <data><![CDATA[']]></data>
  </Command>
  <Command __id="2264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:19:06 EST 2023" starttimestamp="1700516585068" timestamp="20161735" />
  <Command __id="2265" _type="MoveCaretCommand" caretOffset="369" date="Mon Nov 20 22:19:07 EST 2023" docOffset="369" starttimestamp="1700516585068" timestamp="20162708" />
  <DocumentChange __id="2249" _type="Insert" date="Mon Nov 20 22:19:01 EST 2023" docASTNodeCount="62" docActiveCodeLength="327" docExpressionCount="44" docLength="361" length="5" offset="165" repeat="5" starttimestamp="1700516585068" timestamp="20156618" timestamp2="20158563">
    <text><![CDATA[s.fac]]></text>
  </DocumentChange>
  <DocumentChange __id="2258" _type="Replace" date="Mon Nov 20 22:19:05 EST 2023" docASTNodeCount="62" docActiveCodeLength="342" docExpressionCount="44" docLength="376" endLine="5" insertionLength="18" int_docASTNodeCount="52" int_docActiveCodeLength="324" int_docExpressionCount="35" int_docLength="358" length="3" offset="167" startLine="5" starttimestamp="1700516585068" timestamp="20160716">
    <deletedText><![CDATA[fac]]></deletedText>
    <insertedText><![CDATA[ExpressionFactory;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2260" _type="Insert" date="Mon Nov 20 22:19:06 EST 2023" docASTNodeCount="62" docActiveCodeLength="344" docExpressionCount="44" docLength="378" length="2" offset="185" starttimestamp="1700516585068" timestamp="20161062">
    <text><![CDATA['']]></text>
  </DocumentChange>
  <DocumentChange __id="2262" _type="Delete" date="Mon Nov 20 22:19:06 EST 2023" docASTNodeCount="62" docActiveCodeLength="342" docExpressionCount="44" docLength="376" endLine="5" length="2" offset="185" repeat="2" startLine="5" starttimestamp="1700516585068" timestamp="20161728" timestamp2="20161733">
    <text><![CDATA['']]></text>
  </DocumentChange>
  <DocumentChange __id="2267" _type="Delete" date="Mon Nov 20 22:19:09 EST 2023" docASTNodeCount="60" docActiveCodeLength="327" docExpressionCount="43" docLength="327" endLine="12" length="49" offset="320" startLine="11" starttimestamp="1700516585068" timestamp="20164524">
    <text><![CDATA[// TODO Auto-generated method stub
		return null;]]></text>
  </DocumentChange>
  <Command __id="2266" _type="SelectTextCommand" caretOffset="320" date="Mon Nov 20 22:19:09 EST 2023" end="369" start="320" starttimestamp="1700516585068" timestamp="20163967" />
  <Command __id="2268" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:19:09 EST 2023" starttimestamp="1700516585068" timestamp="20164531" />
  <Command __id="2270" _type="InsertStringCommand" date="Mon Nov 20 22:19:09 EST 2023" starttimestamp="1700516585068" timestamp="20164915" timestamp2="20164915">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2272" _type="InsertStringCommand" date="Mon Nov 20 22:19:10 EST 2023" starttimestamp="1700516585068" timestamp="20165154" timestamp2="20165154">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2274" _type="InsertStringCommand" date="Mon Nov 20 22:19:10 EST 2023" starttimestamp="1700516585068" timestamp="20165275" timestamp2="20165275">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2276" _type="InsertStringCommand" date="Mon Nov 20 22:19:10 EST 2023" starttimestamp="1700516585068" timestamp="20165349" timestamp2="20165349">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2278" _type="InsertStringCommand" date="Mon Nov 20 22:19:10 EST 2023" starttimestamp="1700516585068" timestamp="20165396" timestamp2="20165396">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2280" _type="InsertStringCommand" date="Mon Nov 20 22:19:10 EST 2023" starttimestamp="1700516585068" timestamp="20165530" timestamp2="20165530">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2282" _type="InsertStringCommand" date="Mon Nov 20 22:19:10 EST 2023" starttimestamp="1700516585068" timestamp="20165726" timestamp2="20165726">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2284" _type="InsertStringCommand" date="Mon Nov 20 22:19:12 EST 2023" starttimestamp="1700516585068" timestamp="20167647" timestamp2="20167647">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2286" _type="InsertStringCommand" date="Mon Nov 20 22:19:12 EST 2023" starttimestamp="1700516585068" timestamp="20167734" timestamp2="20167734">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2288" _type="InsertStringCommand" date="Mon Nov 20 22:19:12 EST 2023" starttimestamp="1700516585068" timestamp="20167841" timestamp2="20167841">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2290" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168028" timestamp2="20168028">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="2292" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168230" timestamp2="20168230">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2294" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168381" timestamp2="20168381">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2296" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168547" timestamp2="20168547">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2298" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168631" timestamp2="20168631">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2300" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168720" timestamp2="20168720">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2302" _type="InsertStringCommand" date="Mon Nov 20 22:19:13 EST 2023" starttimestamp="1700516585068" timestamp="20168815" timestamp2="20168815">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2303" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:13 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20168820" />
  <Command __id="2304" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:13 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20168841" />
  <DocumentChange __id="2269" _type="Insert" date="Mon Nov 20 22:19:09 EST 2023" docASTNodeCount="62" docActiveCodeLength="344" docExpressionCount="44" docLength="344" length="17" offset="320" repeat="17" starttimestamp="1700516585068" timestamp="20164912" timestamp2="20168813">
    <text><![CDATA[ExpressionFactor.]]></text>
  </DocumentChange>
  <DocumentChange __id="2310" _type="Replace" date="Mon Nov 20 22:19:16 EST 2023" docASTNodeCount="62" docActiveCodeLength="345" docExpressionCount="44" docLength="345" endLine="11" insertionLength="19" int_docASTNodeCount="60" int_docActiveCodeLength="326" int_docExpressionCount="43" int_docLength="326" length="18" offset="318" startLine="11" starttimestamp="1700516585068" timestamp="20171444">
    <deletedText><![CDATA[		ExpressionFactor]]></deletedText>
    <insertedText><![CDATA[		ExpressionFactory]]></insertedText>
  </DocumentChange>
  <Command __id="2305" _type="MoveCaretCommand" caretOffset="175" date="Mon Nov 20 22:19:15 EST 2023" docOffset="175" starttimestamp="1700516585068" timestamp="20170572" />
  <Command __id="2306" _type="SelectTextCommand" caretOffset="184" date="Mon Nov 20 22:19:15 EST 2023" end="184" start="167" starttimestamp="1700516585068" timestamp="20170751" />
  <Command __id="2307" _type="CopyCommand" date="Mon Nov 20 22:19:15 EST 2023" starttimestamp="1700516585068" timestamp="20170911" />
  <Command __id="2308" _type="MoveCaretCommand" caretOffset="329" date="Mon Nov 20 22:19:16 EST 2023" docOffset="329" starttimestamp="1700516585068" timestamp="20171241" />
  <Command __id="2309" _type="SelectTextCommand" caretOffset="336" date="Mon Nov 20 22:19:16 EST 2023" end="336" start="320" starttimestamp="1700516585068" timestamp="20171378" />
  <Command __id="2311" _type="PasteCommand" date="Mon Nov 20 22:19:16 EST 2023" starttimestamp="1700516585068" timestamp="20171447" />
  <Command __id="2312" _type="MoveCaretCommand" caretOffset="338" date="Mon Nov 20 22:19:16 EST 2023" docOffset="338" starttimestamp="1700516585068" timestamp="20171680" />
  <Command __id="2314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:19:18 EST 2023" starttimestamp="1700516585068" timestamp="20173467" />
  <Command __id="2316" _type="InsertStringCommand" date="Mon Nov 20 22:19:19 EST 2023" starttimestamp="1700516585068" timestamp="20174197" timestamp2="20174197">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2317" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:19 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20174201" />
  <Command __id="2318" _type="ShellCommand" date="Mon Nov 20 22:19:19 EST 2023" starttimestamp="1700516585068" timestamp="20174684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2319" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:19 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20174714" />
  <Command __id="2320" _type="ShellCommand" date="Mon Nov 20 22:19:20 EST 2023" starttimestamp="1700516585068" timestamp="20175176" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2322" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:19:21 EST 2023" starttimestamp="1700516585068" timestamp="20176063" />
  <Command __id="2324" _type="InsertStringCommand" date="Mon Nov 20 22:19:21 EST 2023" starttimestamp="1700516585068" timestamp="20176357" timestamp2="20176357">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2325" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:21 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20176362" />
  <Command __id="2326" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:21 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20176568" />
  <Command __id="2328" _type="InsertStringCommand" date="Mon Nov 20 22:19:21 EST 2023" starttimestamp="1700516585068" timestamp="20176575" timestamp2="20176575">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2329" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:21 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20176583" />
  <Command __id="2337" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:23 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20178117" />
  <Command __id="2339" _type="InsertStringCommand" date="Mon Nov 20 22:19:23 EST 2023" starttimestamp="1700516585068" timestamp="20178124" timestamp2="20178124">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2340" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:23 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20178133" />
  <Command __id="2341" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:27 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20182286" />
  <Command __id="2342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 22:19:27 EST 2023" starttimestamp="1700516585068" timestamp="20182587" />
  <Command __id="2343" _type="MoveCaretCommand" caretOffset="338" date="Mon Nov 20 22:19:28 EST 2023" docOffset="338" starttimestamp="1700516585068" timestamp="20183640" />
  <Command __id="2345" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:19:29 EST 2023" starttimestamp="1700516585068" timestamp="20184177" />
  <Command __id="2347" _type="InsertStringCommand" date="Mon Nov 20 22:19:29 EST 2023" starttimestamp="1700516585068" timestamp="20184332" timestamp2="20184332">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2348" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:19:29 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20184334" />
  <Command __id="2349" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:31 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20186196" />
  <Command __id="2351" _type="InsertStringCommand" date="Mon Nov 20 22:19:31 EST 2023" starttimestamp="1700516585068" timestamp="20186232" timestamp2="20186232">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2352" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:19:33 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20188802" />
  <Command __id="2353" _type="MoveCaretCommand" caretOffset="364" date="Mon Nov 20 22:19:33 EST 2023" docOffset="364" starttimestamp="1700516585068" timestamp="20188873" />
  <Command __id="2354" _type="ShellCommand" date="Mon Nov 20 22:19:34 EST 2023" starttimestamp="1700516585068" timestamp="20189051" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2355" _type="ShellCommand" date="Mon Nov 20 22:19:34 EST 2023" starttimestamp="1700516585068" timestamp="20189912" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2356" _type="ShellCommand" date="Mon Nov 20 22:19:35 EST 2023" starttimestamp="1700516585068" timestamp="20190174" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2357" _type="ShellCommand" date="Mon Nov 20 22:20:03 EST 2023" starttimestamp="1700516585068" timestamp="20218208" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2358" _type="ShellCommand" date="Mon Nov 20 22:20:33 EST 2023" starttimestamp="1700516585068" timestamp="20248388" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2359" _type="ShellCommand" date="Mon Nov 20 22:20:38 EST 2023" starttimestamp="1700516585068" timestamp="20253791" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2360" _type="MoveCaretCommand" caretOffset="368" date="Mon Nov 20 22:20:38 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="20253864" />
  <Command __id="2361" _type="ShellCommand" date="Mon Nov 20 22:20:39 EST 2023" starttimestamp="1700516585068" timestamp="20254298" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2362" _type="ShellCommand" date="Mon Nov 20 22:20:40 EST 2023" starttimestamp="1700516585068" timestamp="20255908" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2313" _type="Delete" date="Mon Nov 20 22:19:18 EST 2023" docASTNodeCount="62" docActiveCodeLength="344" docExpressionCount="44" docLength="344" endLine="11" length="1" offset="337" startLine="11" starttimestamp="1700516585068" timestamp="20173464">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2315" _type="Insert" date="Mon Nov 20 22:19:19 EST 2023" docASTNodeCount="62" docActiveCodeLength="345" docExpressionCount="44" docLength="345" length="1" offset="337" starttimestamp="1700516585068" timestamp="20174195">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2321" _type="Delete" date="Mon Nov 20 22:19:21 EST 2023" docASTNodeCount="62" docActiveCodeLength="344" docExpressionCount="44" docLength="344" endLine="11" length="1" offset="337" startLine="11" starttimestamp="1700516585068" timestamp="20176059">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2323" _type="Insert" date="Mon Nov 20 22:19:21 EST 2023" docASTNodeCount="66" docActiveCodeLength="351" docExpressionCount="47" docLength="351" length="7" offset="337" repeat="2" starttimestamp="1700516585068" timestamp="20176354" timestamp2="20176570">
    <text><![CDATA[.class.]]></text>
  </DocumentChange>
  <DocumentChange __id="2330" _type="Delete" date="Mon Nov 20 22:19:22 EST 2023" docASTNodeCount="62" docActiveCodeLength="344" docExpressionCount="44" docLength="344" endLine="11" length="7" offset="337" repeat="7" startLine="11" starttimestamp="1700516585068" timestamp="20176941" timestamp2="20177762">
    <text><![CDATA[.class.]]></text>
  </DocumentChange>
  <DocumentChange __id="2338" _type="Replace" date="Mon Nov 20 22:19:23 EST 2023" docASTNodeCount="62" docActiveCodeLength="345" docExpressionCount="44" docLength="345" endLine="11" insertionLength="18" int_docASTNodeCount="60" int_docActiveCodeLength="327" int_docExpressionCount="43" int_docLength="327" length="17" offset="320" startLine="11" starttimestamp="1700516585068" timestamp="20178119">
    <deletedText><![CDATA[ExpressionFactory]]></deletedText>
    <insertedText><![CDATA[ExpressionFactory.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2344" _type="Delete" date="Mon Nov 20 22:19:29 EST 2023" docASTNodeCount="62" docActiveCodeLength="344" docExpressionCount="44" docLength="344" endLine="11" length="1" offset="337" startLine="11" starttimestamp="1700516585068" timestamp="20184175">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2346" _type="Insert" date="Mon Nov 20 22:19:29 EST 2023" docASTNodeCount="66" docActiveCodeLength="368" docExpressionCount="48" docLength="368" length="24" offset="337" repeat="2" starttimestamp="1700516585068" timestamp="20184331" timestamp2="20186198">
    <text><![CDATA[.newInstance(expr, expr)]]></text>
  </DocumentChange>
  <Command __id="2363" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 22:20:43 EST 2023" docOffset="361" starttimestamp="1700516585068" timestamp="20258908" />
  <Command __id="2364" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 22:20:44 EST 2023" docOffset="361" starttimestamp="1700516585068" timestamp="20259146" />
  <DocumentChange __id="2365" _type="Insert" date="Mon Nov 20 22:20:45 EST 2023" docASTNodeCount="66" docActiveCodeLength="369" docExpressionCount="48" docLength="369" length="1" offset="361" starttimestamp="1700516585068" timestamp="20260488">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="2366" _type="InsertStringCommand" date="Mon Nov 20 22:20:45 EST 2023" starttimestamp="1700516585068" timestamp="20260490" timestamp2="20260490">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2367" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 22:20:45 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="20260691" />
  <Command __id="2368" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 22:20:46 EST 2023" docOffset="362" starttimestamp="1700516585068" timestamp="20261376" />
  <DocumentChange __id="2369" _type="Delete" date="Mon Nov 20 22:20:47 EST 2023" docASTNodeCount="66" docActiveCodeLength="368" docExpressionCount="48" docLength="368" endLine="11" length="1" offset="361" startLine="11" starttimestamp="1700516585068" timestamp="20262024">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="2370" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:20:47 EST 2023" starttimestamp="1700516585068" timestamp="20262026" />
  <DocumentChange __id="2371" _type="Insert" date="Mon Nov 20 22:20:47 EST 2023" docASTNodeCount="66" docActiveCodeLength="369" docExpressionCount="48" docLength="369" length="1" offset="361" starttimestamp="1700516585068" timestamp="20262125">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="2372" _type="InsertStringCommand" date="Mon Nov 20 22:20:47 EST 2023" starttimestamp="1700516585068" timestamp="20262128" timestamp2="20262128">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2373" _type="SelectTextCommand" caretOffset="316" date="Mon Nov 20 22:20:47 EST 2023" end="316" start="315" starttimestamp="1700516585068" timestamp="20262673" />
  <Command __id="2374" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 22:20:47 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="20262918" />
  <Command __id="2376" _type="InsertStringCommand" date="Mon Nov 20 22:20:48 EST 2023" starttimestamp="1700516585068" timestamp="20263397" timestamp2="20263397">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2377" _type="MoveCaretCommand" caretOffset="368" date="Mon Nov 20 22:20:50 EST 2023" docOffset="368" starttimestamp="1700516585068" timestamp="20265009" />
  <Command __id="2378" _type="MoveCaretCommand" caretOffset="365" date="Mon Nov 20 22:20:50 EST 2023" docOffset="365" starttimestamp="1700516585068" timestamp="20265313" />
  <Command __id="2380" _type="InsertStringCommand" date="Mon Nov 20 22:20:50 EST 2023" starttimestamp="1700516585068" timestamp="20265749" timestamp2="20265749">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2382" _type="InsertStringCommand" date="Mon Nov 20 22:20:50 EST 2023" starttimestamp="1700516585068" timestamp="20265892" timestamp2="20265892">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2384" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20265969" timestamp2="20265969">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2386" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266060" timestamp2="20266060">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2388" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266132" timestamp2="20266132">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2390" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266253" timestamp2="20266253">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2392" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266295" timestamp2="20266295">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2394" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266416" timestamp2="20266416">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2396" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266496" timestamp2="20266496">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2398" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266662" timestamp2="20266662">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2400" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266793" timestamp2="20266793">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2402" _type="InsertStringCommand" date="Mon Nov 20 22:20:51 EST 2023" starttimestamp="1700516585068" timestamp="20266916" timestamp2="20266916">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2404" _type="InsertStringCommand" date="Mon Nov 20 22:20:52 EST 2023" starttimestamp="1700516585068" timestamp="20267226" timestamp2="20267226">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2405" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 22:20:53 EST 2023" docOffset="320" starttimestamp="1700516585068" timestamp="20268048" />
  <Command __id="2406" _type="MoveCaretCommand" caretOffset="349" date="Mon Nov 20 22:21:56 EST 2023" docOffset="349" starttimestamp="1700516585068" timestamp="20331842" />
  <Command __id="2407" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 22:21:57 EST 2023" docOffset="320" starttimestamp="1700516585068" timestamp="20332239" />
  <Command __id="2408" _type="MoveCaretCommand" caretOffset="380" date="Mon Nov 20 22:22:04 EST 2023" docOffset="380" starttimestamp="1700516585068" timestamp="20339407" />
  <Command __id="2409" _type="MoveCaretCommand" caretOffset="323" date="Mon Nov 20 22:22:05 EST 2023" docOffset="323" starttimestamp="1700516585068" timestamp="20340220" />
  <Command __id="2410" _type="SelectTextCommand" caretOffset="364" date="Mon Nov 20 22:22:10 EST 2023" end="364" start="323" starttimestamp="1700516585068" timestamp="20344942" />
  <Command __id="2412" _type="CutCommand" date="Mon Nov 20 22:22:10 EST 2023" starttimestamp="1700516585068" timestamp="20345217" />
  <Command __id="2413" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 22:22:10 EST 2023" docOffset="336" starttimestamp="1700516585068" timestamp="20345540" />
  <Command __id="2414" _type="SelectTextCommand" caretOffset="338" date="Mon Nov 20 22:22:10 EST 2023" end="338" start="334" starttimestamp="1700516585068" timestamp="20345676" />
  <Command __id="2416" _type="PasteCommand" date="Mon Nov 20 22:22:10 EST 2023" starttimestamp="1700516585068" timestamp="20345746" />
  <Command __id="2417" _type="MoveCaretCommand" caretOffset="324" date="Mon Nov 20 22:22:11 EST 2023" docOffset="324" starttimestamp="1700516585068" timestamp="20346101" />
  <Command __id="2418" _type="InsertStringCommand" date="Mon Nov 20 22:22:11 EST 2023" starttimestamp="1700516585068" timestamp="20346357" timestamp2="20346357">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2419" _type="MoveCaretCommand" caretOffset="324" date="Mon Nov 20 22:22:12 EST 2023" docOffset="324" starttimestamp="1700516585068" timestamp="20346948" />
  <Command __id="2421" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:22:12 EST 2023" starttimestamp="1700516585068" timestamp="20347096" />
  <Command __id="2422" _type="MoveCaretCommand" caretOffset="372" date="Mon Nov 20 22:22:12 EST 2023" docOffset="372" starttimestamp="1700516585068" timestamp="20347602" />
  <Command __id="2423" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 22:22:13 EST 2023" docOffset="320" starttimestamp="1700516585068" timestamp="20348199" />
  <Command __id="2424" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 22:22:14 EST 2023" docOffset="320" starttimestamp="1700516585068" timestamp="20349152" />
  <Command __id="2425" _type="MoveCaretCommand" caretOffset="369" date="Mon Nov 20 22:22:14 EST 2023" docOffset="369" starttimestamp="1700516585068" timestamp="20349566" />
  <Command __id="2426" _type="SelectTextCommand" caretOffset="370" date="Mon Nov 20 22:22:14 EST 2023" end="370" start="366" starttimestamp="1700516585068" timestamp="20349715" />
  <DocumentChange __id="2375" _type="Insert" date="Mon Nov 20 22:20:48 EST 2023" docASTNodeCount="66" docActiveCodeLength="372" docExpressionCount="48" docLength="372" length="3" offset="317" starttimestamp="1700516585068" timestamp="20263392">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2379" _type="Insert" date="Mon Nov 20 22:20:50 EST 2023" docASTNodeCount="68" docActiveCodeLength="387" docExpressionCount="49" docLength="387" length="15" offset="365" repeat="13" starttimestamp="1700516585068" timestamp="20265744" timestamp2="20267224">
    <text><![CDATA[
		return null;]]></text>
  </DocumentChange>
  <DocumentChange __id="2411" _type="Delete" date="Mon Nov 20 22:22:10 EST 2023" docASTNodeCount="63" docActiveCodeLength="346" docExpressionCount="44" docLength="346" endLine="12" length="41" offset="323" startLine="12" starttimestamp="1700516585068" timestamp="20345213">
    <text><![CDATA[ExpressionFactory.newInstance(expr, expr)]]></text>
  </DocumentChange>
  <DocumentChange __id="2415" _type="Replace" date="Mon Nov 20 22:22:10 EST 2023" docASTNodeCount="67" docActiveCodeLength="383" docExpressionCount="48" docLength="383" endLine="13" insertionLength="41" int_docASTNodeCount="62" int_docActiveCodeLength="342" int_docExpressionCount="43" int_docLength="342" length="4" offset="334" startLine="13" starttimestamp="1700516585068" timestamp="20345742">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[ExpressionFactory.newInstance(expr, expr)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2420" _type="Delete" date="Mon Nov 20 22:22:12 EST 2023" docASTNodeCount="66" docActiveCodeLength="379" docExpressionCount="48" docLength="379" endLine="13" length="4" offset="321" startLine="12" starttimestamp="1700516585068" timestamp="20347092">
    <text><![CDATA[		;
]]></text>
  </DocumentChange>
  <Command __id="2427" _type="MoveCaretCommand" caretOffset="364" date="Mon Nov 20 22:22:19 EST 2023" docOffset="364" starttimestamp="1700516585068" timestamp="20354065" />
  <DocumentChange __id="2428" _type="Insert" date="Mon Nov 20 22:22:21 EST 2023" docASTNodeCount="68" docActiveCodeLength="383" docExpressionCount="50" docLength="383" length="4" offset="364" repeat="4" starttimestamp="1700516585068" timestamp="20356205" timestamp2="20356825">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <Command __id="2429" _type="InsertStringCommand" date="Mon Nov 20 22:22:21 EST 2023" starttimestamp="1700516585068" timestamp="20356209" timestamp2="20356209">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2430" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:22:21 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20356215" />
  <Command __id="2434" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:22:22 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20357463" />
  <DocumentChange __id="2435" _type="Replace" date="Mon Nov 20 22:22:22 EST 2023" docASTNodeCount="68" docActiveCodeLength="389" docExpressionCount="50" docLength="389" endLine="12" insertionLength="9" int_docASTNodeCount="67" int_docActiveCodeLength="380" int_docExpressionCount="49" int_docLength="380" length="3" offset="365" startLine="12" starttimestamp="1700516585068" timestamp="20357464">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="2436" _type="InsertStringCommand" date="Mon Nov 20 22:22:22 EST 2023" starttimestamp="1700516585068" timestamp="20357468" timestamp2="20357468">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2437" _type="Insert" date="Mon Nov 20 22:22:23 EST 2023" docASTNodeCount="70" docActiveCodeLength="393" docExpressionCount="52" docLength="393" length="4" offset="374" repeat="4" starttimestamp="1700516585068" timestamp="20357962" timestamp2="20359757">
    <text><![CDATA[.eva]]></text>
  </DocumentChange>
  <Command __id="2438" _type="InsertStringCommand" date="Mon Nov 20 22:22:23 EST 2023" starttimestamp="1700516585068" timestamp="20357966" timestamp2="20357966">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2439" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:22:23 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20357972" />
  <Command __id="2443" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:22:24 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20359908" />
  <Command __id="2445" _type="InsertStringCommand" date="Mon Nov 20 22:22:25 EST 2023" starttimestamp="1700516585068" timestamp="20359938" timestamp2="20359938">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2446" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:22:26 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20361822" />
  <Command __id="2447" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 22:22:26 EST 2023" docOffset="403" starttimestamp="1700516585068" timestamp="20361899" />
  <Command __id="2448" _type="SelectTextCommand" caretOffset="402" date="Mon Nov 20 22:22:27 EST 2023" end="402" start="317" starttimestamp="1700516585068" timestamp="20362053" />
  <Command __id="2449" _type="MoveCaretCommand" caretOffset="397" date="Mon Nov 20 22:22:27 EST 2023" docOffset="397" starttimestamp="1700516585068" timestamp="20362366" />
  <Command __id="2450" _type="SelectTextCommand" caretOffset="398" date="Mon Nov 20 22:22:27 EST 2023" end="398" start="394" starttimestamp="1700516585068" timestamp="20362501" />
  <DocumentChange __id="2444" _type="Replace" date="Mon Nov 20 22:22:24 EST 2023" docASTNodeCount="71" docActiveCodeLength="407" docExpressionCount="53" docLength="407" endLine="12" insertionLength="17" int_docASTNodeCount="69" int_docActiveCodeLength="390" int_docExpressionCount="51" int_docLength="390" length="3" offset="375" startLine="12" starttimestamp="1700516585068" timestamp="20359910">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="2451" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 22:22:28 EST 2023" docOffset="320" starttimestamp="1700516585068" timestamp="20363803" />
  <Command __id="2453" _type="InsertStringCommand" date="Mon Nov 20 22:22:30 EST 2023" starttimestamp="1700516585068" timestamp="20365287" timestamp2="20365287">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2455" _type="InsertStringCommand" date="Mon Nov 20 22:22:30 EST 2023" starttimestamp="1700516585068" timestamp="20365368" timestamp2="20365368">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2457" _type="InsertStringCommand" date="Mon Nov 20 22:22:30 EST 2023" starttimestamp="1700516585068" timestamp="20365493" timestamp2="20365493">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2458" _type="ShellCommand" date="Mon Nov 20 22:23:02 EST 2023" starttimestamp="1700516585068" timestamp="20397773" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2459" _type="ShellCommand" date="Mon Nov 20 22:23:03 EST 2023" starttimestamp="1700516585068" timestamp="20398458" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2460" _type="ShellCommand" date="Mon Nov 20 22:23:04 EST 2023" starttimestamp="1700516585068" timestamp="20399265" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2461" _type="ShellCommand" date="Mon Nov 20 22:23:05 EST 2023" starttimestamp="1700516585068" timestamp="20399986" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2462" _type="ShellCommand" date="Mon Nov 20 22:23:05 EST 2023" starttimestamp="1700516585068" timestamp="20400161" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2463" _type="ShellCommand" date="Mon Nov 20 22:23:55 EST 2023" starttimestamp="1700516585068" timestamp="20450489" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2464" _type="MoveCaretCommand" caretOffset="235" date="Mon Nov 20 22:23:56 EST 2023" docOffset="235" starttimestamp="1700516585068" timestamp="20451437" />
  <Command __id="2465" _type="MoveCaretCommand" caretOffset="186" date="Mon Nov 20 22:23:56 EST 2023" docOffset="186" starttimestamp="1700516585068" timestamp="20451713" />
  <Command __id="2466" _type="MoveCaretCommand" caretOffset="185" date="Mon Nov 20 22:23:57 EST 2023" docOffset="185" starttimestamp="1700516585068" timestamp="20452000" />
  <Command __id="2468" _type="InsertStringCommand" date="Mon Nov 20 22:23:57 EST 2023" starttimestamp="1700516585068" timestamp="20452630" timestamp2="20452630">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2470" _type="PasteCommand" date="Mon Nov 20 22:23:57 EST 2023" starttimestamp="1700516585068" timestamp="20452821" />
  <Command __id="2471" _type="ShellCommand" date="Mon Nov 20 22:23:58 EST 2023" starttimestamp="1700516585068" timestamp="20453144" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2472" _type="ShellCommand" date="Mon Nov 20 22:23:58 EST 2023" starttimestamp="1700516585068" timestamp="20453384" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2473" _type="ShellCommand" date="Mon Nov 20 22:23:58 EST 2023" starttimestamp="1700516585068" timestamp="20453651" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="2452" _type="Insert" date="Mon Nov 20 22:22:30 EST 2023" docASTNodeCount="73" docActiveCodeLength="411" docExpressionCount="54" docLength="411" length="4" offset="320" repeat="3" starttimestamp="1700516585068" timestamp="20365285" timestamp2="20365488">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <DocumentChange __id="2467" _type="Insert" date="Mon Nov 20 22:23:57 EST 2023" docASTNodeCount="83" docActiveCodeLength="450" docExpressionCount="63" docLength="450" length="39" offset="185" repeat="2" starttimestamp="1700516585068" timestamp="20452627" timestamp2="20452817">
    <text><![CDATA[
import main.lisp.parser.terms.NilAtom;]]></text>
  </DocumentChange>
  <Command __id="2474" _type="ShellCommand" date="Mon Nov 20 22:24:00 EST 2023" starttimestamp="1700516585068" timestamp="20455747" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2475" _type="MoveCaretCommand" caretOffset="286" date="Mon Nov 20 22:24:01 EST 2023" docOffset="286" starttimestamp="1700516585068" timestamp="20456474" />
  <Command __id="2476" _type="MoveCaretCommand" caretOffset="363" date="Mon Nov 20 22:24:01 EST 2023" docOffset="363" starttimestamp="1700516585068" timestamp="20456733" />
  <Command __id="2477" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 22:24:02 EST 2023" docOffset="362" starttimestamp="1700516585068" timestamp="20457581" />
  <DocumentChange __id="2478" _type="Insert" date="Mon Nov 20 22:24:04 EST 2023" docASTNodeCount="85" docActiveCodeLength="458" docExpressionCount="65" docLength="458" length="8" offset="362" repeat="8" starttimestamp="1700516585068" timestamp="20459808" timestamp2="20461877">
    <text><![CDATA[expr.get]]></text>
  </DocumentChange>
  <Command __id="2479" _type="InsertStringCommand" date="Mon Nov 20 22:24:04 EST 2023" starttimestamp="1700516585068" timestamp="20459812" timestamp2="20459812">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2481" _type="InsertStringCommand" date="Mon Nov 20 22:24:05 EST 2023" starttimestamp="1700516585068" timestamp="20460005" timestamp2="20460005">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2483" _type="InsertStringCommand" date="Mon Nov 20 22:24:05 EST 2023" starttimestamp="1700516585068" timestamp="20460111" timestamp2="20460111">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2485" _type="InsertStringCommand" date="Mon Nov 20 22:24:05 EST 2023" starttimestamp="1700516585068" timestamp="20460218" timestamp2="20460218">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2487" _type="InsertStringCommand" date="Mon Nov 20 22:24:05 EST 2023" starttimestamp="1700516585068" timestamp="20460384" timestamp2="20460384">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2488" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:24:05 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20460391" />
  <Command __id="2492" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:24:07 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20462846" />
  <DocumentChange __id="2493" _type="Replace" date="Mon Nov 20 22:24:07 EST 2023" docASTNodeCount="85" docActiveCodeLength="464" docExpressionCount="65" docLength="464" endLine="12" insertionLength="9" int_docASTNodeCount="85" int_docActiveCodeLength="455" int_docExpressionCount="64" int_docLength="455" length="3" offset="367" startLine="12" starttimestamp="1700516585068" timestamp="20462847">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="2494" _type="InsertStringCommand" date="Mon Nov 20 22:24:07 EST 2023" starttimestamp="1700516585068" timestamp="20462849" timestamp2="20462849">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2495" _type="Insert" date="Mon Nov 20 22:24:08 EST 2023" docASTNodeCount="87" docActiveCodeLength="465" docExpressionCount="67" docLength="465" length="1" offset="376" starttimestamp="1700516585068" timestamp="20463474">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2496" _type="InsertStringCommand" date="Mon Nov 20 22:24:08 EST 2023" starttimestamp="1700516585068" timestamp="20463476" timestamp2="20463476">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2497" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:24:08 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20463479" />
  <DocumentChange __id="2498" _type="Insert" date="Mon Nov 20 22:24:12 EST 2023" docASTNodeCount="87" docActiveCodeLength="467" docExpressionCount="67" docLength="467" length="2" offset="377" repeat="2" starttimestamp="1700516585068" timestamp="20466968" timestamp2="20467091">
    <text><![CDATA[is]]></text>
  </DocumentChange>
  <Command __id="2500" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:24:12 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20467235" />
  <DocumentChange __id="2501" _type="Replace" date="Mon Nov 20 22:24:12 EST 2023" docASTNodeCount="87" docActiveCodeLength="473" docExpressionCount="67" docLength="473" endLine="12" insertionLength="8" int_docASTNodeCount="87" int_docActiveCodeLength="465" int_docExpressionCount="67" int_docLength="465" length="2" offset="377" startLine="12" starttimestamp="1700516585068" timestamp="20467237">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <Command __id="2502" _type="InsertStringCommand" date="Mon Nov 20 22:24:12 EST 2023" starttimestamp="1700516585068" timestamp="20467242" timestamp2="20467242">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2503" _type="Delete" date="Mon Nov 20 22:24:13 EST 2023" docASTNodeCount="87" docActiveCodeLength="467" docExpressionCount="67" docLength="467" endLine="12" length="6" offset="379" repeat="6" startLine="12" starttimestamp="1700516585068" timestamp="20468013" timestamp2="20468717">
    <text><![CDATA[Atom()]]></text>
  </DocumentChange>
  <Command __id="2504" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:13 EST 2023" starttimestamp="1700516585068" timestamp="20468017" />
  <Command __id="2506" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:13 EST 2023" starttimestamp="1700516585068" timestamp="20468160" />
  <Command __id="2508" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:13 EST 2023" starttimestamp="1700516585068" timestamp="20468279" />
  <Command __id="2510" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:13 EST 2023" starttimestamp="1700516585068" timestamp="20468418" />
  <Command __id="2512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:13 EST 2023" starttimestamp="1700516585068" timestamp="20468569" />
  <Command __id="2514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:13 EST 2023" starttimestamp="1700516585068" timestamp="20468719" />
  <DocumentChange __id="2515" _type="Insert" date="Mon Nov 20 22:24:14 EST 2023" docASTNodeCount="87" docActiveCodeLength="472" docExpressionCount="67" docLength="472" length="5" offset="379" repeat="4" starttimestamp="1700516585068" timestamp="20468944" timestamp2="20469871">
    <text><![CDATA[Nil()]]></text>
  </DocumentChange>
  <Command __id="2516" _type="InsertStringCommand" date="Mon Nov 20 22:24:14 EST 2023" starttimestamp="1700516585068" timestamp="20468947" timestamp2="20468947">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2518" _type="InsertStringCommand" date="Mon Nov 20 22:24:14 EST 2023" starttimestamp="1700516585068" timestamp="20469141" timestamp2="20469141">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2520" _type="InsertStringCommand" date="Mon Nov 20 22:24:14 EST 2023" starttimestamp="1700516585068" timestamp="20469282" timestamp2="20469282">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2522" _type="InsertStringCommand" date="Mon Nov 20 22:24:14 EST 2023" starttimestamp="1700516585068" timestamp="20469876" timestamp2="20469876">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="2523" _type="Delete" date="Mon Nov 20 22:24:16 EST 2023" docASTNodeCount="85" docActiveCodeLength="464" docExpressionCount="65" docLength="464" endLine="12" length="8" offset="376" repeat="8" startLine="12" starttimestamp="1700516585068" timestamp="20471465" timestamp2="20472558">
    <text><![CDATA[.isNil()]]></text>
  </DocumentChange>
  <Command __id="2525" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:16 EST 2023" starttimestamp="1700516585068" timestamp="20471471" />
  <Command __id="2527" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:16 EST 2023" starttimestamp="1700516585068" timestamp="20471565" />
  <Command __id="2529" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:16 EST 2023" starttimestamp="1700516585068" timestamp="20471717" />
  <Command __id="2531" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:16 EST 2023" starttimestamp="1700516585068" timestamp="20471838" />
  <Command __id="2533" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:17 EST 2023" starttimestamp="1700516585068" timestamp="20471977" />
  <Command __id="2535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:17 EST 2023" starttimestamp="1700516585068" timestamp="20472109" />
  <Command __id="2537" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:17 EST 2023" starttimestamp="1700516585068" timestamp="20472561" />
  <Command __id="2539" _type="InsertStringCommand" date="Mon Nov 20 22:24:17 EST 2023" starttimestamp="1700516585068" timestamp="20472772" timestamp2="20472772">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2540" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:24:17 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20472778" />
  <Command __id="2543" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:24:19 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20474180" />
  <Command __id="2545" _type="InsertStringCommand" date="Mon Nov 20 22:24:19 EST 2023" starttimestamp="1700516585068" timestamp="20474187" timestamp2="20474187">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2538" _type="Insert" date="Mon Nov 20 22:24:17 EST 2023" docASTNodeCount="87" docActiveCodeLength="467" docExpressionCount="67" docLength="467" length="3" offset="376" repeat="3" starttimestamp="1700516585068" timestamp="20472769" timestamp2="20473118">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="2544" _type="Replace" date="Mon Nov 20 22:24:19 EST 2023" docASTNodeCount="87" docActiveCodeLength="472" docExpressionCount="67" docLength="472" endLine="12" insertionLength="7" int_docASTNodeCount="87" int_docActiveCodeLength="465" int_docExpressionCount="67" int_docLength="465" length="2" offset="377" startLine="12" starttimestamp="1700516585068" timestamp="20474182">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2547" _type="Insert" date="Mon Nov 20 22:24:20 EST 2023" docASTNodeCount="89" docActiveCodeLength="489" docExpressionCount="67" docLength="489" length="17" offset="385" repeat="9" starttimestamp="1700516585068" timestamp="20475740" timestamp2="20476996">
    <text><![CDATA[ {
			return 
		}]]></text>
  </DocumentChange>
  <Command __id="2546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:24:20 EST 2023" starttimestamp="1700516585068" timestamp="20475526" />
  <Command __id="2548" _type="InsertStringCommand" date="Mon Nov 20 22:24:20 EST 2023" starttimestamp="1700516585068" timestamp="20475743" timestamp2="20475743">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2550" _type="InsertStringCommand" date="Mon Nov 20 22:24:20 EST 2023" starttimestamp="1700516585068" timestamp="20475908" timestamp2="20475908">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2552" _type="InsertStringCommand" date="Mon Nov 20 22:24:21 EST 2023" starttimestamp="1700516585068" timestamp="20476487" timestamp2="20476487">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2554" _type="InsertStringCommand" date="Mon Nov 20 22:24:21 EST 2023" starttimestamp="1700516585068" timestamp="20476563" timestamp2="20476563">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2556" _type="InsertStringCommand" date="Mon Nov 20 22:24:21 EST 2023" starttimestamp="1700516585068" timestamp="20476660" timestamp2="20476660">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2558" _type="InsertStringCommand" date="Mon Nov 20 22:24:21 EST 2023" starttimestamp="1700516585068" timestamp="20476739" timestamp2="20476739">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2560" _type="InsertStringCommand" date="Mon Nov 20 22:24:21 EST 2023" starttimestamp="1700516585068" timestamp="20476838" timestamp2="20476838">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2562" _type="InsertStringCommand" date="Mon Nov 20 22:24:21 EST 2023" starttimestamp="1700516585068" timestamp="20476893" timestamp2="20476893">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2564" _type="InsertStringCommand" date="Mon Nov 20 22:24:22 EST 2023" starttimestamp="1700516585068" timestamp="20476999" timestamp2="20476999">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2566" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479238" timestamp2="20479238">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2568" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479325" timestamp2="20479325">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2570" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479352" timestamp2="20479352">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2572" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479443" timestamp2="20479443">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2574" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479637" timestamp2="20479637">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="2576" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479806" timestamp2="20479806">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2578" _type="InsertStringCommand" date="Mon Nov 20 22:24:24 EST 2023" starttimestamp="1700516585068" timestamp="20479912" timestamp2="20479912">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2580" _type="InsertStringCommand" date="Mon Nov 20 22:24:25 EST 2023" starttimestamp="1700516585068" timestamp="20480273" timestamp2="20480273">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2582" _type="InsertStringCommand" date="Mon Nov 20 22:24:25 EST 2023" starttimestamp="1700516585068" timestamp="20480483" timestamp2="20480483">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2584" _type="InsertStringCommand" date="Mon Nov 20 22:24:25 EST 2023" starttimestamp="1700516585068" timestamp="20480555" timestamp2="20480555">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2586" _type="InsertStringCommand" date="Mon Nov 20 22:24:25 EST 2023" starttimestamp="1700516585068" timestamp="20480870" timestamp2="20480870">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2588" _type="InsertStringCommand" date="Mon Nov 20 22:24:26 EST 2023" starttimestamp="1700516585068" timestamp="20481188" timestamp2="20481188">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2590" _type="InsertStringCommand" date="Mon Nov 20 22:24:26 EST 2023" starttimestamp="1700516585068" timestamp="20481548" timestamp2="20481548">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2592" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:24:27 EST 2023" starttimestamp="1700516585068" timestamp="20481938" />
  <Command __id="2593" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:24:27 EST 2023" starttimestamp="1700516585068" timestamp="20482586" />
  <Command __id="2595" _type="InsertStringCommand" date="Mon Nov 20 22:24:27 EST 2023" starttimestamp="1700516585068" timestamp="20482792" timestamp2="20482792">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2596" _type="MoveCaretCommand" caretOffset="416" date="Mon Nov 20 22:24:28 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="20483800" />
  <Command __id="2597" _type="MoveCaretCommand" caretOffset="416" date="Mon Nov 20 22:24:35 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="20490165" />
  <DocumentChange __id="2565" _type="Insert" date="Mon Nov 20 22:24:24 EST 2023" docASTNodeCount="75" docActiveCodeLength="503" docExpressionCount="54" docLength="503" length="14" offset="398" repeat="13" starttimestamp="1700516585068" timestamp="20479236" timestamp2="20481544">
    <text><![CDATA[new NilAtom(;)]]></text>
  </DocumentChange>
  <DocumentChange __id="2591" _type="Delete" date="Mon Nov 20 22:24:27 EST 2023" docASTNodeCount="92" docActiveCodeLength="502" docExpressionCount="69" docLength="502" endLine="13" length="1" offset="410" startLine="13" starttimestamp="1700516585068" timestamp="20481935">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2594" _type="Insert" date="Mon Nov 20 22:24:27 EST 2023" docASTNodeCount="92" docActiveCodeLength="503" docExpressionCount="69" docLength="503" length="1" offset="411" starttimestamp="1700516585068" timestamp="20482789">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2600" _type="Replace" date="Mon Nov 20 22:24:56 EST 2023" docASTNodeCount="92" docActiveCodeLength="500" docExpressionCount="69" docLength="500" endLine="15" insertionLength="1" int_docASTNodeCount="92" int_docActiveCodeLength="499" int_docExpressionCount="69" int_docLength="499" length="4" offset="490" startLine="15" starttimestamp="1700516585068" timestamp="20511364">
    <deletedText><![CDATA[expr]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="2598" _type="MoveCaretCommand" caretOffset="492" date="Mon Nov 20 22:24:55 EST 2023" docOffset="492" starttimestamp="1700516585068" timestamp="20510492" />
  <Command __id="2599" _type="SelectTextCommand" caretOffset="494" date="Mon Nov 20 22:24:55 EST 2023" end="494" start="490" starttimestamp="1700516585068" timestamp="20510603" />
  <Command __id="2601" _type="InsertStringCommand" date="Mon Nov 20 22:24:56 EST 2023" starttimestamp="1700516585068" timestamp="20511370" timestamp2="20511370">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2603" _type="InsertStringCommand" date="Mon Nov 20 22:24:56 EST 2023" starttimestamp="1700516585068" timestamp="20511547" timestamp2="20511547">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2605" _type="InsertStringCommand" date="Mon Nov 20 22:24:56 EST 2023" starttimestamp="1700516585068" timestamp="20511652" timestamp2="20511652">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2607" _type="InsertStringCommand" date="Mon Nov 20 22:24:56 EST 2023" starttimestamp="1700516585068" timestamp="20511769" timestamp2="20511769">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2609" _type="InsertStringCommand" date="Mon Nov 20 22:24:56 EST 2023" starttimestamp="1700516585068" timestamp="20511893" timestamp2="20511893">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2610" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:24:56 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20511898" />
  <Command __id="2619" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.smartEnter" date="Mon Nov 20 22:24:59 EST 2023" starttimestamp="1700516585068" timestamp="20514217" />
  <Command __id="2620" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:24:59 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20514229" />
  <Command __id="2621" _type="MoveCaretCommand" caretOffset="502" date="Mon Nov 20 22:25:01 EST 2023" docOffset="502" starttimestamp="1700516585068" timestamp="20516151" />
  <Command __id="2623" _type="InsertStringCommand" date="Mon Nov 20 22:25:01 EST 2023" starttimestamp="1700516585068" timestamp="20516859" timestamp2="20516859">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="2602" _type="Insert" date="Mon Nov 20 22:24:56 EST 2023" docASTNodeCount="94" docActiveCodeLength="511" docExpressionCount="71" docLength="511" length="11" offset="491" repeat="11" starttimestamp="1700516585068" timestamp="20511543" timestamp2="20513751">
    <text><![CDATA[xpr.getTail]]></text>
  </DocumentChange>
  <DocumentChange __id="2618" _type="Insert" date="Mon Nov 20 22:24:59 EST 2023" docASTNodeCount="94" docActiveCodeLength="514" docExpressionCount="71" docLength="514" length="3" offset="504" starttimestamp="1700516585068" timestamp="20514213">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="2624" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:25:03 EST 2023" starttimestamp="1700516585068" timestamp="20518168" />
  <Command __id="2626" _type="InsertStringCommand" date="Mon Nov 20 22:25:03 EST 2023" starttimestamp="1700516585068" timestamp="20518450" timestamp2="20518450">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2627" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:25:03 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20518458" />
  <Command __id="2632" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:25:05 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20520244" />
  <Command __id="2634" _type="InsertStringCommand" date="Mon Nov 20 22:25:05 EST 2023" starttimestamp="1700516585068" timestamp="20520276" timestamp2="20520276">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2635" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:25:08 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20523777" />
  <Command __id="2636" _type="MoveCaretCommand" caretOffset="534" date="Mon Nov 20 22:25:08 EST 2023" docOffset="534" starttimestamp="1700516585068" timestamp="20523859" />
  <Command __id="2637" _type="MoveCaretCommand" caretOffset="527" date="Mon Nov 20 22:25:39 EST 2023" docOffset="527" starttimestamp="1700516585068" timestamp="20554403" />
  <Command __id="2638" _type="MoveCaretCommand" caretOffset="356" date="Mon Nov 20 22:25:47 EST 2023" docOffset="356" starttimestamp="1700516585068" timestamp="20562808" />
  <Command __id="2639" _type="MoveCaretCommand" caretOffset="416" date="Mon Nov 20 22:25:49 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="20564422" />
  <Command __id="2640" _type="MoveCaretCommand" caretOffset="387" date="Mon Nov 20 22:25:49 EST 2023" docOffset="387" starttimestamp="1700516585068" timestamp="20564714" />
  <Command __id="2641" _type="MoveCaretCommand" caretOffset="356" date="Mon Nov 20 22:25:50 EST 2023" docOffset="356" starttimestamp="1700516585068" timestamp="20565027" />
  <DocumentChange __id="2622" _type="Insert" date="Mon Nov 20 22:25:01 EST 2023" docASTNodeCount="96" docActiveCodeLength="521" docExpressionCount="73" docLength="521" length="7" offset="502" repeat="6" starttimestamp="1700516585068" timestamp="20516851" timestamp2="20519800">
    <text><![CDATA[().eval]]></text>
  </DocumentChange>
  <DocumentChange __id="2633" _type="Replace" date="Mon Nov 20 22:25:05 EST 2023" docASTNodeCount="97" docActiveCodeLength="534" docExpressionCount="74" docLength="534" endLine="15" insertionLength="17" int_docASTNodeCount="96" int_docActiveCodeLength="517" int_docExpressionCount="73" int_docLength="517" length="4" offset="505" startLine="15" starttimestamp="1700516585068" timestamp="20520246">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="2642" _type="MoveCaretCommand" caretOffset="530" date="Mon Nov 20 22:25:52 EST 2023" docOffset="530" starttimestamp="1700516585068" timestamp="20567097" />
  <Command __id="2644" _type="InsertStringCommand" date="Mon Nov 20 22:26:02 EST 2023" starttimestamp="1700516585068" timestamp="20577171" timestamp2="20577171">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2646" _type="InsertStringCommand" date="Mon Nov 20 22:26:02 EST 2023" starttimestamp="1700516585068" timestamp="20577890" timestamp2="20577890">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2648" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578240" timestamp2="20578240">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2650" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578369" timestamp2="20578369">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2652" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578481" timestamp2="20578481">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2654" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578562" timestamp2="20578562">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2656" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578624" timestamp2="20578624">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2658" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578728" timestamp2="20578728">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2660" _type="InsertStringCommand" date="Mon Nov 20 22:26:03 EST 2023" starttimestamp="1700516585068" timestamp="20578788" timestamp2="20578788">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2662" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579123" timestamp2="20579123">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2664" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579224" timestamp2="20579224">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2666" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579283" timestamp2="20579283">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2668" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579373" timestamp2="20579373">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2670" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579449" timestamp2="20579449">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2672" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579554" timestamp2="20579554">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2674" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579655" timestamp2="20579655">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2676" _type="InsertStringCommand" date="Mon Nov 20 22:26:04 EST 2023" starttimestamp="1700516585068" timestamp="20579872" timestamp2="20579872">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2678" _type="InsertStringCommand" date="Mon Nov 20 22:26:06 EST 2023" starttimestamp="1700516585068" timestamp="20581719" timestamp2="20581719">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2680" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583095" timestamp2="20583095">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2682" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583222" timestamp2="20583222">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2684" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583330" timestamp2="20583330">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2686" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583378" timestamp2="20583378">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2688" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583488" timestamp2="20583488">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2690" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583648" timestamp2="20583648">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="2643" _type="Insert" date="Mon Nov 20 22:26:02 EST 2023" docASTNodeCount="104" docActiveCodeLength="568" docExpressionCount="76" docLength="568" length="34" offset="530" repeat="32" starttimestamp="1700516585068" timestamp="20577167" timestamp2="20584951">
    <text><![CDATA[
	
	public static SExpression evla]]></text>
  </DocumentChange>
  <DocumentChange __id="2707" _type="Delete" date="Mon Nov 20 22:26:10 EST 2023" docASTNodeCount="104" docActiveCodeLength="565" docExpressionCount="76" docLength="565" endLine="19" length="3" offset="561" repeat="3" startLine="19" starttimestamp="1700516585068" timestamp="20585286" timestamp2="20585565">
    <text><![CDATA[vla]]></text>
  </DocumentChange>
  <DocumentChange __id="2713" _type="Insert" date="Mon Nov 20 22:26:11 EST 2023" docASTNodeCount="104" docActiveCodeLength="570" docExpressionCount="76" docLength="570" length="5" offset="561" repeat="5" starttimestamp="1700516585068" timestamp="20585987" timestamp2="20586888">
    <text><![CDATA[valHd]]></text>
  </DocumentChange>
  <DocumentChange __id="2723" _type="Delete" date="Mon Nov 20 22:26:12 EST 2023" docASTNodeCount="104" docActiveCodeLength="569" docExpressionCount="76" docLength="569" endLine="19" length="1" offset="565" startLine="19" starttimestamp="1700516585068" timestamp="20587367">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <Command __id="2692" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583755" timestamp2="20583755">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2694" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583773" timestamp2="20583773">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2696" _type="InsertStringCommand" date="Mon Nov 20 22:26:08 EST 2023" starttimestamp="1700516585068" timestamp="20583843" timestamp2="20583843">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2698" _type="InsertStringCommand" date="Mon Nov 20 22:26:09 EST 2023" starttimestamp="1700516585068" timestamp="20583961" timestamp2="20583961">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2700" _type="InsertStringCommand" date="Mon Nov 20 22:26:09 EST 2023" starttimestamp="1700516585068" timestamp="20584669" timestamp2="20584669">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2702" _type="InsertStringCommand" date="Mon Nov 20 22:26:09 EST 2023" starttimestamp="1700516585068" timestamp="20584753" timestamp2="20584753">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2704" _type="InsertStringCommand" date="Mon Nov 20 22:26:09 EST 2023" starttimestamp="1700516585068" timestamp="20584910" timestamp2="20584910">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2706" _type="InsertStringCommand" date="Mon Nov 20 22:26:10 EST 2023" starttimestamp="1700516585068" timestamp="20584953" timestamp2="20584953">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2708" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:10 EST 2023" starttimestamp="1700516585068" timestamp="20585289" />
  <Command __id="2710" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:10 EST 2023" starttimestamp="1700516585068" timestamp="20585436" />
  <Command __id="2712" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:10 EST 2023" starttimestamp="1700516585068" timestamp="20585567" />
  <Command __id="2714" _type="InsertStringCommand" date="Mon Nov 20 22:26:11 EST 2023" starttimestamp="1700516585068" timestamp="20585989" timestamp2="20585989">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2716" _type="InsertStringCommand" date="Mon Nov 20 22:26:11 EST 2023" starttimestamp="1700516585068" timestamp="20586032" timestamp2="20586032">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2718" _type="InsertStringCommand" date="Mon Nov 20 22:26:11 EST 2023" starttimestamp="1700516585068" timestamp="20586109" timestamp2="20586109">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2720" _type="InsertStringCommand" date="Mon Nov 20 22:26:11 EST 2023" starttimestamp="1700516585068" timestamp="20586541" timestamp2="20586541">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="2722" _type="InsertStringCommand" date="Mon Nov 20 22:26:11 EST 2023" starttimestamp="1700516585068" timestamp="20586890" timestamp2="20586890">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2724" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:12 EST 2023" starttimestamp="1700516585068" timestamp="20587370" />
  <Command __id="2726" _type="InsertStringCommand" date="Mon Nov 20 22:26:12 EST 2023" starttimestamp="1700516585068" timestamp="20587488" timestamp2="20587488">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2728" _type="InsertStringCommand" date="Mon Nov 20 22:26:12 EST 2023" starttimestamp="1700516585068" timestamp="20587656" timestamp2="20587656">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2730" _type="InsertStringCommand" date="Mon Nov 20 22:26:12 EST 2023" starttimestamp="1700516585068" timestamp="20587821" timestamp2="20587821">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2732" _type="InsertStringCommand" date="Mon Nov 20 22:26:12 EST 2023" starttimestamp="1700516585068" timestamp="20587907" timestamp2="20587907">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2734" _type="InsertStringCommand" date="Mon Nov 20 22:26:13 EST 2023" starttimestamp="1700516585068" timestamp="20587987" timestamp2="20587987">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2736" _type="InsertStringCommand" date="Mon Nov 20 22:26:13 EST 2023" starttimestamp="1700516585068" timestamp="20588263" timestamp2="20588263">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2738" _type="InsertStringCommand" date="Mon Nov 20 22:26:14 EST 2023" starttimestamp="1700516585068" timestamp="20589473" timestamp2="20589473">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2740" _type="InsertStringCommand" date="Mon Nov 20 22:26:14 EST 2023" starttimestamp="1700516585068" timestamp="20589712" timestamp2="20589712">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2742" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:15 EST 2023" starttimestamp="1700516585068" timestamp="20590269" />
  <Command __id="2744" _type="InsertStringCommand" date="Mon Nov 20 22:26:15 EST 2023" starttimestamp="1700516585068" timestamp="20590376" timestamp2="20590376">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2746" _type="InsertStringCommand" date="Mon Nov 20 22:26:15 EST 2023" starttimestamp="1700516585068" timestamp="20590657" timestamp2="20590657">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2748" _type="InsertStringCommand" date="Mon Nov 20 22:26:15 EST 2023" starttimestamp="1700516585068" timestamp="20590930" timestamp2="20590930">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2750" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591030" timestamp2="20591030">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2752" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591058" timestamp2="20591058">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2754" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591180" timestamp2="20591180">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2756" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591330" timestamp2="20591330">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2758" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591481" timestamp2="20591481">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2760" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591522" timestamp2="20591522">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2762" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591566" timestamp2="20591566">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2764" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591688" timestamp2="20591688">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2766" _type="InsertStringCommand" date="Mon Nov 20 22:26:16 EST 2023" starttimestamp="1700516585068" timestamp="20591746" timestamp2="20591746">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2768" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20591932" timestamp2="20591932">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2770" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20592005" timestamp2="20592005">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2772" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20592094" timestamp2="20592094">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2774" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20592225" timestamp2="20592225">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2776" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20592290" timestamp2="20592290">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2778" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20592634" timestamp2="20592634">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2780" _type="InsertStringCommand" date="Mon Nov 20 22:26:17 EST 2023" starttimestamp="1700516585068" timestamp="20592877" timestamp2="20592877">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2782" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20592991" timestamp2="20592991">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2784" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593102" timestamp2="20593102">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2786" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593171" timestamp2="20593171">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2788" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593272" timestamp2="20593272">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2790" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593338" timestamp2="20593338">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2792" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593490" timestamp2="20593490">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2794" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593578" timestamp2="20593578">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2796" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593658" timestamp2="20593658">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2798" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593697" timestamp2="20593697">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2800" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593817" timestamp2="20593817">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2802" _type="InsertStringCommand" date="Mon Nov 20 22:26:18 EST 2023" starttimestamp="1700516585068" timestamp="20593865" timestamp2="20593865">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2804" _type="InsertStringCommand" date="Mon Nov 20 22:26:19 EST 2023" starttimestamp="1700516585068" timestamp="20594044" timestamp2="20594044">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2806" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:19 EST 2023" starttimestamp="1700516585068" timestamp="20594542" />
  <Command __id="2808" _type="InsertStringCommand" date="Mon Nov 20 22:26:19 EST 2023" starttimestamp="1700516585068" timestamp="20594705" timestamp2="20594705">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2810" _type="InsertStringCommand" date="Mon Nov 20 22:26:19 EST 2023" starttimestamp="1700516585068" timestamp="20594817" timestamp2="20594817">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2812" _type="InsertStringCommand" date="Mon Nov 20 22:26:19 EST 2023" starttimestamp="1700516585068" timestamp="20594901" timestamp2="20594901">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2814" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20594990" timestamp2="20594990">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2816" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20595017" timestamp2="20595017">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2818" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20595105" timestamp2="20595105">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2820" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20595276" timestamp2="20595276">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2822" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20595348" timestamp2="20595348">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2824" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20595409" timestamp2="20595409">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2826" _type="InsertStringCommand" date="Mon Nov 20 22:26:20 EST 2023" starttimestamp="1700516585068" timestamp="20595499" timestamp2="20595499">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2827" _type="MoveCaretCommand" caretOffset="613" date="Mon Nov 20 22:26:21 EST 2023" docOffset="613" starttimestamp="1700516585068" timestamp="20596762" />
  <Command __id="2829" _type="InsertStringCommand" date="Mon Nov 20 22:26:22 EST 2023" starttimestamp="1700516585068" timestamp="20597373" timestamp2="20597373">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2831" _type="InsertStringCommand" date="Mon Nov 20 22:26:22 EST 2023" starttimestamp="1700516585068" timestamp="20597512" timestamp2="20597512">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2725" _type="Insert" date="Mon Nov 20 22:26:12 EST 2023" docASTNodeCount="104" docActiveCodeLength="578" docExpressionCount="76" docLength="578" length="9" offset="565" repeat="8" starttimestamp="1700516585068" timestamp="20587485" timestamp2="20589709">
    <text><![CDATA[elper(Se)]]></text>
  </DocumentChange>
  <DocumentChange __id="2741" _type="Delete" date="Mon Nov 20 22:26:15 EST 2023" docASTNodeCount="104" docActiveCodeLength="577" docExpressionCount="76" docLength="577" endLine="19" length="1" offset="572" startLine="19" starttimestamp="1700516585068" timestamp="20590268">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="2743" _type="Insert" date="Mon Nov 20 22:26:15 EST 2023" docASTNodeCount="112" docActiveCodeLength="608" docExpressionCount="80" docLength="608" length="31" offset="572" repeat="31" starttimestamp="1700516585068" timestamp="20590375" timestamp2="20594041">
    <text><![CDATA[Expression expr, Environment ev]]></text>
  </DocumentChange>
  <DocumentChange __id="2805" _type="Delete" date="Mon Nov 20 22:26:19 EST 2023" docASTNodeCount="112" docActiveCodeLength="607" docExpressionCount="80" docLength="607" endLine="19" length="1" offset="602" startLine="19" starttimestamp="1700516585068" timestamp="20594539">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="2807" _type="Insert" date="Mon Nov 20 22:26:19 EST 2023" docASTNodeCount="112" docActiveCodeLength="617" docExpressionCount="80" docLength="617" length="10" offset="602" repeat="10" starttimestamp="1700516585068" timestamp="20594702" timestamp2="20595497">
    <text><![CDATA[nviornment]]></text>
  </DocumentChange>
  <DocumentChange __id="2828" _type="Insert" date="Mon Nov 20 22:26:22 EST 2023" docASTNodeCount="112" docActiveCodeLength="625" docExpressionCount="80" docLength="625" length="8" offset="613" repeat="2" starttimestamp="1700516585068" timestamp="20597369" timestamp2="20597507">
    <text><![CDATA[ {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2833" _type="Delete" date="Mon Nov 20 22:26:27 EST 2023" docASTNodeCount="85" docActiveCodeLength="455" docExpressionCount="58" docLength="455" endLine="16" length="170" offset="357" startLine="12" starttimestamp="1700516585068" timestamp="20602802">
    <text><![CDATA[		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail().eval(environment));
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2836" _type="Replace" date="Mon Nov 20 22:26:28 EST 2023" docASTNodeCount="112" docActiveCodeLength="623" docExpressionCount="80" docLength="623" endLine="16" insertionLength="170" int_docASTNodeCount="85" int_docActiveCodeLength="453" int_docExpressionCount="58" int_docLength="453" length="2" offset="446" startLine="16" starttimestamp="1700516585068" timestamp="20603470">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail().eval(environment));
		]]></insertedText>
  </DocumentChange>
  <Command __id="2832" _type="SelectTextCommand" caretOffset="357" date="Mon Nov 20 22:26:27 EST 2023" end="527" start="357" starttimestamp="1700516585068" timestamp="20602543" />
  <Command __id="2834" _type="CutCommand" date="Mon Nov 20 22:26:27 EST 2023" starttimestamp="1700516585068" timestamp="20602809" />
  <Command __id="2835" _type="MoveCaretCommand" caretOffset="448" date="Mon Nov 20 22:26:28 EST 2023" docOffset="448" starttimestamp="1700516585068" timestamp="20603370" />
  <Command __id="2837" _type="PasteCommand" date="Mon Nov 20 22:26:28 EST 2023" starttimestamp="1700516585068" timestamp="20603475" />
  <Command __id="2838" _type="MoveCaretCommand" caretOffset="314" date="Mon Nov 20 22:26:29 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="20603962" />
  <Command __id="2839" _type="MoveCaretCommand" caretOffset="360" date="Mon Nov 20 22:26:29 EST 2023" docOffset="360" starttimestamp="1700516585068" timestamp="20604275" />
  <Command __id="2840" _type="MoveCaretCommand" caretOffset="357" date="Mon Nov 20 22:26:29 EST 2023" docOffset="357" starttimestamp="1700516585068" timestamp="20604616" />
  <Command __id="2842" _type="InsertStringCommand" date="Mon Nov 20 22:26:30 EST 2023" starttimestamp="1700516585068" timestamp="20605139" timestamp2="20605139">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2844" _type="InsertStringCommand" date="Mon Nov 20 22:26:31 EST 2023" starttimestamp="1700516585068" timestamp="20606435" timestamp2="20606435">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2846" _type="InsertStringCommand" date="Mon Nov 20 22:26:31 EST 2023" starttimestamp="1700516585068" timestamp="20606612" timestamp2="20606612">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2848" _type="InsertStringCommand" date="Mon Nov 20 22:26:31 EST 2023" starttimestamp="1700516585068" timestamp="20606691" timestamp2="20606691">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2850" _type="InsertStringCommand" date="Mon Nov 20 22:26:31 EST 2023" starttimestamp="1700516585068" timestamp="20606737" timestamp2="20606737">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2852" _type="InsertStringCommand" date="Mon Nov 20 22:26:32 EST 2023" starttimestamp="1700516585068" timestamp="20607034" timestamp2="20607034">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="2854" _type="InsertStringCommand" date="Mon Nov 20 22:26:32 EST 2023" starttimestamp="1700516585068" timestamp="20607169" timestamp2="20607169">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2856" _type="InsertStringCommand" date="Mon Nov 20 22:26:32 EST 2023" starttimestamp="1700516585068" timestamp="20607232" timestamp2="20607232">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2858" _type="InsertStringCommand" date="Mon Nov 20 22:26:32 EST 2023" starttimestamp="1700516585068" timestamp="20607392" timestamp2="20607392">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2860" _type="InsertStringCommand" date="Mon Nov 20 22:26:32 EST 2023" starttimestamp="1700516585068" timestamp="20607769" timestamp2="20607769">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2862" _type="InsertStringCommand" date="Mon Nov 20 22:26:32 EST 2023" starttimestamp="1700516585068" timestamp="20607861" timestamp2="20607861">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2864" _type="InsertStringCommand" date="Mon Nov 20 22:26:33 EST 2023" starttimestamp="1700516585068" timestamp="20607976" timestamp2="20607976">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2866" _type="InsertStringCommand" date="Mon Nov 20 22:26:34 EST 2023" starttimestamp="1700516585068" timestamp="20609272" timestamp2="20609272">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2868" _type="InsertStringCommand" date="Mon Nov 20 22:26:34 EST 2023" starttimestamp="1700516585068" timestamp="20609479" timestamp2="20609479">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2870" _type="InsertStringCommand" date="Mon Nov 20 22:26:34 EST 2023" starttimestamp="1700516585068" timestamp="20609554" timestamp2="20609554">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2872" _type="InsertStringCommand" date="Mon Nov 20 22:26:34 EST 2023" starttimestamp="1700516585068" timestamp="20609643" timestamp2="20609643">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2874" _type="InsertStringCommand" date="Mon Nov 20 22:26:34 EST 2023" starttimestamp="1700516585068" timestamp="20609761" timestamp2="20609761">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2876" _type="InsertStringCommand" date="Mon Nov 20 22:26:34 EST 2023" starttimestamp="1700516585068" timestamp="20609810" timestamp2="20609810">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2878" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610259" timestamp2="20610259">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2880" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610393" timestamp2="20610393">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2882" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610500" timestamp2="20610500">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2884" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610601" timestamp2="20610601">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2886" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610677" timestamp2="20610677">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2888" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610739" timestamp2="20610739">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2890" _type="InsertStringCommand" date="Mon Nov 20 22:26:35 EST 2023" starttimestamp="1700516585068" timestamp="20610799" timestamp2="20610799">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2892" _type="InsertStringCommand" date="Mon Nov 20 22:26:36 EST 2023" starttimestamp="1700516585068" timestamp="20610962" timestamp2="20610962">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2894" _type="InsertStringCommand" date="Mon Nov 20 22:26:36 EST 2023" starttimestamp="1700516585068" timestamp="20611054" timestamp2="20611054">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2896" _type="InsertStringCommand" date="Mon Nov 20 22:26:36 EST 2023" starttimestamp="1700516585068" timestamp="20611116" timestamp2="20611116">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2898" _type="InsertStringCommand" date="Mon Nov 20 22:26:36 EST 2023" starttimestamp="1700516585068" timestamp="20611214" timestamp2="20611214">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2900" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612062" />
  <Command __id="2902" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612177" />
  <Command __id="2904" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612280" />
  <Command __id="2906" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612428" />
  <Command __id="2908" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612583" />
  <Command __id="2910" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612701" />
  <Command __id="2912" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:26:37 EST 2023" starttimestamp="1700516585068" timestamp="20612867" />
  <Command __id="2914" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613095" timestamp2="20613095">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2916" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613344" timestamp2="20613344">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2918" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613442" timestamp2="20613442">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2920" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613602" timestamp2="20613602">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2922" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613723" timestamp2="20613723">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2924" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613751" timestamp2="20613751">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2926" _type="InsertStringCommand" date="Mon Nov 20 22:26:38 EST 2023" starttimestamp="1700516585068" timestamp="20613872" timestamp2="20613872">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2927" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:26:39 EST 2023" starttimestamp="1700516585068" timestamp="20614678" />
  <Command __id="2929" _type="InsertStringCommand" date="Mon Nov 20 22:26:39 EST 2023" starttimestamp="1700516585068" timestamp="20614877" timestamp2="20614877">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2930" _type="MoveCaretCommand" caretOffset="360" date="Mon Nov 20 22:26:40 EST 2023" docOffset="360" starttimestamp="1700516585068" timestamp="20615897" />
  <Command __id="2931" _type="MoveCaretCommand" caretOffset="359" date="Mon Nov 20 22:26:41 EST 2023" docOffset="359" starttimestamp="1700516585068" timestamp="20616165" />
  <Command __id="2933" _type="InsertStringCommand" date="Mon Nov 20 22:26:41 EST 2023" starttimestamp="1700516585068" timestamp="20616636" timestamp2="20616636">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2935" _type="InsertStringCommand" date="Mon Nov 20 22:26:41 EST 2023" starttimestamp="1700516585068" timestamp="20616709" timestamp2="20616709">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2937" _type="InsertStringCommand" date="Mon Nov 20 22:26:41 EST 2023" starttimestamp="1700516585068" timestamp="20616832" timestamp2="20616832">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2939" _type="InsertStringCommand" date="Mon Nov 20 22:26:41 EST 2023" starttimestamp="1700516585068" timestamp="20616929" timestamp2="20616929">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2941" _type="InsertStringCommand" date="Mon Nov 20 22:26:42 EST 2023" starttimestamp="1700516585068" timestamp="20617053" timestamp2="20617053">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2943" _type="InsertStringCommand" date="Mon Nov 20 22:26:42 EST 2023" starttimestamp="1700516585068" timestamp="20617097" timestamp2="20617097">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2945" _type="InsertStringCommand" date="Mon Nov 20 22:26:42 EST 2023" starttimestamp="1700516585068" timestamp="20617203" timestamp2="20617203">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2946" _type="MoveCaretCommand" caretOffset="564" date="Mon Nov 20 22:26:42 EST 2023" docOffset="564" starttimestamp="1700516585068" timestamp="20617886" />
  <Command __id="2947" _type="MoveCaretCommand" caretOffset="544" date="Mon Nov 20 22:26:43 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="20618836" />
  <Command __id="2948" _type="MoveCaretCommand" caretOffset="515" date="Mon Nov 20 22:26:44 EST 2023" docOffset="515" starttimestamp="1700516585068" timestamp="20619086" />
  <Command __id="2949" _type="MoveCaretCommand" caretOffset="540" date="Mon Nov 20 22:26:44 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="20619434" />
  <Command __id="2950" _type="MoveCaretCommand" caretOffset="544" date="Mon Nov 20 22:26:44 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="20619650" />
  <Command __id="2951" _type="MoveCaretCommand" caretOffset="540" date="Mon Nov 20 22:26:45 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="20620104" />
  <Command __id="2952" _type="MoveCaretCommand" caretOffset="515" date="Mon Nov 20 22:26:45 EST 2023" docOffset="515" starttimestamp="1700516585068" timestamp="20620274" />
  <Command __id="2953" _type="MoveCaretCommand" caretOffset="540" date="Mon Nov 20 22:26:45 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="20620514" />
  <Command __id="2954" _type="MoveCaretCommand" caretOffset="602" date="Mon Nov 20 22:26:48 EST 2023" docOffset="602" starttimestamp="1700516585068" timestamp="20623244" />
  <Command __id="2955" _type="SelectTextCommand" caretOffset="603" date="Mon Nov 20 22:26:48 EST 2023" end="603" start="599" starttimestamp="1700516585068" timestamp="20623400" />
  <Command __id="2956" _type="MoveCaretCommand" caretOffset="476" date="Mon Nov 20 22:26:52 EST 2023" docOffset="476" starttimestamp="1700516585068" timestamp="20627416" />
  <Command __id="2957" _type="SelectTextCommand" caretOffset="481" date="Mon Nov 20 22:26:52 EST 2023" end="481" start="470" starttimestamp="1700516585068" timestamp="20627592" />
  <Command __id="2958" _type="CopyCommand" date="Mon Nov 20 22:26:52 EST 2023" starttimestamp="1700516585068" timestamp="20627878" />
  <Command __id="2959" _type="MoveCaretCommand" caretOffset="611" date="Mon Nov 20 22:26:53 EST 2023" docOffset="611" starttimestamp="1700516585068" timestamp="20628113" />
  <Command __id="2960" _type="SelectTextCommand" caretOffset="615" date="Mon Nov 20 22:26:53 EST 2023" end="615" start="604" starttimestamp="1700516585068" timestamp="20628248" />
  <Command __id="2962" _type="PasteCommand" date="Mon Nov 20 22:26:53 EST 2023" starttimestamp="1700516585068" timestamp="20628340" />
  <Command __id="2963" _type="SelectTextCommand" caretOffset="474" date="Mon Nov 20 22:26:55 EST 2023" end="476" start="474" starttimestamp="1700516585068" timestamp="20629971" />
  <Command __id="2965" _type="InsertStringCommand" date="Mon Nov 20 22:26:56 EST 2023" starttimestamp="1700516585068" timestamp="20630934" timestamp2="20630934">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2967" _type="InsertStringCommand" date="Mon Nov 20 22:26:56 EST 2023" starttimestamp="1700516585068" timestamp="20630985" timestamp2="20630985">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2968" _type="MoveCaretCommand" caretOffset="477" date="Mon Nov 20 22:26:56 EST 2023" docOffset="477" starttimestamp="1700516585068" timestamp="20631917" />
  <Command __id="2969" _type="SelectTextCommand" caretOffset="481" date="Mon Nov 20 22:26:57 EST 2023" end="481" start="470" starttimestamp="1700516585068" timestamp="20632048" />
  <Command __id="2970" _type="CopyCommand" date="Mon Nov 20 22:26:57 EST 2023" starttimestamp="1700516585068" timestamp="20632128" />
  <Command __id="2971" _type="MoveCaretCommand" caretOffset="544" date="Mon Nov 20 22:26:57 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="20632385" />
  <Command __id="2972" _type="MoveCaretCommand" caretOffset="610" date="Mon Nov 20 22:26:57 EST 2023" docOffset="610" starttimestamp="1700516585068" timestamp="20632692" />
  <Command __id="2973" _type="SelectTextCommand" caretOffset="615" date="Mon Nov 20 22:26:57 EST 2023" end="615" start="604" starttimestamp="1700516585068" timestamp="20632818" />
  <Command __id="2975" _type="PasteCommand" date="Mon Nov 20 22:26:57 EST 2023" starttimestamp="1700516585068" timestamp="20632857" />
  <Command __id="2976" _type="MoveCaretCommand" caretOffset="544" date="Mon Nov 20 22:26:58 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="20633059" />
  <DocumentChange __id="2841" _type="Insert" date="Mon Nov 20 22:26:30 EST 2023" docASTNodeCount="117" docActiveCodeLength="654" docExpressionCount="84" docLength="654" length="31" offset="357" repeat="29" starttimestamp="1700516585068" timestamp="20605136" timestamp2="20611212">
    <text><![CDATA[		evalHelper(expr, enviornment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2899" _type="Delete" date="Mon Nov 20 22:26:37 EST 2023" docASTNodeCount="117" docActiveCodeLength="647" docExpressionCount="84" docLength="647" endLine="12" length="7" offset="380" repeat="7" startLine="12" starttimestamp="1700516585068" timestamp="20612059" timestamp2="20612865">
    <text><![CDATA[ornment]]></text>
  </DocumentChange>
  <DocumentChange __id="2913" _type="Insert" date="Mon Nov 20 22:26:38 EST 2023" docASTNodeCount="117" docActiveCodeLength="654" docExpressionCount="84" docLength="654" length="7" offset="380" repeat="7" starttimestamp="1700516585068" timestamp="20613093" timestamp2="20613870">
    <text><![CDATA[ronment]]></text>
  </DocumentChange>
  <DocumentChange __id="2928" _type="Insert" date="Mon Nov 20 22:26:39 EST 2023" docASTNodeCount="117" docActiveCodeLength="655" docExpressionCount="84" docLength="655" length="1" offset="388" starttimestamp="1700516585068" timestamp="20614874">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2932" _type="Insert" date="Mon Nov 20 22:26:41 EST 2023" docASTNodeCount="117" docActiveCodeLength="662" docExpressionCount="84" docLength="662" length="7" offset="359" repeat="7" starttimestamp="1700516585068" timestamp="20616632" timestamp2="20617200">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <DocumentChange __id="2961" _type="Replace" date="Mon Nov 20 22:26:53 EST 2023" docASTNodeCount="117" docActiveCodeLength="662" docExpressionCount="84" docLength="662" endLine="19" insertionLength="11" int_docASTNodeCount="116" int_docActiveCodeLength="651" int_docExpressionCount="83" int_docLength="651" length="11" offset="604" startLine="19" starttimestamp="1700516585068" timestamp="20628336">
    <deletedText><![CDATA[environment]]></deletedText>
    <insertedText><![CDATA[enviornment]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2964" _type="Replace" date="Mon Nov 20 22:26:55 EST 2023" docASTNodeCount="117" docActiveCodeLength="661" docExpressionCount="84" docLength="661" endLine="15" insertionLength="1" int_docASTNodeCount="117" int_docActiveCodeLength="660" int_docExpressionCount="84" int_docLength="660" length="2" offset="474" startLine="15" starttimestamp="1700516585068" timestamp="20630929">
    <deletedText><![CDATA[or]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2966" _type="Insert" date="Mon Nov 20 22:26:56 EST 2023" docASTNodeCount="117" docActiveCodeLength="662" docExpressionCount="84" docLength="662" length="1" offset="475" starttimestamp="1700516585068" timestamp="20630982">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="2974" _type="Replace" date="Mon Nov 20 22:26:57 EST 2023" docASTNodeCount="117" docActiveCodeLength="662" docExpressionCount="84" docLength="662" endLine="19" insertionLength="11" int_docASTNodeCount="116" int_docActiveCodeLength="651" int_docExpressionCount="83" int_docLength="651" length="11" offset="604" startLine="19" starttimestamp="1700516585068" timestamp="20632853">
    <deletedText><![CDATA[enviornment]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <Command __id="2977" _type="SelectTextCommand" caretOffset="650" date="Mon Nov 20 22:27:04 EST 2023" end="650" start="618" starttimestamp="1700516585068" timestamp="20639865" />
  <DocumentChange __id="2978" _type="Replace" date="Mon Nov 20 22:27:11 EST 2023" docASTNodeCount="112" docActiveCodeLength="631" docExpressionCount="79" docLength="631" endLine="19" insertionLength="1" int_docASTNodeCount="112" int_docActiveCodeLength="630" int_docExpressionCount="79" int_docLength="630" length="32" offset="618" startLine="19" starttimestamp="1700516585068" timestamp="20646463">
    <deletedText><![CDATA[expr.getTail().eval(environment)]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="2979" _type="InsertStringCommand" date="Mon Nov 20 22:27:11 EST 2023" starttimestamp="1700516585068" timestamp="20646467" timestamp2="20646467">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="2980" _type="Insert" date="Mon Nov 20 22:27:11 EST 2023" docASTNodeCount="116" docActiveCodeLength="651" docExpressionCount="83" docLength="651" length="20" offset="619" repeat="19" starttimestamp="1700516585068" timestamp="20646691" timestamp2="20652031">
    <text><![CDATA[valHelper(expr.getH)]]></text>
  </DocumentChange>
  <Command __id="2981" _type="InsertStringCommand" date="Mon Nov 20 22:27:11 EST 2023" starttimestamp="1700516585068" timestamp="20646694" timestamp2="20646694">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2983" _type="InsertStringCommand" date="Mon Nov 20 22:27:11 EST 2023" starttimestamp="1700516585068" timestamp="20646786" timestamp2="20646786">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2985" _type="InsertStringCommand" date="Mon Nov 20 22:27:11 EST 2023" starttimestamp="1700516585068" timestamp="20646859" timestamp2="20646859">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2987" _type="InsertStringCommand" date="Mon Nov 20 22:27:12 EST 2023" starttimestamp="1700516585068" timestamp="20647322" timestamp2="20647322">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="2989" _type="InsertStringCommand" date="Mon Nov 20 22:27:13 EST 2023" starttimestamp="1700516585068" timestamp="20648045" timestamp2="20648045">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2991" _type="InsertStringCommand" date="Mon Nov 20 22:27:13 EST 2023" starttimestamp="1700516585068" timestamp="20648290" timestamp2="20648290">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2993" _type="InsertStringCommand" date="Mon Nov 20 22:27:13 EST 2023" starttimestamp="1700516585068" timestamp="20648523" timestamp2="20648523">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2995" _type="InsertStringCommand" date="Mon Nov 20 22:27:13 EST 2023" starttimestamp="1700516585068" timestamp="20648688" timestamp2="20648688">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2997" _type="InsertStringCommand" date="Mon Nov 20 22:27:13 EST 2023" starttimestamp="1700516585068" timestamp="20648779" timestamp2="20648779">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2999" _type="InsertStringCommand" date="Mon Nov 20 22:27:14 EST 2023" starttimestamp="1700516585068" timestamp="20648961" timestamp2="20648961">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3001" _type="InsertStringCommand" date="Mon Nov 20 22:27:15 EST 2023" starttimestamp="1700516585068" timestamp="20650386" timestamp2="20650386">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3003" _type="InsertStringCommand" date="Mon Nov 20 22:27:15 EST 2023" starttimestamp="1700516585068" timestamp="20650577" timestamp2="20650577">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3005" _type="InsertStringCommand" date="Mon Nov 20 22:27:15 EST 2023" starttimestamp="1700516585068" timestamp="20650695" timestamp2="20650695">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3007" _type="InsertStringCommand" date="Mon Nov 20 22:27:15 EST 2023" starttimestamp="1700516585068" timestamp="20650804" timestamp2="20650804">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3009" _type="InsertStringCommand" date="Mon Nov 20 22:27:15 EST 2023" starttimestamp="1700516585068" timestamp="20650910" timestamp2="20650910">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3010" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:27:15 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20650916" />
  <DocumentChange __id="3015" _type="Delete" date="Mon Nov 20 22:27:17 EST 2023" docASTNodeCount="116" docActiveCodeLength="650" docExpressionCount="83" docLength="650" endLine="19" length="1" offset="637" startLine="19" starttimestamp="1700516585068" timestamp="20652298">
    <text><![CDATA[H]]></text>
  </DocumentChange>
  <DocumentChange __id="3016" _type="Insert" date="Mon Nov 20 22:27:17 EST 2023" docASTNodeCount="116" docActiveCodeLength="651" docExpressionCount="83" docLength="651" length="1" offset="637" starttimestamp="1700516585068" timestamp="20652370">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <Command __id="3017" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:27:17 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20652750" />
  <DocumentChange __id="3018" _type="Replace" date="Mon Nov 20 22:27:17 EST 2023" docASTNodeCount="116" docActiveCodeLength="657" docExpressionCount="83" docLength="657" endLine="19" insertionLength="9" int_docASTNodeCount="116" int_docActiveCodeLength="648" int_docExpressionCount="83" int_docLength="648" length="3" offset="634" startLine="19" starttimestamp="1700516585068" timestamp="20652753">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="3019" _type="InsertStringCommand" date="Mon Nov 20 22:27:17 EST 2023" starttimestamp="1700516585068" timestamp="20652766" timestamp2="20652766">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3021" _type="InsertStringCommand" date="Mon Nov 20 22:27:18 EST 2023" starttimestamp="1700516585068" timestamp="20653023" timestamp2="20653023">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3023" _type="InsertStringCommand" date="Mon Nov 20 22:27:19 EST 2023" starttimestamp="1700516585068" timestamp="20654735" timestamp2="20654735">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3024" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 22:27:20 EST 2023" starttimestamp="1700516585068" timestamp="20655137" />
  <Command __id="3025" _type="SelectTextCommand" caretOffset="644" date="Mon Nov 20 22:27:22 EST 2023" end="646" start="644" starttimestamp="1700516585068" timestamp="20656946" />
  <Command __id="3026" _type="MoveCaretCommand" caretOffset="480" date="Mon Nov 20 22:27:22 EST 2023" docOffset="480" starttimestamp="1700516585068" timestamp="20657388" />
  <Command __id="3027" _type="SelectTextCommand" caretOffset="481" date="Mon Nov 20 22:27:22 EST 2023" end="481" start="470" starttimestamp="1700516585068" timestamp="20657516" />
  <Command __id="3028" _type="CopyCommand" date="Mon Nov 20 22:27:22 EST 2023" starttimestamp="1700516585068" timestamp="20657597" />
  <Command __id="3029" _type="SelectTextCommand" caretOffset="646" date="Mon Nov 20 22:27:23 EST 2023" end="646" start="645" starttimestamp="1700516585068" timestamp="20658581" />
  <Command __id="3031" _type="PasteCommand" date="Mon Nov 20 22:27:23 EST 2023" starttimestamp="1700516585068" timestamp="20658694" />
  <Command __id="3032" _type="MoveCaretCommand" caretOffset="540" date="Mon Nov 20 22:27:23 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="20658866" />
  <Command __id="3033" _type="MoveCaretCommand" caretOffset="669" date="Mon Nov 20 22:27:25 EST 2023" docOffset="669" starttimestamp="1700516585068" timestamp="20660288" />
  <Command __id="3034" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:27:25 EST 2023" starttimestamp="1700516585068" timestamp="20660426" />
  <Command __id="3035" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:27:25 EST 2023" starttimestamp="1700516585068" timestamp="20660526" />
  <Command __id="3036" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:27:25 EST 2023" starttimestamp="1700516585068" timestamp="20660533" />
  <DocumentChange __id="3020" _type="Insert" date="Mon Nov 20 22:27:18 EST 2023" docASTNodeCount="117" docActiveCodeLength="659" docExpressionCount="84" docLength="659" length="2" offset="643" repeat="2" starttimestamp="1700516585068" timestamp="20653019" timestamp2="20654731">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <DocumentChange __id="3030" _type="Replace" date="Mon Nov 20 22:27:23 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" endLine="19" insertionLength="11" int_docASTNodeCount="117" int_docActiveCodeLength="658" int_docExpressionCount="84" int_docLength="658" length="1" offset="645" startLine="19" starttimestamp="1700516585068" timestamp="20658691">
    <deletedText><![CDATA[T]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <Command __id="3044" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:29 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20664888">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3046" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:32 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20667788">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class listEvaluator {"), Diff(INSERT,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class listEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;

public class listEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="3048" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:33 EST 2023" docASTNodeCount="50" docActiveCodeLength="411" docExpressionCount="31" docLength="411" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20668153">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3050" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:38 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20673715">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3037" _type="MoveCaretCommand" caretOffset="268" date="Mon Nov 20 22:27:28 EST 2023" docOffset="268" starttimestamp="1700516585068" timestamp="20663353" />
  <Command __id="3038" _type="SelectTextCommand" caretOffset="273" date="Mon Nov 20 22:27:28 EST 2023" end="273" start="264" starttimestamp="1700516585068" timestamp="20663497" />
  <Command __id="3039" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 22:27:28 EST 2023" docOffset="275" starttimestamp="1700516585068" timestamp="20663873" />
  <Command __id="3040" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 22:27:29 EST 2023" docOffset="275" starttimestamp="1700516585068" timestamp="20664026" />
  <Command __id="3041" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 22:27:29 EST 2023" docOffset="248" starttimestamp="1700516585068" timestamp="20664280" />
  <Command __id="3042" _type="SelectTextCommand" caretOffset="252" date="Mon Nov 20 22:27:29 EST 2023" end="252" start="239" starttimestamp="1700516585068" timestamp="20664403" />
  <Command __id="3043" _type="CopyCommand" date="Mon Nov 20 22:27:29 EST 2023" starttimestamp="1700516585068" timestamp="20664526" />
  <Command __id="3045" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 22:27:29 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="20664928" />
  <Command __id="3047" _type="SelectTextCommand" caretOffset="252" date="Mon Nov 20 22:27:32 EST 2023" end="252" start="239" starttimestamp="1700516585068" timestamp="20667864" />
  <Command __id="3049" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 22:27:33 EST 2023" docOffset="333" starttimestamp="1700516585068" timestamp="20668195" />
  <Command __id="3051" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:27:38 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="20673762" />
  <Command __id="3053" _type="SelectTextCommand" caretOffset="252" date="Mon Nov 20 22:27:40 EST 2023" end="252" start="239" starttimestamp="1700516585068" timestamp="20675899" />
  <Command __id="3055" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 22:27:41 EST 2023" docOffset="333" starttimestamp="1700516585068" timestamp="20676276" />
  <Command __id="3056" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 22:27:43 EST 2023" docOffset="330" starttimestamp="1700516585068" timestamp="20678183" />
  <Command __id="3058" _type="InsertStringCommand" date="Mon Nov 20 22:27:43 EST 2023" starttimestamp="1700516585068" timestamp="20678686" timestamp2="20678686">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3052" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:40 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20675848">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class listEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3054" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:41 EST 2023" docASTNodeCount="50" docActiveCodeLength="411" docExpressionCount="31" docLength="411" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20676232">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3057" _type="Insert" date="Mon Nov 20 22:27:43 EST 2023" docASTNodeCount="50" docActiveCodeLength="414" docExpressionCount="31" docLength="414" length="3" offset="330" starttimestamp="1700516585068" timestamp="20678682">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3061" _type="Replace" date="Mon Nov 20 22:27:45 EST 2023" docASTNodeCount="60" docActiveCodeLength="507" docExpressionCount="39" docLength="507" endLine="9" insertionLength="95" int_docASTNodeCount="50" int_docActiveCodeLength="412" int_docExpressionCount="31" int_docLength="412" length="2" offset="331" startLine="9" starttimestamp="1700516585068" timestamp="20680922">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3065" _type="Replace" date="Mon Nov 20 22:27:47 EST 2023" docASTNodeCount="60" docActiveCodeLength="494" docExpressionCount="39" docLength="494" endLine="9" insertionLength="1" int_docASTNodeCount="50" int_docActiveCodeLength="493" int_docExpressionCount="31" int_docLength="493" length="14" offset="408" startLine="9" starttimestamp="1700516585068" timestamp="20682644">
    <deletedText><![CDATA[quoteEvaluator]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3067" _type="Insert" date="Mon Nov 20 22:27:47 EST 2023" docASTNodeCount="60" docActiveCodeLength="506" docExpressionCount="39" docLength="506" length="12" offset="409" repeat="12" starttimestamp="1700516585068" timestamp="20682748" timestamp2="20684441">
    <text><![CDATA[istEvaluator]]></text>
  </DocumentChange>
  <Command __id="3059" _type="SelectTextCommand" caretOffset="237" date="Mon Nov 20 22:27:45 EST 2023" end="330" start="237" starttimestamp="1700516585068" timestamp="20680505" />
  <Command __id="3060" _type="CopyCommand" date="Mon Nov 20 22:27:45 EST 2023" starttimestamp="1700516585068" timestamp="20680622" />
  <Command __id="3062" _type="PasteCommand" date="Mon Nov 20 22:27:45 EST 2023" starttimestamp="1700516585068" timestamp="20680924" />
  <Command __id="3063" _type="SelectTextCommand" caretOffset="415" date="Mon Nov 20 22:27:46 EST 2023" end="415" start="414" starttimestamp="1700516585068" timestamp="20681626" />
  <Command __id="3064" _type="SelectTextCommand" caretOffset="422" date="Mon Nov 20 22:27:46 EST 2023" end="422" start="408" starttimestamp="1700516585068" timestamp="20681786" />
  <Command __id="3066" _type="InsertStringCommand" date="Mon Nov 20 22:27:47 EST 2023" starttimestamp="1700516585068" timestamp="20682650" timestamp2="20682650">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3068" _type="InsertStringCommand" date="Mon Nov 20 22:27:47 EST 2023" starttimestamp="1700516585068" timestamp="20682751" timestamp2="20682751">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3070" _type="InsertStringCommand" date="Mon Nov 20 22:27:47 EST 2023" starttimestamp="1700516585068" timestamp="20682762" timestamp2="20682762">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3072" _type="InsertStringCommand" date="Mon Nov 20 22:27:47 EST 2023" starttimestamp="1700516585068" timestamp="20682881" timestamp2="20682881">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3074" _type="InsertStringCommand" date="Mon Nov 20 22:27:48 EST 2023" starttimestamp="1700516585068" timestamp="20683327" timestamp2="20683327">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3076" _type="InsertStringCommand" date="Mon Nov 20 22:27:48 EST 2023" starttimestamp="1700516585068" timestamp="20683675" timestamp2="20683675">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3078" _type="InsertStringCommand" date="Mon Nov 20 22:27:48 EST 2023" starttimestamp="1700516585068" timestamp="20683745" timestamp2="20683745">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3080" _type="InsertStringCommand" date="Mon Nov 20 22:27:48 EST 2023" starttimestamp="1700516585068" timestamp="20683885" timestamp2="20683885">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3082" _type="InsertStringCommand" date="Mon Nov 20 22:27:49 EST 2023" starttimestamp="1700516585068" timestamp="20683980" timestamp2="20683980">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3084" _type="InsertStringCommand" date="Mon Nov 20 22:27:49 EST 2023" starttimestamp="1700516585068" timestamp="20684112" timestamp2="20684112">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3086" _type="InsertStringCommand" date="Mon Nov 20 22:27:49 EST 2023" starttimestamp="1700516585068" timestamp="20684265" timestamp2="20684265">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3088" _type="InsertStringCommand" date="Mon Nov 20 22:27:49 EST 2023" starttimestamp="1700516585068" timestamp="20684367" timestamp2="20684367">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3090" _type="InsertStringCommand" date="Mon Nov 20 22:27:49 EST 2023" starttimestamp="1700516585068" timestamp="20684445" timestamp2="20684445">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3091" _type="MoveCaretCommand" caretOffset="398" date="Mon Nov 20 22:27:50 EST 2023" docOffset="398" starttimestamp="1700516585068" timestamp="20685294" />
  <Command __id="3092" _type="SelectTextCommand" caretOffset="401" date="Mon Nov 20 22:27:50 EST 2023" end="401" start="396" starttimestamp="1700516585068" timestamp="20685429" />
  <Command __id="3094" _type="InsertStringCommand" date="Mon Nov 20 22:27:51 EST 2023" starttimestamp="1700516585068" timestamp="20686472" timestamp2="20686472">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3096" _type="InsertStringCommand" date="Mon Nov 20 22:27:51 EST 2023" starttimestamp="1700516585068" timestamp="20686571" timestamp2="20686571">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3098" _type="InsertStringCommand" date="Mon Nov 20 22:27:51 EST 2023" starttimestamp="1700516585068" timestamp="20686590" timestamp2="20686590">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3100" _type="InsertStringCommand" date="Mon Nov 20 22:27:51 EST 2023" starttimestamp="1700516585068" timestamp="20686628" timestamp2="20686628">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3101" _type="MoveCaretCommand" caretOffset="234" date="Mon Nov 20 22:27:52 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="20687264" />
  <Command __id="3102" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:27:53 EST 2023" starttimestamp="1700516585068" timestamp="20688083" />
  <Command __id="3103" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:27:53 EST 2023" starttimestamp="1700516585068" timestamp="20688184" />
  <Command __id="3104" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:27:53 EST 2023" starttimestamp="1700516585068" timestamp="20688191" />
  <DocumentChange __id="3093" _type="Replace" date="Mon Nov 20 22:27:51 EST 2023" docASTNodeCount="60" docActiveCodeLength="502" docExpressionCount="39" docLength="502" endLine="9" insertionLength="1" int_docASTNodeCount="60" int_docActiveCodeLength="501" int_docExpressionCount="39" int_docLength="501" length="5" offset="396" startLine="9" starttimestamp="1700516585068" timestamp="20686467">
    <deletedText><![CDATA[quote]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3095" _type="Insert" date="Mon Nov 20 22:27:51 EST 2023" docASTNodeCount="60" docActiveCodeLength="505" docExpressionCount="39" docLength="505" length="3" offset="397" repeat="3" starttimestamp="1700516585068" timestamp="20686568" timestamp2="20686626">
    <text><![CDATA[ist]]></text>
  </DocumentChange>
  <Command __id="3109" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:56 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20691870">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3111" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:58 EST 2023" docASTNodeCount="60" docActiveCodeLength="505" docExpressionCount="39" docLength="505" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20693541">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());	"), Diff(INSERT,"	BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new listEvaluator());	"), Diff(EQUAL,"}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new quoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new listEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3112" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:58 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20693590">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3115" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:27:59 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20694271">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3105" _type="MoveCaretCommand" caretOffset="413" date="Mon Nov 20 22:27:55 EST 2023" docOffset="413" starttimestamp="1700516585068" timestamp="20690376" />
  <Command __id="3106" _type="SelectTextCommand" caretOffset="420" date="Mon Nov 20 22:27:55 EST 2023" end="420" start="407" starttimestamp="1700516585068" timestamp="20690528" />
  <Command __id="3107" _type="CopyCommand" date="Mon Nov 20 22:27:55 EST 2023" starttimestamp="1700516585068" timestamp="20690705" />
  <Command __id="3108" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 22:27:56 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="20691349" />
  <Command __id="3110" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 22:27:56 EST 2023" docOffset="631" starttimestamp="1700516585068" timestamp="20691926" />
  <Command __id="3113" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 22:27:58 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="20693622" />
  <Command __id="3114" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 22:27:58 EST 2023" docOffset="631" starttimestamp="1700516585068" timestamp="20693624" />
  <Command __id="3116" _type="MoveCaretCommand" caretOffset="260" date="Mon Nov 20 22:27:59 EST 2023" docOffset="309" starttimestamp="1700516585068" timestamp="20694315" />
  <Command __id="3118" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 22:28:00 EST 2023" docOffset="631" starttimestamp="1700516585068" timestamp="20695563" />
  <Command __id="3120" _type="MoveCaretCommand" caretOffset="1692" date="Mon Nov 20 22:28:00 EST 2023" docOffset="1821" starttimestamp="1700516585068" timestamp="20695856" />
  <Command __id="3117" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:28:00 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20695503">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3119" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:28:00 EST 2023" docASTNodeCount="252" docActiveCodeLength="1615" docExpressionCount="121" docLength="2125" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20695799">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return quoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3129" _type="Replace" date="Mon Nov 20 22:28:05 EST 2023" docASTNodeCount="252" docActiveCodeLength="1624" docExpressionCount="121" docLength="2134" endLine="60" insertionLength="13" int_docASTNodeCount="251" int_docActiveCodeLength="1611" int_docExpressionCount="120" int_docLength="2121" length="4" offset="1344" startLine="60" starttimestamp="1700516585068" timestamp="20700519">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[listEvaluator]]></insertedText>
  </DocumentChange>
  <Command __id="3121" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 22:28:04 EST 2023" docOffset="1334" starttimestamp="1700516585068" timestamp="20699114" />
  <Command __id="3122" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 22:28:04 EST 2023" docOffset="1334" starttimestamp="1700516585068" timestamp="20699114" />
  <Command __id="3123" _type="SelectTextCommand" caretOffset="1219" date="Mon Nov 20 22:28:04 EST 2023" end="1220" start="1219" starttimestamp="1700516585068" timestamp="20699856" />
  <Command __id="3124" _type="SelectTextCommand" caretOffset="1219" date="Mon Nov 20 22:28:04 EST 2023" end="1220" start="1219" starttimestamp="1700516585068" timestamp="20699857" />
  <Command __id="3125" _type="MoveCaretCommand" caretOffset="1217" date="Mon Nov 20 22:28:05 EST 2023" docOffset="1346" starttimestamp="1700516585068" timestamp="20700081" />
  <Command __id="3126" _type="MoveCaretCommand" caretOffset="1217" date="Mon Nov 20 22:28:05 EST 2023" docOffset="1346" starttimestamp="1700516585068" timestamp="20700081" />
  <Command __id="3127" _type="SelectTextCommand" caretOffset="1219" date="Mon Nov 20 22:28:05 EST 2023" end="1219" start="1215" starttimestamp="1700516585068" timestamp="20700207" />
  <Command __id="3128" _type="SelectTextCommand" caretOffset="1219" date="Mon Nov 20 22:28:05 EST 2023" end="1219" start="1215" starttimestamp="1700516585068" timestamp="20700207" />
  <Command __id="3130" _type="PasteCommand" date="Mon Nov 20 22:28:05 EST 2023" starttimestamp="1700516585068" timestamp="20700523" />
  <Command __id="3132" _type="InsertStringCommand" date="Mon Nov 20 22:28:07 EST 2023" starttimestamp="1700516585068" timestamp="20701963" timestamp2="20701963">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3133" _type="InsertStringCommand" date="Mon Nov 20 22:28:07 EST 2023" starttimestamp="1700516585068" timestamp="20701963" timestamp2="20701963">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3134" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:28:07 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="20701972" />
  <Command __id="3140" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:28:07 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="20702913" />
  <Command __id="3141" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 22:28:08 EST 2023" docOffset="1334" starttimestamp="1700516585068" timestamp="20702992" />
  <Command __id="3142" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 22:28:08 EST 2023" docOffset="1334" starttimestamp="1700516585068" timestamp="20702992" />
  <Command __id="3143" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:28:08 EST 2023" starttimestamp="1700516585068" timestamp="20703159" />
  <Command __id="3144" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:28:08 EST 2023" starttimestamp="1700516585068" timestamp="20703261" />
  <Command __id="3145" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:28:08 EST 2023" starttimestamp="1700516585068" timestamp="20703269" />
  <Command __id="3147" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 22:28:09 EST 2023" docOffset="631" starttimestamp="1700516585068" timestamp="20704206" />
  <Command __id="3148" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 22:28:11 EST 2023" starttimestamp="1700516585068" timestamp="20706676" />
  <Command __id="3149" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:28:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20706808" type="Run" />
  <Command __id="3150" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:28:11 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20706808" type="Run" />
  <Command __id="3151" _type="ShellCommand" date="Mon Nov 20 22:28:12 EST 2023" starttimestamp="1700516585068" timestamp="20707131" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3152" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713516" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:OrTestedChecker,0.0% complete,0.0,10.0,java.lang.IndexOutOfBoundsException Index 0 out of bounds for length 0¶¶¶Test execution time (ms):0¶Test Result:OrTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of OR¶¶¶Error finding call to CONS try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Test execution time (ms):0¶Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶"), Diff(INSERT,"¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3153" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713517" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3154" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713522" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment"), Diff(INSERT,"execution time (ms):"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="3155" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713523" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3156" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713523" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3157" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713524" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3158" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713540" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3159" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713543" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3160" _type="ConsoleOutput" date="Mon Nov 20 22:28:18 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20713595" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:1"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:7"), Diff(DELETE,"9"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"290"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedCheck"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"3"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessor"), Diff(INSERT,"desktop/java.awt.Window.dispatchEvent"), Diff(EQUAL,"Impl"), Diff(DELETE,".invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"77"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"95"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3161" _type="ExceptionCommand" date="Mon Nov 20 22:28:18 EST 2023" starttimestamp="1700516585068" timestamp="20713602" type="Exception">
    <exceptionString><![CDATA[java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <DocumentChange __id="3131" _type="Insert" date="Mon Nov 20 22:28:07 EST 2023" docASTNodeCount="254" docActiveCodeLength="1630" docExpressionCount="122" docLength="2140" length="6" offset="1357" repeat="6" starttimestamp="1700516585068" timestamp="20701960" timestamp2="20702649">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="3146" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:28:09 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20704154">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3162" _type="ShellCommand" date="Mon Nov 20 22:28:29 EST 2023" starttimestamp="1700516585068" timestamp="20724903" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3163" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:28:29 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20724916" type="Run" />
  <Command __id="3164" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:28:29 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20724916" type="Run" />
  <Command __id="3165" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 22:28:30 EST 2023" docOffset="529" starttimestamp="1700516585068" timestamp="20725885" />
  <Command __id="3166" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 22:28:30 EST 2023" docOffset="529" starttimestamp="1700516585068" timestamp="20725885" />
  <Command __id="3167" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:28:32 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20727598">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class listEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3168" _type="SelectTextCommand" caretOffset="252" date="Mon Nov 20 22:28:32 EST 2023" end="252" start="239" starttimestamp="1700516585068" timestamp="20727644" />
  <Command __id="3170" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:28:33 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="20727968" />
  <Command __id="3171" _type="ShellCommand" date="Mon Nov 20 22:28:33 EST 2023" starttimestamp="1700516585068" timestamp="20728183" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3173" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:29:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20806630" type="Run" />
  <Command __id="3174" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:29:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20806630" type="Run" />
  <Command __id="3175" _type="ShellCommand" date="Mon Nov 20 22:29:52 EST 2023" starttimestamp="1700516585068" timestamp="20806956" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3176" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814231" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3177" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814232" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3178" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814238" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,0.0,0.0,"), Diff(DELETE,"No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3179" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814239" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3180" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814256" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3181" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814258" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3182" _type="ConsoleOutput" date="Mon Nov 20 22:29:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="20814301" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"14"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"9"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(INSERT,"640"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(INSERT,"232"), Diff(EQUAL,"1"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"7"), Diff(INSERT,"491"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"57"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"290"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(INSERT,"230"), Diff(EQUAL,"7"), Diff(DELETE,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:2"), Diff(DELETE,"88"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4"), Diff(EQUAL,".run("), Diff(DELETE,"ParentRunner"), Diff(INSERT,"EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.DelegatingMethod"), Diff(INSERT,"ava.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"219"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1444"), Diff(INSERT,"203"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3183" _type="ExceptionCommand" date="Mon Nov 20 22:29:59 EST 2023" starttimestamp="1700516585068" timestamp="20814308" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3184" _type="ShellCommand" date="Mon Nov 20 22:30:02 EST 2023" starttimestamp="1700516585068" timestamp="20817166" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3185" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 22:30:12 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="20827343" />
  <Command __id="3186" _type="ShellCommand" date="Mon Nov 20 22:30:12 EST 2023" starttimestamp="1700516585068" timestamp="20827671" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3187" _type="ShellCommand" date="Mon Nov 20 22:30:13 EST 2023" starttimestamp="1700516585068" timestamp="20828134" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3188" _type="ShellCommand" date="Mon Nov 20 22:30:17 EST 2023" starttimestamp="1700516585068" timestamp="20832567" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3169" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:28:32 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20727924">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3192" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:30:29 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20844860">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/loadEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class loadEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="3194" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:30:30 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20845541">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3196" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:30:31 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20846716">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/loadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class loadEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3189" _type="ShellCommand" date="Mon Nov 20 22:30:29 EST 2023" starttimestamp="1700516585068" timestamp="20844756" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3190" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:30:29 EST 2023" starttimestamp="1700516585068" timestamp="20844803" />
  <Command __id="3191" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:30:29 EST 2023" starttimestamp="1700516585068" timestamp="20844810" />
  <Command __id="3193" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:30:29 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="20844908" />
  <Command __id="3195" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 22:30:30 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="20845607" />
  <Command __id="3197" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:30:31 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="20846763" />
  <Command __id="3200" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 22:30:35 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="20850156" />
  <Command __id="3201" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 22:30:35 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="20850157" />
  <Command __id="3202" _type="ShellCommand" date="Mon Nov 20 22:30:35 EST 2023" starttimestamp="1700516585068" timestamp="20850752" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3203" _type="ShellCommand" date="Mon Nov 20 22:30:36 EST 2023" starttimestamp="1700516585068" timestamp="20851172" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3204" _type="ShellCommand" date="Mon Nov 20 22:30:36 EST 2023" starttimestamp="1700516585068" timestamp="20851595" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3205" _type="ShellCommand" date="Mon Nov 20 22:30:37 EST 2023" starttimestamp="1700516585068" timestamp="20852421" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3206" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:30:37 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20852422" type="Run" />
  <Command __id="3207" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:30:37 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20852422" type="Run" />
  <Command __id="3208" _type="ShellCommand" date="Mon Nov 20 22:30:38 EST 2023" starttimestamp="1700516585068" timestamp="20852963" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3209" _type="ShellCommand" date="Mon Nov 20 22:30:42 EST 2023" starttimestamp="1700516585068" timestamp="20857039" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3210" _type="ShellCommand" date="Mon Nov 20 22:30:42 EST 2023" starttimestamp="1700516585068" timestamp="20857335" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3211" _type="ShellCommand" date="Mon Nov 20 22:33:16 EST 2023" starttimestamp="1700516585068" timestamp="21011268" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3212" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:33:17 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21011941" />
  <Command __id="3213" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 22:33:17 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="21012465" />
  <Command __id="3214" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Nov 20 22:33:18 EST 2023" starttimestamp="1700516585068" timestamp="21012954" />
  <Command __id="3215" _type="CopyCommand" date="Mon Nov 20 22:33:18 EST 2023" starttimestamp="1700516585068" timestamp="21013269" />
  <Command __id="3216" _type="ShellCommand" date="Mon Nov 20 22:33:19 EST 2023" starttimestamp="1700516585068" timestamp="21014893" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3217" _type="ShellCommand" date="Mon Nov 20 22:33:31 EST 2023" starttimestamp="1700516585068" timestamp="21025981" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3218" _type="ShellCommand" date="Mon Nov 20 22:33:35 EST 2023" starttimestamp="1700516585068" timestamp="21030859" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3219" _type="ShellCommand" date="Mon Nov 20 22:33:37 EST 2023" starttimestamp="1700516585068" timestamp="21032905" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3220" _type="ShellCommand" date="Mon Nov 20 22:33:39 EST 2023" starttimestamp="1700516585068" timestamp="21034620" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3221" _type="ShellCommand" date="Mon Nov 20 22:34:27 EST 2023" starttimestamp="1700516585068" timestamp="21082867" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3222" _type="MoveCaretCommand" caretOffset="240" date="Mon Nov 20 22:34:28 EST 2023" docOffset="321" starttimestamp="1700516585068" timestamp="21083423" />
  <Command __id="3223" _type="MoveCaretCommand" caretOffset="139" date="Mon Nov 20 22:34:29 EST 2023" docOffset="220" starttimestamp="1700516585068" timestamp="21084090" />
  <Command __id="3224" _type="MoveCaretCommand" caretOffset="149" date="Mon Nov 20 22:34:29 EST 2023" docOffset="230" starttimestamp="1700516585068" timestamp="21084346" />
  <Command __id="3225" _type="MoveCaretCommand" caretOffset="107" date="Mon Nov 20 22:34:29 EST 2023" docOffset="188" starttimestamp="1700516585068" timestamp="21084690" />
  <Command __id="3226" _type="MoveCaretCommand" caretOffset="99" date="Mon Nov 20 22:34:30 EST 2023" docOffset="180" starttimestamp="1700516585068" timestamp="21084983" />
  <Command __id="3227" _type="MoveCaretCommand" caretOffset="77" date="Mon Nov 20 22:34:30 EST 2023" docOffset="158" starttimestamp="1700516585068" timestamp="21085813" />
  <Command __id="3228" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:31 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21086510" />
  <Command __id="3229" _type="MoveCaretCommand" caretOffset="152" date="Mon Nov 20 22:34:32 EST 2023" docOffset="233" starttimestamp="1700516585068" timestamp="21087160" />
  <Command __id="3230" _type="MoveCaretCommand" caretOffset="167" date="Mon Nov 20 22:34:32 EST 2023" docOffset="248" starttimestamp="1700516585068" timestamp="21087454" />
  <Command __id="3231" _type="MoveCaretCommand" caretOffset="148" date="Mon Nov 20 22:34:32 EST 2023" docOffset="229" starttimestamp="1700516585068" timestamp="21087918" />
  <Command __id="3232" _type="MoveCaretCommand" caretOffset="169" date="Mon Nov 20 22:34:33 EST 2023" docOffset="250" starttimestamp="1700516585068" timestamp="21088270" />
  <Command __id="3233" _type="MoveCaretCommand" caretOffset="152" date="Mon Nov 20 22:34:33 EST 2023" docOffset="233" starttimestamp="1700516585068" timestamp="21088518" />
  <Command __id="3234" _type="MoveCaretCommand" caretOffset="168" date="Mon Nov 20 22:34:33 EST 2023" docOffset="249" starttimestamp="1700516585068" timestamp="21088804" />
  <Command __id="3235" _type="MoveCaretCommand" caretOffset="153" date="Mon Nov 20 22:34:34 EST 2023" docOffset="234" starttimestamp="1700516585068" timestamp="21089117" />
  <Command __id="3198" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:30:35 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20850101">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3199" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:30:35 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="20850131">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/loadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class loadEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3247" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:34:41 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21096216">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class listEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3249" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:34:41 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21096898">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class quoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3251" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:34:42 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21097353">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class listEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3236" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:38 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21093041" />
  <Command __id="3237" _type="MoveCaretCommand" caretOffset="237" date="Mon Nov 20 22:34:38 EST 2023" docOffset="318" starttimestamp="1700516585068" timestamp="21093718" />
  <Command __id="3238" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:39 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21094049" />
  <Command __id="3239" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 22:34:39 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="21094263" />
  <Command __id="3240" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:39 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21094524" />
  <Command __id="3241" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 22:34:39 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="21094731" />
  <Command __id="3242" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:40 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21094945" />
  <Command __id="3243" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 22:34:40 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="21095133" />
  <Command __id="3244" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:40 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21095314" />
  <Command __id="3245" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 22:34:40 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="21095510" />
  <Command __id="3246" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:40 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21095701" />
  <Command __id="3248" _type="SelectTextCommand" caretOffset="252" date="Mon Nov 20 22:34:41 EST 2023" end="252" start="239" starttimestamp="1700516585068" timestamp="21096268" />
  <Command __id="3250" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 22:34:42 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="21096947" />
  <Command __id="3252" _type="SelectTextCommand" caretOffset="252" date="Mon Nov 20 22:34:42 EST 2023" end="252" start="239" starttimestamp="1700516585068" timestamp="21097400" />
  <Command __id="3254" _type="MoveCaretCommand" caretOffset="233" date="Mon Nov 20 22:34:45 EST 2023" docOffset="314" starttimestamp="1700516585068" timestamp="21100903" />
  <Command __id="3255" _type="ShellCommand" date="Mon Nov 20 22:34:46 EST 2023" starttimestamp="1700516585068" timestamp="21101245" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3256" _type="ShellCommand" date="Mon Nov 20 22:34:46 EST 2023" starttimestamp="1700516585068" timestamp="21101838" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3257" _type="ShellCommand" date="Mon Nov 20 22:34:50 EST 2023" starttimestamp="1700516585068" timestamp="21105526" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3258" _type="ShellCommand" date="Mon Nov 20 22:35:11 EST 2023" starttimestamp="1700516585068" timestamp="21125961" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3259" _type="ShellCommand" date="Mon Nov 20 22:35:12 EST 2023" starttimestamp="1700516585068" timestamp="21126995" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3260" _type="ShellCommand" date="Mon Nov 20 22:36:20 EST 2023" starttimestamp="1700516585068" timestamp="21195082" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3261" _type="ShellCommand" date="Mon Nov 20 22:36:20 EST 2023" starttimestamp="1700516585068" timestamp="21195350" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3262" _type="ShellCommand" date="Mon Nov 20 22:36:22 EST 2023" starttimestamp="1700516585068" timestamp="21197134" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3263" _type="MoveCaretCommand" caretOffset="240" date="Mon Nov 20 22:36:22 EST 2023" docOffset="321" starttimestamp="1700516585068" timestamp="21197917" />
  <Command __id="3264" _type="MoveCaretCommand" caretOffset="237" date="Mon Nov 20 22:36:24 EST 2023" docOffset="318" starttimestamp="1700516585068" timestamp="21199093" />
  <Command __id="3265" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Mon Nov 20 22:36:24 EST 2023" starttimestamp="1700516585068" timestamp="21199416" />
  <Command __id="3267" _type="PasteCommand" date="Mon Nov 20 22:36:24 EST 2023" starttimestamp="1700516585068" timestamp="21199615" />
  <Command __id="3268" _type="MoveCaretCommand" caretOffset="410" date="Mon Nov 20 22:36:26 EST 2023" docOffset="410" starttimestamp="1700516585068" timestamp="21201675" />
  <Command __id="3270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:36:27 EST 2023" starttimestamp="1700516585068" timestamp="21202296" />
  <Command __id="3272" _type="InsertStringCommand" date="Mon Nov 20 22:36:27 EST 2023" starttimestamp="1700516585068" timestamp="21202425" timestamp2="21202425">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3273" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 22:36:28 EST 2023" docOffset="395" starttimestamp="1700516585068" timestamp="21202946" />
  <Command __id="3275" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:36:37 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="21212870" />
  <Command __id="3276" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Mon Nov 20 22:36:37 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="21212870" />
  <Command __id="3277" _type="ShellCommand" date="Mon Nov 20 22:36:38 EST 2023" starttimestamp="1700516585068" timestamp="21212973" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3278" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Nov 20 22:36:38 EST 2023" starttimestamp="1700516585068" timestamp="21212976" />
  <Command __id="3279" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:36:38 EST 2023" starttimestamp="1700516585068" timestamp="21212979" />
  <Command __id="3280" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:36:38 EST 2023" starttimestamp="1700516585068" timestamp="21212988" />
  <Command __id="3281" _type="MoveCaretCommand" caretOffset="754" date="Mon Nov 20 22:36:41 EST 2023" docOffset="1093" starttimestamp="1700516585068" timestamp="21216646" />
  <Command __id="3282" _type="MoveCaretCommand" caretOffset="680" date="Mon Nov 20 22:36:48 EST 2023" docOffset="1019" starttimestamp="1700516585068" timestamp="21223739" />
  <Command __id="3283" _type="MoveCaretCommand" caretOffset="219" date="Mon Nov 20 22:36:53 EST 2023" docOffset="219" starttimestamp="1700516585068" timestamp="21228296" />
  <Command __id="3284" _type="SelectTextCommand" caretOffset="230" date="Mon Nov 20 22:36:53 EST 2023" end="230" start="205" starttimestamp="1700516585068" timestamp="21228450" />
  <Command __id="3285" _type="CopyCommand" date="Mon Nov 20 22:36:53 EST 2023" starttimestamp="1700516585068" timestamp="21228608" />
  <Command __id="3286" _type="MoveCaretCommand" caretOffset="1094" date="Mon Nov 20 22:36:54 EST 2023" docOffset="1094" starttimestamp="1700516585068" timestamp="21229103" />
  <Command __id="3287" _type="SelectTextCommand" caretOffset="1102" date="Mon Nov 20 22:36:54 EST 2023" end="1102" start="1077" starttimestamp="1700516585068" timestamp="21229244" />
  <Command __id="3288" _type="PasteCommand" date="Mon Nov 20 22:36:54 EST 2023" starttimestamp="1700516585068" timestamp="21229406" />
  <Command __id="3289" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:36:56 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21231609" />
  <Command __id="3290" _type="MoveCaretCommand" caretOffset="1047" date="Mon Nov 20 22:36:57 EST 2023" docOffset="1047" starttimestamp="1700516585068" timestamp="21232751" />
  <Command __id="3291" _type="ShellCommand" date="Mon Nov 20 22:37:00 EST 2023" starttimestamp="1700516585068" timestamp="21235754" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3292" _type="ShellCommand" date="Mon Nov 20 22:37:01 EST 2023" starttimestamp="1700516585068" timestamp="21236291" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3294" _type="ShellCommand" date="Mon Nov 20 22:37:13 EST 2023" starttimestamp="1700516585068" timestamp="21248440" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3295" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Nov 20 22:37:13 EST 2023" starttimestamp="1700516585068" timestamp="21248445" />
  <Command __id="3296" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:37:13 EST 2023" starttimestamp="1700516585068" timestamp="21248446" />
  <Command __id="3297" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:37:13 EST 2023" starttimestamp="1700516585068" timestamp="21248458" />
  <Command __id="3299" _type="ShellCommand" date="Mon Nov 20 22:37:20 EST 2023" starttimestamp="1700516585068" timestamp="21255109" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3300" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:37:20 EST 2023" starttimestamp="1700516585068" timestamp="21255112" />
  <Command __id="3301" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Mon Nov 20 22:37:20 EST 2023" starttimestamp="1700516585068" timestamp="21255112" />
  <Command __id="3302" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:37:20 EST 2023" starttimestamp="1700516585068" timestamp="21255121" />
  <Command __id="3303" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:37:23 EST 2023" starttimestamp="1700516585068" timestamp="21258461" />
  <Command __id="3304" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:37:23 EST 2023" starttimestamp="1700516585068" timestamp="21258564" />
  <Command __id="3305" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:37:23 EST 2023" starttimestamp="1700516585068" timestamp="21258572" />
  <Command __id="3306" _type="ShellCommand" date="Mon Nov 20 22:37:24 EST 2023" starttimestamp="1700516585068" timestamp="21259025" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3307" _type="ShellCommand" date="Mon Nov 20 22:37:24 EST 2023" starttimestamp="1700516585068" timestamp="21259576" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3308" _type="ShellCommand" date="Mon Nov 20 22:37:25 EST 2023" starttimestamp="1700516585068" timestamp="21260072" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3309" _type="ShellCommand" date="Mon Nov 20 22:37:25 EST 2023" starttimestamp="1700516585068" timestamp="21260281" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3310" _type="ShellCommand" date="Mon Nov 20 22:37:25 EST 2023" starttimestamp="1700516585068" timestamp="21260606" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3311" _type="ShellCommand" date="Mon Nov 20 22:37:42 EST 2023" starttimestamp="1700516585068" timestamp="21277854" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3312" _type="MoveCaretCommand" caretOffset="926" date="Mon Nov 20 22:37:47 EST 2023" docOffset="926" starttimestamp="1700516585068" timestamp="21282473" />
  <Command __id="3313" _type="MoveCaretCommand" caretOffset="936" date="Mon Nov 20 22:37:47 EST 2023" docOffset="936" starttimestamp="1700516585068" timestamp="21282827" />
  <Command __id="3314" _type="ShellCommand" date="Mon Nov 20 22:37:48 EST 2023" starttimestamp="1700516585068" timestamp="21283427" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3315" _type="ShellCommand" date="Mon Nov 20 22:37:49 EST 2023" starttimestamp="1700516585068" timestamp="21284634" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3316" _type="SelectTextCommand" caretOffset="914" date="Mon Nov 20 22:37:50 EST 2023" end="914" start="913" starttimestamp="1700516585068" timestamp="21285516" />
  <Command __id="3317" _type="MoveCaretCommand" caretOffset="924" date="Mon Nov 20 22:37:51 EST 2023" docOffset="924" starttimestamp="1700516585068" timestamp="21286725" />
  <Command __id="3318" _type="MoveCaretCommand" caretOffset="941" date="Mon Nov 20 22:37:52 EST 2023" docOffset="941" starttimestamp="1700516585068" timestamp="21287702" />
  <Command __id="3319" _type="MoveCaretCommand" caretOffset="729" date="Mon Nov 20 22:37:53 EST 2023" docOffset="729" starttimestamp="1700516585068" timestamp="21288394" />
  <Command __id="3320" _type="ShellCommand" date="Mon Nov 20 22:37:53 EST 2023" starttimestamp="1700516585068" timestamp="21288852" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3321" _type="ShellCommand" date="Mon Nov 20 22:37:57 EST 2023" starttimestamp="1700516585068" timestamp="21292005" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3322" _type="MoveCaretCommand" caretOffset="1808" date="Mon Nov 20 22:38:00 EST 2023" docOffset="1808" starttimestamp="1700516585068" timestamp="21295178" />
  <Command __id="3323" _type="MoveCaretCommand" caretOffset="1717" date="Mon Nov 20 22:38:00 EST 2023" docOffset="1717" starttimestamp="1700516585068" timestamp="21295683" />
  <Command __id="3324" _type="MoveCaretCommand" caretOffset="1696" date="Mon Nov 20 22:38:01 EST 2023" docOffset="1696" starttimestamp="1700516585068" timestamp="21296156" />
  <Command __id="3325" _type="ShellCommand" date="Mon Nov 20 22:38:01 EST 2023" starttimestamp="1700516585068" timestamp="21296740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3326" _type="ShellCommand" date="Mon Nov 20 22:38:18 EST 2023" starttimestamp="1700516585068" timestamp="21313890" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3327" _type="ShellCommand" date="Mon Nov 20 22:38:19 EST 2023" starttimestamp="1700516585068" timestamp="21314447" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3328" _type="ShellCommand" date="Mon Nov 20 22:38:44 EST 2023" starttimestamp="1700516585068" timestamp="21339693" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3329" _type="ShellCommand" date="Mon Nov 20 22:38:45 EST 2023" starttimestamp="1700516585068" timestamp="21340308" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3330" _type="ShellCommand" date="Mon Nov 20 22:38:46 EST 2023" starttimestamp="1700516585068" timestamp="21341142" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3331" _type="ShellCommand" date="Mon Nov 20 22:38:54 EST 2023" starttimestamp="1700516585068" timestamp="21349301" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3332" _type="ShellCommand" date="Mon Nov 20 22:39:22 EST 2023" starttimestamp="1700516585068" timestamp="21377647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3333" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:24 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21379460" />
  <Command __id="3334" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:25 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21379963" />
  <Command __id="3335" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:25 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21380771" />
  <Command __id="3336" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:26 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21381015" />
  <Command __id="3337" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:26 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21381213" />
  <Command __id="3338" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:26 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21381429" />
  <Command __id="3339" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:26 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21381627" />
  <Command __id="3340" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:26 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21381861" />
  <Command __id="3341" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:27 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21382055" />
  <Command __id="3342" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:27 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21382254" />
  <Command __id="3343" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:27 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21382457" />
  <Command __id="3344" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:27 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21382675" />
  <Command __id="3345" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:27 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21382848" />
  <Command __id="3346" _type="MoveCaretCommand" caretOffset="879" date="Mon Nov 20 22:39:28 EST 2023" docOffset="879" starttimestamp="1700516585068" timestamp="21383057" />
  <Command __id="3347" _type="MoveCaretCommand" caretOffset="952" date="Mon Nov 20 22:39:28 EST 2023" docOffset="952" starttimestamp="1700516585068" timestamp="21383254" />
  <Command __id="3348" _type="MoveCaretCommand" caretOffset="1890" date="Mon Nov 20 22:39:49 EST 2023" docOffset="1890" starttimestamp="1700516585068" timestamp="21404654" />
  <Command __id="3349" _type="ShellCommand" date="Mon Nov 20 22:39:51 EST 2023" starttimestamp="1700516585068" timestamp="21406149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3350" _type="ShellCommand" date="Mon Nov 20 22:39:55 EST 2023" starttimestamp="1700516585068" timestamp="21410495" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3351" _type="ShellCommand" date="Mon Nov 20 22:39:56 EST 2023" starttimestamp="1700516585068" timestamp="21411801" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3352" _type="ShellCommand" date="Mon Nov 20 22:40:07 EST 2023" starttimestamp="1700516585068" timestamp="21422456" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3353" _type="ShellCommand" date="Mon Nov 20 22:40:08 EST 2023" starttimestamp="1700516585068" timestamp="21423623" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3354" _type="ShellCommand" date="Mon Nov 20 22:40:23 EST 2023" starttimestamp="1700516585068" timestamp="21438466" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3355" _type="ShellCommand" date="Mon Nov 20 22:40:29 EST 2023" starttimestamp="1700516585068" timestamp="21444612" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3356" _type="ShellCommand" date="Mon Nov 20 22:40:33 EST 2023" starttimestamp="1700516585068" timestamp="21448256" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3357" _type="ShellCommand" date="Mon Nov 20 22:40:44 EST 2023" starttimestamp="1700516585068" timestamp="21459115" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3358" _type="ShellCommand" date="Mon Nov 20 22:41:21 EST 2023" starttimestamp="1700516585068" timestamp="21496159" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3359" _type="ShellCommand" date="Mon Nov 20 22:41:21 EST 2023" starttimestamp="1700516585068" timestamp="21496827" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3360" _type="ShellCommand" date="Mon Nov 20 22:41:28 EST 2023" starttimestamp="1700516585068" timestamp="21503287" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3361" _type="ShellCommand" date="Mon Nov 20 22:41:29 EST 2023" starttimestamp="1700516585068" timestamp="21504090" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3362" _type="ShellCommand" date="Mon Nov 20 22:41:29 EST 2023" starttimestamp="1700516585068" timestamp="21504433" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3363" _type="MoveCaretCommand" caretOffset="1069" date="Mon Nov 20 22:41:31 EST 2023" docOffset="1069" starttimestamp="1700516585068" timestamp="21506454" />
  <Command __id="3364" _type="MoveCaretCommand" caretOffset="1069" date="Mon Nov 20 22:41:32 EST 2023" docOffset="1069" starttimestamp="1700516585068" timestamp="21507336" />
  <Command __id="3365" _type="MoveCaretCommand" caretOffset="1069" date="Mon Nov 20 22:41:32 EST 2023" docOffset="1069" starttimestamp="1700516585068" timestamp="21507498" />
  <Command __id="3366" _type="ShellCommand" date="Mon Nov 20 22:41:34 EST 2023" starttimestamp="1700516585068" timestamp="21509895" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3367" _type="ShellCommand" date="Mon Nov 20 22:41:54 EST 2023" starttimestamp="1700516585068" timestamp="21529914" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3368" _type="MoveCaretCommand" caretOffset="909" date="Mon Nov 20 22:42:00 EST 2023" docOffset="909" starttimestamp="1700516585068" timestamp="21534981" />
  <Command __id="3369" _type="SelectTextCommand" caretOffset="910" date="Mon Nov 20 22:42:00 EST 2023" end="910" start="905" starttimestamp="1700516585068" timestamp="21535135" />
  <Command __id="3370" _type="MoveCaretCommand" caretOffset="1312" date="Mon Nov 20 22:42:01 EST 2023" docOffset="1312" starttimestamp="1700516585068" timestamp="21536885" />
  <Command __id="3371" _type="MoveCaretCommand" caretOffset="1318" date="Mon Nov 20 22:42:02 EST 2023" docOffset="1318" starttimestamp="1700516585068" timestamp="21537243" />
  <Command __id="3372" _type="SelectTextCommand" caretOffset="1321" date="Mon Nov 20 22:42:02 EST 2023" end="1321" start="1316" starttimestamp="1700516585068" timestamp="21537401" />
  <Command __id="3373" _type="MoveCaretCommand" caretOffset="1312" date="Mon Nov 20 22:42:03 EST 2023" docOffset="1312" starttimestamp="1700516585068" timestamp="21538100" />
  <Command __id="3374" _type="SelectTextCommand" caretOffset="1313" date="Mon Nov 20 22:42:03 EST 2023" end="1313" start="1309" starttimestamp="1700516585068" timestamp="21538222" />
  <Command __id="3375" _type="MoveCaretCommand" caretOffset="1320" date="Mon Nov 20 22:42:03 EST 2023" docOffset="1320" starttimestamp="1700516585068" timestamp="21538566" />
  <Command __id="3376" _type="SelectTextCommand" caretOffset="1321" date="Mon Nov 20 22:42:03 EST 2023" end="1321" start="1316" starttimestamp="1700516585068" timestamp="21538713" />
  <Command __id="3377" _type="MoveCaretCommand" caretOffset="1311" date="Mon Nov 20 22:42:04 EST 2023" docOffset="1311" starttimestamp="1700516585068" timestamp="21538993" />
  <Command __id="3378" _type="SelectTextCommand" caretOffset="1313" date="Mon Nov 20 22:42:04 EST 2023" end="1313" start="1309" starttimestamp="1700516585068" timestamp="21539149" />
  <Command __id="3379" _type="MoveCaretCommand" caretOffset="1319" date="Mon Nov 20 22:42:04 EST 2023" docOffset="1319" starttimestamp="1700516585068" timestamp="21539377" />
  <Command __id="3380" _type="SelectTextCommand" caretOffset="1321" date="Mon Nov 20 22:42:04 EST 2023" end="1321" start="1316" starttimestamp="1700516585068" timestamp="21539511" />
  <Command __id="3381" _type="MoveCaretCommand" caretOffset="1311" date="Mon Nov 20 22:42:04 EST 2023" docOffset="1311" starttimestamp="1700516585068" timestamp="21539742" />
  <Command __id="3382" _type="SelectTextCommand" caretOffset="1313" date="Mon Nov 20 22:42:04 EST 2023" end="1313" start="1309" starttimestamp="1700516585068" timestamp="21539890" />
  <Command __id="3383" _type="MoveCaretCommand" caretOffset="1319" date="Mon Nov 20 22:42:05 EST 2023" docOffset="1319" starttimestamp="1700516585068" timestamp="21540097" />
  <Command __id="3384" _type="SelectTextCommand" caretOffset="1321" date="Mon Nov 20 22:42:05 EST 2023" end="1321" start="1316" starttimestamp="1700516585068" timestamp="21540240" />
  <Command __id="3385" _type="MoveCaretCommand" caretOffset="1312" date="Mon Nov 20 22:42:05 EST 2023" docOffset="1312" starttimestamp="1700516585068" timestamp="21540564" />
  <Command __id="3386" _type="SelectTextCommand" caretOffset="1313" date="Mon Nov 20 22:42:05 EST 2023" end="1313" start="1309" starttimestamp="1700516585068" timestamp="21540730" />
  <Command __id="3387" _type="MoveCaretCommand" caretOffset="1318" date="Mon Nov 20 22:42:05 EST 2023" docOffset="1318" starttimestamp="1700516585068" timestamp="21540919" />
  <Command __id="3388" _type="SelectTextCommand" caretOffset="1321" date="Mon Nov 20 22:42:06 EST 2023" end="1321" start="1316" starttimestamp="1700516585068" timestamp="21541062" />
  <Command __id="3389" _type="MoveCaretCommand" caretOffset="1089" date="Mon Nov 20 22:42:06 EST 2023" docOffset="1089" starttimestamp="1700516585068" timestamp="21541858" />
  <Command __id="3390" _type="SelectTextCommand" caretOffset="1102" date="Mon Nov 20 22:42:07 EST 2023" end="1102" start="1077" starttimestamp="1700516585068" timestamp="21542031" />
  <Command __id="3391" _type="CopyCommand" date="Mon Nov 20 22:42:08 EST 2023" starttimestamp="1700516585068" timestamp="21542992" />
  <Command __id="3392" _type="MoveCaretCommand" caretOffset="1051" date="Mon Nov 20 22:42:08 EST 2023" docOffset="1051" starttimestamp="1700516585068" timestamp="21543368" />
  <Command __id="3393" _type="SelectTextCommand" caretOffset="1057" date="Mon Nov 20 22:42:08 EST 2023" end="1057" start="1032" starttimestamp="1700516585068" timestamp="21543527" />
  <Command __id="3394" _type="PasteCommand" date="Mon Nov 20 22:42:08 EST 2023" starttimestamp="1700516585068" timestamp="21543622" />
  <Command __id="3395" _type="MoveCaretCommand" caretOffset="1170" date="Mon Nov 20 22:42:08 EST 2023" docOffset="1170" starttimestamp="1700516585068" timestamp="21543838" />
  <Command __id="3396" _type="UndoCommand" date="Mon Nov 20 22:42:12 EST 2023" starttimestamp="1700516585068" timestamp="21547063" />
  <Command __id="3397" _type="ShellCommand" date="Mon Nov 20 22:42:13 EST 2023" starttimestamp="1700516585068" timestamp="21548001" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3398" _type="ShellCommand" date="Mon Nov 20 22:42:14 EST 2023" starttimestamp="1700516585068" timestamp="21549374" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3399" _type="MoveCaretCommand" caretOffset="1092" date="Mon Nov 20 22:42:15 EST 2023" docOffset="1092" starttimestamp="1700516585068" timestamp="21550062" />
  <Command __id="3400" _type="SelectTextCommand" caretOffset="1102" date="Mon Nov 20 22:42:15 EST 2023" end="1102" start="1077" starttimestamp="1700516585068" timestamp="21550215" />
  <Command __id="3401" _type="MoveCaretCommand" caretOffset="1048" date="Mon Nov 20 22:42:18 EST 2023" docOffset="1048" starttimestamp="1700516585068" timestamp="21553895" />
  <Command __id="3402" _type="SelectTextCommand" caretOffset="1057" date="Mon Nov 20 22:42:19 EST 2023" end="1057" start="1032" starttimestamp="1700516585068" timestamp="21554020" />
  <Command __id="3403" _type="CopyCommand" date="Mon Nov 20 22:42:19 EST 2023" starttimestamp="1700516585068" timestamp="21554145" />
  <Command __id="3404" _type="SelectTextCommand" caretOffset="1092" date="Mon Nov 20 22:42:19 EST 2023" end="1092" start="1019" starttimestamp="1700516585068" timestamp="21554529" />
  <Command __id="3405" _type="SelectTextCommand" caretOffset="1020" date="Mon Nov 20 22:42:19 EST 2023" end="1020" start="965" starttimestamp="1700516585068" timestamp="21554670" />
  <Command __id="3406" _type="MoveCaretCommand" caretOffset="1096" date="Mon Nov 20 22:42:20 EST 2023" docOffset="1096" starttimestamp="1700516585068" timestamp="21555110" />
  <Command __id="3407" _type="SelectTextCommand" caretOffset="1102" date="Mon Nov 20 22:42:20 EST 2023" end="1102" start="1077" starttimestamp="1700516585068" timestamp="21555237" />
  <Command __id="3408" _type="PasteCommand" date="Mon Nov 20 22:42:20 EST 2023" starttimestamp="1700516585068" timestamp="21555440" />
  <Command __id="3409" _type="MoveCaretCommand" caretOffset="1170" date="Mon Nov 20 22:42:21 EST 2023" docOffset="1170" starttimestamp="1700516585068" timestamp="21556475" />
  <Command __id="3410" _type="UndoCommand" date="Mon Nov 20 22:42:27 EST 2023" starttimestamp="1700516585068" timestamp="21561958" />
  <Command __id="3411" _type="ShellCommand" date="Mon Nov 20 22:42:31 EST 2023" starttimestamp="1700516585068" timestamp="21566227" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3412" _type="ShellCommand" date="Mon Nov 20 22:42:31 EST 2023" starttimestamp="1700516585068" timestamp="21566303" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3413" _type="MoveCaretCommand" caretOffset="1259" date="Mon Nov 20 22:42:32 EST 2023" docOffset="1259" starttimestamp="1700516585068" timestamp="21566937" />
  <Command __id="3414" _type="ShellCommand" date="Mon Nov 20 22:42:33 EST 2023" starttimestamp="1700516585068" timestamp="21568004" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3415" _type="ShellCommand" date="Mon Nov 20 22:42:33 EST 2023" starttimestamp="1700516585068" timestamp="21568488" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3416" _type="ShellCommand" date="Mon Nov 20 22:42:34 EST 2023" starttimestamp="1700516585068" timestamp="21569454" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3417" _type="ShellCommand" date="Mon Nov 20 22:42:42 EST 2023" starttimestamp="1700516585068" timestamp="21577312" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3418" _type="ShellCommand" date="Mon Nov 20 22:42:48 EST 2023" starttimestamp="1700516585068" timestamp="21583584" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3419" _type="ShellCommand" date="Mon Nov 20 22:42:58 EST 2023" starttimestamp="1700516585068" timestamp="21593075" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3420" _type="ShellCommand" date="Mon Nov 20 22:42:59 EST 2023" starttimestamp="1700516585068" timestamp="21594226" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3421" _type="ShellCommand" date="Mon Nov 20 22:43:10 EST 2023" starttimestamp="1700516585068" timestamp="21605650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3422" _type="SelectTextCommand" caretOffset="1077" date="Mon Nov 20 22:43:27 EST 2023" end="1105" start="1077" starttimestamp="1700516585068" timestamp="21621956" />
  <Command __id="3423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:43:27 EST 2023" starttimestamp="1700516585068" timestamp="21622539" />
  <Command __id="3424" _type="MoveCaretCommand" caretOffset="951" date="Mon Nov 20 22:43:28 EST 2023" docOffset="951" starttimestamp="1700516585068" timestamp="21623398" />
  <Command __id="3425" _type="ShellCommand" date="Mon Nov 20 22:43:39 EST 2023" starttimestamp="1700516585068" timestamp="21634729" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3426" _type="ShellCommand" date="Mon Nov 20 22:43:39 EST 2023" starttimestamp="1700516585068" timestamp="21634819" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3427" _type="MoveCaretCommand" caretOffset="1270" date="Mon Nov 20 22:43:41 EST 2023" docOffset="1270" starttimestamp="1700516585068" timestamp="21636785" />
  <Command __id="3428" _type="MoveCaretCommand" caretOffset="272" date="Mon Nov 20 22:43:48 EST 2023" docOffset="272" starttimestamp="1700516585068" timestamp="21643815" />
  <Command __id="3429" _type="MoveCaretCommand" caretOffset="278" date="Mon Nov 20 22:43:50 EST 2023" docOffset="278" starttimestamp="1700516585068" timestamp="21645013" />
  <Command __id="3430" _type="ShellCommand" date="Mon Nov 20 22:43:50 EST 2023" starttimestamp="1700516585068" timestamp="21645477" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3431" _type="ShellCommand" date="Mon Nov 20 22:43:54 EST 2023" starttimestamp="1700516585068" timestamp="21649023" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3432" _type="MoveCaretCommand" caretOffset="1092" date="Mon Nov 20 22:43:55 EST 2023" docOffset="1092" starttimestamp="1700516585068" timestamp="21649970" />
  <Command __id="3433" _type="MoveCaretCommand" caretOffset="1129" date="Mon Nov 20 22:43:55 EST 2023" docOffset="1129" starttimestamp="1700516585068" timestamp="21650887" />
  <Command __id="3434" _type="MoveCaretCommand" caretOffset="1087" date="Mon Nov 20 22:43:56 EST 2023" docOffset="1087" starttimestamp="1700516585068" timestamp="21651369" />
  <Command __id="3435" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 22:43:56 EST 2023" docOffset="1105" starttimestamp="1700516585068" timestamp="21651633" />
  <Command __id="3436" _type="MoveCaretCommand" caretOffset="1090" date="Mon Nov 20 22:43:57 EST 2023" docOffset="1090" starttimestamp="1700516585068" timestamp="21652516" />
  <Command __id="3437" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 22:43:58 EST 2023" docOffset="1105" starttimestamp="1700516585068" timestamp="21653274" />
  <Command __id="3438" _type="SelectTextCommand" caretOffset="1089" date="Mon Nov 20 22:43:58 EST 2023" end="1089" start="1088" starttimestamp="1700516585068" timestamp="21653842" />
  <Command __id="3439" _type="MoveCaretCommand" caretOffset="926" date="Mon Nov 20 22:44:01 EST 2023" docOffset="926" starttimestamp="1700516585068" timestamp="21656870" />
  <Command __id="3440" _type="MoveCaretCommand" caretOffset="1236" date="Mon Nov 20 22:44:03 EST 2023" docOffset="1236" starttimestamp="1700516585068" timestamp="21658120" />
  <Command __id="3441" _type="MoveCaretCommand" caretOffset="1251" date="Mon Nov 20 22:44:03 EST 2023" docOffset="1251" starttimestamp="1700516585068" timestamp="21658664" />
  <Command __id="3442" _type="SelectTextCommand" caretOffset="1149" date="Mon Nov 20 22:44:05 EST 2023" end="1269" start="1149" starttimestamp="1700516585068" timestamp="21660122" />
  <Command __id="3443" _type="MoveCaretCommand" caretOffset="1178" date="Mon Nov 20 22:44:05 EST 2023" docOffset="1178" starttimestamp="1700516585068" timestamp="21660392" />
  <Command __id="3444" _type="ShellCommand" date="Mon Nov 20 22:44:05 EST 2023" starttimestamp="1700516585068" timestamp="21660832" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3445" _type="ShellCommand" date="Mon Nov 20 22:44:16 EST 2023" starttimestamp="1700516585068" timestamp="21671229" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3446" _type="ShellCommand" date="Mon Nov 20 22:44:21 EST 2023" starttimestamp="1700516585068" timestamp="21676883" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3447" _type="ShellCommand" date="Mon Nov 20 22:44:23 EST 2023" starttimestamp="1700516585068" timestamp="21678015" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3448" _type="MoveCaretCommand" caretOffset="1745" date="Mon Nov 20 22:44:24 EST 2023" docOffset="1745" starttimestamp="1700516585068" timestamp="21679456" />
  <Command __id="3449" _type="UndoCommand" date="Mon Nov 20 22:44:25 EST 2023" starttimestamp="1700516585068" timestamp="21680512" />
  <Command __id="3450" _type="MoveCaretCommand" caretOffset="1567" date="Mon Nov 20 22:44:27 EST 2023" docOffset="1567" starttimestamp="1700516585068" timestamp="21682875" />
  <Command __id="3451" _type="MoveCaretCommand" caretOffset="1486" date="Mon Nov 20 22:44:30 EST 2023" docOffset="1486" starttimestamp="1700516585068" timestamp="21685101" />
  <Command __id="3452" _type="ShellCommand" date="Mon Nov 20 22:44:34 EST 2023" starttimestamp="1700516585068" timestamp="21689816" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3453" _type="ShellCommand" date="Mon Nov 20 22:44:49 EST 2023" starttimestamp="1700516585068" timestamp="21704505" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3454" _type="MoveCaretCommand" caretOffset="1401" date="Mon Nov 20 22:44:51 EST 2023" docOffset="1401" starttimestamp="1700516585068" timestamp="21706382" />
  <Command __id="3455" _type="MoveCaretCommand" caretOffset="975" date="Mon Nov 20 22:44:52 EST 2023" docOffset="975" starttimestamp="1700516585068" timestamp="21707916" />
  <Command __id="3456" _type="MoveCaretCommand" caretOffset="984" date="Mon Nov 20 22:44:53 EST 2023" docOffset="984" starttimestamp="1700516585068" timestamp="21708861" />
  <Command __id="3457" _type="MoveCaretCommand" caretOffset="1512" date="Mon Nov 20 22:44:54 EST 2023" docOffset="1512" starttimestamp="1700516585068" timestamp="21709695" />
  <Command __id="3458" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:44:55 EST 2023" starttimestamp="1700516585068" timestamp="21710828" />
  <Command __id="3459" _type="SelectTextCommand" caretOffset="1459" date="Mon Nov 20 22:44:56 EST 2023" end="1459" start="1458" starttimestamp="1700516585068" timestamp="21711331" />
  <Command __id="3460" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:44:56 EST 2023" starttimestamp="1700516585068" timestamp="21711447" />
  <Command __id="3461" _type="MoveCaretCommand" caretOffset="1426" date="Mon Nov 20 22:44:56 EST 2023" docOffset="1426" starttimestamp="1700516585068" timestamp="21711764" />
  <Command __id="3462" _type="MoveCaretCommand" caretOffset="1471" date="Mon Nov 20 22:44:57 EST 2023" docOffset="1471" starttimestamp="1700516585068" timestamp="21712244" />
  <Command __id="3463" _type="ShellCommand" date="Mon Nov 20 22:45:00 EST 2023" starttimestamp="1700516585068" timestamp="21714967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3464" _type="ShellCommand" date="Mon Nov 20 22:45:10 EST 2023" starttimestamp="1700516585068" timestamp="21725546" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3465" _type="MoveCaretCommand" caretOffset="1728" date="Mon Nov 20 22:45:11 EST 2023" docOffset="1728" starttimestamp="1700516585068" timestamp="21726484" />
  <Command __id="3466" _type="ShellCommand" date="Mon Nov 20 22:45:15 EST 2023" starttimestamp="1700516585068" timestamp="21730912" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3467" _type="ShellCommand" date="Mon Nov 20 22:45:55 EST 2023" starttimestamp="1700516585068" timestamp="21770360" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3468" _type="ShellCommand" date="Mon Nov 20 22:45:56 EST 2023" starttimestamp="1700516585068" timestamp="21771334" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3469" _type="ShellCommand" date="Mon Nov 20 22:46:07 EST 2023" starttimestamp="1700516585068" timestamp="21782243" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3470" _type="MoveCaretCommand" caretOffset="872" date="Mon Nov 20 22:46:14 EST 2023" docOffset="872" starttimestamp="1700516585068" timestamp="21789434" />
  <Command __id="3471" _type="SelectTextCommand" caretOffset="836" date="Mon Nov 20 22:46:14 EST 2023" end="837" start="836" starttimestamp="1700516585068" timestamp="21789921" />
  <Command __id="3472" _type="SelectTextCommand" caretOffset="617" date="Mon Nov 20 22:46:16 EST 2023" end="776" start="617" starttimestamp="1700516585068" timestamp="21791867" />
  <Command __id="3473" _type="MoveCaretCommand" caretOffset="1446" date="Mon Nov 20 22:46:23 EST 2023" docOffset="1446" starttimestamp="1700516585068" timestamp="21798477" />
  <Command __id="3474" _type="MoveCaretCommand" caretOffset="1444" date="Mon Nov 20 22:46:24 EST 2023" docOffset="1444" starttimestamp="1700516585068" timestamp="21799768" />
  <Command __id="3475" _type="SelectTextCommand" caretOffset="1449" date="Mon Nov 20 22:46:24 EST 2023" end="1449" start="1443" starttimestamp="1700516585068" timestamp="21799905" />
  <Command __id="3476" _type="MoveCaretCommand" caretOffset="1471" date="Mon Nov 20 22:46:25 EST 2023" docOffset="1471" starttimestamp="1700516585068" timestamp="21800331" />
  <Command __id="3477" _type="InsertStringCommand" date="Mon Nov 20 22:46:29 EST 2023" starttimestamp="1700516585068" timestamp="21804109" timestamp2="21804109">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3478" _type="SelectTextCommand" caretOffset="1427" date="Mon Nov 20 22:46:31 EST 2023" end="1694" start="1427" starttimestamp="1700516585068" timestamp="21806128" />
  <Command __id="3479" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:46:31 EST 2023" starttimestamp="1700516585068" timestamp="21806714" />
  <Command __id="3480" _type="InsertStringCommand" date="Mon Nov 20 22:46:32 EST 2023" starttimestamp="1700516585068" timestamp="21807346" timestamp2="21807346">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="3481" _type="InsertStringCommand" date="Mon Nov 20 22:46:32 EST 2023" starttimestamp="1700516585068" timestamp="21807548" timestamp2="21807548">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="3482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:46:33 EST 2023" starttimestamp="1700516585068" timestamp="21807966" />
  <Command __id="3483" _type="InsertStringCommand" date="Mon Nov 20 22:46:33 EST 2023" starttimestamp="1700516585068" timestamp="21808149" timestamp2="21808149">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3484" _type="InsertStringCommand" date="Mon Nov 20 22:46:33 EST 2023" starttimestamp="1700516585068" timestamp="21808221" timestamp2="21808221">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3485" _type="InsertStringCommand" date="Mon Nov 20 22:46:33 EST 2023" starttimestamp="1700516585068" timestamp="21808383" timestamp2="21808383">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3486" _type="InsertStringCommand" date="Mon Nov 20 22:46:33 EST 2023" starttimestamp="1700516585068" timestamp="21808443" timestamp2="21808443">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3487" _type="InsertStringCommand" date="Mon Nov 20 22:46:34 EST 2023" starttimestamp="1700516585068" timestamp="21808955" timestamp2="21808955">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3488" _type="InsertStringCommand" date="Mon Nov 20 22:46:34 EST 2023" starttimestamp="1700516585068" timestamp="21809005" timestamp2="21809005">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3489" _type="InsertStringCommand" date="Mon Nov 20 22:46:34 EST 2023" starttimestamp="1700516585068" timestamp="21809139" timestamp2="21809139">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3490" _type="InsertStringCommand" date="Mon Nov 20 22:46:34 EST 2023" starttimestamp="1700516585068" timestamp="21809421" timestamp2="21809421">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3491" _type="InsertStringCommand" date="Mon Nov 20 22:46:34 EST 2023" starttimestamp="1700516585068" timestamp="21809793" timestamp2="21809793">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3492" _type="InsertStringCommand" date="Mon Nov 20 22:46:35 EST 2023" starttimestamp="1700516585068" timestamp="21810727" timestamp2="21810727">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3493" _type="InsertStringCommand" date="Mon Nov 20 22:46:35 EST 2023" starttimestamp="1700516585068" timestamp="21810864" timestamp2="21810864">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3494" _type="InsertStringCommand" date="Mon Nov 20 22:46:36 EST 2023" starttimestamp="1700516585068" timestamp="21810937" timestamp2="21810937">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3495" _type="InsertStringCommand" date="Mon Nov 20 22:46:36 EST 2023" starttimestamp="1700516585068" timestamp="21811059" timestamp2="21811059">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3496" _type="InsertStringCommand" date="Mon Nov 20 22:46:36 EST 2023" starttimestamp="1700516585068" timestamp="21811202" timestamp2="21811202">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3497" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:46:36 EST 2023" starttimestamp="1700516585068" timestamp="21811546" />
  <Command __id="3498" _type="InsertStringCommand" date="Mon Nov 20 22:46:36 EST 2023" starttimestamp="1700516585068" timestamp="21811789" timestamp2="21811789">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3499" _type="InsertStringCommand" date="Mon Nov 20 22:46:37 EST 2023" starttimestamp="1700516585068" timestamp="21812164" timestamp2="21812164">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:46:38 EST 2023" starttimestamp="1700516585068" timestamp="21813231" />
  <Command __id="3501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:46:38 EST 2023" starttimestamp="1700516585068" timestamp="21813332" />
  <Command __id="3502" _type="InsertStringCommand" date="Mon Nov 20 22:46:38 EST 2023" starttimestamp="1700516585068" timestamp="21813577" timestamp2="21813577">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3503" _type="MoveCaretCommand" caretOffset="1446" date="Mon Nov 20 22:46:39 EST 2023" docOffset="1446" starttimestamp="1700516585068" timestamp="21814816" />
  <Command __id="3504" _type="InsertStringCommand" date="Mon Nov 20 22:46:40 EST 2023" starttimestamp="1700516585068" timestamp="21815361" timestamp2="21815361">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3505" _type="InsertStringCommand" date="Mon Nov 20 22:46:40 EST 2023" starttimestamp="1700516585068" timestamp="21815404" timestamp2="21815404">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3506" _type="InsertStringCommand" date="Mon Nov 20 22:46:40 EST 2023" starttimestamp="1700516585068" timestamp="21815469" timestamp2="21815469">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3507" _type="InsertStringCommand" date="Mon Nov 20 22:46:40 EST 2023" starttimestamp="1700516585068" timestamp="21815577" timestamp2="21815577">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3508" _type="MoveCaretCommand" caretOffset="1459" date="Mon Nov 20 22:46:41 EST 2023" docOffset="1459" starttimestamp="1700516585068" timestamp="21816144" />
  <Command __id="3509" _type="MoveCaretCommand" caretOffset="1453" date="Mon Nov 20 22:46:42 EST 2023" docOffset="1453" starttimestamp="1700516585068" timestamp="21817344" />
  <Command __id="3510" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:46:42 EST 2023" starttimestamp="1700516585068" timestamp="21817806" />
  <Command __id="3511" _type="MoveCaretCommand" caretOffset="1426" date="Mon Nov 20 22:46:43 EST 2023" docOffset="1426" starttimestamp="1700516585068" timestamp="21818431" />
  <Command __id="3512" _type="SelectTextCommand" caretOffset="94" date="Mon Nov 20 22:46:46 EST 2023" end="132" start="94" starttimestamp="1700516585068" timestamp="21821130" />
  <Command __id="3513" _type="CopyCommand" date="Mon Nov 20 22:46:46 EST 2023" starttimestamp="1700516585068" timestamp="21821263" />
  <Command __id="3514" _type="MoveCaretCommand" caretOffset="93" date="Mon Nov 20 22:46:46 EST 2023" docOffset="93" starttimestamp="1700516585068" timestamp="21821610" />
  <Command __id="3515" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 22:46:46 EST 2023" docOffset="132" starttimestamp="1700516585068" timestamp="21821894" />
  <Command __id="3516" _type="InsertStringCommand" date="Mon Nov 20 22:46:47 EST 2023" starttimestamp="1700516585068" timestamp="21822457" timestamp2="21822457">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3517" _type="PasteCommand" date="Mon Nov 20 22:46:47 EST 2023" starttimestamp="1700516585068" timestamp="21822595" />
  <Command __id="3518" _type="SelectTextCommand" caretOffset="163" date="Mon Nov 20 22:46:49 EST 2023" end="166" start="163" starttimestamp="1700516585068" timestamp="21824276" />
  <Command __id="3519" _type="InsertStringCommand" date="Mon Nov 20 22:46:49 EST 2023" starttimestamp="1700516585068" timestamp="21824370" timestamp2="21824370">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3520" _type="MoveCaretCommand" caretOffset="259" date="Mon Nov 20 22:46:49 EST 2023" docOffset="259" starttimestamp="1700516585068" timestamp="21824603" />
  <Command __id="3521" _type="MoveCaretCommand" caretOffset="1495" date="Mon Nov 20 22:46:51 EST 2023" docOffset="1495" starttimestamp="1700516585068" timestamp="21826351" />
  <Command __id="3522" _type="SelectTextCommand" caretOffset="1552" date="Mon Nov 20 22:46:53 EST 2023" end="1552" start="1541" starttimestamp="1700516585068" timestamp="21828185" />
  <Command __id="3523" _type="MoveCaretCommand" caretOffset="1553" date="Mon Nov 20 22:46:53 EST 2023" docOffset="1553" starttimestamp="1700516585068" timestamp="21828390" />
  <Command __id="3524" _type="MoveCaretCommand" caretOffset="1520" date="Mon Nov 20 22:46:53 EST 2023" docOffset="1520" starttimestamp="1700516585068" timestamp="21828721" />
  <Command __id="3525" _type="SelectTextCommand" caretOffset="1524" date="Mon Nov 20 22:46:53 EST 2023" end="1524" start="1513" starttimestamp="1700516585068" timestamp="21828829" />
  <Command __id="3526" _type="InsertStringCommand" date="Mon Nov 20 22:46:54 EST 2023" starttimestamp="1700516585068" timestamp="21829080" timestamp2="21829080">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3527" _type="InsertStringCommand" date="Mon Nov 20 22:46:54 EST 2023" starttimestamp="1700516585068" timestamp="21829309" timestamp2="21829309">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3528" _type="InsertStringCommand" date="Mon Nov 20 22:46:54 EST 2023" starttimestamp="1700516585068" timestamp="21829543" timestamp2="21829543">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3529" _type="InsertStringCommand" date="Mon Nov 20 22:46:54 EST 2023" starttimestamp="1700516585068" timestamp="21829748" timestamp2="21829748">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3530" _type="InsertStringCommand" date="Mon Nov 20 22:46:54 EST 2023" starttimestamp="1700516585068" timestamp="21829838" timestamp2="21829838">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3531" _type="InsertStringCommand" date="Mon Nov 20 22:46:54 EST 2023" starttimestamp="1700516585068" timestamp="21829924" timestamp2="21829924">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3532" _type="InsertStringCommand" date="Mon Nov 20 22:46:55 EST 2023" starttimestamp="1700516585068" timestamp="21830045" timestamp2="21830045">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3533" _type="InsertStringCommand" date="Mon Nov 20 22:46:55 EST 2023" starttimestamp="1700516585068" timestamp="21830056" timestamp2="21830056">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3534" _type="InsertStringCommand" date="Mon Nov 20 22:46:55 EST 2023" starttimestamp="1700516585068" timestamp="21830151" timestamp2="21830151">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3535" _type="SelectTextCommand" caretOffset="1606" date="Mon Nov 20 22:46:57 EST 2023" end="1606" start="1540" starttimestamp="1700516585068" timestamp="21832509" />
  <Command __id="3536" _type="InsertStringCommand" date="Mon Nov 20 22:46:57 EST 2023" starttimestamp="1700516585068" timestamp="21832913" timestamp2="21832913">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3537" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833023" timestamp2="21833023">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3538" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833207" timestamp2="21833207">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3539" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833315" timestamp2="21833315">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3540" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833401" timestamp2="21833401">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3541" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833462" timestamp2="21833462">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3542" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833585" timestamp2="21833585">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3543" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833702" timestamp2="21833702">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3544" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833766" timestamp2="21833766">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3545" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833852" timestamp2="21833852">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3546" _type="InsertStringCommand" date="Mon Nov 20 22:46:58 EST 2023" starttimestamp="1700516585068" timestamp="21833924" timestamp2="21833924">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3547" _type="InsertStringCommand" date="Mon Nov 20 22:46:59 EST 2023" starttimestamp="1700516585068" timestamp="21834373" timestamp2="21834373">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3548" _type="InsertStringCommand" date="Mon Nov 20 22:46:59 EST 2023" starttimestamp="1700516585068" timestamp="21834568" timestamp2="21834568">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3549" _type="InsertStringCommand" date="Mon Nov 20 22:46:59 EST 2023" starttimestamp="1700516585068" timestamp="21834646" timestamp2="21834646">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3550" _type="InsertStringCommand" date="Mon Nov 20 22:47:00 EST 2023" starttimestamp="1700516585068" timestamp="21834949" timestamp2="21834949">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3551" _type="InsertStringCommand" date="Mon Nov 20 22:47:00 EST 2023" starttimestamp="1700516585068" timestamp="21835173" timestamp2="21835173">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3552" _type="InsertStringCommand" date="Mon Nov 20 22:47:00 EST 2023" starttimestamp="1700516585068" timestamp="21835263" timestamp2="21835263">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3553" _type="InsertStringCommand" date="Mon Nov 20 22:47:00 EST 2023" starttimestamp="1700516585068" timestamp="21835357" timestamp2="21835357">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3554" _type="InsertStringCommand" date="Mon Nov 20 22:47:00 EST 2023" starttimestamp="1700516585068" timestamp="21835506" timestamp2="21835506">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3555" _type="MoveCaretCommand" caretOffset="1561" date="Mon Nov 20 22:47:01 EST 2023" docOffset="1561" starttimestamp="1700516585068" timestamp="21836400" />
  <Command __id="3556" _type="SelectTextCommand" caretOffset="802" date="Mon Nov 20 22:47:04 EST 2023" end="802" start="734" starttimestamp="1700516585068" timestamp="21839254" />
  <Command __id="3557" _type="InsertStringCommand" date="Mon Nov 20 22:47:04 EST 2023" starttimestamp="1700516585068" timestamp="21839753" timestamp2="21839753">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3558" _type="InsertStringCommand" date="Mon Nov 20 22:47:04 EST 2023" starttimestamp="1700516585068" timestamp="21839819" timestamp2="21839819">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3559" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21839957" timestamp2="21839957">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3560" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840019" timestamp2="21840019">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3561" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840138" timestamp2="21840138">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3562" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840182" timestamp2="21840182">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3563" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840302" timestamp2="21840302">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3564" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840422" timestamp2="21840422">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3565" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840453" timestamp2="21840453">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3566" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840558" timestamp2="21840558">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3567" _type="InsertStringCommand" date="Mon Nov 20 22:47:05 EST 2023" starttimestamp="1700516585068" timestamp="21840599" timestamp2="21840599">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3568" _type="InsertStringCommand" date="Mon Nov 20 22:47:06 EST 2023" starttimestamp="1700516585068" timestamp="21841230" timestamp2="21841230">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3569" _type="InsertStringCommand" date="Mon Nov 20 22:47:06 EST 2023" starttimestamp="1700516585068" timestamp="21841456" timestamp2="21841456">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3570" _type="InsertStringCommand" date="Mon Nov 20 22:47:06 EST 2023" starttimestamp="1700516585068" timestamp="21841503" timestamp2="21841503">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3571" _type="InsertStringCommand" date="Mon Nov 20 22:47:06 EST 2023" starttimestamp="1700516585068" timestamp="21841786" timestamp2="21841786">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="3572" _type="InsertStringCommand" date="Mon Nov 20 22:47:06 EST 2023" starttimestamp="1700516585068" timestamp="21841909" timestamp2="21841909">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:47:07 EST 2023" starttimestamp="1700516585068" timestamp="21842238" />
  <Command __id="3574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:47:07 EST 2023" starttimestamp="1700516585068" timestamp="21842325" />
  <Command __id="3575" _type="InsertStringCommand" date="Mon Nov 20 22:47:07 EST 2023" starttimestamp="1700516585068" timestamp="21842449" timestamp2="21842449">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3576" _type="InsertStringCommand" date="Mon Nov 20 22:47:07 EST 2023" starttimestamp="1700516585068" timestamp="21842706" timestamp2="21842706">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3577" _type="InsertStringCommand" date="Mon Nov 20 22:47:07 EST 2023" starttimestamp="1700516585068" timestamp="21842823" timestamp2="21842823">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3578" _type="InsertStringCommand" date="Mon Nov 20 22:47:08 EST 2023" starttimestamp="1700516585068" timestamp="21842973" timestamp2="21842973">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3579" _type="InsertStringCommand" date="Mon Nov 20 22:47:08 EST 2023" starttimestamp="1700516585068" timestamp="21843458" timestamp2="21843458">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3253" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:34:45 EST 2023" docASTNodeCount="52" docActiveCodeLength="287" docExpressionCount="35" docLength="321" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21100853">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/loadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class loadEvaluator implements Evaluator {	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3266" _type="Replace" date="Mon Nov 20 22:36:24 EST 2023" docASTNodeCount="233" docActiveCodeLength="1641" docExpressionCount="168" docLength="1960" endLine="15" insertionLength="1960" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="321" offset="0" startLine="0" starttimestamp="1700516585068" timestamp="21199600">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class loadEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModelSingleton;
import main.lisp.interpreter.ObservableLispInterpreter;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression arg0, Environment arg1) {
        // Ensure the argument is a string
        if (!(arg0 instanceof main.lisp.parser.terms.StringAtom)) {
            throw new IllegalStateException("Argument to load must be a string");
        }

        String fileName = ((main.lisp.parser.terms.StringAtom) arg0).getValue();
        try {
            // Read all lines from the specified file
            List<String> lines = Files.readAllLines(Path.of(fileName));

            // Get the singleton instance of the interpreter model
            ObservableLispInterpreter interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            // Check if any error occurred during execution
            SExpression result = interpreterModel.getPropertyValue(ObservableLispInterpreter.RESULT_PROPERTY);
            if (result instanceof NilAtom) {
                // An error occurred during execution
                return new NilAtom();
            } else {
                // No error detected
                return new main.lisp.parser.terms.TAtom();
            }
        } catch (IOException e) {
            throw new IllegalStateException("Error reading file: " + fileName);
        }
    }
}
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3269" _type="Delete" date="Mon Nov 20 22:36:27 EST 2023" docASTNodeCount="233" docActiveCodeLength="1640" docExpressionCount="168" docLength="1959" endLine="14" length="1" offset="409" startLine="14" starttimestamp="1700516585068" timestamp="21202294">
    <text><![CDATA[L]]></text>
  </DocumentChange>
  <DocumentChange __id="3271" _type="Insert" date="Mon Nov 20 22:36:27 EST 2023" docASTNodeCount="233" docActiveCodeLength="1641" docExpressionCount="168" docLength="1960" length="1" offset="409" starttimestamp="1700516585068" timestamp="21202424">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="3580" _type="MoveCaretCommand" caretOffset="755" date="Mon Nov 20 22:47:09 EST 2023" docOffset="755" starttimestamp="1700516585068" timestamp="21844190" />
  <Command __id="3581" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:47:09 EST 2023" starttimestamp="1700516585068" timestamp="21844356" />
  <Command __id="3582" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:47:09 EST 2023" starttimestamp="1700516585068" timestamp="21844454" />
  <Command __id="3583" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:47:09 EST 2023" starttimestamp="1700516585068" timestamp="21844462" />
  <Command __id="3584" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:47:11 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21846184">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class QuoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3585" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 22:47:11 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="21846220" />
  <Command __id="3586" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:47:12 EST 2023" docASTNodeCount="60" docActiveCodeLength="505" docExpressionCount="39" docLength="505" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21847171">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new "), Diff(DELETE,"q"), Diff(INSERT,"Q"), Diff(EQUAL,"uoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new "), Diff(DELETE,"l"), Diff(INSERT,"L"), Diff(EQUAL,"istEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3587" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 22:47:12 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="21847225" />
  <Command __id="3588" _type="MoveCaretCommand" caretOffset="427" date="Mon Nov 20 22:47:13 EST 2023" docOffset="427" starttimestamp="1700516585068" timestamp="21848140" />
  <Command __id="3589" _type="MoveCaretCommand" caretOffset="427" date="Mon Nov 20 22:47:13 EST 2023" docOffset="427" starttimestamp="1700516585068" timestamp="21848140" />
  <Command __id="3590" _type="MoveCaretCommand" caretOffset="424" date="Mon Nov 20 22:47:13 EST 2023" docOffset="424" starttimestamp="1700516585068" timestamp="21848867" />
  <Command __id="3591" _type="MoveCaretCommand" caretOffset="424" date="Mon Nov 20 22:47:13 EST 2023" docOffset="424" starttimestamp="1700516585068" timestamp="21848867" />
  <DocumentChange __id="3592" _type="Insert" date="Mon Nov 20 22:47:14 EST 2023" docASTNodeCount="60" docActiveCodeLength="506" docExpressionCount="39" docLength="506" length="1" offset="424" starttimestamp="1700516585068" timestamp="21849367">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <Command __id="3593" _type="InsertStringCommand" date="Mon Nov 20 22:47:14 EST 2023" starttimestamp="1700516585068" timestamp="21849370" timestamp2="21849370">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="3594" _type="InsertStringCommand" date="Mon Nov 20 22:47:14 EST 2023" starttimestamp="1700516585068" timestamp="21849370" timestamp2="21849370">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="3596" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:47:15 EST 2023" starttimestamp="1700516585068" timestamp="21850149" />
  <Command __id="3597" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:47:15 EST 2023" starttimestamp="1700516585068" timestamp="21850149" />
  <Command __id="3598" _type="SelectTextCommand" caretOffset="333" date="Mon Nov 20 22:47:17 EST 2023" end="424" start="333" starttimestamp="1700516585068" timestamp="21851939" />
  <Command __id="3599" _type="SelectTextCommand" caretOffset="333" date="Mon Nov 20 22:47:17 EST 2023" end="424" start="333" starttimestamp="1700516585068" timestamp="21851940" />
  <Command __id="3600" _type="CopyCommand" date="Mon Nov 20 22:47:17 EST 2023" starttimestamp="1700516585068" timestamp="21852098" />
  <Command __id="3601" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 22:47:17 EST 2023" docOffset="330" starttimestamp="1700516585068" timestamp="21852455" />
  <Command __id="3602" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 22:47:17 EST 2023" docOffset="330" starttimestamp="1700516585068" timestamp="21852455" />
  <Command __id="3603" _type="MoveCaretCommand" caretOffset="424" date="Mon Nov 20 22:47:17 EST 2023" docOffset="424" starttimestamp="1700516585068" timestamp="21852916" />
  <Command __id="3604" _type="MoveCaretCommand" caretOffset="424" date="Mon Nov 20 22:47:17 EST 2023" docOffset="424" starttimestamp="1700516585068" timestamp="21852916" />
  <Command __id="3606" _type="InsertStringCommand" date="Mon Nov 20 22:47:18 EST 2023" starttimestamp="1700516585068" timestamp="21853372" timestamp2="21853372">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3607" _type="InsertStringCommand" date="Mon Nov 20 22:47:18 EST 2023" starttimestamp="1700516585068" timestamp="21853372" timestamp2="21853372">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3609" _type="PasteCommand" date="Mon Nov 20 22:47:18 EST 2023" starttimestamp="1700516585068" timestamp="21853539" />
  <Command __id="3610" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 22:47:19 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="21854923" />
  <Command __id="3611" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 22:47:19 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="21854924" />
  <Command __id="3612" _type="SelectTextCommand" caretOffset="514" date="Mon Nov 20 22:47:20 EST 2023" end="514" start="501" starttimestamp="1700516585068" timestamp="21855085" />
  <Command __id="3613" _type="SelectTextCommand" caretOffset="514" date="Mon Nov 20 22:47:20 EST 2023" end="514" start="501" starttimestamp="1700516585068" timestamp="21855085" />
  <Command __id="3614" _type="MoveCaretCommand" caretOffset="505" date="Mon Nov 20 22:47:20 EST 2023" docOffset="505" starttimestamp="1700516585068" timestamp="21855353" />
  <Command __id="3615" _type="MoveCaretCommand" caretOffset="505" date="Mon Nov 20 22:47:20 EST 2023" docOffset="505" starttimestamp="1700516585068" timestamp="21855353" />
  <Command __id="3616" _type="SelectTextCommand" caretOffset="501" date="Mon Nov 20 22:47:21 EST 2023" end="505" start="501" starttimestamp="1700516585068" timestamp="21856222" />
  <Command __id="3617" _type="SelectTextCommand" caretOffset="501" date="Mon Nov 20 22:47:21 EST 2023" end="505" start="501" starttimestamp="1700516585068" timestamp="21856222" />
  <Command __id="3619" _type="InsertStringCommand" date="Mon Nov 20 22:47:21 EST 2023" starttimestamp="1700516585068" timestamp="21856684" timestamp2="21856684">
    <data><![CDATA[Q]]></data>
  </Command>
  <Command __id="3620" _type="InsertStringCommand" date="Mon Nov 20 22:47:21 EST 2023" starttimestamp="1700516585068" timestamp="21856684" timestamp2="21856684">
    <data><![CDATA[Q]]></data>
  </Command>
  <Command __id="3622" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857217" timestamp2="21857217">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3623" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857217" timestamp2="21857217">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3625" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857276" timestamp2="21857276">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3626" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857276" timestamp2="21857276">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3628" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857336" timestamp2="21857336">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3629" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857336" timestamp2="21857336">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3631" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857401" timestamp2="21857401">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3632" _type="InsertStringCommand" date="Mon Nov 20 22:47:22 EST 2023" starttimestamp="1700516585068" timestamp="21857401" timestamp2="21857401">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="3595" _type="Delete" date="Mon Nov 20 22:47:15 EST 2023" docASTNodeCount="60" docActiveCodeLength="505" docExpressionCount="39" docLength="505" endLine="9" length="1" offset="424" startLine="9" starttimestamp="1700516585068" timestamp="21850146">
    <text><![CDATA[\]]></text>
  </DocumentChange>
  <DocumentChange __id="3605" _type="Insert" date="Mon Nov 20 22:47:18 EST 2023" docASTNodeCount="60" docActiveCodeLength="508" docExpressionCount="39" docLength="508" length="3" offset="424" starttimestamp="1700516585068" timestamp="21853368">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3608" _type="Replace" date="Mon Nov 20 22:47:18 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" endLine="10" insertionLength="93" int_docASTNodeCount="60" int_docActiveCodeLength="506" int_docExpressionCount="39" int_docLength="506" length="2" offset="425" startLine="10" starttimestamp="1700516585068" timestamp="21853535">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3618" _type="Replace" date="Mon Nov 20 22:47:21 EST 2023" docASTNodeCount="70" docActiveCodeLength="596" docExpressionCount="47" docLength="596" endLine="10" insertionLength="1" int_docASTNodeCount="70" int_docActiveCodeLength="595" int_docExpressionCount="47" int_docLength="595" length="4" offset="501" startLine="10" starttimestamp="1700516585068" timestamp="21856680">
    <deletedText><![CDATA[List]]></deletedText>
    <insertedText><![CDATA[Q]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3621" _type="Insert" date="Mon Nov 20 22:47:22 EST 2023" docASTNodeCount="70" docActiveCodeLength="600" docExpressionCount="47" docLength="600" length="4" offset="502" repeat="4" starttimestamp="1700516585068" timestamp="21857215" timestamp2="21857398">
    <text><![CDATA[uote]]></text>
  </DocumentChange>
  <Command __id="3633" _type="MoveCaretCommand" caretOffset="492" date="Mon Nov 20 22:47:23 EST 2023" docOffset="492" starttimestamp="1700516585068" timestamp="21858703" />
  <Command __id="3634" _type="MoveCaretCommand" caretOffset="492" date="Mon Nov 20 22:47:23 EST 2023" docOffset="492" starttimestamp="1700516585068" timestamp="21858704" />
  <Command __id="3635" _type="SelectTextCommand" caretOffset="494" date="Mon Nov 20 22:47:23 EST 2023" end="494" start="490" starttimestamp="1700516585068" timestamp="21858837" />
  <Command __id="3636" _type="SelectTextCommand" caretOffset="494" date="Mon Nov 20 22:47:23 EST 2023" end="494" start="490" starttimestamp="1700516585068" timestamp="21858837" />
  <DocumentChange __id="3637" _type="Replace" date="Mon Nov 20 22:47:27 EST 2023" docASTNodeCount="70" docActiveCodeLength="597" docExpressionCount="47" docLength="597" endLine="10" insertionLength="1" int_docASTNodeCount="70" int_docActiveCodeLength="596" int_docExpressionCount="47" int_docLength="596" length="4" offset="490" startLine="10" starttimestamp="1700516585068" timestamp="21862090">
    <deletedText><![CDATA[list]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <Command __id="3638" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862093" timestamp2="21862093">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3639" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862093" timestamp2="21862093">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3641" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862238" timestamp2="21862238">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3642" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862238" timestamp2="21862238">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3644" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862279" timestamp2="21862279">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3645" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862279" timestamp2="21862279">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3647" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862419" timestamp2="21862419">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3648" _type="InsertStringCommand" date="Mon Nov 20 22:47:27 EST 2023" starttimestamp="1700516585068" timestamp="21862419" timestamp2="21862419">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3649" _type="SelectTextCommand" caretOffset="501" date="Mon Nov 20 22:47:29 EST 2023" end="506" start="501" starttimestamp="1700516585068" timestamp="21864378" />
  <Command __id="3650" _type="SelectTextCommand" caretOffset="501" date="Mon Nov 20 22:47:29 EST 2023" end="506" start="501" starttimestamp="1700516585068" timestamp="21864379" />
  <Command __id="3652" _type="InsertStringCommand" date="Mon Nov 20 22:47:29 EST 2023" starttimestamp="1700516585068" timestamp="21864922" timestamp2="21864922">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3653" _type="InsertStringCommand" date="Mon Nov 20 22:47:29 EST 2023" starttimestamp="1700516585068" timestamp="21864922" timestamp2="21864922">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3655" _type="InsertStringCommand" date="Mon Nov 20 22:47:30 EST 2023" starttimestamp="1700516585068" timestamp="21865050" timestamp2="21865050">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3656" _type="InsertStringCommand" date="Mon Nov 20 22:47:30 EST 2023" starttimestamp="1700516585068" timestamp="21865050" timestamp2="21865050">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3658" _type="InsertStringCommand" date="Mon Nov 20 22:47:30 EST 2023" starttimestamp="1700516585068" timestamp="21865103" timestamp2="21865103">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3659" _type="InsertStringCommand" date="Mon Nov 20 22:47:30 EST 2023" starttimestamp="1700516585068" timestamp="21865103" timestamp2="21865103">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3661" _type="InsertStringCommand" date="Mon Nov 20 22:47:30 EST 2023" starttimestamp="1700516585068" timestamp="21865230" timestamp2="21865230">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3662" _type="InsertStringCommand" date="Mon Nov 20 22:47:30 EST 2023" starttimestamp="1700516585068" timestamp="21865230" timestamp2="21865230">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3663" _type="MoveCaretCommand" caretOffset="525" date="Mon Nov 20 22:47:30 EST 2023" docOffset="525" starttimestamp="1700516585068" timestamp="21865737" />
  <Command __id="3664" _type="MoveCaretCommand" caretOffset="525" date="Mon Nov 20 22:47:30 EST 2023" docOffset="525" starttimestamp="1700516585068" timestamp="21865737" />
  <Command __id="3665" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:47:31 EST 2023" starttimestamp="1700516585068" timestamp="21865941" />
  <Command __id="3666" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:47:31 EST 2023" starttimestamp="1700516585068" timestamp="21866039" />
  <Command __id="3667" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:47:31 EST 2023" starttimestamp="1700516585068" timestamp="21866047" />
  <DocumentChange __id="3640" _type="Insert" date="Mon Nov 20 22:47:27 EST 2023" docASTNodeCount="70" docActiveCodeLength="600" docExpressionCount="47" docLength="600" length="3" offset="491" repeat="3" starttimestamp="1700516585068" timestamp="21862236" timestamp2="21862416">
    <text><![CDATA[oad]]></text>
  </DocumentChange>
  <DocumentChange __id="3651" _type="Replace" date="Mon Nov 20 22:47:29 EST 2023" docASTNodeCount="70" docActiveCodeLength="596" docExpressionCount="47" docLength="596" endLine="10" insertionLength="1" int_docASTNodeCount="70" int_docActiveCodeLength="595" int_docExpressionCount="47" int_docLength="595" length="5" offset="501" startLine="10" starttimestamp="1700516585068" timestamp="21864918">
    <deletedText><![CDATA[Quote]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3654" _type="Insert" date="Mon Nov 20 22:47:30 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" length="3" offset="502" repeat="3" starttimestamp="1700516585068" timestamp="21865049" timestamp2="21865228">
    <text><![CDATA[oad]]></text>
  </DocumentChange>
  <Command __id="3668" _type="MoveCaretCommand" caretOffset="521" date="Mon Nov 20 22:47:32 EST 2023" docOffset="521" starttimestamp="1700516585068" timestamp="21867677" />
  <Command __id="3669" _type="MoveCaretCommand" caretOffset="521" date="Mon Nov 20 22:47:32 EST 2023" docOffset="521" starttimestamp="1700516585068" timestamp="21867677" />
  <Command __id="3670" _type="MoveCaretCommand" caretOffset="525" date="Mon Nov 20 22:47:33 EST 2023" docOffset="525" starttimestamp="1700516585068" timestamp="21867962" />
  <Command __id="3671" _type="MoveCaretCommand" caretOffset="525" date="Mon Nov 20 22:47:33 EST 2023" docOffset="525" starttimestamp="1700516585068" timestamp="21867962" />
  <Command __id="3672" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 22:47:33 EST 2023" docOffset="537" starttimestamp="1700516585068" timestamp="21868151" />
  <Command __id="3673" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 22:47:33 EST 2023" docOffset="537" starttimestamp="1700516585068" timestamp="21868151" />
  <Command __id="3675" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 22:47:38 EST 2023" docOffset="529" starttimestamp="1700516585068" timestamp="21873305" />
  <Command __id="3676" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 22:47:39 EST 2023" starttimestamp="1700516585068" timestamp="21874844" />
  <Command __id="3677" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:47:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21874983" type="Run" />
  <Command __id="3678" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:47:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21874983" type="Run" />
  <Command __id="3679" _type="ShellCommand" date="Mon Nov 20 22:47:40 EST 2023" starttimestamp="1700516585068" timestamp="21875313" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3680" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879633" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)"), Diff(INSERT,"¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3681" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879634" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3682" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879641" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,0.0,0.0,"), Diff(DELETE,"No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3683" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879642" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3684" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879642" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3685" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879658" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3686" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879661" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"¶Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3687" _type="ConsoleOutput" date="Mon Nov 20 22:47:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21879663" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3688" _type="ShellCommand" date="Mon Nov 20 22:47:50 EST 2023" starttimestamp="1700516585068" timestamp="21885349" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3689" _type="LocalChecksRawCommand" date="Mon Nov 20 22:47:50 EST 2023" starttimestamp="1700516585068" timestamp="21885354">
    <CSVRow><![CDATA[88,Mon Nov 20 22:47:44 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,50,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3690" _type="LocalChecksRawCommand" date="Mon Nov 20 22:47:50 EST 2023" starttimestamp="1700516585068" timestamp="21885354">
    <CSVRow><![CDATA[88,Mon Nov 20 22:47:44 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,50,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3691" _type="ShellCommand" date="Mon Nov 20 22:47:52 EST 2023" starttimestamp="1700516585068" timestamp="21887186" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3674" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:47:38 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21873257">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3692" _type="ShellCommand" date="Mon Nov 20 22:48:02 EST 2023" starttimestamp="1700516585068" timestamp="21897877" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3693" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:48:03 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="21897947" />
  <Command __id="3694" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:48:03 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="21897947" />
  <Command __id="3695" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:48:04 EST 2023" docASTNodeCount="254" docActiveCodeLength="1630" docExpressionCount="122" docLength="2140" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21899494">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"ListEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"q"), Diff(INSERT,"Q"), Diff(EQUAL,"uoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="3696" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 22:48:04 EST 2023" docOffset="1334" starttimestamp="1700516585068" timestamp="21899550" />
  <Command __id="3697" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:48:05 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21900214">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());	"), Diff(INSERT,"	BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	"), Diff(EQUAL,"}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3698" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 22:48:05 EST 2023" docOffset="537" starttimestamp="1700516585068" timestamp="21900267" />
  <Command __id="3700" _type="MoveCaretCommand" caretOffset="755" date="Mon Nov 20 22:48:06 EST 2023" docOffset="755" starttimestamp="1700516585068" timestamp="21901149" />
  <Command __id="3699" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:48:06 EST 2023" docASTNodeCount="217" docActiveCodeLength="1317" docExpressionCount="159" docLength="1532" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21901107">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;
import main.lisp.interpreter.ObservableLispInterpreter;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression arg0, Environment arg1) {
        // Ensure the argument is a string
        if (!(arg0 instanceof main.lisp.parser.terms.StringAtom)) {
            return new NilAtom();
        }

        String fileName = ((main.lisp.parser.terms.StringAtom) arg0).getValue();
        try {
            // Read all lines from the specified file
            List<String> lines = Files.readAllLines(Path.of(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            return new TAtom();
        } catch (Exception e) {
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="3701" _type="MoveCaretCommand" caretOffset="1469" date="Mon Nov 20 22:48:09 EST 2023" docOffset="1469" starttimestamp="1700516585068" timestamp="21903960" />
  <Command __id="3702" _type="SelectTextCommand" caretOffset="1474" date="Mon Nov 20 22:48:09 EST 2023" end="1474" start="1465" starttimestamp="1700516585068" timestamp="21904109" />
  <DocumentChange __id="3703" _type="Replace" date="Mon Nov 20 22:48:12 EST 2023" docASTNodeCount="217" docActiveCodeLength="1309" docExpressionCount="159" docLength="1524" endLine="42" insertionLength="1" int_docASTNodeCount="217" int_docActiveCodeLength="1308" int_docExpressionCount="159" int_docLength="1523" length="9" offset="1465" startLine="42" starttimestamp="1700516585068" timestamp="21907116">
    <deletedText><![CDATA[Exception]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <Command __id="3704" _type="InsertStringCommand" date="Mon Nov 20 22:48:12 EST 2023" starttimestamp="1700516585068" timestamp="21907124" timestamp2="21907124">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3706" _type="InsertStringCommand" date="Mon Nov 20 22:48:12 EST 2023" starttimestamp="1700516585068" timestamp="21907169" timestamp2="21907169">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3708" _type="InsertStringCommand" date="Mon Nov 20 22:48:12 EST 2023" starttimestamp="1700516585068" timestamp="21907288" timestamp2="21907288">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3710" _type="InsertStringCommand" date="Mon Nov 20 22:48:12 EST 2023" starttimestamp="1700516585068" timestamp="21907590" timestamp2="21907590">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3712" _type="InsertStringCommand" date="Mon Nov 20 22:48:12 EST 2023" starttimestamp="1700516585068" timestamp="21907848" timestamp2="21907848">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3714" _type="InsertStringCommand" date="Mon Nov 20 22:48:13 EST 2023" starttimestamp="1700516585068" timestamp="21908043" timestamp2="21908043">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3716" _type="InsertStringCommand" date="Mon Nov 20 22:48:13 EST 2023" starttimestamp="1700516585068" timestamp="21908136" timestamp2="21908136">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3718" _type="InsertStringCommand" date="Mon Nov 20 22:48:13 EST 2023" starttimestamp="1700516585068" timestamp="21908239" timestamp2="21908239">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3720" _type="InsertStringCommand" date="Mon Nov 20 22:48:13 EST 2023" starttimestamp="1700516585068" timestamp="21908344" timestamp2="21908344">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3722" _type="InsertStringCommand" date="Mon Nov 20 22:48:13 EST 2023" starttimestamp="1700516585068" timestamp="21908386" timestamp2="21908386">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3724" _type="InsertStringCommand" date="Mon Nov 20 22:48:13 EST 2023" starttimestamp="1700516585068" timestamp="21908492" timestamp2="21908492">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3725" _type="MoveCaretCommand" caretOffset="1415" date="Mon Nov 20 22:48:14 EST 2023" docOffset="1415" starttimestamp="1700516585068" timestamp="21909214" />
  <Command __id="3726" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:48:15 EST 2023" starttimestamp="1700516585068" timestamp="21910218" />
  <Command __id="3727" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:48:15 EST 2023" starttimestamp="1700516585068" timestamp="21910319" />
  <Command __id="3728" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:48:15 EST 2023" starttimestamp="1700516585068" timestamp="21910328" />
  <Command __id="3729" _type="ShellCommand" date="Mon Nov 20 22:48:16 EST 2023" starttimestamp="1700516585068" timestamp="21911207" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3730" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:48:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21911602" type="Run" />
  <Command __id="3731" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:48:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21911602" type="Run" />
  <Command __id="3732" _type="ShellCommand" date="Mon Nov 20 22:48:16 EST 2023" starttimestamp="1700516585068" timestamp="21911632" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3734" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 22:48:17 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="21912423" />
  <Command __id="3735" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 22:48:19 EST 2023" starttimestamp="1700516585068" timestamp="21913961" />
  <Command __id="3736" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:48:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21914086" type="Run" />
  <Command __id="3737" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:48:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21914086" type="Run" />
  <Command __id="3738" _type="ShellCommand" date="Mon Nov 20 22:48:19 EST 2023" starttimestamp="1700516585068" timestamp="21914393" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3739" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917802" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3740" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917803" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3741" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917809" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment"), Diff(INSERT,"execution time (ms):"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="3742" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917810" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3743" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917811" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3744" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917811" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3745" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917827" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3746" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917830" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3747" _type="ConsoleOutput" date="Mon Nov 20 22:48:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21917832" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3748" _type="ShellCommand" date="Mon Nov 20 22:48:27 EST 2023" starttimestamp="1700516585068" timestamp="21922334" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3749" _type="LocalChecksRawCommand" date="Mon Nov 20 22:48:27 EST 2023" starttimestamp="1700516585068" timestamp="21922336">
    <CSVRow><![CDATA[89,Mon Nov 20 22:48:22 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,51,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3750" _type="LocalChecksRawCommand" date="Mon Nov 20 22:48:27 EST 2023" starttimestamp="1700516585068" timestamp="21922336">
    <CSVRow><![CDATA[89,Mon Nov 20 22:48:22 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,51,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <DocumentChange __id="3705" _type="Insert" date="Mon Nov 20 22:48:12 EST 2023" docASTNodeCount="217" docActiveCodeLength="1319" docExpressionCount="159" docLength="1534" length="10" offset="1466" repeat="10" starttimestamp="1700516585068" timestamp="21907168" timestamp2="21908490">
    <text><![CDATA[OException]]></text>
  </DocumentChange>
  <Command __id="3733" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:48:17 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21912378">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3751" _type="MoveCaretCommand" caretOffset="461" date="Mon Nov 20 22:48:45 EST 2023" docOffset="578" starttimestamp="1700516585068" timestamp="21940538" />
  <Command __id="3752" _type="MoveCaretCommand" caretOffset="461" date="Mon Nov 20 22:48:45 EST 2023" docOffset="578" starttimestamp="1700516585068" timestamp="21940538" />
  <Command __id="3754" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 22:48:46 EST 2023" docOffset="1334" starttimestamp="1700516585068" timestamp="21941699" />
  <Command __id="3753" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:48:46 EST 2023" docASTNodeCount="254" docActiveCodeLength="1630" docExpressionCount="122" docLength="2140" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21941651">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3755" _type="MoveCaretCommand" caretOffset="1356" date="Mon Nov 20 22:48:50 EST 2023" docOffset="1485" starttimestamp="1700516585068" timestamp="21945684" />
  <Command __id="3756" _type="MoveCaretCommand" caretOffset="1356" date="Mon Nov 20 22:48:50 EST 2023" docOffset="1485" starttimestamp="1700516585068" timestamp="21945684" />
  <Command __id="3757" _type="SelectTextCommand" caretOffset="1357" date="Mon Nov 20 22:48:50 EST 2023" end="1357" start="1353" starttimestamp="1700516585068" timestamp="21945822" />
  <Command __id="3758" _type="SelectTextCommand" caretOffset="1357" date="Mon Nov 20 22:48:50 EST 2023" end="1357" start="1353" starttimestamp="1700516585068" timestamp="21945823" />
  <DocumentChange __id="3759" _type="Replace" date="Mon Nov 20 22:48:54 EST 2023" docASTNodeCount="254" docActiveCodeLength="1627" docExpressionCount="122" docLength="2137" endLine="66" insertionLength="1" int_docASTNodeCount="253" int_docActiveCodeLength="1626" int_docExpressionCount="121" int_docLength="2136" length="4" offset="1482" startLine="66" starttimestamp="1700516585068" timestamp="21949506">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <Command __id="3760" _type="InsertStringCommand" date="Mon Nov 20 22:48:54 EST 2023" starttimestamp="1700516585068" timestamp="21949512" timestamp2="21949512">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3761" _type="InsertStringCommand" date="Mon Nov 20 22:48:54 EST 2023" starttimestamp="1700516585068" timestamp="21949512" timestamp2="21949512">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3763" _type="InsertStringCommand" date="Mon Nov 20 22:48:54 EST 2023" starttimestamp="1700516585068" timestamp="21949807" timestamp2="21949807">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3764" _type="InsertStringCommand" date="Mon Nov 20 22:48:54 EST 2023" starttimestamp="1700516585068" timestamp="21949807" timestamp2="21949807">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3766" _type="InsertStringCommand" date="Mon Nov 20 22:48:54 EST 2023" starttimestamp="1700516585068" timestamp="21949911" timestamp2="21949911">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3767" _type="InsertStringCommand" date="Mon Nov 20 22:48:54 EST 2023" starttimestamp="1700516585068" timestamp="21949911" timestamp2="21949911">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3769" _type="InsertStringCommand" date="Mon Nov 20 22:48:55 EST 2023" starttimestamp="1700516585068" timestamp="21950001" timestamp2="21950001">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3770" _type="InsertStringCommand" date="Mon Nov 20 22:48:55 EST 2023" starttimestamp="1700516585068" timestamp="21950001" timestamp2="21950001">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3772" _type="InsertStringCommand" date="Mon Nov 20 22:48:56 EST 2023" starttimestamp="1700516585068" timestamp="21951529" timestamp2="21951529">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3773" _type="InsertStringCommand" date="Mon Nov 20 22:48:56 EST 2023" starttimestamp="1700516585068" timestamp="21951529" timestamp2="21951529">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="3775" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952202" timestamp2="21952202">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3776" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952202" timestamp2="21952202">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3778" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952296" timestamp2="21952296">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3779" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952296" timestamp2="21952296">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3781" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952516" timestamp2="21952516">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3782" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952516" timestamp2="21952516">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3784" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952638" timestamp2="21952638">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3785" _type="InsertStringCommand" date="Mon Nov 20 22:48:57 EST 2023" starttimestamp="1700516585068" timestamp="21952639" timestamp2="21952639">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3787" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953047" timestamp2="21953047">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3788" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953047" timestamp2="21953047">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3790" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953224" timestamp2="21953224">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3791" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953224" timestamp2="21953224">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3793" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953331" timestamp2="21953331">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3794" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953331" timestamp2="21953331">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3796" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953418" timestamp2="21953418">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3797" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953418" timestamp2="21953418">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3799" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953569" timestamp2="21953569">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3800" _type="InsertStringCommand" date="Mon Nov 20 22:48:58 EST 2023" starttimestamp="1700516585068" timestamp="21953570" timestamp2="21953570">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3801" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:48:58 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="21953578" />
  <Command __id="3807" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:49:00 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="21955220" />
  <Command __id="3808" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 22:49:00 EST 2023" docOffset="1364" starttimestamp="1700516585068" timestamp="21955287" />
  <Command __id="3809" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 22:49:00 EST 2023" docOffset="1364" starttimestamp="1700516585068" timestamp="21955287" />
  <Command __id="3810" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:49:00 EST 2023" starttimestamp="1700516585068" timestamp="21955454" />
  <Command __id="3811" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:49:00 EST 2023" starttimestamp="1700516585068" timestamp="21955556" />
  <Command __id="3812" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:49:00 EST 2023" starttimestamp="1700516585068" timestamp="21955563" />
  <Command __id="3813" _type="ShellCommand" date="Mon Nov 20 22:49:01 EST 2023" starttimestamp="1700516585068" timestamp="21956449" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3814" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:49:01 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21956788" type="Run" />
  <Command __id="3815" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:49:01 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21956788" type="Run" />
  <Command __id="3816" _type="ShellCommand" date="Mon Nov 20 22:49:01 EST 2023" starttimestamp="1700516585068" timestamp="21956815" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3818" _type="MoveCaretCommand" caretOffset="461" date="Mon Nov 20 22:49:02 EST 2023" docOffset="578" starttimestamp="1700516585068" timestamp="21957435" />
  <Command __id="3819" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 22:49:04 EST 2023" starttimestamp="1700516585068" timestamp="21959693" />
  <Command __id="3820" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:49:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21959807" type="Run" />
  <Command __id="3821" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:49:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21959807" type="Run" />
  <Command __id="3822" _type="ShellCommand" date="Mon Nov 20 22:49:05 EST 2023" starttimestamp="1700516585068" timestamp="21960098" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3823" _type="ConsoleOutput" date="Mon Nov 20 22:49:08 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21963141" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3824" _type="ConsoleOutput" date="Mon Nov 20 22:49:08 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21963142" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3825" _type="ConsoleOutput" date="Mon Nov 20 22:49:08 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21963148" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,0.0,0.0,"), Diff(DELETE,"No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3826" _type="ConsoleOutput" date="Mon Nov 20 22:49:08 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21963149" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3827" _type="ConsoleOutput" date="Mon Nov 20 22:49:08 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21963165" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3828" _type="ConsoleOutput" date="Mon Nov 20 22:49:08 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="21963170" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):26¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string "), Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="3829" _type="ShellCommand" date="Mon Nov 20 22:49:11 EST 2023" starttimestamp="1700516585068" timestamp="21966060" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3830" _type="MoveCaretCommand" caretOffset="850" date="Mon Nov 20 22:49:17 EST 2023" docOffset="967" starttimestamp="1700516585068" timestamp="21972711" />
  <Command __id="3831" _type="MoveCaretCommand" caretOffset="850" date="Mon Nov 20 22:49:17 EST 2023" docOffset="967" starttimestamp="1700516585068" timestamp="21972712" />
  <Command __id="3833" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 22:49:18 EST 2023" docOffset="1364" starttimestamp="1700516585068" timestamp="21973310" />
  <DocumentChange __id="3762" _type="Insert" date="Mon Nov 20 22:48:54 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" length="18" offset="1483" repeat="18" starttimestamp="1700516585068" timestamp="21949804" timestamp2="21954312">
    <text><![CDATA[oadEvaluator.class]]></text>
  </DocumentChange>
  <Command __id="3817" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:49:02 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21957371">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3832" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:49:18 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21973259">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"LoadEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="3848" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:49:24 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21979892">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3834" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 22:49:21 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="21976349" />
  <Command __id="3835" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 22:49:21 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="21976349" />
  <Command __id="3836" _type="MoveCaretCommand" caretOffset="1302" date="Mon Nov 20 22:49:21 EST 2023" docOffset="1431" starttimestamp="1700516585068" timestamp="21976827" />
  <Command __id="3837" _type="MoveCaretCommand" caretOffset="1302" date="Mon Nov 20 22:49:21 EST 2023" docOffset="1431" starttimestamp="1700516585068" timestamp="21976827" />
  <Command __id="3838" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:49:22 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="21977644" />
  <Command __id="3839" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:49:22 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="21977644" />
  <Command __id="3840" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 22:49:23 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="21978617" />
  <Command __id="3841" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 22:49:23 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="21978617" />
  <Command __id="3842" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:49:23 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="21978840" />
  <Command __id="3843" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:49:23 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="21978840" />
  <Command __id="3844" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 22:49:24 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="21979028" />
  <Command __id="3845" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 22:49:24 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="21979028" />
  <Command __id="3846" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:49:24 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="21979200" />
  <Command __id="3847" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:49:24 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="21979200" />
  <Command __id="3849" _type="MoveCaretCommand" caretOffset="850" date="Mon Nov 20 22:49:25 EST 2023" docOffset="967" starttimestamp="1700516585068" timestamp="21979936" />
  <Command __id="3851" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 22:49:26 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="21981443" />
  <Command __id="3853" _type="SelectTextCommand" caretOffset="83" date="Mon Nov 20 22:49:26 EST 2023" end="83" start="70" starttimestamp="1700516585068" timestamp="21981769" />
  <Command __id="3855" _type="MoveCaretCommand" caretOffset="1415" date="Mon Nov 20 22:49:27 EST 2023" docOffset="1415" starttimestamp="1700516585068" timestamp="21982076" />
  <Command __id="3850" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:49:26 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21981397">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3852" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:49:26 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21981732">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="3854" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:49:27 EST 2023" docASTNodeCount="217" docActiveCodeLength="1319" docExpressionCount="159" docLength="1534" projectName="Assignment5" starttimestamp="1700516585068" timestamp="21982033">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import main.lisp.interpreter.ObservableLispInterpreter;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression arg0, Environment arg1) {        // Ensure the argument is a string        if (!(arg0 instanceof main.lisp.parser.terms.StringAtom)) {            return new NilAtom();        }        String fileName = ((main.lisp.parser.terms.StringAtom) arg0).getValue();        try {            // Read all lines from the specified file            List<String> lines = Files.readAllLines(Path.of(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            // Process each line in the loaded file            for (String line : lines) {                interpreterModel.newInput(line);            }            return new TAtom();        } catch ("), Diff(INSERT,"IO"), Diff(EQUAL,"Exception e) {            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;
import main.lisp.interpreter.ObservableLispInterpreter;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression arg0, Environment arg1) {
        // Ensure the argument is a string
        if (!(arg0 instanceof main.lisp.parser.terms.StringAtom)) {
            return new NilAtom();
        }

        String fileName = ((main.lisp.parser.terms.StringAtom) arg0).getValue();
        try {
            // Read all lines from the specified file
            List<String> lines = Files.readAllLines(Path.of(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            return new TAtom();
        } catch (IOException e) {
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="3856" _type="MoveCaretCommand" caretOffset="372" date="Mon Nov 20 22:49:28 EST 2023" docOffset="372" starttimestamp="1700516585068" timestamp="21983229" />
  <Command __id="3857" _type="LocalChecksRawCommand" date="Mon Nov 20 22:49:28 EST 2023" starttimestamp="1700516585068" timestamp="21983233">
    <CSVRow><![CDATA[90,Mon Nov 20 22:49:08 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,52,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3858" _type="LocalChecksRawCommand" date="Mon Nov 20 22:49:28 EST 2023" starttimestamp="1700516585068" timestamp="21983233">
    <CSVRow><![CDATA[90,Mon Nov 20 22:49:08 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,52,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3859" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 22:49:28 EST 2023" docOffset="371" starttimestamp="1700516585068" timestamp="21983670" />
  <Command __id="3861" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 22:49:29 EST 2023" starttimestamp="1700516585068" timestamp="21984731" />
  <Command __id="3862" _type="MoveCaretCommand" caretOffset="474" date="Mon Nov 20 22:49:30 EST 2023" docOffset="474" starttimestamp="1700516585068" timestamp="21985006" />
  <Command __id="3863" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:49:30 EST 2023" starttimestamp="1700516585068" timestamp="21985261" />
  <Command __id="3864" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:49:30 EST 2023" starttimestamp="1700516585068" timestamp="21985363" />
  <Command __id="3865" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:49:30 EST 2023" starttimestamp="1700516585068" timestamp="21985371" />
  <Command __id="3866" _type="ShellCommand" date="Mon Nov 20 22:49:35 EST 2023" starttimestamp="1700516585068" timestamp="21990319" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3867" _type="ShellCommand" date="Mon Nov 20 22:49:42 EST 2023" starttimestamp="1700516585068" timestamp="21997003" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3868" _type="ShellCommand" date="Mon Nov 20 22:49:42 EST 2023" starttimestamp="1700516585068" timestamp="21997417" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3869" _type="ShellCommand" date="Mon Nov 20 22:49:42 EST 2023" starttimestamp="1700516585068" timestamp="21997909" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3870" _type="MoveCaretCommand" caretOffset="699" date="Mon Nov 20 22:49:43 EST 2023" docOffset="699" starttimestamp="1700516585068" timestamp="21998477" />
  <Command __id="3871" _type="MoveCaretCommand" caretOffset="665" date="Mon Nov 20 22:49:44 EST 2023" docOffset="665" starttimestamp="1700516585068" timestamp="21998991" />
  <Command __id="3872" _type="MoveCaretCommand" caretOffset="709" date="Mon Nov 20 22:49:44 EST 2023" docOffset="709" starttimestamp="1700516585068" timestamp="21999364" />
  <Command __id="3873" _type="MoveCaretCommand" caretOffset="699" date="Mon Nov 20 22:49:44 EST 2023" docOffset="699" starttimestamp="1700516585068" timestamp="21999620" />
  <Command __id="3874" _type="MoveCaretCommand" caretOffset="665" date="Mon Nov 20 22:49:44 EST 2023" docOffset="665" starttimestamp="1700516585068" timestamp="21999869" />
  <Command __id="3875" _type="MoveCaretCommand" caretOffset="709" date="Mon Nov 20 22:49:45 EST 2023" docOffset="709" starttimestamp="1700516585068" timestamp="22000262" />
  <Command __id="3876" _type="SelectTextCommand" caretOffset="606" date="Mon Nov 20 22:49:46 EST 2023" end="709" start="606" starttimestamp="1700516585068" timestamp="22001467" />
  <Command __id="3877" _type="ShellCommand" date="Mon Nov 20 22:49:47 EST 2023" starttimestamp="1700516585068" timestamp="22001970" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="3860" _type="Delete" date="Mon Nov 20 22:49:29 EST 2023" docASTNodeCount="209" docActiveCodeLength="1263" docExpressionCount="152" docLength="1478" endLine="10" length="56" offset="316" startLine="9" starttimestamp="1700516585068" timestamp="21984728">
    <text><![CDATA[import main.lisp.interpreter.ObservableLispInterpreter;
]]></text>
  </DocumentChange>
  <Command __id="3878" _type="ShellCommand" date="Mon Nov 20 22:50:09 EST 2023" starttimestamp="1700516585068" timestamp="22024527" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3879" _type="Replace" date="Mon Nov 20 22:50:11 EST 2023" docASTNodeCount="114" docActiveCodeLength="1161" docExpressionCount="90" docLength="1376" endLine="22" insertionLength="1" int_docASTNodeCount="189" int_docActiveCodeLength="1160" int_docExpressionCount="137" int_docLength="1375" length="103" offset="606" startLine="20" starttimestamp="1700516585068" timestamp="22026624">
    <deletedText><![CDATA[if (!(arg0 instanceof main.lisp.parser.terms.StringAtom)) {
            return new NilAtom();
        }]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="3880" _type="InsertStringCommand" date="Mon Nov 20 22:50:11 EST 2023" starttimestamp="1700516585068" timestamp="22026631" timestamp2="22026631">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3882" _type="InsertStringCommand" date="Mon Nov 20 22:50:11 EST 2023" starttimestamp="1700516585068" timestamp="22026653" timestamp2="22026653">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3884" _type="InsertStringCommand" date="Mon Nov 20 22:50:11 EST 2023" starttimestamp="1700516585068" timestamp="22026827" timestamp2="22026827">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3885" _type="MoveCaretCommand" caretOffset="531" date="Mon Nov 20 22:50:19 EST 2023" docOffset="531" starttimestamp="1700516585068" timestamp="22034733" />
  <Command __id="3886" _type="SelectTextCommand" caretOffset="533" date="Mon Nov 20 22:50:19 EST 2023" end="533" start="529" starttimestamp="1700516585068" timestamp="22034881" />
  <Command __id="3888" _type="InsertStringCommand" date="Mon Nov 20 22:50:20 EST 2023" starttimestamp="1700516585068" timestamp="22035197" timestamp2="22035197">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3890" _type="InsertStringCommand" date="Mon Nov 20 22:50:20 EST 2023" starttimestamp="1700516585068" timestamp="22035398" timestamp2="22035398">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3892" _type="InsertStringCommand" date="Mon Nov 20 22:50:20 EST 2023" starttimestamp="1700516585068" timestamp="22035558" timestamp2="22035558">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3894" _type="InsertStringCommand" date="Mon Nov 20 22:50:20 EST 2023" starttimestamp="1700516585068" timestamp="22035619" timestamp2="22035619">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3895" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 22:50:21 EST 2023" docOffset="549" starttimestamp="1700516585068" timestamp="22036519" />
  <Command __id="3896" _type="SelectTextCommand" caretOffset="551" date="Mon Nov 20 22:50:21 EST 2023" end="551" start="547" starttimestamp="1700516585068" timestamp="22036643" />
  <Command __id="3898" _type="InsertStringCommand" date="Mon Nov 20 22:50:21 EST 2023" starttimestamp="1700516585068" timestamp="22036881" timestamp2="22036881">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3900" _type="InsertStringCommand" date="Mon Nov 20 22:50:22 EST 2023" starttimestamp="1700516585068" timestamp="22037347" timestamp2="22037347">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3902" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:23 EST 2023" starttimestamp="1700516585068" timestamp="22038004" />
  <Command __id="3904" _type="InsertStringCommand" date="Mon Nov 20 22:50:23 EST 2023" starttimestamp="1700516585068" timestamp="22038194" timestamp2="22038194">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3906" _type="InsertStringCommand" date="Mon Nov 20 22:50:23 EST 2023" starttimestamp="1700516585068" timestamp="22038306" timestamp2="22038306">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3908" _type="InsertStringCommand" date="Mon Nov 20 22:50:23 EST 2023" starttimestamp="1700516585068" timestamp="22038450" timestamp2="22038450">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3910" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039073" timestamp2="22039073">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3912" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039256" timestamp2="22039256">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3914" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039402" timestamp2="22039402">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3916" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039572" timestamp2="22039572">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3918" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039660" timestamp2="22039660">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3920" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039693" timestamp2="22039693">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3922" _type="InsertStringCommand" date="Mon Nov 20 22:50:24 EST 2023" starttimestamp="1700516585068" timestamp="22039786" timestamp2="22039786">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="3881" _type="Insert" date="Mon Nov 20 22:50:11 EST 2023" docASTNodeCount="117" docActiveCodeLength="1164" docExpressionCount="91" docLength="1379" length="3" offset="607" repeat="2" starttimestamp="1700516585068" timestamp="22026652" timestamp2="22026825">
    <text><![CDATA[f()]]></text>
  </DocumentChange>
  <DocumentChange __id="3887" _type="Replace" date="Mon Nov 20 22:50:20 EST 2023" docASTNodeCount="117" docActiveCodeLength="1161" docExpressionCount="91" docLength="1376" endLine="18" insertionLength="1" int_docASTNodeCount="106" int_docActiveCodeLength="1160" int_docExpressionCount="86" int_docLength="1375" length="4" offset="529" startLine="18" starttimestamp="1700516585068" timestamp="22035194">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3889" _type="Insert" date="Mon Nov 20 22:50:20 EST 2023" docASTNodeCount="117" docActiveCodeLength="1164" docExpressionCount="91" docLength="1379" length="3" offset="530" repeat="3" starttimestamp="1700516585068" timestamp="22035396" timestamp2="22035618">
    <text><![CDATA[xpr]]></text>
  </DocumentChange>
  <DocumentChange __id="3897" _type="Replace" date="Mon Nov 20 22:50:21 EST 2023" docASTNodeCount="117" docActiveCodeLength="1161" docExpressionCount="91" docLength="1376" endLine="18" insertionLength="1" int_docASTNodeCount="110" int_docActiveCodeLength="1160" int_docExpressionCount="88" int_docLength="1375" length="4" offset="547" startLine="18" starttimestamp="1700516585068" timestamp="22036876">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3899" _type="Insert" date="Mon Nov 20 22:50:22 EST 2023" docASTNodeCount="117" docActiveCodeLength="1162" docExpressionCount="91" docLength="1377" length="1" offset="548" starttimestamp="1700516585068" timestamp="22037346">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="3901" _type="Delete" date="Mon Nov 20 22:50:23 EST 2023" docASTNodeCount="117" docActiveCodeLength="1161" docExpressionCount="91" docLength="1376" endLine="18" length="1" offset="548" startLine="18" starttimestamp="1700516585068" timestamp="22038003">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="3903" _type="Insert" date="Mon Nov 20 22:50:23 EST 2023" docASTNodeCount="117" docActiveCodeLength="1171" docExpressionCount="91" docLength="1386" length="10" offset="548" repeat="10" starttimestamp="1700516585068" timestamp="22038192" timestamp2="22039784">
    <text><![CDATA[nvironment]]></text>
  </DocumentChange>
  <DocumentChange __id="3924" _type="Insert" date="Mon Nov 20 22:50:26 EST 2023" docASTNodeCount="114" docActiveCodeLength="1175" docExpressionCount="90" docLength="1390" length="4" offset="616" repeat="4" starttimestamp="1700516585068" timestamp="22041464" timestamp2="22042136">
    <text><![CDATA[exr.]]></text>
  </DocumentChange>
  <DocumentChange __id="3934" _type="Delete" date="Mon Nov 20 22:50:27 EST 2023" docASTNodeCount="114" docActiveCodeLength="1173" docExpressionCount="90" docLength="1388" endLine="20" length="2" offset="618" repeat="2" startLine="20" starttimestamp="1700516585068" timestamp="22042690" timestamp2="22042817">
    <text><![CDATA[r.]]></text>
  </DocumentChange>
  <DocumentChange __id="3938" _type="Insert" date="Mon Nov 20 22:50:28 EST 2023" docASTNodeCount="114" docActiveCodeLength="1179" docExpressionCount="90" docLength="1394" length="6" offset="618" repeat="6" starttimestamp="1700516585068" timestamp="22043037" timestamp2="22045305">
    <text><![CDATA[pr.get]]></text>
  </DocumentChange>
  <DocumentChange __id="3948" _type="Insert" date="Mon Nov 20 22:50:32 EST 2023" docASTNodeCount="114" docActiveCodeLength="1180" docExpressionCount="90" docLength="1395" length="1" offset="624" starttimestamp="1700516585068" timestamp="22047360">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="3950" _type="Replace" date="Mon Nov 20 22:50:32 EST 2023" docASTNodeCount="114" docActiveCodeLength="1185" docExpressionCount="90" docLength="1400" endLine="20" insertionLength="9" int_docASTNodeCount="114" int_docActiveCodeLength="1176" int_docExpressionCount="90" int_docLength="1391" length="4" offset="621" startLine="20" starttimestamp="1700516585068" timestamp="22047760">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3952" _type="Insert" date="Mon Nov 20 22:50:33 EST 2023" docASTNodeCount="114" docActiveCodeLength="1190" docExpressionCount="90" docLength="1405" length="5" offset="630" repeat="5" starttimestamp="1700516585068" timestamp="22047975" timestamp2="22048638">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="3960" _type="Replace" date="Mon Nov 20 22:50:33 EST 2023" docASTNodeCount="114" docActiveCodeLength="1195" docExpressionCount="90" docLength="1410" endLine="20" insertionLength="9" int_docASTNodeCount="114" int_docActiveCodeLength="1186" int_docExpressionCount="90" int_docLength="1401" length="4" offset="631" startLine="20" starttimestamp="1700516585068" timestamp="22048928">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3962" _type="Insert" date="Mon Nov 20 22:50:35 EST 2023" docASTNodeCount="114" docActiveCodeLength="1198" docExpressionCount="90" docLength="1413" length="3" offset="640" repeat="3" starttimestamp="1700516585068" timestamp="22050245" timestamp2="22050458">
    <text><![CDATA[ is]]></text>
  </DocumentChange>
  <Command __id="3923" _type="MoveCaretCommand" caretOffset="616" date="Mon Nov 20 22:50:26 EST 2023" docOffset="616" starttimestamp="1700516585068" timestamp="22041278" />
  <Command __id="3925" _type="InsertStringCommand" date="Mon Nov 20 22:50:26 EST 2023" starttimestamp="1700516585068" timestamp="22041467" timestamp2="22041467">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3927" _type="InsertStringCommand" date="Mon Nov 20 22:50:26 EST 2023" starttimestamp="1700516585068" timestamp="22041666" timestamp2="22041666">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3929" _type="InsertStringCommand" date="Mon Nov 20 22:50:27 EST 2023" starttimestamp="1700516585068" timestamp="22042030" timestamp2="22042030">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3931" _type="InsertStringCommand" date="Mon Nov 20 22:50:27 EST 2023" starttimestamp="1700516585068" timestamp="22042137" timestamp2="22042137">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3932" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:50:27 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22042146" />
  <Command __id="3933" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:50:27 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22042158" />
  <Command __id="3935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:27 EST 2023" starttimestamp="1700516585068" timestamp="22042691" />
  <Command __id="3937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:27 EST 2023" starttimestamp="1700516585068" timestamp="22042818" />
  <Command __id="3939" _type="InsertStringCommand" date="Mon Nov 20 22:50:28 EST 2023" starttimestamp="1700516585068" timestamp="22043038" timestamp2="22043038">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3941" _type="InsertStringCommand" date="Mon Nov 20 22:50:28 EST 2023" starttimestamp="1700516585068" timestamp="22043145" timestamp2="22043145">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3943" _type="InsertStringCommand" date="Mon Nov 20 22:50:28 EST 2023" starttimestamp="1700516585068" timestamp="22043235" timestamp2="22043235">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3944" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:50:28 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22043243" />
  <Command __id="3949" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:50:32 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22047754" />
  <Command __id="3951" _type="InsertStringCommand" date="Mon Nov 20 22:50:32 EST 2023" starttimestamp="1700516585068" timestamp="22047765" timestamp2="22047765">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3953" _type="InsertStringCommand" date="Mon Nov 20 22:50:33 EST 2023" starttimestamp="1700516585068" timestamp="22047977" timestamp2="22047977">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3954" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:50:33 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22047984" />
  <Command __id="3959" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:50:33 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22048921" />
  <Command __id="3961" _type="InsertStringCommand" date="Mon Nov 20 22:50:34 EST 2023" starttimestamp="1700516585068" timestamp="22048932" timestamp2="22048932">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3963" _type="InsertStringCommand" date="Mon Nov 20 22:50:35 EST 2023" starttimestamp="1700516585068" timestamp="22050248" timestamp2="22050248">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3965" _type="InsertStringCommand" date="Mon Nov 20 22:50:35 EST 2023" starttimestamp="1700516585068" timestamp="22050411" timestamp2="22050411">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3967" _type="InsertStringCommand" date="Mon Nov 20 22:50:35 EST 2023" starttimestamp="1700516585068" timestamp="22050459" timestamp2="22050459">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3969" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:36 EST 2023" starttimestamp="1700516585068" timestamp="22051765" />
  <Command __id="3971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:36 EST 2023" starttimestamp="1700516585068" timestamp="22051878" />
  <Command __id="3973" _type="InsertStringCommand" date="Mon Nov 20 22:50:37 EST 2023" starttimestamp="1700516585068" timestamp="22052166" timestamp2="22052166">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3975" _type="InsertStringCommand" date="Mon Nov 20 22:50:37 EST 2023" starttimestamp="1700516585068" timestamp="22052269" timestamp2="22052269">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3977" _type="InsertStringCommand" date="Mon Nov 20 22:50:37 EST 2023" starttimestamp="1700516585068" timestamp="22052450" timestamp2="22052450">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3979" _type="InsertStringCommand" date="Mon Nov 20 22:50:37 EST 2023" starttimestamp="1700516585068" timestamp="22052559" timestamp2="22052559">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3981" _type="InsertStringCommand" date="Mon Nov 20 22:50:38 EST 2023" starttimestamp="1700516585068" timestamp="22052978" timestamp2="22052978">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3983" _type="InsertStringCommand" date="Mon Nov 20 22:50:38 EST 2023" starttimestamp="1700516585068" timestamp="22053370" timestamp2="22053370">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3985" _type="InsertStringCommand" date="Mon Nov 20 22:50:38 EST 2023" starttimestamp="1700516585068" timestamp="22053489" timestamp2="22053489">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3987" _type="InsertStringCommand" date="Mon Nov 20 22:50:38 EST 2023" starttimestamp="1700516585068" timestamp="22053602" timestamp2="22053602">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3989" _type="InsertStringCommand" date="Mon Nov 20 22:50:38 EST 2023" starttimestamp="1700516585068" timestamp="22053894" timestamp2="22053894">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3991" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:39 EST 2023" starttimestamp="1700516585068" timestamp="22054242" />
  <Command __id="3993" _type="InsertStringCommand" date="Mon Nov 20 22:50:39 EST 2023" starttimestamp="1700516585068" timestamp="22054350" timestamp2="22054350">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3995" _type="InsertStringCommand" date="Mon Nov 20 22:50:39 EST 2023" starttimestamp="1700516585068" timestamp="22054502" timestamp2="22054502">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3997" _type="InsertStringCommand" date="Mon Nov 20 22:50:40 EST 2023" starttimestamp="1700516585068" timestamp="22054942" timestamp2="22054942">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="3999" _type="InsertStringCommand" date="Mon Nov 20 22:50:40 EST 2023" starttimestamp="1700516585068" timestamp="22055019" timestamp2="22055019">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="4001" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:40 EST 2023" starttimestamp="1700516585068" timestamp="22055815" />
  <Command __id="4003" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056315" />
  <Command __id="4005" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056399" />
  <Command __id="4007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056478" />
  <Command __id="4009" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056562" />
  <Command __id="4011" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056650" />
  <Command __id="4013" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056731" />
  <Command __id="4015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056814" />
  <Command __id="4017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:41 EST 2023" starttimestamp="1700516585068" timestamp="22056896" />
  <Command __id="4019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22056981" />
  <DocumentChange __id="3968" _type="Delete" date="Mon Nov 20 22:50:36 EST 2023" docASTNodeCount="114" docActiveCodeLength="1196" docExpressionCount="90" docLength="1411" endLine="20" length="2" offset="641" repeat="2" startLine="20" starttimestamp="1700516585068" timestamp="22051763" timestamp2="22051876">
    <text><![CDATA[is]]></text>
  </DocumentChange>
  <DocumentChange __id="3972" _type="Insert" date="Mon Nov 20 22:50:37 EST 2023" docASTNodeCount="114" docActiveCodeLength="1205" docExpressionCount="90" docLength="1420" length="9" offset="641" repeat="9" starttimestamp="1700516585068" timestamp="22052164" timestamp2="22053892">
    <text><![CDATA[isinstand]]></text>
  </DocumentChange>
  <DocumentChange __id="3990" _type="Delete" date="Mon Nov 20 22:50:39 EST 2023" docASTNodeCount="114" docActiveCodeLength="1204" docExpressionCount="90" docLength="1419" endLine="20" length="1" offset="649" startLine="20" starttimestamp="1700516585068" timestamp="22054241">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <DocumentChange __id="3992" _type="Insert" date="Mon Nov 20 22:50:39 EST 2023" docASTNodeCount="114" docActiveCodeLength="1208" docExpressionCount="90" docLength="1423" length="4" offset="649" repeat="4" starttimestamp="1700516585068" timestamp="22054349" timestamp2="22055017">
    <text><![CDATA[ceOF]]></text>
  </DocumentChange>
  <DocumentChange __id="4000" _type="Delete" date="Mon Nov 20 22:50:40 EST 2023" docASTNodeCount="114" docActiveCodeLength="1196" docExpressionCount="90" docLength="1411" endLine="20" length="12" offset="641" repeat="12" startLine="20" starttimestamp="1700516585068" timestamp="22055813" timestamp2="22057159">
    <text><![CDATA[isinstanceOF]]></text>
  </DocumentChange>
  <Command __id="4021" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057064" />
  <Command __id="4023" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057161" />
  <DocumentChange __id="4024" _type="Insert" date="Mon Nov 20 22:50:42 EST 2023" docASTNodeCount="114" docActiveCodeLength="1216" docExpressionCount="90" docLength="1431" length="20" offset="641" repeat="19" starttimestamp="1700516585068" timestamp="22057551" timestamp2="22061428">
    <text><![CDATA[instanceof NilAtom()]]></text>
  </DocumentChange>
  <Command __id="4025" _type="InsertStringCommand" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057554" timestamp2="22057554">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4027" _type="InsertStringCommand" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057629" timestamp2="22057629">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4029" _type="InsertStringCommand" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057666" timestamp2="22057666">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4031" _type="InsertStringCommand" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057762" timestamp2="22057762">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4033" _type="InsertStringCommand" date="Mon Nov 20 22:50:42 EST 2023" starttimestamp="1700516585068" timestamp="22057865" timestamp2="22057865">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4035" _type="InsertStringCommand" date="Mon Nov 20 22:50:43 EST 2023" starttimestamp="1700516585068" timestamp="22058001" timestamp2="22058001">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4037" _type="InsertStringCommand" date="Mon Nov 20 22:50:43 EST 2023" starttimestamp="1700516585068" timestamp="22058093" timestamp2="22058093">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4039" _type="InsertStringCommand" date="Mon Nov 20 22:50:43 EST 2023" starttimestamp="1700516585068" timestamp="22058271" timestamp2="22058271">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4041" _type="InsertStringCommand" date="Mon Nov 20 22:50:43 EST 2023" starttimestamp="1700516585068" timestamp="22058376" timestamp2="22058376">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4043" _type="InsertStringCommand" date="Mon Nov 20 22:50:43 EST 2023" starttimestamp="1700516585068" timestamp="22058453" timestamp2="22058453">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4045" _type="InsertStringCommand" date="Mon Nov 20 22:50:43 EST 2023" starttimestamp="1700516585068" timestamp="22058811" timestamp2="22058811">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4047" _type="InsertStringCommand" date="Mon Nov 20 22:50:45 EST 2023" starttimestamp="1700516585068" timestamp="22060388" timestamp2="22060388">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4049" _type="InsertStringCommand" date="Mon Nov 20 22:50:45 EST 2023" starttimestamp="1700516585068" timestamp="22060549" timestamp2="22060549">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4051" _type="InsertStringCommand" date="Mon Nov 20 22:50:45 EST 2023" starttimestamp="1700516585068" timestamp="22060646" timestamp2="22060646">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4053" _type="InsertStringCommand" date="Mon Nov 20 22:50:45 EST 2023" starttimestamp="1700516585068" timestamp="22060852" timestamp2="22060852">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4055" _type="InsertStringCommand" date="Mon Nov 20 22:50:46 EST 2023" starttimestamp="1700516585068" timestamp="22061044" timestamp2="22061044">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4057" _type="InsertStringCommand" date="Mon Nov 20 22:50:46 EST 2023" starttimestamp="1700516585068" timestamp="22061107" timestamp2="22061107">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4059" _type="InsertStringCommand" date="Mon Nov 20 22:50:46 EST 2023" starttimestamp="1700516585068" timestamp="22061181" timestamp2="22061181">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4061" _type="InsertStringCommand" date="Mon Nov 20 22:50:46 EST 2023" starttimestamp="1700516585068" timestamp="22061431" timestamp2="22061431">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="4062" _type="Delete" date="Mon Nov 20 22:50:47 EST 2023" docASTNodeCount="114" docActiveCodeLength="1213" docExpressionCount="90" docLength="1428" endLine="20" length="3" offset="658" repeat="3" startLine="20" starttimestamp="1700516585068" timestamp="22062606" timestamp2="22062737">
    <text><![CDATA[m()]]></text>
  </DocumentChange>
  <Command __id="4064" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:47 EST 2023" starttimestamp="1700516585068" timestamp="22062614" />
  <Command __id="4066" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 22:50:47 EST 2023" starttimestamp="1700516585068" timestamp="22062739" />
  <DocumentChange __id="4067" _type="Insert" date="Mon Nov 20 22:50:48 EST 2023" docASTNodeCount="114" docActiveCodeLength="1214" docExpressionCount="90" docLength="1429" length="1" offset="658" starttimestamp="1700516585068" timestamp="22063381">
    <text><![CDATA[m]]></text>
  </DocumentChange>
  <Command __id="4068" _type="InsertStringCommand" date="Mon Nov 20 22:50:48 EST 2023" starttimestamp="1700516585068" timestamp="22063384" timestamp2="22063384">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:50:49 EST 2023" starttimestamp="1700516585068" timestamp="22064132" />
  <Command __id="4071" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065199" timestamp2="22065199">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4073" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065366" timestamp2="22065366">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4075" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065485" timestamp2="22065485">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4077" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065549" timestamp2="22065549">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4079" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065671" timestamp2="22065671">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4081" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065766" timestamp2="22065766">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4083" _type="InsertStringCommand" date="Mon Nov 20 22:50:50 EST 2023" starttimestamp="1700516585068" timestamp="22065875" timestamp2="22065875">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4085" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22065932" timestamp2="22065932">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4087" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066053" timestamp2="22066053">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4089" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066175" timestamp2="22066175">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4091" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066191" timestamp2="22066191">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4093" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066277" timestamp2="22066277">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="4095" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066369" timestamp2="22066369">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4097" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066546" timestamp2="22066546">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4099" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066775" timestamp2="22066775">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4101" _type="InsertStringCommand" date="Mon Nov 20 22:50:51 EST 2023" starttimestamp="1700516585068" timestamp="22066867" timestamp2="22066867">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4103" _type="InsertStringCommand" date="Mon Nov 20 22:50:52 EST 2023" starttimestamp="1700516585068" timestamp="22067332" timestamp2="22067332">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4105" _type="InsertStringCommand" date="Mon Nov 20 22:50:52 EST 2023" starttimestamp="1700516585068" timestamp="22067556" timestamp2="22067556">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4107" _type="InsertStringCommand" date="Mon Nov 20 22:50:52 EST 2023" starttimestamp="1700516585068" timestamp="22067628" timestamp2="22067628">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4109" _type="InsertStringCommand" date="Mon Nov 20 22:50:52 EST 2023" starttimestamp="1700516585068" timestamp="22067734" timestamp2="22067734">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4111" _type="InsertStringCommand" date="Mon Nov 20 22:50:52 EST 2023" starttimestamp="1700516585068" timestamp="22067916" timestamp2="22067916">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4112" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:50:53 EST 2023" starttimestamp="1700516585068" timestamp="22068854" />
  <Command __id="4114" _type="InsertStringCommand" date="Mon Nov 20 22:50:54 EST 2023" starttimestamp="1700516585068" timestamp="22069145" timestamp2="22069145">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4115" _type="MoveCaretCommand" caretOffset="659" date="Mon Nov 20 22:50:56 EST 2023" docOffset="659" starttimestamp="1700516585068" timestamp="22071067" />
  <Command __id="4116" _type="MoveCaretCommand" caretOffset="703" date="Mon Nov 20 22:50:58 EST 2023" docOffset="703" starttimestamp="1700516585068" timestamp="22073291" />
  <Command __id="4117" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:50:58 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22073546" />
  <Command __id="4118" _type="MoveCaretCommand" caretOffset="662" date="Mon Nov 20 22:50:59 EST 2023" docOffset="662" starttimestamp="1700516585068" timestamp="22073940" />
  <Command __id="4119" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:50:59 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22074335" />
  <Command __id="4120" _type="MoveCaretCommand" caretOffset="703" date="Mon Nov 20 22:50:59 EST 2023" docOffset="703" starttimestamp="1700516585068" timestamp="22074552" />
  <Command __id="4121" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:50:59 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22074785" />
  <Command __id="4122" _type="MoveCaretCommand" caretOffset="662" date="Mon Nov 20 22:51:00 EST 2023" docOffset="662" starttimestamp="1700516585068" timestamp="22074986" />
  <Command __id="4123" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:00 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22075256" />
  <Command __id="4124" _type="MoveCaretCommand" caretOffset="703" date="Mon Nov 20 22:51:00 EST 2023" docOffset="703" starttimestamp="1700516585068" timestamp="22075429" />
  <Command __id="4125" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:00 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22075657" />
  <Command __id="4126" _type="MoveCaretCommand" caretOffset="662" date="Mon Nov 20 22:51:00 EST 2023" docOffset="662" starttimestamp="1700516585068" timestamp="22075850" />
  <Command __id="4127" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:01 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22076184" />
  <Command __id="4128" _type="MoveCaretCommand" caretOffset="703" date="Mon Nov 20 22:51:01 EST 2023" docOffset="703" starttimestamp="1700516585068" timestamp="22076357" />
  <Command __id="4129" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:02 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22077097" />
  <Command __id="4130" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:02 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22077269" />
  <Command __id="4131" _type="MoveCaretCommand" caretOffset="662" date="Mon Nov 20 22:51:02 EST 2023" docOffset="662" starttimestamp="1700516585068" timestamp="22077820" />
  <Command __id="4132" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:03 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22078009" />
  <Command __id="4133" _type="MoveCaretCommand" caretOffset="703" date="Mon Nov 20 22:51:03 EST 2023" docOffset="703" starttimestamp="1700516585068" timestamp="22078177" />
  <Command __id="4134" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:03 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22078486" />
  <Command __id="4135" _type="MoveCaretCommand" caretOffset="662" date="Mon Nov 20 22:51:03 EST 2023" docOffset="662" starttimestamp="1700516585068" timestamp="22078661" />
  <Command __id="4136" _type="MoveCaretCommand" caretOffset="693" date="Mon Nov 20 22:51:03 EST 2023" docOffset="693" starttimestamp="1700516585068" timestamp="22078882" />
  <Command __id="4137" _type="MoveCaretCommand" caretOffset="703" date="Mon Nov 20 22:51:04 EST 2023" docOffset="703" starttimestamp="1700516585068" timestamp="22079013" />
  <Command __id="4138" _type="MoveCaretCommand" caretOffset="704" date="Mon Nov 20 22:51:05 EST 2023" docOffset="704" starttimestamp="1700516585068" timestamp="22080157" />
  <Command __id="4139" _type="MoveCaretCommand" caretOffset="762" date="Mon Nov 20 22:51:06 EST 2023" docOffset="762" starttimestamp="1700516585068" timestamp="22080955" />
  <Command __id="4140" _type="MoveCaretCommand" caretOffset="771" date="Mon Nov 20 22:51:06 EST 2023" docOffset="771" starttimestamp="1700516585068" timestamp="22081277" />
  <Command __id="4141" _type="MoveCaretCommand" caretOffset="736" date="Mon Nov 20 22:51:07 EST 2023" docOffset="736" starttimestamp="1700516585068" timestamp="22082449" />
  <DocumentChange __id="4070" _type="Insert" date="Mon Nov 20 22:50:50 EST 2023" docASTNodeCount="203" docActiveCodeLength="1257" docExpressionCount="146" docLength="1472" length="43" offset="660" repeat="22" starttimestamp="1700516585068" timestamp="22065198" timestamp2="22069142">
    <text><![CDATA[ {
        	return new NilAtom();
        }]]></text>
  </DocumentChange>
  <Command __id="4142" _type="SelectTextCommand" caretOffset="785" date="Mon Nov 20 22:51:09 EST 2023" end="785" start="731" starttimestamp="1700516585068" timestamp="22084196" />
  <DocumentChange __id="4143" _type="Replace" date="Mon Nov 20 22:51:10 EST 2023" docASTNodeCount="177" docActiveCodeLength="1204" docExpressionCount="131" docLength="1419" endLine="24" insertionLength="1" int_docASTNodeCount="175" int_docActiveCodeLength="1203" int_docExpressionCount="129" int_docLength="1418" length="54" offset="731" startLine="24" starttimestamp="1700516585068" timestamp="22085347">
    <deletedText><![CDATA[((main.lisp.parser.terms.StringAtom) arg0).getValue();]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="4144" _type="InsertStringCommand" date="Mon Nov 20 22:51:10 EST 2023" starttimestamp="1700516585068" timestamp="22085352" timestamp2="22085352">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="4145" _type="Insert" date="Mon Nov 20 22:51:10 EST 2023" docASTNodeCount="179" docActiveCodeLength="1212" docExpressionCount="133" docLength="1427" length="8" offset="732" repeat="8" starttimestamp="1700516585068" timestamp="22085531" timestamp2="22086916">
    <text><![CDATA[xpr.getT]]></text>
  </DocumentChange>
  <Command __id="4146" _type="InsertStringCommand" date="Mon Nov 20 22:51:10 EST 2023" starttimestamp="1700516585068" timestamp="22085533" timestamp2="22085533">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4148" _type="InsertStringCommand" date="Mon Nov 20 22:51:10 EST 2023" starttimestamp="1700516585068" timestamp="22085620" timestamp2="22085620">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4150" _type="InsertStringCommand" date="Mon Nov 20 22:51:10 EST 2023" starttimestamp="1700516585068" timestamp="22085712" timestamp2="22085712">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4152" _type="InsertStringCommand" date="Mon Nov 20 22:51:10 EST 2023" starttimestamp="1700516585068" timestamp="22085821" timestamp2="22085821">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4153" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:51:10 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22085828" />
  <Command __id="4158" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:51:12 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22087908" />
  <DocumentChange __id="4159" _type="Replace" date="Mon Nov 20 22:51:12 EST 2023" docASTNodeCount="179" docActiveCodeLength="1217" docExpressionCount="133" docLength="1432" endLine="24" insertionLength="9" int_docASTNodeCount="181" int_docActiveCodeLength="1208" int_docExpressionCount="135" int_docLength="1423" length="4" offset="736" startLine="24" starttimestamp="1700516585068" timestamp="22087915">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="4160" _type="InsertStringCommand" date="Mon Nov 20 22:51:12 EST 2023" starttimestamp="1700516585068" timestamp="22087920" timestamp2="22087920">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4161" _type="Insert" date="Mon Nov 20 22:51:13 EST 2023" docASTNodeCount="181" docActiveCodeLength="1222" docExpressionCount="135" docLength="1437" length="5" offset="745" repeat="5" starttimestamp="1700516585068" timestamp="22088121" timestamp2="22088688">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <Command __id="4162" _type="InsertStringCommand" date="Mon Nov 20 22:51:13 EST 2023" starttimestamp="1700516585068" timestamp="22088124" timestamp2="22088124">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4163" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:51:13 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22088131" />
  <Command __id="4168" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:51:13 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22088900" />
  <DocumentChange __id="4169" _type="Replace" date="Mon Nov 20 22:51:13 EST 2023" docASTNodeCount="181" docActiveCodeLength="1227" docExpressionCount="135" docLength="1442" endLine="24" insertionLength="9" int_docASTNodeCount="183" int_docActiveCodeLength="1218" int_docExpressionCount="137" int_docLength="1433" length="4" offset="746" startLine="24" starttimestamp="1700516585068" timestamp="22088907">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="4170" _type="InsertStringCommand" date="Mon Nov 20 22:51:13 EST 2023" starttimestamp="1700516585068" timestamp="22088912" timestamp2="22088912">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4171" _type="Insert" date="Mon Nov 20 22:51:14 EST 2023" docASTNodeCount="183" docActiveCodeLength="1231" docExpressionCount="137" docLength="1446" length="4" offset="755" repeat="4" starttimestamp="1700516585068" timestamp="22089283" timestamp2="22090999">
    <text><![CDATA[.eva]]></text>
  </DocumentChange>
  <Command __id="4172" _type="InsertStringCommand" date="Mon Nov 20 22:51:14 EST 2023" starttimestamp="1700516585068" timestamp="22089284" timestamp2="22089284">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4173" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:51:14 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22089287" />
  <Command __id="4177" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:51:16 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22091404" />
  <Command __id="4179" _type="InsertStringCommand" date="Mon Nov 20 22:51:16 EST 2023" starttimestamp="1700516585068" timestamp="22091435" timestamp2="22091435">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4180" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 22:51:17 EST 2023" starttimestamp="1700516585068" timestamp="22092800" />
  <DocumentChange __id="4178" _type="Replace" date="Mon Nov 20 22:51:16 EST 2023" docASTNodeCount="184" docActiveCodeLength="1245" docExpressionCount="138" docLength="1460" endLine="24" insertionLength="17" int_docASTNodeCount="185" int_docActiveCodeLength="1228" int_docExpressionCount="139" int_docLength="1443" length="3" offset="756" startLine="24" starttimestamp="1700516585068" timestamp="22091410">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="4181" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:51:19 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22094328" />
  <Command __id="4182" _type="MoveCaretCommand" caretOffset="704" date="Mon Nov 20 22:51:19 EST 2023" docOffset="704" starttimestamp="1700516585068" timestamp="22094396" />
  <Command __id="4183" _type="MoveCaretCommand" caretOffset="773" date="Mon Nov 20 22:51:19 EST 2023" docOffset="773" starttimestamp="1700516585068" timestamp="22094699" />
  <Command __id="4185" _type="InsertStringCommand" date="Mon Nov 20 22:51:22 EST 2023" starttimestamp="1700516585068" timestamp="22097011" timestamp2="22097011">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4186" _type="MoveCaretCommand" caretOffset="774" date="Mon Nov 20 22:51:22 EST 2023" docOffset="774" starttimestamp="1700516585068" timestamp="22097194" />
  <Command __id="4187" _type="MoveCaretCommand" caretOffset="842" date="Mon Nov 20 22:51:23 EST 2023" docOffset="842" starttimestamp="1700516585068" timestamp="22097942" />
  <DocumentChange __id="4184" _type="Insert" date="Mon Nov 20 22:51:22 EST 2023" docASTNodeCount="196" docActiveCodeLength="1246" docExpressionCount="140" docLength="1461" length="1" offset="773" starttimestamp="1700516585068" timestamp="22097008">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="4188" _type="MoveCaretCommand" caretOffset="773" date="Mon Nov 20 22:51:27 EST 2023" docOffset="773" starttimestamp="1700516585068" timestamp="22102899" />
  <DocumentChange __id="4189" _type="Insert" date="Mon Nov 20 22:51:29 EST 2023" docASTNodeCount="198" docActiveCodeLength="1249" docExpressionCount="142" docLength="1464" length="3" offset="773" repeat="3" starttimestamp="1700516585068" timestamp="22103977" timestamp2="22104428">
    <text><![CDATA[.to]]></text>
  </DocumentChange>
  <Command __id="4190" _type="InsertStringCommand" date="Mon Nov 20 22:51:29 EST 2023" starttimestamp="1700516585068" timestamp="22103980" timestamp2="22103980">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4191" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 22:51:29 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="22103989" />
  <Command __id="4194" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 22:51:29 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="22104724" />
  <DocumentChange __id="4195" _type="Replace" date="Mon Nov 20 22:51:29 EST 2023" docASTNodeCount="198" docActiveCodeLength="1257" docExpressionCount="142" docLength="1472" endLine="24" insertionLength="10" int_docASTNodeCount="188" int_docActiveCodeLength="1247" int_docExpressionCount="142" int_docLength="1462" length="2" offset="774" startLine="24" starttimestamp="1700516585068" timestamp="22104729">
    <deletedText><![CDATA[to]]></deletedText>
    <insertedText><![CDATA[toString()]]></insertedText>
  </DocumentChange>
  <Command __id="4196" _type="InsertStringCommand" date="Mon Nov 20 22:51:29 EST 2023" starttimestamp="1700516585068" timestamp="22104734" timestamp2="22104734">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4197" _type="MoveCaretCommand" caretOffset="799" date="Mon Nov 20 22:51:30 EST 2023" docOffset="799" starttimestamp="1700516585068" timestamp="22105549" />
  <Command __id="4198" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 22:51:30 EST 2023" starttimestamp="1700516585068" timestamp="22105886" />
  <Command __id="4199" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:51:31 EST 2023" starttimestamp="1700516585068" timestamp="22105985" />
  <Command __id="4200" _type="EclipseCommand" commandID="" date="Mon Nov 20 22:51:31 EST 2023" starttimestamp="1700516585068" timestamp="22105992" />
  <Command __id="4201" _type="MoveCaretCommand" caretOffset="1353" date="Mon Nov 20 22:51:31 EST 2023" docOffset="1353" starttimestamp="1700516585068" timestamp="22106666" />
  <Command __id="4202" _type="MoveCaretCommand" caretOffset="1385" date="Mon Nov 20 22:51:32 EST 2023" docOffset="1385" starttimestamp="1700516585068" timestamp="22107336" />
  <Command __id="4203" _type="MoveCaretCommand" caretOffset="1453" date="Mon Nov 20 22:51:32 EST 2023" docOffset="1453" starttimestamp="1700516585068" timestamp="22107870" />
  <Command __id="4204" _type="MoveCaretCommand" caretOffset="1419" date="Mon Nov 20 22:51:33 EST 2023" docOffset="1419" starttimestamp="1700516585068" timestamp="22108093" />
  <Command __id="4205" _type="MoveCaretCommand" caretOffset="1075" date="Mon Nov 20 22:51:33 EST 2023" docOffset="1075" starttimestamp="1700516585068" timestamp="22108846" />
  <Command __id="4206" _type="InsertStringCommand" date="Mon Nov 20 22:51:34 EST 2023" starttimestamp="1700516585068" timestamp="22109029" timestamp2="22109029">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4207" _type="ShellCommand" date="Mon Nov 20 22:51:34 EST 2023" starttimestamp="1700516585068" timestamp="22109816" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4208" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:51:35 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22110065" type="Run" />
  <Command __id="4209" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:51:35 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22110065" type="Run" />
  <Command __id="4210" _type="ShellCommand" date="Mon Nov 20 22:51:35 EST 2023" starttimestamp="1700516585068" timestamp="22110091" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4213" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:51:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22112715" type="Run" />
  <Command __id="4214" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:51:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22112715" type="Run" />
  <Command __id="4215" _type="ShellCommand" date="Mon Nov 20 22:51:38 EST 2023" starttimestamp="1700516585068" timestamp="22113027" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4216" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116389" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"26¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4217" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116392" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4218" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116397" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4219" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116399" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4220" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116400" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="4221" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116415" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4222" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116420" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4223" _type="ConsoleOutput" date="Mon Nov 20 22:51:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="22116420" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4224" _type="ShellCommand" date="Mon Nov 20 22:51:47 EST 2023" starttimestamp="1700516585068" timestamp="22122221" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4225" _type="BalloonCommand" date="Mon Nov 20 22:51:50 EST 2023" message="*******************************************
Worked 40 minutes(fixed)/60 minutes(context based) from
Mon Nov 20 21:51:50 EST 2023 to Mon Nov 20 22:51:47 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 7 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/loadEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/quoteEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/listEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java
Number of insert: 1599
Number of delete: 817
" starttimestamp="1700516585068" timestamp="22125073">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[1599]]></insert>
    <startTime><![CDATA[1700535110135]]></startTime>
    <endTime><![CDATA[1700538707289]]></endTime>
    <workTime><![CDATA[40]]></workTime>
    <delete><![CDATA[817]]></delete>
  </Command>
  <Command __id="4226" _type="ShellCommand" date="Mon Nov 20 22:51:52 EST 2023" starttimestamp="1700516585068" timestamp="22127016" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4227" _type="ShellCommand" date="Mon Nov 20 22:52:04 EST 2023" starttimestamp="1700516585068" timestamp="22139276" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4228" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:52:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22139288" type="Run" />
  <Command __id="4229" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 22:52:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22139288" type="Run" />
  <Command __id="4230" _type="MoveCaretCommand" caretOffset="147" date="Mon Nov 20 22:52:05 EST 2023" docOffset="264" starttimestamp="1700516585068" timestamp="22140442" />
  <Command __id="4231" _type="MoveCaretCommand" caretOffset="147" date="Mon Nov 20 22:52:05 EST 2023" docOffset="264" starttimestamp="1700516585068" timestamp="22140442" />
  <Command __id="4232" _type="ShellCommand" date="Mon Nov 20 22:52:06 EST 2023" starttimestamp="1700516585068" timestamp="22141159" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4233" _type="ShellCommand" date="Mon Nov 20 22:53:41 EST 2023" starttimestamp="1700516585068" timestamp="22236686" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4235" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 22:53:42 EST 2023" docOffset="537" starttimestamp="1700516585068" timestamp="22237597" />
  <Command __id="4237" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 22:53:43 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="22238195" />
  <Command __id="4238" _type="ShellCommand" date="Mon Nov 20 22:53:44 EST 2023" starttimestamp="1700516585068" timestamp="22238944" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4239" _type="ShellCommand" date="Mon Nov 20 23:17:23 EST 2023" starttimestamp="1700516585068" timestamp="23658236" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4240" _type="ShellCommand" date="Mon Nov 20 23:17:24 EST 2023" starttimestamp="1700516585068" timestamp="23659665" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4241" _type="ShellCommand" date="Mon Nov 20 23:18:44 EST 2023" starttimestamp="1700516585068" timestamp="23739747" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4242" _type="ShellCommand" date="Mon Nov 20 23:18:45 EST 2023" starttimestamp="1700516585068" timestamp="23740154" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4211" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:51:35 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22110682">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4234" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:53:42 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22237551">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4236" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 22:53:43 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="22238153">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4243" _type="ShellCommand" date="Mon Nov 20 23:18:46 EST 2023" starttimestamp="1700516585068" timestamp="23741650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4245" _type="MoveCaretCommand" caretOffset="147" date="Mon Nov 20 23:18:50 EST 2023" docOffset="264" starttimestamp="1700516585068" timestamp="23745068" />
  <Command __id="4246" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 23:18:51 EST 2023" starttimestamp="1700516585068" timestamp="23746524" />
  <Command __id="4247" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:18:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23746674" type="Run" />
  <Command __id="4248" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:18:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23746674" type="Run" />
  <Command __id="4249" _type="ShellCommand" date="Mon Nov 20 23:18:52 EST 2023" starttimestamp="1700516585068" timestamp="23747000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4250" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750629" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4251" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750631" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4252" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750636" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment"), Diff(INSERT,"execution time (ms):"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="4253" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750637" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4254" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750638" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4255" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750638" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4256" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750654" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4257" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750658" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"¶Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4258" _type="ConsoleOutput" date="Mon Nov 20 23:18:55 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23750659" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4259" _type="ShellCommand" date="Mon Nov 20 23:18:59 EST 2023" starttimestamp="1700516585068" timestamp="23754023" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4260" _type="MoveCaretCommand" caretOffset="162" date="Mon Nov 20 23:18:59 EST 2023" docOffset="279" starttimestamp="1700516585068" timestamp="23754098" />
  <Command __id="4261" _type="MoveCaretCommand" caretOffset="162" date="Mon Nov 20 23:18:59 EST 2023" docOffset="279" starttimestamp="1700516585068" timestamp="23754098" />
  <Command __id="4263" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:19:12 EST 2023" starttimestamp="1700516585068" timestamp="23767852" />
  <Command __id="4264" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:19:12 EST 2023" starttimestamp="1700516585068" timestamp="23767853" />
  <Command __id="4265" _type="ShellCommand" date="Mon Nov 20 23:19:13 EST 2023" starttimestamp="1700516585068" timestamp="23767932" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4266" _type="ShellCommand" date="Mon Nov 20 23:19:13 EST 2023" starttimestamp="1700516585068" timestamp="23767979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4267" _type="ShellCommand" date="Mon Nov 20 23:19:43 EST 2023" starttimestamp="1700516585068" timestamp="23798409" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4268" _type="LocalChecksRawCommand" date="Mon Nov 20 23:19:43 EST 2023" starttimestamp="1700516585068" timestamp="23798412">
    <CSVRow><![CDATA[92,Mon Nov 20 23:18:55 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,54,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4269" _type="LocalChecksRawCommand" date="Mon Nov 20 23:19:43 EST 2023" starttimestamp="1700516585068" timestamp="23798412">
    <CSVRow><![CDATA[92,Mon Nov 20 23:18:55 EST 2023,10,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,54,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4270" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:19:44 EST 2023" starttimestamp="1700516585068" timestamp="23799030" />
  <Command __id="4271" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:19:44 EST 2023" starttimestamp="1700516585068" timestamp="23799030" />
  <Command __id="4272" _type="MoveCaretCommand" caretOffset="481" date="Mon Nov 20 23:19:44 EST 2023" docOffset="598" starttimestamp="1700516585068" timestamp="23799283" />
  <Command __id="4273" _type="MoveCaretCommand" caretOffset="481" date="Mon Nov 20 23:19:44 EST 2023" docOffset="598" starttimestamp="1700516585068" timestamp="23799283" />
  <Command __id="4274" _type="ShellCommand" date="Mon Nov 20 23:19:45 EST 2023" starttimestamp="1700516585068" timestamp="23800076" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4275" _type="ShellCommand" date="Mon Nov 20 23:19:47 EST 2023" starttimestamp="1700516585068" timestamp="23802487" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4276" _type="MoveCaretCommand" caretOffset="455" date="Mon Nov 20 23:19:47 EST 2023" docOffset="572" starttimestamp="1700516585068" timestamp="23802560" />
  <Command __id="4277" _type="MoveCaretCommand" caretOffset="455" date="Mon Nov 20 23:19:47 EST 2023" docOffset="572" starttimestamp="1700516585068" timestamp="23802560" />
  <Command __id="4281" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:19:51 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23806542" type="Run" />
  <Command __id="4282" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:19:51 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23806542" type="Run" />
  <Command __id="4283" _type="ConsoleOutput" date="Mon Nov 20 23:19:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23807922" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4284" _type="ConsoleOutput" date="Mon Nov 20 23:19:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23807922" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):11"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4285" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812885" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4286" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812886" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):9"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4287" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812887" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4288" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812888" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):11"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4289" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812916" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4290" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812922" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):45
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):45"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4291" _type="ConsoleOutput" date="Mon Nov 20 23:19:57 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23812924" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):45"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4292" _type="ConsoleOutput" date="Mon Nov 20 23:20:13 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23828679" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oa"), Diff(INSERT,"istTeste"), Diff(EQUAL,"dChecker,0.0% complete,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,Expect"), Diff(DELETE,"ed strings:Tactual string NIL"), Diff(INSERT,"ing in test file a call to LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4293" _type="LocalChecksRawCommand" date="Mon Nov 20 23:20:13 EST 2023" starttimestamp="1700516585068" timestamp="23828681">
    <CSVRow><![CDATA[93,Mon Nov 20 23:19:52 EST 2023,11,1,TestLispFileProvided,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided+ , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,55,0,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4294" _type="LocalChecksRawCommand" date="Mon Nov 20 23:20:13 EST 2023" starttimestamp="1700516585068" timestamp="23828681">
    <CSVRow><![CDATA[93,Mon Nov 20 23:19:52 EST 2023,11,1,TestLispFileProvided,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided+ , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,55,0,false, , , ,TestLispFileProvided-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4295" _type="LocalChecksRawCommand" date="Mon Nov 20 23:20:13 EST 2023" starttimestamp="1700516585068" timestamp="23828681">
    <CSVRow><![CDATA[94,Mon Nov 20 23:19:57 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,55,1,false, ,ClassRegistryProvided MainClassProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4296" _type="LocalChecksRawCommand" date="Mon Nov 20 23:20:13 EST 2023" starttimestamp="1700516585068" timestamp="23828681">
    <CSVRow><![CDATA[94,Mon Nov 20 23:19:57 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,55,1,false, ,ClassRegistryProvided MainClassProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4297" _type="LocalChecksRawCommand" date="Mon Nov 20 23:20:13 EST 2023" starttimestamp="1700516585068" timestamp="23828681">
    <CSVRow><![CDATA[95,Mon Nov 20 23:20:13 EST 2023,11,0,ListTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,55,2,false, , , ,ListTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4298" _type="LocalChecksRawCommand" date="Mon Nov 20 23:20:13 EST 2023" starttimestamp="1700516585068" timestamp="23828681">
    <CSVRow><![CDATA[95,Mon Nov 20 23:20:13 EST 2023,11,0,ListTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,55,2,false, , , ,ListTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4299" _type="ShellCommand" date="Mon Nov 20 23:20:15 EST 2023" starttimestamp="1700516585068" timestamp="23830295" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4300" _type="MoveCaretCommand" caretOffset="788" date="Mon Nov 20 23:20:21 EST 2023" docOffset="905" starttimestamp="1700516585068" timestamp="23836067" />
  <Command __id="4301" _type="MoveCaretCommand" caretOffset="788" date="Mon Nov 20 23:20:21 EST 2023" docOffset="905" starttimestamp="1700516585068" timestamp="23836067" />
  <Command __id="4302" _type="ShellCommand" date="Mon Nov 20 23:20:22 EST 2023" starttimestamp="1700516585068" timestamp="23837297" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4303" _type="ShellCommand" date="Mon Nov 20 23:20:23 EST 2023" starttimestamp="1700516585068" timestamp="23838449" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4304" _type="MoveCaretCommand" caretOffset="992" date="Mon Nov 20 23:20:23 EST 2023" docOffset="1109" starttimestamp="1700516585068" timestamp="23838513" />
  <Command __id="4305" _type="MoveCaretCommand" caretOffset="992" date="Mon Nov 20 23:20:23 EST 2023" docOffset="1109" starttimestamp="1700516585068" timestamp="23838513" />
  <Command __id="4306" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 23:20:25 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="23840455" />
  <Command __id="4307" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 23:20:25 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="23840455" />
  <Command __id="4309" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 23:20:26 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="23840991" />
  <Command __id="4310" _type="ShellCommand" date="Mon Nov 20 23:20:29 EST 2023" starttimestamp="1700516585068" timestamp="23844341" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4311" _type="ShellCommand" date="Mon Nov 20 23:20:29 EST 2023" starttimestamp="1700516585068" timestamp="23844882" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4312" _type="ShellCommand" date="Mon Nov 20 23:20:30 EST 2023" starttimestamp="1700516585068" timestamp="23845444" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4244" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:18:50 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23745025">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4308" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:20:26 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23840941">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4313" _type="ShellCommand" date="Mon Nov 20 23:20:34 EST 2023" starttimestamp="1700516585068" timestamp="23849155" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4314" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:20:35 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23850923">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4315" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 23:20:36 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="23850971" />
  <Command __id="4316" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:20:36 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23851846">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4317" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 23:20:36 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="23851894" />
  <Command __id="4319" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 23:20:37 EST 2023" docOffset="537" starttimestamp="1700516585068" timestamp="23852212" />
  <Command __id="4320" _type="MoveCaretCommand" caretOffset="508" date="Mon Nov 20 23:20:39 EST 2023" docOffset="508" starttimestamp="1700516585068" timestamp="23854884" />
  <Command __id="4321" _type="MoveCaretCommand" caretOffset="508" date="Mon Nov 20 23:20:39 EST 2023" docOffset="508" starttimestamp="1700516585068" timestamp="23854884" />
  <Command __id="4323" _type="SelectTextCommand" caretOffset="450" date="Mon Nov 20 23:20:40 EST 2023" end="450" start="437" starttimestamp="1700516585068" timestamp="23855744" />
  <Command __id="4324" _type="SelectTextCommand" caretOffset="450" date="Mon Nov 20 23:20:40 EST 2023" end="450" start="437" starttimestamp="1700516585068" timestamp="23855766" />
  <Command __id="4325" _type="MoveCaretCommand" caretOffset="656" date="Mon Nov 20 23:20:44 EST 2023" docOffset="656" starttimestamp="1700516585068" timestamp="23859285" />
  <Command __id="4326" _type="MoveCaretCommand" caretOffset="1285" date="Mon Nov 20 23:20:47 EST 2023" docOffset="1285" starttimestamp="1700516585068" timestamp="23862300" />
  <Command __id="4327" _type="MoveCaretCommand" caretOffset="918" date="Mon Nov 20 23:20:49 EST 2023" docOffset="918" starttimestamp="1700516585068" timestamp="23864463" />
  <Command __id="4328" _type="MoveCaretCommand" caretOffset="778" date="Mon Nov 20 23:20:53 EST 2023" docOffset="778" starttimestamp="1700516585068" timestamp="23868020" />
  <Command __id="4329" _type="MoveCaretCommand" caretOffset="785" date="Mon Nov 20 23:20:53 EST 2023" docOffset="785" starttimestamp="1700516585068" timestamp="23868488" />
  <Command __id="4330" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Mon Nov 20 23:20:55 EST 2023" starttimestamp="1700516585068" timestamp="23870521" />
  <Command __id="4331" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Mon Nov 20 23:20:56 EST 2023" starttimestamp="1700516585068" timestamp="23871309" />
  <Command __id="4332" _type="BreakPointCommand" date="Mon Nov 20 23:20:56 EST 2023" lineNumber="25" starttimestamp="1700516585068" timestamp="23871318" type="BreakPointAdded" />
  <Command __id="4333" _type="BreakPointCommand" date="Mon Nov 20 23:20:57 EST 2023" lineNumber="25" starttimestamp="1700516585068" timestamp="23871984" type="BreakPointRemoved" />
  <Command __id="4334" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Mon Nov 20 23:20:57 EST 2023" starttimestamp="1700516585068" timestamp="23872018" />
  <Command __id="4335" _type="MoveCaretCommand" caretOffset="925" date="Mon Nov 20 23:20:58 EST 2023" docOffset="925" starttimestamp="1700516585068" timestamp="23873822" />
  <Command __id="4336" _type="MoveCaretCommand" caretOffset="926" date="Mon Nov 20 23:20:59 EST 2023" docOffset="926" starttimestamp="1700516585068" timestamp="23874117" />
  <Command __id="4337" _type="MoveCaretCommand" caretOffset="925" date="Mon Nov 20 23:20:59 EST 2023" docOffset="925" starttimestamp="1700516585068" timestamp="23874308" />
  <Command __id="4318" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:20:37 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23852171">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4322" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:20:40 EST 2023" docASTNodeCount="198" docActiveCodeLength="1257" docExpressionCount="142" docLength="1472" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23855719">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;"), Diff(DELETE,"import main.lisp.interpreter.ObservableLispInterpreter;"), Diff(EQUAL,"import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1"), Diff(INSERT,"environment"), Diff(EQUAL,") {        // Ensure the argument is a string        if"), Diff(DELETE," (!(arg0 instanceof main.lisp.parser.terms.String"), Diff(INSERT,"(expr.getTail().getHead() instanceof Nil"), Diff(EQUAL,"Atom)"), Diff(DELETE,")"), Diff(EQUAL," {        "), Diff(DELETE,"    "), Diff(INSERT,"	"), Diff(EQUAL,"return new NilAtom();        }        String fileName = "), Diff(DELETE,"((main.lisp.parser.terms.StringAtom) arg0).getValue"), Diff(INSERT,"expr.getTail().getHead().eval(environment).toString"), Diff(EQUAL,"();        try {            // Read all lines from the specified file            List<String> lines = Files.readAllLines(Path.of(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            // Process each line in the loaded file            for (String line : lines) {                interpreterModel.newInput(line);            }            return new TAtom();        } catch (IOException e) {            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        try {
            // Read all lines from the specified file
            List<String> lines = Files.readAllLines(Path.of(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            return new TAtom();
        } catch (IOException e) {
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <DocumentChange __id="4340" _type="Insert" date="Mon Nov 20 23:21:01 EST 2023" docASTNodeCount="190" docActiveCodeLength="1281" docExpressionCount="143" docLength="1496" length="24" offset="785" repeat="15" starttimestamp="1700516585068" timestamp="23876830" timestamp2="23879014">
    <text><![CDATA[
        print(fileName)]]></text>
  </DocumentChange>
  <Command __id="4338" _type="MoveCaretCommand" caretOffset="799" date="Mon Nov 20 23:21:00 EST 2023" docOffset="799" starttimestamp="1700516585068" timestamp="23875500" />
  <Command __id="4339" _type="MoveCaretCommand" caretOffset="785" date="Mon Nov 20 23:21:01 EST 2023" docOffset="785" starttimestamp="1700516585068" timestamp="23876273" />
  <Command __id="4341" _type="InsertStringCommand" date="Mon Nov 20 23:21:01 EST 2023" starttimestamp="1700516585068" timestamp="23876834" timestamp2="23876834">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4343" _type="InsertStringCommand" date="Mon Nov 20 23:21:02 EST 2023" starttimestamp="1700516585068" timestamp="23877122" timestamp2="23877122">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4345" _type="InsertStringCommand" date="Mon Nov 20 23:21:02 EST 2023" starttimestamp="1700516585068" timestamp="23877227" timestamp2="23877227">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4347" _type="InsertStringCommand" date="Mon Nov 20 23:21:02 EST 2023" starttimestamp="1700516585068" timestamp="23877361" timestamp2="23877361">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4349" _type="InsertStringCommand" date="Mon Nov 20 23:21:02 EST 2023" starttimestamp="1700516585068" timestamp="23877435" timestamp2="23877435">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4351" _type="InsertStringCommand" date="Mon Nov 20 23:21:02 EST 2023" starttimestamp="1700516585068" timestamp="23877466" timestamp2="23877466">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4353" _type="InsertStringCommand" date="Mon Nov 20 23:21:02 EST 2023" starttimestamp="1700516585068" timestamp="23877634" timestamp2="23877634">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4355" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878100" timestamp2="23878100">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4357" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878162" timestamp2="23878162">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4359" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878256" timestamp2="23878256">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4361" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878332" timestamp2="23878332">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4363" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878669" timestamp2="23878669">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4365" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878803" timestamp2="23878803">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4367" _type="InsertStringCommand" date="Mon Nov 20 23:21:03 EST 2023" starttimestamp="1700516585068" timestamp="23878923" timestamp2="23878923">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4369" _type="InsertStringCommand" date="Mon Nov 20 23:21:04 EST 2023" starttimestamp="1700516585068" timestamp="23879014" timestamp2="23879014">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4371" _type="UndoCommand" date="Mon Nov 20 23:21:05 EST 2023" starttimestamp="1700516585068" timestamp="23880362" />
  <Command __id="4373" _type="UndoCommand" date="Mon Nov 20 23:21:05 EST 2023" starttimestamp="1700516585068" timestamp="23880901" />
  <Command __id="4375" _type="UndoCommand" date="Mon Nov 20 23:21:06 EST 2023" starttimestamp="1700516585068" timestamp="23881299" />
  <Command __id="4377" _type="InsertStringCommand" date="Mon Nov 20 23:21:06 EST 2023" starttimestamp="1700516585068" timestamp="23881907" timestamp2="23881907">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4379" _type="InsertStringCommand" date="Mon Nov 20 23:21:07 EST 2023" starttimestamp="1700516585068" timestamp="23882124" timestamp2="23882124">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4381" _type="InsertStringCommand" date="Mon Nov 20 23:21:07 EST 2023" starttimestamp="1700516585068" timestamp="23882331" timestamp2="23882331">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4383" _type="InsertStringCommand" date="Mon Nov 20 23:21:07 EST 2023" starttimestamp="1700516585068" timestamp="23882432" timestamp2="23882432">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="4370" _type="Delete" date="Mon Nov 20 23:21:05 EST 2023" docASTNodeCount="189" docActiveCodeLength="1273" docExpressionCount="142" docLength="1488" endLine="25" length="8" offset="800" startLine="25" starttimestamp="1700516585068" timestamp="23880357">
    <text><![CDATA[fileName]]></text>
  </DocumentChange>
  <DocumentChange __id="4372" _type="Delete" date="Mon Nov 20 23:21:05 EST 2023" docASTNodeCount="198" docActiveCodeLength="1257" docExpressionCount="142" docLength="1472" endLine="25" length="16" offset="785" repeat="2" startLine="24" starttimestamp="1700516585068" timestamp="23880897" timestamp2="23881290">
    <text><![CDATA[
        print()]]></text>
  </DocumentChange>
  <DocumentChange __id="4376" _type="Insert" date="Mon Nov 20 23:21:06 EST 2023" docASTNodeCount="190" docActiveCodeLength="1276" docExpressionCount="143" docLength="1491" length="19" offset="785" repeat="11" starttimestamp="1700516585068" timestamp="23881904" timestamp2="23883576">
    <text><![CDATA[
        System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="4397" _type="Replace" date="Mon Nov 20 23:21:08 EST 2023" docASTNodeCount="191" docActiveCodeLength="1277" docExpressionCount="144" docLength="1492" endLine="25" insertionLength="4" int_docASTNodeCount="191" int_docActiveCodeLength="1273" int_docExpressionCount="144" int_docLength="1488" length="3" offset="801" startLine="25" starttimestamp="1700516585068" timestamp="23883686">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4400" _type="Insert" date="Mon Nov 20 23:21:08 EST 2023" docASTNodeCount="192" docActiveCodeLength="1278" docExpressionCount="145" docLength="1493" length="1" offset="805" starttimestamp="1700516585068" timestamp="23883876">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="4402" _type="Replace" date="Mon Nov 20 23:21:09 EST 2023" docASTNodeCount="205" docActiveCodeLength="1290" docExpressionCount="148" docLength="1505" endLine="25" insertionLength="13" int_docASTNodeCount="191" int_docActiveCodeLength="1277" int_docExpressionCount="144" int_docLength="1492" length="1" offset="805" startLine="25" starttimestamp="1700516585068" timestamp="23884339">
    <deletedText><![CDATA[p]]></deletedText>
    <insertedText><![CDATA[print(false);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4404" _type="Delete" date="Mon Nov 20 23:21:10 EST 2023" docASTNodeCount="191" docActiveCodeLength="1284" docExpressionCount="144" docLength="1499" endLine="25" length="6" offset="810" repeat="2" startLine="25" starttimestamp="1700516585068" timestamp="23885853" timestamp2="23885970">
    <text><![CDATA[(false]]></text>
  </DocumentChange>
  <Command __id="4385" _type="InsertStringCommand" date="Mon Nov 20 23:21:07 EST 2023" starttimestamp="1700516585068" timestamp="23882537" timestamp2="23882537">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4387" _type="InsertStringCommand" date="Mon Nov 20 23:21:07 EST 2023" starttimestamp="1700516585068" timestamp="23882898" timestamp2="23882898">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4389" _type="InsertStringCommand" date="Mon Nov 20 23:21:08 EST 2023" starttimestamp="1700516585068" timestamp="23882993" timestamp2="23882993">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4391" _type="InsertStringCommand" date="Mon Nov 20 23:21:08 EST 2023" starttimestamp="1700516585068" timestamp="23883165" timestamp2="23883165">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4392" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:21:08 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="23883170" />
  <Command __id="4396" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:21:08 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="23883682" />
  <Command __id="4398" _type="InsertStringCommand" date="Mon Nov 20 23:21:08 EST 2023" starttimestamp="1700516585068" timestamp="23883688" timestamp2="23883688">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4399" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:21:08 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="23883695" />
  <Command __id="4401" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:21:09 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="23884334" />
  <Command __id="4403" _type="InsertStringCommand" date="Mon Nov 20 23:21:09 EST 2023" starttimestamp="1700516585068" timestamp="23884368" timestamp2="23884368">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4405" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:10 EST 2023" starttimestamp="1700516585068" timestamp="23885857" />
  <Command __id="4407" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:11 EST 2023" starttimestamp="1700516585068" timestamp="23885977" />
  <Command __id="4409" _type="InsertStringCommand" date="Mon Nov 20 23:21:12 EST 2023" starttimestamp="1700516585068" timestamp="23887027" timestamp2="23887027">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4411" _type="InsertStringCommand" date="Mon Nov 20 23:21:12 EST 2023" starttimestamp="1700516585068" timestamp="23887131" timestamp2="23887131">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4413" _type="InsertStringCommand" date="Mon Nov 20 23:21:12 EST 2023" starttimestamp="1700516585068" timestamp="23887390" timestamp2="23887390">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="4408" _type="Insert" date="Mon Nov 20 23:21:12 EST 2023" docASTNodeCount="195" docActiveCodeLength="1288" docExpressionCount="148" docLength="1503" length="4" offset="810" repeat="3" starttimestamp="1700516585068" timestamp="23887025" timestamp2="23887386">
    <text><![CDATA[ln()]]></text>
  </DocumentChange>
  <DocumentChange __id="4416" _type="Delete" date="Mon Nov 20 23:21:14 EST 2023" docASTNodeCount="204" docActiveCodeLength="1287" docExpressionCount="147" docLength="1502" endLine="25" length="1" offset="814" startLine="25" starttimestamp="1700516585068" timestamp="23889347">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="4419" _type="Insert" date="Mon Nov 20 23:21:15 EST 2023" docASTNodeCount="205" docActiveCodeLength="1295" docExpressionCount="148" docLength="1510" length="8" offset="813" repeat="8" starttimestamp="1700516585068" timestamp="23890338" timestamp2="23891565">
    <text><![CDATA[fileName]]></text>
  </DocumentChange>
  <Command __id="4414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:21:13 EST 2023" starttimestamp="1700516585068" timestamp="23888761" />
  <Command __id="4415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:21:14 EST 2023" starttimestamp="1700516585068" timestamp="23889086" />
  <Command __id="4417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:14 EST 2023" starttimestamp="1700516585068" timestamp="23889349" />
  <Command __id="4418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 23:21:14 EST 2023" starttimestamp="1700516585068" timestamp="23889643" />
  <Command __id="4420" _type="InsertStringCommand" date="Mon Nov 20 23:21:15 EST 2023" starttimestamp="1700516585068" timestamp="23890340" timestamp2="23890340">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4422" _type="InsertStringCommand" date="Mon Nov 20 23:21:15 EST 2023" starttimestamp="1700516585068" timestamp="23890455" timestamp2="23890455">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4424" _type="InsertStringCommand" date="Mon Nov 20 23:21:15 EST 2023" starttimestamp="1700516585068" timestamp="23890757" timestamp2="23890757">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4426" _type="InsertStringCommand" date="Mon Nov 20 23:21:15 EST 2023" starttimestamp="1700516585068" timestamp="23890875" timestamp2="23890875">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4428" _type="InsertStringCommand" date="Mon Nov 20 23:21:16 EST 2023" starttimestamp="1700516585068" timestamp="23891154" timestamp2="23891154">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="4430" _type="InsertStringCommand" date="Mon Nov 20 23:21:16 EST 2023" starttimestamp="1700516585068" timestamp="23891364" timestamp2="23891364">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4432" _type="InsertStringCommand" date="Mon Nov 20 23:21:16 EST 2023" starttimestamp="1700516585068" timestamp="23891493" timestamp2="23891493">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4434" _type="InsertStringCommand" date="Mon Nov 20 23:21:16 EST 2023" starttimestamp="1700516585068" timestamp="23891566" timestamp2="23891566">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4435" _type="MoveCaretCommand" caretOffset="785" date="Mon Nov 20 23:21:17 EST 2023" docOffset="785" starttimestamp="1700516585068" timestamp="23892260" />
  <Command __id="4436" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:21:17 EST 2023" starttimestamp="1700516585068" timestamp="23892385" />
  <Command __id="4437" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:21:17 EST 2023" starttimestamp="1700516585068" timestamp="23892484" />
  <Command __id="4438" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:21:17 EST 2023" starttimestamp="1700516585068" timestamp="23892492" />
  <Command __id="4440" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 23:21:18 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="23893734" />
  <Command __id="4441" _type="ShellCommand" date="Mon Nov 20 23:21:19 EST 2023" starttimestamp="1700516585068" timestamp="23894401" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4442" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:20 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23895198" type="Run" />
  <Command __id="4443" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:20 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23895198" type="Run" />
  <Command __id="4444" _type="ShellCommand" date="Mon Nov 20 23:21:21 EST 2023" starttimestamp="1700516585068" timestamp="23896540" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4445" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 23:21:21 EST 2023" starttimestamp="1700516585068" timestamp="23896577" />
  <Command __id="4446" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23896715" type="Run" />
  <Command __id="4447" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23896715" type="Run" />
  <Command __id="4448" _type="ShellCommand" date="Mon Nov 20 23:21:22 EST 2023" starttimestamp="1700516585068" timestamp="23897015" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4449" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901635" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to LIST¶")]]]></diff>
  </Command>
  <Command __id="4450" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901637" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4451" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901642" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4452" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901643" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4453" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901643" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4454" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901644" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4455" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901661" type="ConsoleOutput">
    <outputString><![CDATA["/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,""/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4456" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901663" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,""/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4457" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901665" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):28
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):28"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4458" _type="ConsoleOutput" date="Mon Nov 20 23:21:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23901667" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):28"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4439" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:21:18 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23893679">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4459" _type="ShellCommand" date="Mon Nov 20 23:21:30 EST 2023" starttimestamp="1700516585068" timestamp="23904997" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4460" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:21:35 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23910034">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4461" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 23:21:35 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="23910082" />
  <Command __id="4462" _type="LocalChecksRawCommand" date="Mon Nov 20 23:21:35 EST 2023" starttimestamp="1700516585068" timestamp="23910083">
    <CSVRow><![CDATA[96,Mon Nov 20 23:21:26 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,56,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4463" _type="LocalChecksRawCommand" date="Mon Nov 20 23:21:35 EST 2023" starttimestamp="1700516585068" timestamp="23910083">
    <CSVRow><![CDATA[96,Mon Nov 20 23:21:26 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,56,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4465" _type="MoveCaretCommand" caretOffset="785" date="Mon Nov 20 23:21:35 EST 2023" docOffset="785" starttimestamp="1700516585068" timestamp="23910420" />
  <Command __id="4466" _type="MoveCaretCommand" caretOffset="813" date="Mon Nov 20 23:21:36 EST 2023" docOffset="813" starttimestamp="1700516585068" timestamp="23911592" />
  <Command __id="4468" _type="InsertStringCommand" date="Mon Nov 20 23:21:37 EST 2023" starttimestamp="1700516585068" timestamp="23912401" timestamp2="23912401">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="4470" _type="InsertStringCommand" date="Mon Nov 20 23:21:37 EST 2023" starttimestamp="1700516585068" timestamp="23912529" timestamp2="23912529">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4472" _type="InsertStringCommand" date="Mon Nov 20 23:21:37 EST 2023" starttimestamp="1700516585068" timestamp="23912638" timestamp2="23912638">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4474" _type="InsertStringCommand" date="Mon Nov 20 23:21:37 EST 2023" starttimestamp="1700516585068" timestamp="23912729" timestamp2="23912729">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4476" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:38 EST 2023" starttimestamp="1700516585068" timestamp="23912971" />
  <Command __id="4478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:38 EST 2023" starttimestamp="1700516585068" timestamp="23913088" />
  <Command __id="4480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:38 EST 2023" starttimestamp="1700516585068" timestamp="23913228" />
  <Command __id="4482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:38 EST 2023" starttimestamp="1700516585068" timestamp="23913346" />
  <Command __id="4484" _type="InsertStringCommand" date="Mon Nov 20 23:21:38 EST 2023" starttimestamp="1700516585068" timestamp="23913556" timestamp2="23913556">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4486" _type="InsertStringCommand" date="Mon Nov 20 23:21:38 EST 2023" starttimestamp="1700516585068" timestamp="23913819" timestamp2="23913819">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="4488" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:21:39 EST 2023" starttimestamp="1700516585068" timestamp="23914231" />
  <Command __id="4490" _type="InsertStringCommand" date="Mon Nov 20 23:21:39 EST 2023" starttimestamp="1700516585068" timestamp="23914658" timestamp2="23914658">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4491" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 23:21:40 EST 2023" starttimestamp="1700516585068" timestamp="23914980" />
  <Command __id="4493" _type="InsertStringCommand" date="Mon Nov 20 23:21:40 EST 2023" starttimestamp="1700516585068" timestamp="23915311" timestamp2="23915311">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="4495" _type="InsertStringCommand" date="Mon Nov 20 23:21:40 EST 2023" starttimestamp="1700516585068" timestamp="23915466" timestamp2="23915466">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4497" _type="InsertStringCommand" date="Mon Nov 20 23:21:40 EST 2023" starttimestamp="1700516585068" timestamp="23915633" timestamp2="23915633">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4499" _type="InsertStringCommand" date="Mon Nov 20 23:21:40 EST 2023" starttimestamp="1700516585068" timestamp="23915701" timestamp2="23915701">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4501" _type="InsertStringCommand" date="Mon Nov 20 23:21:41 EST 2023" starttimestamp="1700516585068" timestamp="23916119" timestamp2="23916119">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4503" _type="InsertStringCommand" date="Mon Nov 20 23:21:41 EST 2023" starttimestamp="1700516585068" timestamp="23916192" timestamp2="23916192">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4505" _type="InsertStringCommand" date="Mon Nov 20 23:21:41 EST 2023" starttimestamp="1700516585068" timestamp="23916284" timestamp2="23916284">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4507" _type="InsertStringCommand" date="Mon Nov 20 23:21:41 EST 2023" starttimestamp="1700516585068" timestamp="23916348" timestamp2="23916348">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4509" _type="InsertStringCommand" date="Mon Nov 20 23:21:41 EST 2023" starttimestamp="1700516585068" timestamp="23916544" timestamp2="23916544">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="4511" _type="InsertStringCommand" date="Mon Nov 20 23:21:41 EST 2023" starttimestamp="1700516585068" timestamp="23916692" timestamp2="23916692">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:21:42 EST 2023" starttimestamp="1700516585068" timestamp="23917708" />
  <Command __id="4514" _type="InsertStringCommand" date="Mon Nov 20 23:21:43 EST 2023" starttimestamp="1700516585068" timestamp="23918238" timestamp2="23918238">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4516" _type="InsertStringCommand" date="Mon Nov 20 23:21:43 EST 2023" starttimestamp="1700516585068" timestamp="23918349" timestamp2="23918349">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4518" _type="InsertStringCommand" date="Mon Nov 20 23:21:43 EST 2023" starttimestamp="1700516585068" timestamp="23918409" timestamp2="23918409">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4519" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:21:44 EST 2023" starttimestamp="1700516585068" timestamp="23918945" />
  <Command __id="4520" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:21:44 EST 2023" starttimestamp="1700516585068" timestamp="23919034" />
  <Command __id="4521" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:21:44 EST 2023" starttimestamp="1700516585068" timestamp="23919041" />
  <Command __id="4522" _type="ShellCommand" date="Mon Nov 20 23:21:47 EST 2023" starttimestamp="1700516585068" timestamp="23922276" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4523" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:47 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23922870" type="Run" />
  <Command __id="4524" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:47 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23922870" type="Run" />
  <Command __id="4525" _type="ShellCommand" date="Mon Nov 20 23:21:47 EST 2023" starttimestamp="1700516585068" timestamp="23922873" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4527" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 23:21:48 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="23923636" />
  <Command __id="4528" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 23:21:50 EST 2023" starttimestamp="1700516585068" timestamp="23925062" />
  <Command __id="4529" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23925177" type="Run" />
  <Command __id="4530" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:21:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23925177" type="Run" />
  <Command __id="4531" _type="ShellCommand" date="Mon Nov 20 23:21:50 EST 2023" starttimestamp="1700516585068" timestamp="23925482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4532" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928380" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4533" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928381" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4534" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928386" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4535" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928387" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4536" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928388" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4537" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928390" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4538" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928404" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4539" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928405" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4540" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928408" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4541" _type="ConsoleOutput" date="Mon Nov 20 23:21:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="23928410" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4464" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:21:35 EST 2023" docASTNodeCount="205" docActiveCodeLength="1295" docExpressionCount="148" docLength="1510" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23910373">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();"), Diff(INSERT,"        System.out.println(fileName);"), Diff(EQUAL,"        try {            // Read all lines from the specified file            List<String> lines = Files.readAllLines(Path.of(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            // Process each line in the loaded file            for (String line : lines) {                interpreterModel.newInput(line);            }            return new TAtom();        } catch (IOException e) {            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println(fileName);
        try {
            // Read all lines from the specified file
            List<String> lines = Files.readAllLines(Path.of(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            return new TAtom();
        } catch (IOException e) {
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <DocumentChange __id="4467" _type="Insert" date="Mon Nov 20 23:21:37 EST 2023" docASTNodeCount="205" docActiveCodeLength="1299" docExpressionCount="148" docLength="1514" length="4" offset="813" repeat="4" starttimestamp="1700516585068" timestamp="23912400" timestamp2="23912726">
    <text><![CDATA[File]]></text>
  </DocumentChange>
  <DocumentChange __id="4475" _type="Delete" date="Mon Nov 20 23:21:38 EST 2023" docASTNodeCount="205" docActiveCodeLength="1295" docExpressionCount="148" docLength="1510" endLine="25" length="4" offset="813" repeat="4" startLine="25" starttimestamp="1700516585068" timestamp="23912968" timestamp2="23913343">
    <text><![CDATA[File]]></text>
  </DocumentChange>
  <DocumentChange __id="4483" _type="Insert" date="Mon Nov 20 23:21:38 EST 2023" docASTNodeCount="114" docActiveCodeLength="1297" docExpressionCount="90" docLength="1512" length="2" offset="813" repeat="2" starttimestamp="1700516585068" timestamp="23913555" timestamp2="23913816">
    <text><![CDATA["F]]></text>
  </DocumentChange>
  <DocumentChange __id="4487" _type="Delete" date="Mon Nov 20 23:21:39 EST 2023" docASTNodeCount="114" docActiveCodeLength="1296" docExpressionCount="90" docLength="1511" endLine="25" length="1" offset="814" startLine="25" starttimestamp="1700516585068" timestamp="23914229">
    <text><![CDATA[F]]></text>
  </DocumentChange>
  <DocumentChange __id="4489" _type="Insert" date="Mon Nov 20 23:21:39 EST 2023" docASTNodeCount="207" docActiveCodeLength="1310" docExpressionCount="150" docLength="1525" length="14" offset="814" repeat="14" starttimestamp="1700516585068" timestamp="23914655" timestamp2="23918407">
    <text><![CDATA[Filename: " + ]]></text>
  </DocumentChange>
  <Command __id="4526" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:21:48 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23923596">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4542" _type="ShellCommand" date="Mon Nov 20 23:21:55 EST 2023" starttimestamp="1700516585068" timestamp="23930838" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4543" _type="LocalChecksRawCommand" date="Mon Nov 20 23:21:55 EST 2023" starttimestamp="1700516585068" timestamp="23930839">
    <CSVRow><![CDATA[97,Mon Nov 20 23:21:53 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,57,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4544" _type="LocalChecksRawCommand" date="Mon Nov 20 23:21:55 EST 2023" starttimestamp="1700516585068" timestamp="23930839">
    <CSVRow><![CDATA[97,Mon Nov 20 23:21:53 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,57,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4545" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:21:59 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23934729">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4546" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 23:21:59 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="23934773" />
  <Command __id="4547" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:22:00 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23935384">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4548" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 23:22:00 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="23935430" />
  <Command __id="4549" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:22:01 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23936437">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4550" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 23:22:01 EST 2023" docOffset="14" starttimestamp="1700516585068" timestamp="23936484" />
  <Command __id="4551" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:22:02 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23936950">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4552" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 23:22:02 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="23936991" />
  <Command __id="4554" _type="MoveCaretCommand" caretOffset="828" date="Mon Nov 20 23:22:02 EST 2023" docOffset="828" starttimestamp="1700516585068" timestamp="23937678" />
  <Command __id="4555" _type="MoveCaretCommand" caretOffset="852" date="Mon Nov 20 23:22:03 EST 2023" docOffset="852" starttimestamp="1700516585068" timestamp="23938606" />
  <Command __id="4556" _type="MoveCaretCommand" caretOffset="1438" date="Mon Nov 20 23:22:05 EST 2023" docOffset="1438" starttimestamp="1700516585068" timestamp="23940040" />
  <Command __id="4557" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 23:22:11 EST 2023" docOffset="962" starttimestamp="1700516585068" timestamp="23946845" />
  <Command __id="4558" _type="MoveCaretCommand" caretOffset="965" date="Mon Nov 20 23:22:12 EST 2023" docOffset="965" starttimestamp="1700516585068" timestamp="23947398" />
  <Command __id="4559" _type="MoveCaretCommand" caretOffset="970" date="Mon Nov 20 23:22:12 EST 2023" docOffset="970" starttimestamp="1700516585068" timestamp="23947698" />
  <Command __id="4560" _type="ShellCommand" date="Mon Nov 20 23:22:15 EST 2023" starttimestamp="1700516585068" timestamp="23950797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4561" _type="ShellCommand" date="Mon Nov 20 23:23:04 EST 2023" starttimestamp="1700516585068" timestamp="23999258" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4562" _type="MoveCaretCommand" caretOffset="852" date="Mon Nov 20 23:23:05 EST 2023" docOffset="852" starttimestamp="1700516585068" timestamp="24000071" />
  <Command __id="4563" _type="MoveCaretCommand" caretOffset="960" date="Mon Nov 20 23:23:05 EST 2023" docOffset="960" starttimestamp="1700516585068" timestamp="24000358" />
  <Command __id="4564" _type="MoveCaretCommand" caretOffset="906" date="Mon Nov 20 23:23:05 EST 2023" docOffset="906" starttimestamp="1700516585068" timestamp="24000753" />
  <Command __id="4565" _type="MoveCaretCommand" caretOffset="967" date="Mon Nov 20 23:23:06 EST 2023" docOffset="967" starttimestamp="1700516585068" timestamp="24001154" />
  <Command __id="4566" _type="MoveCaretCommand" caretOffset="954" date="Mon Nov 20 23:23:06 EST 2023" docOffset="954" starttimestamp="1700516585068" timestamp="24001446" />
  <Command __id="4567" _type="MoveCaretCommand" caretOffset="906" date="Mon Nov 20 23:23:07 EST 2023" docOffset="906" starttimestamp="1700516585068" timestamp="24001961" />
  <Command __id="4568" _type="ShellCommand" date="Mon Nov 20 23:23:09 EST 2023" starttimestamp="1700516585068" timestamp="24004502" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4569" _type="ShellCommand" date="Mon Nov 20 23:23:17 EST 2023" starttimestamp="1700516585068" timestamp="24012728" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4553" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:22:02 EST 2023" docASTNodeCount="207" docActiveCodeLength="1310" docExpressionCount="150" docLength="1525" projectName="Assignment5" starttimestamp="1700516585068" timestamp="23937630">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("), Diff(INSERT,""Filename: " + "), Diff(EQUAL,"fileName);        try {            // Read all lines from the specified file            List<String> lines = Files.readAllLines(Path.of(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            // Process each line in the loaded file            for (String line : lines) {                interpreterModel.newInput(line);            }            return new TAtom();        } catch (IOException e) {            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
            List<String> lines = Files.readAllLines(Path.of(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            return new TAtom();
        } catch (IOException e) {
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <DocumentChange __id="4571" _type="Replace" date="Mon Nov 20 23:23:19 EST 2023" docASTNodeCount="192" docActiveCodeLength="1316" docExpressionCount="142" docLength="1531" endLine="28" insertionLength="77" int_docASTNodeCount="192" int_docActiveCodeLength="1239" int_docExpressionCount="140" int_docLength="1454" length="71" offset="907" startLine="28" starttimestamp="1700516585068" timestamp="24014532">
    <deletedText><![CDATA[            List<String> lines = Files.readAllLines(Path.of(fileName));]]></deletedText>
    <insertedText><![CDATA[        	BufferedReader reader = new BufferedReader(new FileReader(fileName))]]></insertedText>
  </DocumentChange>
  <Command __id="4570" _type="SelectTextCommand" caretOffset="978" date="Mon Nov 20 23:23:19 EST 2023" end="978" start="919" starttimestamp="1700516585068" timestamp="24014409" />
  <Command __id="4572" _type="PasteCommand" date="Mon Nov 20 23:23:19 EST 2023" starttimestamp="1700516585068" timestamp="24014540" />
  <Command __id="4574" _type="InsertStringCommand" date="Mon Nov 20 23:23:20 EST 2023" starttimestamp="1700516585068" timestamp="24015885" timestamp2="24015885">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4575" _type="MoveCaretCommand" caretOffset="986" date="Mon Nov 20 23:23:21 EST 2023" docOffset="986" starttimestamp="1700516585068" timestamp="24016738" />
  <Command __id="4576" _type="ShellCommand" date="Mon Nov 20 23:23:24 EST 2023" starttimestamp="1700516585068" timestamp="24019177" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4577" _type="ShellCommand" date="Mon Nov 20 23:23:24 EST 2023" starttimestamp="1700516585068" timestamp="24019254" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4582" _type="ShellCommand" date="Mon Nov 20 23:23:26 EST 2023" starttimestamp="1700516585068" timestamp="24020979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4583" _type="ShellCommand" date="Mon Nov 20 23:23:26 EST 2023" starttimestamp="1700516585068" timestamp="24021055" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4586" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 23:23:26 EST 2023" docOffset="1111" starttimestamp="1700516585068" timestamp="24021478" />
  <Command __id="4587" _type="MoveCaretCommand" caretOffset="993" date="Mon Nov 20 23:23:28 EST 2023" docOffset="993" starttimestamp="1700516585068" timestamp="24023109" />
  <Command __id="4588" _type="SelectTextCommand" caretOffset="995" date="Mon Nov 20 23:23:28 EST 2023" end="995" start="989" starttimestamp="1700516585068" timestamp="24023270" />
  <Command __id="4589" _type="ShellCommand" date="Mon Nov 20 23:23:28 EST 2023" starttimestamp="1700516585068" timestamp="24023632" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4590" _type="ShellCommand" date="Mon Nov 20 23:23:33 EST 2023" starttimestamp="1700516585068" timestamp="24028445" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4591" _type="ShellCommand" date="Mon Nov 20 23:23:36 EST 2023" starttimestamp="1700516585068" timestamp="24031518" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4592" _type="ShellCommand" date="Mon Nov 20 23:23:40 EST 2023" starttimestamp="1700516585068" timestamp="24035492" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4593" _type="SelectTextCommand" caretOffset="1124" date="Mon Nov 20 23:23:43 EST 2023" end="1470" start="1124" starttimestamp="1700516585068" timestamp="24038526" />
  <Command __id="4594" _type="ShellCommand" date="Mon Nov 20 23:23:43 EST 2023" starttimestamp="1700516585068" timestamp="24038720" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4595" _type="ShellCommand" date="Mon Nov 20 23:23:46 EST 2023" starttimestamp="1700516585068" timestamp="24041272" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4596" _type="MoveCaretCommand" caretOffset="974" date="Mon Nov 20 23:23:47 EST 2023" docOffset="974" starttimestamp="1700516585068" timestamp="24042365" />
  <Command __id="4597" _type="SelectTextCommand" caretOffset="1470" date="Mon Nov 20 23:23:48 EST 2023" end="1470" start="1057" starttimestamp="1700516585068" timestamp="24043891" />
  <Command __id="4599" _type="PasteCommand" date="Mon Nov 20 23:23:49 EST 2023" starttimestamp="1700516585068" timestamp="24044070" />
  <Command __id="4600" _type="MoveCaretCommand" caretOffset="1066" date="Mon Nov 20 23:23:50 EST 2023" docOffset="1066" starttimestamp="1700516585068" timestamp="24045305" />
  <Command __id="4601" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 23:23:51 EST 2023" docOffset="1164" starttimestamp="1700516585068" timestamp="24046086" />
  <Command __id="4602" _type="MoveCaretCommand" caretOffset="1202" date="Mon Nov 20 23:23:51 EST 2023" docOffset="1202" starttimestamp="1700516585068" timestamp="24046307" />
  <Command __id="4603" _type="MoveCaretCommand" caretOffset="1248" date="Mon Nov 20 23:23:51 EST 2023" docOffset="1248" starttimestamp="1700516585068" timestamp="24046620" />
  <Command __id="4604" _type="MoveCaretCommand" caretOffset="1190" date="Mon Nov 20 23:23:52 EST 2023" docOffset="1190" starttimestamp="1700516585068" timestamp="24047428" />
  <Command __id="4606" _type="UndoCommand" date="Mon Nov 20 23:23:53 EST 2023" starttimestamp="1700516585068" timestamp="24048077" />
  <Command __id="4607" _type="MoveCaretCommand" caretOffset="1315" date="Mon Nov 20 23:23:55 EST 2023" docOffset="1315" starttimestamp="1700516585068" timestamp="24050057" />
  <Command __id="4608" _type="SelectTextCommand" caretOffset="1045" date="Mon Nov 20 23:23:56 EST 2023" end="1315" start="1045" starttimestamp="1700516585068" timestamp="24051356" />
  <Command __id="4610" _type="PasteCommand" date="Mon Nov 20 23:23:56 EST 2023" starttimestamp="1700516585068" timestamp="24051516" />
  <Command __id="4611" _type="MoveCaretCommand" caretOffset="1202" date="Mon Nov 20 23:23:58 EST 2023" docOffset="1202" starttimestamp="1700516585068" timestamp="24053364" />
  <Command __id="4612" _type="SelectTextCommand" caretOffset="1204" date="Mon Nov 20 23:23:58 EST 2023" end="1204" start="1200" starttimestamp="1700516585068" timestamp="24053516" />
  <Command __id="4613" _type="MoveCaretCommand" caretOffset="1367" date="Mon Nov 20 23:23:59 EST 2023" docOffset="1367" starttimestamp="1700516585068" timestamp="24054163" />
  <Command __id="4614" _type="SelectTextCommand" caretOffset="1373" date="Mon Nov 20 23:23:59 EST 2023" end="1373" start="1357" starttimestamp="1700516585068" timestamp="24054314" />
  <Command __id="4615" _type="MoveCaretCommand" caretOffset="1379" date="Mon Nov 20 23:23:59 EST 2023" docOffset="1379" starttimestamp="1700516585068" timestamp="24054754" />
  <Command __id="4616" _type="SelectTextCommand" caretOffset="1360" date="Mon Nov 20 23:24:02 EST 2023" end="1360" start="1358" starttimestamp="1700516585068" timestamp="24056996" />
  <Command __id="4617" _type="SelectTextCommand" caretOffset="1389" date="Mon Nov 20 23:24:03 EST 2023" end="1389" start="1357" starttimestamp="1700516585068" timestamp="24058109" />
  <Command __id="4618" _type="CopyCommand" date="Mon Nov 20 23:24:03 EST 2023" starttimestamp="1700516585068" timestamp="24058210" />
  <Command __id="4619" _type="SelectTextCommand" caretOffset="1206" date="Mon Nov 20 23:24:04 EST 2023" end="1206" start="1181" starttimestamp="1700516585068" timestamp="24059452" />
  <Command __id="4621" _type="PasteCommand" date="Mon Nov 20 23:24:04 EST 2023" starttimestamp="1700516585068" timestamp="24059595" />
  <DocumentChange __id="4573" _type="Insert" date="Mon Nov 20 23:23:20 EST 2023" docASTNodeCount="204" docActiveCodeLength="1317" docExpressionCount="147" docLength="1532" length="1" offset="984" starttimestamp="1700516585068" timestamp="24015881">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4578" _type="Delete" date="Mon Nov 20 23:23:24 EST 2023" docASTNodeCount="204" docActiveCodeLength="1315" docExpressionCount="147" docLength="1530" endLine="10" length="2" offset="315" startLine="8" starttimestamp="1700516585068" timestamp="24019257">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="4579" _type="Insert" date="Mon Nov 20 23:23:24 EST 2023" docASTNodeCount="216" docActiveCodeLength="1375" docExpressionCount="157" docLength="1590" length="60" offset="315" repeat="5" starttimestamp="1700516585068" timestamp="24019257" timestamp2="24021062">
    <text><![CDATA[

import java.io.BufferedReader;
import java.io.FileReader;
]]></text>
  </DocumentChange>
  <DocumentChange __id="4598" _type="Replace" date="Mon Nov 20 23:23:49 EST 2023" docASTNodeCount="214" docActiveCodeLength="1242" docExpressionCount="158" docLength="1368" endLine="41" insertionLength="203" int_docASTNodeCount="192" int_docActiveCodeLength="1090" int_docExpressionCount="142" int_docLength="1165" length="425" offset="1045" startLine="32" starttimestamp="1700516585068" timestamp="24044066">
    <deletedText><![CDATA[            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }]]></deletedText>
    <insertedText><![CDATA[        	String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
                System.out.println(line); // Example: Print each line
            }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4605" _type="Replace" date="Mon Nov 20 23:23:53 EST 2023" docASTNodeCount="216" docActiveCodeLength="1375" docExpressionCount="157" docLength="1590" endLine="36" insertionLength="425" int_docASTNodeCount="192" int_docActiveCodeLength="1090" int_docExpressionCount="142" int_docLength="1165" length="203" offset="1045" startLine="32" starttimestamp="1700516585068" timestamp="24048070">
    <deletedText><![CDATA[        	String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
                System.out.println(line); // Example: Print each line
            }]]></deletedText>
    <insertedText><![CDATA[            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            // Process each line in the loaded file
            for (String line : lines) {
                interpreterModel.newInput(line);
            }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4609" _type="Replace" date="Mon Nov 20 23:23:56 EST 2023" docASTNodeCount="226" docActiveCodeLength="1358" docExpressionCount="165" docLength="1523" endLine="37" insertionLength="203" int_docASTNodeCount="204" int_docActiveCodeLength="1206" int_docExpressionCount="149" int_docLength="1320" length="270" offset="1045" startLine="32" starttimestamp="1700516585068" timestamp="24051513">
    <deletedText><![CDATA[            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();
]]></deletedText>
    <insertedText><![CDATA[        	String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
                System.out.println(line); // Example: Print each line
            }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4620" _type="Replace" date="Mon Nov 20 23:24:04 EST 2023" docASTNodeCount="224" docActiveCodeLength="1362" docExpressionCount="163" docLength="1527" endLine="35" insertionLength="45" int_docASTNodeCount="219" int_docActiveCodeLength="1317" int_docExpressionCount="159" int_docLength="1482" length="41" offset="1165" startLine="35" starttimestamp="1700516585068" timestamp="24059593">
    <deletedText><![CDATA[                System.out.println(line);]]></deletedText>
    <insertedText><![CDATA[            	interpreterModel.newInput(line);]]></insertedText>
  </DocumentChange>
  <Command __id="4622" _type="SelectTextCommand" caretOffset="1305" date="Mon Nov 20 23:24:06 EST 2023" end="1407" start="1305" starttimestamp="1700516585068" timestamp="24061505" />
  <DocumentChange __id="4623" _type="Replace" date="Mon Nov 20 23:24:13 EST 2023" docASTNodeCount="226" docActiveCodeLength="1358" docExpressionCount="165" docLength="1523" endLine="35" insertionLength="41" int_docASTNodeCount="219" int_docActiveCodeLength="1317" int_docExpressionCount="159" int_docLength="1482" length="45" offset="1165" startLine="35" starttimestamp="1700516585068" timestamp="24068621">
    <deletedText><![CDATA[            	interpreterModel.newInput(line);]]></deletedText>
    <insertedText><![CDATA[                System.out.println(line);]]></insertedText>
  </DocumentChange>
  <Command __id="4624" _type="UndoCommand" date="Mon Nov 20 23:24:13 EST 2023" starttimestamp="1700516585068" timestamp="24068627" />
  <DocumentChange __id="4625" _type="Replace" date="Mon Nov 20 23:24:13 EST 2023" docASTNodeCount="216" docActiveCodeLength="1375" docExpressionCount="157" docLength="1590" endLine="36" insertionLength="270" int_docASTNodeCount="204" int_docActiveCodeLength="1206" int_docExpressionCount="149" int_docLength="1320" length="203" offset="1045" startLine="32" starttimestamp="1700516585068" timestamp="24068829">
    <deletedText><![CDATA[        	String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
                System.out.println(line); // Example: Print each line
            }]]></deletedText>
    <insertedText><![CDATA[            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();
]]></insertedText>
  </DocumentChange>
  <Command __id="4626" _type="UndoCommand" date="Mon Nov 20 23:24:13 EST 2023" starttimestamp="1700516585068" timestamp="24068833" />
  <Command __id="4627" _type="MoveCaretCommand" caretOffset="1315" date="Mon Nov 20 23:24:14 EST 2023" docOffset="1315" starttimestamp="1700516585068" timestamp="24069592" />
  <Command __id="4628" _type="MoveCaretCommand" caretOffset="1153" date="Mon Nov 20 23:24:15 EST 2023" docOffset="1153" starttimestamp="1700516585068" timestamp="24070260" />
  <Command __id="4629" _type="MoveCaretCommand" caretOffset="1294" date="Mon Nov 20 23:24:16 EST 2023" docOffset="1294" starttimestamp="1700516585068" timestamp="24071238" />
  <Command __id="4630" _type="MoveCaretCommand" caretOffset="1434" date="Mon Nov 20 23:24:17 EST 2023" docOffset="1434" starttimestamp="1700516585068" timestamp="24072179" />
  <Command __id="4631" _type="MoveCaretCommand" caretOffset="1291" date="Mon Nov 20 23:24:18 EST 2023" docOffset="1291" starttimestamp="1700516585068" timestamp="24073064" />
  <Command __id="4632" _type="SelectTextCommand" caretOffset="1368" date="Mon Nov 20 23:24:19 EST 2023" end="1470" start="1368" starttimestamp="1700516585068" timestamp="24073988" />
  <DocumentChange __id="4633" _type="Replace" date="Mon Nov 20 23:24:19 EST 2023" docASTNodeCount="209" docActiveCodeLength="1317" docExpressionCount="154" docLength="1532" endLine="41" insertionLength="44" int_docASTNodeCount="204" int_docActiveCodeLength="1273" int_docExpressionCount="150" int_docLength="1488" length="102" offset="1368" startLine="39" starttimestamp="1700516585068" timestamp="24074120">
    <deletedText><![CDATA[            for (String line : lines) {
                interpreterModel.newInput(line);
            }]]></deletedText>
    <insertedText><![CDATA[            interpreterModel.newInput(line);]]></insertedText>
  </DocumentChange>
  <Command __id="4634" _type="PasteCommand" date="Mon Nov 20 23:24:19 EST 2023" starttimestamp="1700516585068" timestamp="24074123" />
  <DocumentChange __id="4635" _type="Replace" date="Mon Nov 20 23:24:19 EST 2023" docASTNodeCount="216" docActiveCodeLength="1375" docExpressionCount="157" docLength="1590" endLine="39" insertionLength="102" int_docASTNodeCount="204" int_docActiveCodeLength="1273" int_docExpressionCount="150" int_docLength="1488" length="44" offset="1368" startLine="39" starttimestamp="1700516585068" timestamp="24074891">
    <deletedText><![CDATA[            interpreterModel.newInput(line);]]></deletedText>
    <insertedText><![CDATA[            for (String line : lines) {
                interpreterModel.newInput(line);
            }]]></insertedText>
  </DocumentChange>
  <Command __id="4636" _type="UndoCommand" date="Mon Nov 20 23:24:19 EST 2023" starttimestamp="1700516585068" timestamp="24074898" />
  <Command __id="4637" _type="ShellCommand" date="Mon Nov 20 23:24:20 EST 2023" starttimestamp="1700516585068" timestamp="24075882" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4638" _type="ShellCommand" date="Mon Nov 20 23:24:21 EST 2023" starttimestamp="1700516585068" timestamp="24076693" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4639" _type="MoveCaretCommand" caretOffset="1367" date="Mon Nov 20 23:24:22 EST 2023" docOffset="1367" starttimestamp="1700516585068" timestamp="24077517" />
  <DocumentChange __id="4640" _type="Insert" date="Mon Nov 20 23:24:23 EST 2023" docASTNodeCount="216" docActiveCodeLength="1401" docExpressionCount="157" docLength="1616" length="26" offset="1367" repeat="2" starttimestamp="1700516585068" timestamp="24078089" timestamp2="24078253">
    <text><![CDATA[
            
            ]]></text>
  </DocumentChange>
  <Command __id="4641" _type="InsertStringCommand" date="Mon Nov 20 23:24:23 EST 2023" starttimestamp="1700516585068" timestamp="24078093" timestamp2="24078093">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4643" _type="InsertStringCommand" date="Mon Nov 20 23:24:23 EST 2023" starttimestamp="1700516585068" timestamp="24078255" timestamp2="24078255">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4645" _type="PasteCommand" date="Mon Nov 20 23:24:23 EST 2023" starttimestamp="1700516585068" timestamp="24078543" />
  <Command __id="4646" _type="SelectTextCommand" caretOffset="1676" date="Mon Nov 20 23:24:26 EST 2023" end="1676" start="1644" starttimestamp="1700516585068" timestamp="24081081" />
  <Command __id="4647" _type="CopyCommand" date="Mon Nov 20 23:24:26 EST 2023" starttimestamp="1700516585068" timestamp="24081304" />
  <Command __id="4648" _type="MoveCaretCommand" caretOffset="1587" date="Mon Nov 20 23:24:26 EST 2023" docOffset="1587" starttimestamp="1700516585068" timestamp="24081903" />
  <Command __id="4649" _type="SelectTextCommand" caretOffset="1520" date="Mon Nov 20 23:24:28 EST 2023" end="1545" start="1520" starttimestamp="1700516585068" timestamp="24083039" />
  <Command __id="4651" _type="PasteCommand" date="Mon Nov 20 23:24:28 EST 2023" starttimestamp="1700516585068" timestamp="24083196" />
  <Command __id="4652" _type="SelectTextCommand" caretOffset="1592" date="Mon Nov 20 23:24:29 EST 2023" end="1694" start="1592" starttimestamp="1700516585068" timestamp="24084120" />
  <Command __id="4654" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:24:29 EST 2023" starttimestamp="1700516585068" timestamp="24084858" />
  <Command __id="4656" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:24:30 EST 2023" starttimestamp="1700516585068" timestamp="24085289" />
  <Command __id="4657" _type="MoveCaretCommand" caretOffset="1405" date="Mon Nov 20 23:24:31 EST 2023" docOffset="1405" starttimestamp="1700516585068" timestamp="24086456" />
  <Command __id="4658" _type="MoveCaretCommand" caretOffset="1380" date="Mon Nov 20 23:24:31 EST 2023" docOffset="1380" starttimestamp="1700516585068" timestamp="24086894" />
  <Command __id="4659" _type="SelectTextCommand" caretOffset="1316" date="Mon Nov 20 23:24:32 EST 2023" end="1380" start="1316" starttimestamp="1700516585068" timestamp="24087576" />
  <Command __id="4661" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:24:33 EST 2023" starttimestamp="1700516585068" timestamp="24088007" />
  <Command __id="4663" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:24:33 EST 2023" starttimestamp="1700516585068" timestamp="24088259" />
  <Command __id="4664" _type="MoveCaretCommand" caretOffset="1397" date="Mon Nov 20 23:24:34 EST 2023" docOffset="1397" starttimestamp="1700516585068" timestamp="24089003" />
  <Command __id="4665" _type="MoveCaretCommand" caretOffset="1526" date="Mon Nov 20 23:24:34 EST 2023" docOffset="1526" starttimestamp="1700516585068" timestamp="24089600" />
  <Command __id="4666" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:24:35 EST 2023" starttimestamp="1700516585068" timestamp="24090794" />
  <Command __id="4667" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:24:35 EST 2023" starttimestamp="1700516585068" timestamp="24090895" />
  <Command __id="4668" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:24:35 EST 2023" starttimestamp="1700516585068" timestamp="24090905" />
  <Command __id="4669" _type="ShellCommand" date="Mon Nov 20 23:24:38 EST 2023" starttimestamp="1700516585068" timestamp="24093893" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="4644" _type="Replace" date="Mon Nov 20 23:24:23 EST 2023" docASTNodeCount="238" docActiveCodeLength="1544" docExpressionCount="173" docLength="1810" endLine="40" insertionLength="206" int_docASTNodeCount="216" int_docActiveCodeLength="1389" int_docExpressionCount="157" int_docLength="1604" length="12" offset="1381" startLine="40" starttimestamp="1700516585068" timestamp="24078536">
    <deletedText><![CDATA[            ]]></deletedText>
    <insertedText><![CDATA[            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
                System.out.println(line); // Example: Print each line
            }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4650" _type="Replace" date="Mon Nov 20 23:24:28 EST 2023" docASTNodeCount="236" docActiveCodeLength="1548" docExpressionCount="171" docLength="1814" endLine="43" insertionLength="45" int_docASTNodeCount="231" int_docActiveCodeLength="1503" int_docExpressionCount="167" int_docLength="1769" length="41" offset="1504" startLine="43" starttimestamp="1700516585068" timestamp="24083194">
    <deletedText><![CDATA[                System.out.println(line);]]></deletedText>
    <insertedText><![CDATA[            	interpreterModel.newInput(line);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4653" _type="Delete" date="Mon Nov 20 23:24:29 EST 2023" docASTNodeCount="224" docActiveCodeLength="1445" docExpressionCount="164" docLength="1711" endLine="47" length="103" offset="1591" repeat="2" startLine="44" starttimestamp="1700516585068" timestamp="24084853" timestamp2="24085286">
    <text><![CDATA[
            for (String line : lines) {
                interpreterModel.newInput(line);
            }]]></text>
  </DocumentChange>
  <DocumentChange __id="4660" _type="Delete" date="Mon Nov 20 23:24:33 EST 2023" docASTNodeCount="224" docActiveCodeLength="1419" docExpressionCount="164" docLength="1646" endLine="39" length="65" offset="1315" repeat="2" startLine="37" starttimestamp="1700516585068" timestamp="24088001" timestamp2="24088256">
    <text><![CDATA[
            // Process each line in the loaded file
            ]]></text>
  </DocumentChange>
  <Command __id="4671" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:24:41 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24096180">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4677" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:24:45 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24100041" type="Run" />
  <Command __id="4678" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:24:45 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24100042" type="Run" />
  <Command __id="4679" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102401" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4680" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102403" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4681" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102407" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4682" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102408" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4683" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102410" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):5¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4684" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102424" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):5¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4685" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102427" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶NIL"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4686" _type="ConsoleOutput" date="Mon Nov 20 23:24:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24102429" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4687" _type="ShellCommand" date="Mon Nov 20 23:24:51 EST 2023" starttimestamp="1700516585068" timestamp="24106296" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4688" _type="MoveCaretCommand" caretOffset="990" date="Mon Nov 20 23:24:54 EST 2023" docOffset="990" starttimestamp="1700516585068" timestamp="24109480" />
  <Command __id="4673" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:24:42 EST 2023" docASTNodeCount="224" docActiveCodeLength="1419" docExpressionCount="164" docLength="1646" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24097526">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;"), Diff(INSERT,"import java.io.BufferedReader;import java.io.FileReader;"), Diff(EQUAL,"import java.io.IOException;"), Diff(DELETE,""), Diff(EQUAL,"import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        "), Diff(DELETE,"    List<String> lines = Files.readAllLines(Path.of"), Diff(INSERT,"	BufferedReader reader = new BufferedReader(new FileReader"), Diff(EQUAL,"(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            "), Diff(DELETE,"// Process each line in the loaded file            for (String line : lines) {"), Diff(INSERT,"String line;            while ((line = reader.readLine()) != null) {                // Process the line here"), Diff(EQUAL,"            "), Diff(DELETE,"    "), Diff(INSERT,"	"), Diff(EQUAL,"interpreterModel.newInput(line);"), Diff(INSERT," // Example: Print each line"), Diff(EQUAL,"            }            return new TAtom();        } catch (IOException e) {            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="4689" _type="MoveCaretCommand" caretOffset="1527" date="Mon Nov 20 23:24:59 EST 2023" docOffset="1527" starttimestamp="1700516585068" timestamp="24114489" />
  <Command __id="4690" _type="MoveCaretCommand" caretOffset="1527" date="Mon Nov 20 23:24:59 EST 2023" docOffset="1527" starttimestamp="1700516585068" timestamp="24114919" />
  <Command __id="4691" _type="MoveCaretCommand" caretOffset="1593" date="Mon Nov 20 23:25:00 EST 2023" docOffset="1593" starttimestamp="1700516585068" timestamp="24115245" />
  <DocumentChange __id="4692" _type="Insert" date="Mon Nov 20 23:25:01 EST 2023" docASTNodeCount="225" docActiveCodeLength="1431" docExpressionCount="165" docLength="1658" length="12" offset="1593" repeat="3" starttimestamp="1700516585068" timestamp="24116493" timestamp2="24117596">
    <text><![CDATA[
        	e.]]></text>
  </DocumentChange>
  <Command __id="4693" _type="InsertStringCommand" date="Mon Nov 20 23:25:01 EST 2023" starttimestamp="1700516585068" timestamp="24116497" timestamp2="24116497">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4694" _type="LocalChecksRawCommand" date="Mon Nov 20 23:25:01 EST 2023" starttimestamp="1700516585068" timestamp="24116499">
    <CSVRow><![CDATA[98,Mon Nov 20 23:24:47 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,58,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4695" _type="LocalChecksRawCommand" date="Mon Nov 20 23:25:01 EST 2023" starttimestamp="1700516585068" timestamp="24116499">
    <CSVRow><![CDATA[98,Mon Nov 20 23:24:47 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,58,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4697" _type="InsertStringCommand" date="Mon Nov 20 23:25:02 EST 2023" starttimestamp="1700516585068" timestamp="24117130" timestamp2="24117130">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4699" _type="InsertStringCommand" date="Mon Nov 20 23:25:02 EST 2023" starttimestamp="1700516585068" timestamp="24117598" timestamp2="24117598">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4700" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:25:02 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="24117605" />
  <DocumentChange __id="4701" _type="Delete" date="Mon Nov 20 23:25:04 EST 2023" docASTNodeCount="224" docActiveCodeLength="1429" docExpressionCount="164" docLength="1656" endLine="46" length="2" offset="1603" repeat="2" startLine="46" starttimestamp="1700516585068" timestamp="24119009" timestamp2="24119174">
    <text><![CDATA[e.]]></text>
  </DocumentChange>
  <DocumentChange __id="4703" _type="Insert" date="Mon Nov 20 23:25:04 EST 2023" docASTNodeCount="228" docActiveCodeLength="1439" docExpressionCount="167" docLength="1666" length="10" offset="1603" repeat="10" starttimestamp="1700516585068" timestamp="24119766" timestamp2="24122286">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="4708" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:25:05 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="24120620" />
  <Command __id="4710" _type="InsertStringCommand" date="Mon Nov 20 23:25:05 EST 2023" starttimestamp="1700516585068" timestamp="24120930" timestamp2="24120930">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4712" _type="InsertStringCommand" date="Mon Nov 20 23:25:06 EST 2023" starttimestamp="1700516585068" timestamp="24121142" timestamp2="24121142">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4713" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:25:06 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="24121149" />
  <Command __id="4717" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:25:07 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="24122602" />
  <DocumentChange __id="4718" _type="Replace" date="Mon Nov 20 23:25:07 EST 2023" docASTNodeCount="227" docActiveCodeLength="1440" docExpressionCount="167" docLength="1667" endLine="46" insertionLength="4" int_docASTNodeCount="225" int_docActiveCodeLength="1436" int_docExpressionCount="165" int_docLength="1663" length="3" offset="1610" startLine="46" starttimestamp="1700516585068" timestamp="24122603">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="4719" _type="InsertStringCommand" date="Mon Nov 20 23:25:07 EST 2023" starttimestamp="1700516585068" timestamp="24122607" timestamp2="24122607">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4720" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:25:07 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="24122620" />
  <Command __id="4730" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:25:10 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="24125672" />
  <Command __id="4731" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 23:25:11 EST 2023" starttimestamp="1700516585068" timestamp="24126159" />
  <Command __id="4745" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:25:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24132266" type="Run" />
  <Command __id="4746" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:25:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24132266" type="Run" />
  <Command __id="4747" _type="ShellCommand" date="Mon Nov 20 23:25:17 EST 2023" starttimestamp="1700516585068" timestamp="24132559" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4748" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135849" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4749" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135850" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4750" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135856" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4751" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135857" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4752" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135858" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4753" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135858" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4754" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135875" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4755" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135878" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)¶NIL"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4756" _type="ConsoleOutput" date="Mon Nov 20 23:25:20 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24135880" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4757" _type="ShellCommand" date="Mon Nov 20 23:25:23 EST 2023" starttimestamp="1700516585068" timestamp="24138456" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="4721" _type="Insert" date="Mon Nov 20 23:25:07 EST 2023" docASTNodeCount="231" docActiveCodeLength="1450" docExpressionCount="170" docLength="1677" length="10" offset="1614" repeat="9" starttimestamp="1700516585068" timestamp="24122892" timestamp2="24125655">
    <text><![CDATA[println(e)]]></text>
  </DocumentChange>
  <DocumentChange __id="4733" _type="Insert" date="Mon Nov 20 23:25:13 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" length="1" offset="1624" starttimestamp="1700516585068" timestamp="24128122">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="4743" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:15 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24130551">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4760" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:37 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24152086">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4762" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:37 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24152888">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {"), Diff(INSERT,"        	System.out.println(e);"), Diff(EQUAL,"            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="4764" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:39 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24154689">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4766" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:40 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24155523">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4768" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:41 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24156871">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4758" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 23:25:36 EST 2023" docOffset="585" starttimestamp="1700516585068" timestamp="24151258" />
  <Command __id="4759" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 23:25:36 EST 2023" docOffset="585" starttimestamp="1700516585068" timestamp="24151258" />
  <Command __id="4761" _type="SelectTextCommand" caretOffset="83" date="Mon Nov 20 23:25:37 EST 2023" end="83" start="70" starttimestamp="1700516585068" timestamp="24152136" />
  <Command __id="4763" _type="MoveCaretCommand" caretOffset="1479" date="Mon Nov 20 23:25:38 EST 2023" docOffset="1479" starttimestamp="1700516585068" timestamp="24152939" />
  <Command __id="4765" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 23:25:39 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="24154741" />
  <Command __id="4767" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 23:25:40 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="24155572" />
  <Command __id="4769" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 23:25:41 EST 2023" docOffset="585" starttimestamp="1700516585068" timestamp="24156920" />
  <Command __id="4771" _type="MoveCaretCommand" caretOffset="1479" date="Mon Nov 20 23:25:43 EST 2023" docOffset="1479" starttimestamp="1700516585068" timestamp="24158282" />
  <Command __id="4773" _type="SelectTextCommand" caretOffset="83" date="Mon Nov 20 23:25:44 EST 2023" end="83" start="70" starttimestamp="1700516585068" timestamp="24158949" />
  <Command __id="4775" _type="MoveCaretCommand" caretOffset="1479" date="Mon Nov 20 23:25:44 EST 2023" docOffset="1479" starttimestamp="1700516585068" timestamp="24159616" />
  <Command __id="4776" _type="MoveCaretCommand" caretOffset="827" date="Mon Nov 20 23:25:50 EST 2023" docOffset="827" starttimestamp="1700516585068" timestamp="24165780" />
  <Command __id="4777" _type="MoveCaretCommand" caretOffset="825" date="Mon Nov 20 23:25:52 EST 2023" docOffset="825" starttimestamp="1700516585068" timestamp="24167334" />
  <Command __id="4778" _type="MoveCaretCommand" caretOffset="837" date="Mon Nov 20 23:25:53 EST 2023" docOffset="837" starttimestamp="1700516585068" timestamp="24168776" />
  <Command __id="4779" _type="MoveCaretCommand" caretOffset="826" date="Mon Nov 20 23:25:54 EST 2023" docOffset="826" starttimestamp="1700516585068" timestamp="24169370" />
  <Command __id="4780" _type="MoveCaretCommand" caretOffset="837" date="Mon Nov 20 23:25:54 EST 2023" docOffset="837" starttimestamp="1700516585068" timestamp="24169826" />
  <Command __id="4781" _type="MoveCaretCommand" caretOffset="826" date="Mon Nov 20 23:25:55 EST 2023" docOffset="826" starttimestamp="1700516585068" timestamp="24170107" />
  <Command __id="4782" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:25:55 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="24170526" />
  <Command __id="4783" _type="MoveCaretCommand" caretOffset="1018" date="Mon Nov 20 23:25:55 EST 2023" docOffset="1018" starttimestamp="1700516585068" timestamp="24170857" />
  <Command __id="4784" _type="SelectTextCommand" caretOffset="1030" date="Mon Nov 20 23:25:56 EST 2023" end="1030" start="1029" starttimestamp="1700516585068" timestamp="24171469" />
  <Command __id="4785" _type="MoveCaretCommand" caretOffset="1034" date="Mon Nov 20 23:25:56 EST 2023" docOffset="1034" starttimestamp="1700516585068" timestamp="24171677" />
  <Command __id="4786" _type="MoveCaretCommand" caretOffset="1037" date="Mon Nov 20 23:25:57 EST 2023" docOffset="1037" starttimestamp="1700516585068" timestamp="24172256" />
  <Command __id="4787" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:25:57 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24172390" />
  <Command __id="4788" _type="MoveCaretCommand" caretOffset="1029" date="Mon Nov 20 23:25:58 EST 2023" docOffset="1029" starttimestamp="1700516585068" timestamp="24173287" />
  <Command __id="4789" _type="MoveCaretCommand" caretOffset="1036" date="Mon Nov 20 23:25:58 EST 2023" docOffset="1036" starttimestamp="1700516585068" timestamp="24173761" />
  <Command __id="4790" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 23:25:59 EST 2023" docOffset="1035" starttimestamp="1700516585068" timestamp="24174461" />
  <Command __id="4791" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:25:59 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24174599" />
  <Command __id="4792" _type="SelectTextCommand" caretOffset="1044" date="Mon Nov 20 23:25:59 EST 2023" end="1044" start="965" starttimestamp="1700516585068" timestamp="24174755" />
  <Command __id="4793" _type="MoveCaretCommand" caretOffset="1038" date="Mon Nov 20 23:26:00 EST 2023" docOffset="1038" starttimestamp="1700516585068" timestamp="24175372" />
  <Command __id="4794" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:26:00 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24175504" />
  <Command __id="4795" _type="MoveCaretCommand" caretOffset="889" date="Mon Nov 20 23:26:03 EST 2023" docOffset="889" starttimestamp="1700516585068" timestamp="24178675" />
  <Command __id="4796" _type="SelectTextCommand" caretOffset="894" date="Mon Nov 20 23:26:03 EST 2023" end="894" start="886" starttimestamp="1700516585068" timestamp="24178828" />
  <Command __id="4797" _type="ShellCommand" date="Mon Nov 20 23:26:13 EST 2023" starttimestamp="1700516585068" timestamp="24188121" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4798" _type="ShellCommand" date="Mon Nov 20 23:26:15 EST 2023" starttimestamp="1700516585068" timestamp="24190302" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4799" _type="ShellCommand" date="Mon Nov 20 23:26:28 EST 2023" starttimestamp="1700516585068" timestamp="24203067" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4800" _type="ShellCommand" date="Mon Nov 20 23:27:21 EST 2023" starttimestamp="1700516585068" timestamp="24256328" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4801" _type="ShellCommand" date="Mon Nov 20 23:27:29 EST 2023" starttimestamp="1700516585068" timestamp="24263987" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4802" _type="ShellCommand" date="Mon Nov 20 23:27:33 EST 2023" starttimestamp="1700516585068" timestamp="24268615" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4803" _type="MoveCaretCommand" caretOffset="888" date="Mon Nov 20 23:27:35 EST 2023" docOffset="888" starttimestamp="1700516585068" timestamp="24270261" />
  <Command __id="4804" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 23:27:39 EST 2023" docOffset="1035" starttimestamp="1700516585068" timestamp="24274483" />
  <Command __id="4805" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:27:39 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24274616" />
  <Command __id="4806" _type="ShellCommand" date="Mon Nov 20 23:27:40 EST 2023" starttimestamp="1700516585068" timestamp="24275345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4807" _type="ShellCommand" date="Mon Nov 20 23:27:51 EST 2023" starttimestamp="1700516585068" timestamp="24286337" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4808" _type="MoveCaretCommand" caretOffset="892" date="Mon Nov 20 23:27:53 EST 2023" docOffset="892" starttimestamp="1700516585068" timestamp="24288170" />
  <Command __id="4809" _type="MoveCaretCommand" caretOffset="662" date="Mon Nov 20 23:27:54 EST 2023" docOffset="662" starttimestamp="1700516585068" timestamp="24289284" />
  <Command __id="4810" _type="MoveCaretCommand" caretOffset="891" date="Mon Nov 20 23:27:55 EST 2023" docOffset="891" starttimestamp="1700516585068" timestamp="24290263" />
  <Command __id="4811" _type="SelectTextCommand" caretOffset="894" date="Mon Nov 20 23:27:55 EST 2023" end="894" start="886" starttimestamp="1700516585068" timestamp="24290397" />
  <Command __id="4812" _type="MoveCaretCommand" caretOffset="1029" date="Mon Nov 20 23:27:57 EST 2023" docOffset="1029" starttimestamp="1700516585068" timestamp="24292130" />
  <Command __id="4813" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 23:27:57 EST 2023" docOffset="1035" starttimestamp="1700516585068" timestamp="24292467" />
  <Command __id="4814" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:27:57 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24292606" />
  <Command __id="4815" _type="CopyCommand" date="Mon Nov 20 23:28:08 EST 2023" starttimestamp="1700516585068" timestamp="24303700" />
  <Command __id="4816" _type="PasteCommand" date="Mon Nov 20 23:28:12 EST 2023" starttimestamp="1700516585068" timestamp="24307563" />
  <Command __id="4817" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:28:12 EST 2023" starttimestamp="1700516585068" timestamp="24307664" />
  <Command __id="4818" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:28:12 EST 2023" starttimestamp="1700516585068" timestamp="24307666" />
  <Command __id="4819" _type="MoveCaretCommand" caretOffset="785" date="Mon Nov 20 23:28:13 EST 2023" docOffset="785" starttimestamp="1700516585068" timestamp="24308583" />
  <Command __id="4820" _type="InsertStringCommand" date="Mon Nov 20 23:28:14 EST 2023" starttimestamp="1700516585068" timestamp="24308993" timestamp2="24308993">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4825" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:28:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24313003" type="Run" />
  <Command __id="4826" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:28:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24313003" type="Run" />
  <Command __id="4827" _type="ShellCommand" date="Mon Nov 20 23:28:18 EST 2023" starttimestamp="1700516585068" timestamp="24313320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4828" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317732" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4829" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317733" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4830" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317739" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4831" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317739" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4832" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317740" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4833" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317740" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4834" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317756" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4835" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317759" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)¶NIL"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4836" _type="ConsoleOutput" date="Mon Nov 20 23:28:22 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24317761" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4837" _type="ShellCommand" date="Mon Nov 20 23:28:25 EST 2023" starttimestamp="1700516585068" timestamp="24320188" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4838" _type="CopyCommand" date="Mon Nov 20 23:28:49 EST 2023" starttimestamp="1700516585068" timestamp="24344513" />
  <Command __id="4839" _type="ShellCommand" date="Mon Nov 20 23:28:50 EST 2023" starttimestamp="1700516585068" timestamp="24345082" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4840" _type="ShellCommand" date="Mon Nov 20 23:28:50 EST 2023" starttimestamp="1700516585068" timestamp="24345730" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4841" _type="ShellCommand" date="Mon Nov 20 23:28:50 EST 2023" starttimestamp="1700516585068" timestamp="24345798" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4842" _type="ShellCommand" date="Mon Nov 20 23:28:58 EST 2023" starttimestamp="1700516585068" timestamp="24353130" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4843" _type="MoveCaretCommand" caretOffset="1030" date="Mon Nov 20 23:28:58 EST 2023" docOffset="1030" starttimestamp="1700516585068" timestamp="24353219" />
  <Command __id="4844" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 23:28:59 EST 2023" docOffset="1035" starttimestamp="1700516585068" timestamp="24354003" />
  <Command __id="4845" _type="MoveCaretCommand" caretOffset="1026" date="Mon Nov 20 23:28:59 EST 2023" docOffset="1026" starttimestamp="1700516585068" timestamp="24354421" />
  <Command __id="4846" _type="SelectTextCommand" caretOffset="1031" date="Mon Nov 20 23:28:59 EST 2023" end="1031" start="1021" starttimestamp="1700516585068" timestamp="24354569" />
  <Command __id="4847" _type="MoveCaretCommand" caretOffset="1034" date="Mon Nov 20 23:28:59 EST 2023" docOffset="1034" starttimestamp="1700516585068" timestamp="24354810" />
  <Command __id="4848" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:29:00 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24354958" />
  <Command __id="4849" _type="MoveCaretCommand" caretOffset="1029" date="Mon Nov 20 23:29:00 EST 2023" docOffset="1029" starttimestamp="1700516585068" timestamp="24355175" />
  <Command __id="4850" _type="SelectTextCommand" caretOffset="1031" date="Mon Nov 20 23:29:00 EST 2023" end="1031" start="1021" starttimestamp="1700516585068" timestamp="24355321" />
  <Command __id="4851" _type="MoveCaretCommand" caretOffset="1036" date="Mon Nov 20 23:29:00 EST 2023" docOffset="1036" starttimestamp="1700516585068" timestamp="24355625" />
  <Command __id="4852" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:29:00 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24355766" />
  <Command __id="4853" _type="MoveCaretCommand" caretOffset="1029" date="Mon Nov 20 23:29:01 EST 2023" docOffset="1029" starttimestamp="1700516585068" timestamp="24356029" />
  <Command __id="4854" _type="SelectTextCommand" caretOffset="1031" date="Mon Nov 20 23:29:01 EST 2023" end="1031" start="1021" starttimestamp="1700516585068" timestamp="24356185" />
  <Command __id="4855" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 23:29:01 EST 2023" docOffset="1035" starttimestamp="1700516585068" timestamp="24356417" />
  <Command __id="4856" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:29:01 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24356586" />
  <Command __id="4857" _type="MoveCaretCommand" caretOffset="1030" date="Mon Nov 20 23:29:02 EST 2023" docOffset="1030" starttimestamp="1700516585068" timestamp="24357077" />
  <Command __id="4858" _type="SelectTextCommand" caretOffset="1031" date="Mon Nov 20 23:29:02 EST 2023" end="1031" start="1021" starttimestamp="1700516585068" timestamp="24357243" />
  <Command __id="4859" _type="MoveCaretCommand" caretOffset="1036" date="Mon Nov 20 23:29:02 EST 2023" docOffset="1036" starttimestamp="1700516585068" timestamp="24357490" />
  <Command __id="4860" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:29:02 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24357634" />
  <Command __id="4861" _type="MoveCaretCommand" caretOffset="1029" date="Mon Nov 20 23:29:03 EST 2023" docOffset="1029" starttimestamp="1700516585068" timestamp="24358225" />
  <Command __id="4862" _type="ShellCommand" date="Mon Nov 20 23:29:03 EST 2023" starttimestamp="1700516585068" timestamp="24358536" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4863" _type="ShellCommand" date="Mon Nov 20 23:29:04 EST 2023" starttimestamp="1700516585068" timestamp="24359084" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4864" _type="ShellCommand" date="Mon Nov 20 23:29:04 EST 2023" starttimestamp="1700516585068" timestamp="24359366" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4865" _type="ShellCommand" date="Mon Nov 20 23:29:40 EST 2023" starttimestamp="1700516585068" timestamp="24395371" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4866" _type="LocalChecksRawCommand" date="Mon Nov 20 23:29:40 EST 2023" starttimestamp="1700516585068" timestamp="24395374">
    <CSVRow><![CDATA[100,Mon Nov 20 23:28:22 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,60,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4867" _type="LocalChecksRawCommand" date="Mon Nov 20 23:29:40 EST 2023" starttimestamp="1700516585068" timestamp="24395374">
    <CSVRow><![CDATA[100,Mon Nov 20 23:28:22 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,60,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4868" _type="ShellCommand" date="Mon Nov 20 23:29:46 EST 2023" starttimestamp="1700516585068" timestamp="24401924" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4869" _type="ShellCommand" date="Mon Nov 20 23:29:47 EST 2023" starttimestamp="1700516585068" timestamp="24402713" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4870" _type="MoveCaretCommand" caretOffset="956" date="Mon Nov 20 23:29:48 EST 2023" docOffset="956" starttimestamp="1700516585068" timestamp="24403733" />
  <Command __id="4871" _type="ShellCommand" date="Mon Nov 20 23:29:49 EST 2023" starttimestamp="1700516585068" timestamp="24404780" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4872" _type="ShellCommand" date="Mon Nov 20 23:29:56 EST 2023" starttimestamp="1700516585068" timestamp="24411453" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4873" _type="ShellCommand" date="Mon Nov 20 23:29:57 EST 2023" starttimestamp="1700516585068" timestamp="24412256" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4874" _type="ShellCommand" date="Mon Nov 20 23:30:01 EST 2023" starttimestamp="1700516585068" timestamp="24415948" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4875" _type="ShellCommand" date="Mon Nov 20 23:30:01 EST 2023" starttimestamp="1700516585068" timestamp="24416523" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4876" _type="ShellCommand" date="Mon Nov 20 23:30:01 EST 2023" starttimestamp="1700516585068" timestamp="24416828" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4877" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:30:14 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="24429454" />
  <Command __id="4878" _type="ShellCommand" date="Mon Nov 20 23:30:23 EST 2023" starttimestamp="1700516585068" timestamp="24438348" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4879" _type="ShellCommand" date="Mon Nov 20 23:30:24 EST 2023" starttimestamp="1700516585068" timestamp="24439019" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4880" _type="ShellCommand" date="Mon Nov 20 23:30:24 EST 2023" starttimestamp="1700516585068" timestamp="24439363" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4881" _type="ShellCommand" date="Mon Nov 20 23:30:24 EST 2023" starttimestamp="1700516585068" timestamp="24439680" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4882" _type="MoveCaretCommand" caretOffset="751" date="Mon Nov 20 23:30:53 EST 2023" docOffset="751" starttimestamp="1700516585068" timestamp="24467936" />
  <Command __id="4883" _type="MoveCaretCommand" caretOffset="761" date="Mon Nov 20 23:30:53 EST 2023" docOffset="761" starttimestamp="1700516585068" timestamp="24468304" />
  <Command __id="4884" _type="MoveCaretCommand" caretOffset="751" date="Mon Nov 20 23:30:53 EST 2023" docOffset="751" starttimestamp="1700516585068" timestamp="24468736" />
  <Command __id="4885" _type="MoveCaretCommand" caretOffset="720" date="Mon Nov 20 23:30:54 EST 2023" docOffset="720" starttimestamp="1700516585068" timestamp="24469095" />
  <Command __id="4886" _type="MoveCaretCommand" caretOffset="751" date="Mon Nov 20 23:30:54 EST 2023" docOffset="751" starttimestamp="1700516585068" timestamp="24469394" />
  <Command __id="4887" _type="MoveCaretCommand" caretOffset="761" date="Mon Nov 20 23:30:54 EST 2023" docOffset="761" starttimestamp="1700516585068" timestamp="24469598" />
  <Command __id="4888" _type="MoveCaretCommand" caretOffset="751" date="Mon Nov 20 23:30:54 EST 2023" docOffset="751" starttimestamp="1700516585068" timestamp="24469859" />
  <Command __id="4889" _type="MoveCaretCommand" caretOffset="720" date="Mon Nov 20 23:30:55 EST 2023" docOffset="720" starttimestamp="1700516585068" timestamp="24470066" />
  <Command __id="4890" _type="MoveCaretCommand" caretOffset="751" date="Mon Nov 20 23:30:55 EST 2023" docOffset="751" starttimestamp="1700516585068" timestamp="24470356" />
  <Command __id="4891" _type="MoveCaretCommand" caretOffset="762" date="Mon Nov 20 23:30:55 EST 2023" docOffset="762" starttimestamp="1700516585068" timestamp="24470537" />
  <Command __id="4892" _type="MoveCaretCommand" caretOffset="896" date="Mon Nov 20 23:30:55 EST 2023" docOffset="896" starttimestamp="1700516585068" timestamp="24470890" />
  <Command __id="4893" _type="MoveCaretCommand" caretOffset="910" date="Mon Nov 20 23:30:56 EST 2023" docOffset="910" starttimestamp="1700516585068" timestamp="24471177" />
  <Command __id="4894" _type="MoveCaretCommand" caretOffset="1028" date="Mon Nov 20 23:30:56 EST 2023" docOffset="1028" starttimestamp="1700516585068" timestamp="24471721" />
  <Command __id="4895" _type="MoveCaretCommand" caretOffset="991" date="Mon Nov 20 23:30:57 EST 2023" docOffset="991" starttimestamp="1700516585068" timestamp="24472667" />
  <Command __id="4896" _type="MoveCaretCommand" caretOffset="992" date="Mon Nov 20 23:30:58 EST 2023" docOffset="992" starttimestamp="1700516585068" timestamp="24473410" />
  <Command __id="4897" _type="SelectTextCommand" caretOffset="995" date="Mon Nov 20 23:30:58 EST 2023" end="995" start="989" starttimestamp="1700516585068" timestamp="24473563" />
  <Command __id="4898" _type="MoveCaretCommand" caretOffset="994" date="Mon Nov 20 23:31:00 EST 2023" docOffset="994" starttimestamp="1700516585068" timestamp="24475931" />
  <Command __id="4899" _type="SelectTextCommand" caretOffset="995" date="Mon Nov 20 23:31:01 EST 2023" end="995" start="989" starttimestamp="1700516585068" timestamp="24476059" />
  <Command __id="4900" _type="MoveCaretCommand" caretOffset="1044" date="Mon Nov 20 23:31:01 EST 2023" docOffset="1044" starttimestamp="1700516585068" timestamp="24476787" />
  <Command __id="4901" _type="MoveCaretCommand" caretOffset="995" date="Mon Nov 20 23:31:02 EST 2023" docOffset="995" starttimestamp="1700516585068" timestamp="24477448" />
  <Command __id="4902" _type="MoveCaretCommand" caretOffset="995" date="Mon Nov 20 23:31:02 EST 2023" docOffset="995" starttimestamp="1700516585068" timestamp="24477616" />
  <Command __id="4903" _type="MoveCaretCommand" caretOffset="1044" date="Mon Nov 20 23:31:03 EST 2023" docOffset="1044" starttimestamp="1700516585068" timestamp="24477960" />
  <Command __id="4904" _type="MoveCaretCommand" caretOffset="1044" date="Mon Nov 20 23:31:03 EST 2023" docOffset="1044" starttimestamp="1700516585068" timestamp="24478087" />
  <Command __id="4905" _type="MoveCaretCommand" caretOffset="994" date="Mon Nov 20 23:31:03 EST 2023" docOffset="994" starttimestamp="1700516585068" timestamp="24478379" />
  <Command __id="4906" _type="MoveCaretCommand" caretOffset="1044" date="Mon Nov 20 23:31:03 EST 2023" docOffset="1044" starttimestamp="1700516585068" timestamp="24478918" />
  <Command __id="4907" _type="ShellCommand" date="Mon Nov 20 23:31:08 EST 2023" starttimestamp="1700516585068" timestamp="24482967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4908" _type="ShellCommand" date="Mon Nov 20 23:31:08 EST 2023" starttimestamp="1700516585068" timestamp="24483515" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4909" _type="ShellCommand" date="Mon Nov 20 23:31:09 EST 2023" starttimestamp="1700516585068" timestamp="24484057" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4910" _type="ShellCommand" date="Mon Nov 20 23:31:10 EST 2023" starttimestamp="1700516585068" timestamp="24485390" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4911" _type="MoveCaretCommand" caretOffset="910" date="Mon Nov 20 23:31:29 EST 2023" docOffset="910" starttimestamp="1700516585068" timestamp="24504803" />
  <Command __id="4770" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:43 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24158239">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4772" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:43 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24158902">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4774" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:25:44 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24159562">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader(fileName));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4912" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:31:33 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="24508040" />
  <DocumentChange __id="4913" _type="Replace" date="Mon Nov 20 23:31:34 EST 2023" docASTNodeCount="126" docActiveCodeLength="1444" docExpressionCount="100" docLength="1671" endLine="30" insertionLength="1" int_docASTNodeCount="230" int_docActiveCodeLength="1443" int_docExpressionCount="169" int_docLength="1670" length="8" offset="1032" startLine="30" starttimestamp="1700516585068" timestamp="24509756">
    <deletedText><![CDATA[fileName]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <Command __id="4914" _type="InsertStringCommand" date="Mon Nov 20 23:31:34 EST 2023" starttimestamp="1700516585068" timestamp="24509766" timestamp2="24509766">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="4915" _type="Insert" date="Mon Nov 20 23:31:35 EST 2023" docASTNodeCount="231" docActiveCodeLength="1447" docExpressionCount="170" docLength="1674" length="3" offset="1033" repeat="3" starttimestamp="1700516585068" timestamp="24510556" timestamp2="24511733">
    <text><![CDATA[./"]]></text>
  </DocumentChange>
  <Command __id="4916" _type="InsertStringCommand" date="Mon Nov 20 23:31:35 EST 2023" starttimestamp="1700516585068" timestamp="24510558" timestamp2="24510558">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 23:31:35 EST 2023" starttimestamp="1700516585068" timestamp="24510887" />
  <Command __id="4919" _type="InsertStringCommand" date="Mon Nov 20 23:31:36 EST 2023" starttimestamp="1700516585068" timestamp="24511642" timestamp2="24511642">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4921" _type="InsertStringCommand" date="Mon Nov 20 23:31:36 EST 2023" starttimestamp="1700516585068" timestamp="24511736" timestamp2="24511736">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="4922" _type="Insert" date="Mon Nov 20 23:31:40 EST 2023" docASTNodeCount="231" docActiveCodeLength="1452" docExpressionCount="170" docLength="1679" length="5" offset="1035" repeat="5" starttimestamp="1700516585068" timestamp="24515552" timestamp2="24515983">
    <text><![CDATA[tests]]></text>
  </DocumentChange>
  <Command __id="4923" _type="InsertStringCommand" date="Mon Nov 20 23:31:40 EST 2023" starttimestamp="1700516585068" timestamp="24515555" timestamp2="24515555">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4925" _type="InsertStringCommand" date="Mon Nov 20 23:31:40 EST 2023" starttimestamp="1700516585068" timestamp="24515637" timestamp2="24515637">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4927" _type="InsertStringCommand" date="Mon Nov 20 23:31:40 EST 2023" starttimestamp="1700516585068" timestamp="24515721" timestamp2="24515721">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4929" _type="InsertStringCommand" date="Mon Nov 20 23:31:40 EST 2023" starttimestamp="1700516585068" timestamp="24515843" timestamp2="24515843">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4931" _type="InsertStringCommand" date="Mon Nov 20 23:31:41 EST 2023" starttimestamp="1700516585068" timestamp="24515985" timestamp2="24515985">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="4932" _type="Delete" date="Mon Nov 20 23:31:41 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" endLine="30" length="1" offset="1039" startLine="30" starttimestamp="1700516585068" timestamp="24516650">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="4933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:31:41 EST 2023" starttimestamp="1700516585068" timestamp="24516651" />
  <Command __id="4935" _type="InsertStringCommand" date="Mon Nov 20 23:31:41 EST 2023" starttimestamp="1700516585068" timestamp="24516872" timestamp2="24516872">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4937" _type="InsertStringCommand" date="Mon Nov 20 23:31:43 EST 2023" starttimestamp="1700516585068" timestamp="24518083" timestamp2="24518083">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4939" _type="InsertStringCommand" date="Mon Nov 20 23:31:43 EST 2023" starttimestamp="1700516585068" timestamp="24518162" timestamp2="24518162">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4941" _type="InsertStringCommand" date="Mon Nov 20 23:31:43 EST 2023" starttimestamp="1700516585068" timestamp="24518234" timestamp2="24518234">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4943" _type="InsertStringCommand" date="Mon Nov 20 23:31:43 EST 2023" starttimestamp="1700516585068" timestamp="24518309" timestamp2="24518309">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4954" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:31:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24523626" type="Run" />
  <Command __id="4955" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:31:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24523627" type="Run" />
  <Command __id="4956" _type="ShellCommand" date="Mon Nov 20 23:31:49 EST 2023" starttimestamp="1700516585068" timestamp="24523958" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4957" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529020" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4958" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529021" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4959" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529026" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4960" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529027" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4961" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529028" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4962" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529030" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4963" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529044" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4964" _type="ExceptionCommand" date="Mon Nov 20 23:31:54 EST 2023" starttimestamp="1700516585068" timestamp="24529046" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:17)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4965" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529047" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4966" _type="ConsoleOutput" date="Mon Nov 20 23:31:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24529061" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"78"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndo"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"90"), Diff(INSERT,"6"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"170"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"268"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(EQUAL,"1"), Diff(INSERT,"35"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSui"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticas"), Diff(EQUAL,"te"), Diff(INSERT,"r"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:2"), Diff(INSERT,"30"), Diff(EQUAL,"7"), Diff(DELETE,"0"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4967" _type="ExceptionCommand" date="Mon Nov 20 23:31:54 EST 2023" starttimestamp="1700516585068" timestamp="24529064" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4968" _type="ShellCommand" date="Mon Nov 20 23:32:00 EST 2023" starttimestamp="1700516585068" timestamp="24535835" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4969" _type="MoveCaretCommand" caretOffset="1481" date="Mon Nov 20 23:32:48 EST 2023" docOffset="1481" starttimestamp="1700516585068" timestamp="24583301" />
  <Command __id="4970" _type="MoveCaretCommand" caretOffset="1485" date="Mon Nov 20 23:32:49 EST 2023" docOffset="1485" starttimestamp="1700516585068" timestamp="24584048" />
  <Command __id="4971" _type="MoveCaretCommand" caretOffset="1472" date="Mon Nov 20 23:32:50 EST 2023" docOffset="1472" starttimestamp="1700516585068" timestamp="24584960" />
  <Command __id="4972" _type="MoveCaretCommand" caretOffset="1478" date="Mon Nov 20 23:32:50 EST 2023" docOffset="1478" starttimestamp="1700516585068" timestamp="24585522" />
  <Command __id="4973" _type="ShellCommand" date="Mon Nov 20 23:32:51 EST 2023" starttimestamp="1700516585068" timestamp="24586249" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4974" _type="ShellCommand" date="Mon Nov 20 23:32:51 EST 2023" starttimestamp="1700516585068" timestamp="24586857" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4975" _type="ShellCommand" date="Mon Nov 20 23:32:53 EST 2023" starttimestamp="1700516585068" timestamp="24588024" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4976" _type="ShellCommand" date="Mon Nov 20 23:32:54 EST 2023" starttimestamp="1700516585068" timestamp="24589154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4977" _type="MoveCaretCommand" caretOffset="910" date="Mon Nov 20 23:33:10 EST 2023" docOffset="910" starttimestamp="1700516585068" timestamp="24605502" />
  <Command __id="4978" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:33:11 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="24606277" />
  <Command __id="4980" _type="SelectTextCommand" caretOffset="83" date="Mon Nov 20 23:33:11 EST 2023" end="83" start="70" starttimestamp="1700516585068" timestamp="24606651" />
  <Command __id="4981" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 23:33:14 EST 2023" docOffset="499" starttimestamp="1700516585068" timestamp="24608936" />
  <Command __id="4982" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 23:33:14 EST 2023" docOffset="499" starttimestamp="1700516585068" timestamp="24608936" />
  <Command __id="4983" _type="ShellCommand" date="Mon Nov 20 23:33:20 EST 2023" starttimestamp="1700516585068" timestamp="24615141" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4984" _type="ShellCommand" date="Mon Nov 20 23:33:20 EST 2023" starttimestamp="1700516585068" timestamp="24615665" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4985" _type="ShellCommand" date="Mon Nov 20 23:33:21 EST 2023" starttimestamp="1700516585068" timestamp="24616051" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4986" _type="ShellCommand" date="Mon Nov 20 23:33:22 EST 2023" starttimestamp="1700516585068" timestamp="24617079" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4987" _type="ShellCommand" date="Mon Nov 20 23:33:24 EST 2023" starttimestamp="1700516585068" timestamp="24619486" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4988" _type="ConsoleOutput" date="Mon Nov 20 23:33:35 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24630328" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to LIST try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)"), Diff(INSERT,"¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4989" _type="ConsoleOutput" date="Mon Nov 20 23:33:36 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24631588" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Error finding call to "), Diff(DELETE,"LIST"), Diff(INSERT,"QUOTE"), Diff(EQUAL," try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶")]]]></diff>
  </Command>
  <Command __id="4990" _type="ConsoleOutput" date="Mon Nov 20 23:33:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24633114" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to CONS try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Error finding call to "), Diff(DELETE,"QUOTE"), Diff(INSERT,"CONS"), Diff(EQUAL," try:¶Make sure your load evaluator works properly¶"), Diff(INSERT,""), Diff(EQUAL,"Check your lisp file for errors (extra parenthesis, misspellings, etc)¶"), Diff(DELETE,"Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶")]]]></diff>
  </Command>
  <Command __id="4991" _type="ConsoleOutput" date="Mon Nov 20 23:33:38 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24633121" type="ConsoleOutput">
    <outputString><![CDATA[Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Error finding call to CONS try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)"), Diff(INSERT,"Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4992" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634218" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to EVAL try:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"¶Error finding call to EVAL try:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4993" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634222" type="ConsoleOutput">
    <outputString><![CDATA[Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):0
Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶"), Diff(EQUAL,"¶Error finding call to "), Diff(DELETE,"EVAL"), Diff(INSERT,"COND"), Diff(EQUAL," try:¶"), Diff(INSERT,"Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="4994" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634224" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Test execution time (ms):0"), Diff(INSERT,"Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4995" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634226" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of CONS¶"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4996" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634232" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE


Test execution time (ms):1
Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):1"), Diff(INSERT,"Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE¶¶¶Test execution time (ms):1¶Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST¶¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4997" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634233" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE¶¶¶Test execution time (ms):1¶Test Result:List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of "), Diff(DELETE,"LIST¶¶¶Test execution time (ms):0"), Diff(INSERT,"EVAL¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4998" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634233" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of EVAL¶"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4999" _type="ConsoleOutput" date="Mon Nov 20 23:33:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24634234" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5000" _type="ShellCommand" date="Mon Nov 20 23:33:52 EST 2023" starttimestamp="1700516585068" timestamp="24647314" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5001" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:33:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24647443" type="Run" />
  <Command __id="5002" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:33:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24647443" type="Run" />
  <Command __id="5005" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:33:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24651352" type="Run" />
  <Command __id="5006" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:33:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24651352" type="Run" />
  <Command __id="5007" _type="ShellCommand" date="Mon Nov 20 23:33:56 EST 2023" starttimestamp="1700516585068" timestamp="24651663" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5008" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655734" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5009" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655735" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5010" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[102,Mon Nov 20 23:33:35 EST 2023,11,0,ListTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,1,false, , , ,ListTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5011" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[102,Mon Nov 20 23:33:35 EST 2023,11,0,ListTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,1,false, , , ,ListTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5012" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[103,Mon Nov 20 23:33:36 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,2,false, , , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5013" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[103,Mon Nov 20 23:33:36 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,2,false, , , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5014" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[104,Mon Nov 20 23:33:38 EST 2023,11,0,ConsTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,3,false, , , ,ConsTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5015" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[104,Mon Nov 20 23:33:38 EST 2023,11,0,ConsTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,3,false, , , ,ConsTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5016" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[105,Mon Nov 20 23:33:39 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,4,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5017" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[105,Mon Nov 20 23:33:39 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,4,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5018" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[106,Mon Nov 20 23:33:40 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,5,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5019" _type="LocalChecksRawCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655735">
    <CSVRow><![CDATA[106,Mon Nov 20 23:33:40 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,61,5,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5020" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655740" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5021" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655741" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5022" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655741" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5023" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655742" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5024" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655758" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5025" _type="ExceptionCommand" date="Mon Nov 20 23:34:00 EST 2023" starttimestamp="1700516585068" timestamp="24655759" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:17)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:20)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5026" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655760" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5027" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655764" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at gradingTools.comp524f19.assignment1.testcases."), Diff(INSERT,"load."), Diff(EQUAL,"Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.test(Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.java:4"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶")]]]></diff>
  </Command>
  <Command __id="5028" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655777" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"GradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:5"), Diff(DELETE,"2"), Diff(INSERT,"66"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"190"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"43"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"77"), Diff(EQUAL,"2)¶")]]]></diff>
  </Command>
  <Command __id="5029" _type="ConsoleOutput" date="Mon Nov 20 23:34:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24655779" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶")]]]></diff>
  </Command>
  <Command __id="5030" _type="ShellCommand" date="Mon Nov 20 23:34:04 EST 2023" starttimestamp="1700516585068" timestamp="24659299" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5031" _type="MoveCaretCommand" caretOffset="500" date="Mon Nov 20 23:35:19 EST 2023" docOffset="669" starttimestamp="1700516585068" timestamp="24734053" />
  <Command __id="5032" _type="MoveCaretCommand" caretOffset="500" date="Mon Nov 20 23:35:19 EST 2023" docOffset="669" starttimestamp="1700516585068" timestamp="24734054" />
  <Command __id="5033" _type="MoveCaretCommand" caretOffset="500" date="Mon Nov 20 23:35:19 EST 2023" docOffset="669" starttimestamp="1700516585068" timestamp="24734121" />
  <Command __id="5034" _type="MoveCaretCommand" caretOffset="500" date="Mon Nov 20 23:35:19 EST 2023" docOffset="669" starttimestamp="1700516585068" timestamp="24734121" />
  <Command __id="5035" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:35:30 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24744999" />
  <Command __id="5036" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:35:30 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24744999" />
  <Command __id="5038" _type="InsertStringCommand" date="Mon Nov 20 23:35:30 EST 2023" starttimestamp="1700516585068" timestamp="24745818" timestamp2="24745818">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5039" _type="InsertStringCommand" date="Mon Nov 20 23:35:30 EST 2023" starttimestamp="1700516585068" timestamp="24745818" timestamp2="24745818">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5041" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746072" timestamp2="24746072">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5042" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746072" timestamp2="24746072">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5044" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746175" timestamp2="24746175">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5045" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746175" timestamp2="24746175">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5047" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746309" timestamp2="24746309">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5048" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746309" timestamp2="24746309">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5050" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746797" timestamp2="24746797">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5051" _type="InsertStringCommand" date="Mon Nov 20 23:35:31 EST 2023" starttimestamp="1700516585068" timestamp="24746797" timestamp2="24746797">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5053" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747018" timestamp2="24747018">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5054" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747018" timestamp2="24747018">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5056" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747133" timestamp2="24747133">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5057" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747133" timestamp2="24747133">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5059" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747239" timestamp2="24747239">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5060" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747239" timestamp2="24747239">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5062" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747357" timestamp2="24747357">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5063" _type="InsertStringCommand" date="Mon Nov 20 23:35:32 EST 2023" starttimestamp="1700516585068" timestamp="24747357" timestamp2="24747357">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5064" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:35:32 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="24747363" />
  <Command __id="5065" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:35:34 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="24749609" />
  <Command __id="5067" _type="InsertStringCommand" date="Mon Nov 20 23:35:34 EST 2023" starttimestamp="1700516585068" timestamp="24749615" timestamp2="24749615">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5068" _type="InsertStringCommand" date="Mon Nov 20 23:35:34 EST 2023" starttimestamp="1700516585068" timestamp="24749615" timestamp2="24749615">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4934" _type="Insert" date="Mon Nov 20 23:31:41 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" length="5" offset="1039" repeat="5" starttimestamp="1700516585068" timestamp="24516869" timestamp2="24518306">
    <text><![CDATA[.lisp]]></text>
  </DocumentChange>
  <Command __id="4979" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:33:11 EST 2023" docASTNodeCount="117" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24606614">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5037" _type="Insert" date="Mon Nov 20 23:35:30 EST 2023" docASTNodeCount="121" docActiveCodeLength="681" docExpressionCount="86" docLength="681" length="12" offset="544" repeat="9" starttimestamp="1700516585068" timestamp="24745816" timestamp2="24747357">
    <text><![CDATA[
		if(expr.)]]></text>
  </DocumentChange>
  <DocumentChange __id="5066" _type="Insert" date="Mon Nov 20 23:35:34 EST 2023" docASTNodeCount="121" docActiveCodeLength="689" docExpressionCount="87" docLength="689" length="8" offset="555" starttimestamp="1700516585068" timestamp="24749613">
    <text><![CDATA[isAtom()]]></text>
  </DocumentChange>
  <DocumentChange __id="5071" _type="Insert" date="Mon Nov 20 23:35:36 EST 2023" docASTNodeCount="123" docActiveCodeLength="706" docExpressionCount="87" docLength="706" length="17" offset="564" repeat="9" starttimestamp="1700516585068" timestamp="24751183" timestamp2="24752164">
    <text><![CDATA[ {
			return 
		}]]></text>
  </DocumentChange>
  <Command __id="5069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:35:35 EST 2023" starttimestamp="1700516585068" timestamp="24750911" />
  <Command __id="5070" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:35:35 EST 2023" starttimestamp="1700516585068" timestamp="24750911" />
  <Command __id="5072" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751184" timestamp2="24751184">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="5073" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751184" timestamp2="24751184">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="5075" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751354" timestamp2="24751354">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5076" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751354" timestamp2="24751354">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5078" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751607" timestamp2="24751607">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5079" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751607" timestamp2="24751607">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5081" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751673" timestamp2="24751673">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5082" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751673" timestamp2="24751673">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5084" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751776" timestamp2="24751776">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5085" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751776" timestamp2="24751776">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5087" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751883" timestamp2="24751883">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="5088" _type="InsertStringCommand" date="Mon Nov 20 23:35:36 EST 2023" starttimestamp="1700516585068" timestamp="24751883" timestamp2="24751883">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="5090" _type="InsertStringCommand" date="Mon Nov 20 23:35:37 EST 2023" starttimestamp="1700516585068" timestamp="24751976" timestamp2="24751976">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5091" _type="InsertStringCommand" date="Mon Nov 20 23:35:37 EST 2023" starttimestamp="1700516585068" timestamp="24751976" timestamp2="24751976">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5093" _type="InsertStringCommand" date="Mon Nov 20 23:35:37 EST 2023" starttimestamp="1700516585068" timestamp="24752040" timestamp2="24752040">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5094" _type="InsertStringCommand" date="Mon Nov 20 23:35:37 EST 2023" starttimestamp="1700516585068" timestamp="24752040" timestamp2="24752040">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5096" _type="InsertStringCommand" date="Mon Nov 20 23:35:37 EST 2023" starttimestamp="1700516585068" timestamp="24752166" timestamp2="24752166">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5097" _type="InsertStringCommand" date="Mon Nov 20 23:35:37 EST 2023" starttimestamp="1700516585068" timestamp="24752166" timestamp2="24752166">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5099" _type="InsertStringCommand" date="Mon Nov 20 23:35:44 EST 2023" starttimestamp="1700516585068" timestamp="24759916" timestamp2="24759916">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5100" _type="InsertStringCommand" date="Mon Nov 20 23:35:44 EST 2023" starttimestamp="1700516585068" timestamp="24759917" timestamp2="24759917">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5102" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760109" timestamp2="24760109">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5103" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760109" timestamp2="24760109">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5105" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760259" timestamp2="24760259">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5106" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760260" timestamp2="24760260">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5108" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760347" timestamp2="24760347">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5109" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760347" timestamp2="24760347">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5111" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760480" timestamp2="24760480">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5112" _type="InsertStringCommand" date="Mon Nov 20 23:35:45 EST 2023" starttimestamp="1700516585068" timestamp="24760480" timestamp2="24760480">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5113" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:35:45 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="24760486" />
  <Command __id="5116" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:35:46 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="24761425" />
  <Command __id="5118" _type="InsertStringCommand" date="Mon Nov 20 23:35:46 EST 2023" starttimestamp="1700516585068" timestamp="24761455" timestamp2="24761455">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5119" _type="InsertStringCommand" date="Mon Nov 20 23:35:46 EST 2023" starttimestamp="1700516585068" timestamp="24761455" timestamp2="24761455">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5120" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:35:47 EST 2023" starttimestamp="1700516585068" timestamp="24762799" />
  <Command __id="5121" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:35:47 EST 2023" starttimestamp="1700516585068" timestamp="24762799" />
  <Command __id="5123" _type="InsertStringCommand" date="Mon Nov 20 23:35:48 EST 2023" starttimestamp="1700516585068" timestamp="24763172" timestamp2="24763172">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5124" _type="InsertStringCommand" date="Mon Nov 20 23:35:48 EST 2023" starttimestamp="1700516585068" timestamp="24763172" timestamp2="24763172">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5126" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:35:48 EST 2023" starttimestamp="1700516585068" timestamp="24763843" />
  <Command __id="5127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:35:48 EST 2023" starttimestamp="1700516585068" timestamp="24763843" />
  <Command __id="5128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 23:35:49 EST 2023" starttimestamp="1700516585068" timestamp="24764127" />
  <Command __id="5129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 23:35:49 EST 2023" starttimestamp="1700516585068" timestamp="24764127" />
  <Command __id="5144" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:35:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24771646" type="Run" />
  <Command __id="5145" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:35:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24771647" type="Run" />
  <Command __id="5146" _type="ShellCommand" date="Mon Nov 20 23:35:57 EST 2023" starttimestamp="1700516585068" timestamp="24771962" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5147" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780034" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5148" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780035" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5149" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780039" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5150" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780040" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5151" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780041" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5152" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780041" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5153" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780057" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5154" _type="ExceptionCommand" date="Mon Nov 20 23:36:05 EST 2023" starttimestamp="1700516585068" timestamp="24780059" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a head
	at main.lisp.parser.terms.Atom.getHead(Atom.java:27)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:17)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:23)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:23)
	at index.ListEvaluator.evalHelper(ListEvaluator.java:23)
	at index.ListEvaluator.eval(ListEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5155" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780062" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5156" _type="ExceptionCommand" date="Mon Nov 20 23:36:05 EST 2023" starttimestamp="1700516585068" timestamp="24780063" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5157" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780063" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶"), Diff(EQUAL,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶"), Diff(INSERT,"	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶")]]]></diff>
  </Command>
  <Command __id="5158" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780067" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶"), Diff(EQUAL,"	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.Lightweigh"), Diff(INSERT,"DispatchThread.pumpEventsForHierarchy(Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"4918"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742"), Diff(INSERT,"EventDispatchThread.pumpEvents(EventDispatchThread.java:109"), Diff(EQUAL,")¶	at java.desktop/java.awt.EventDispatchThread.pump"), Diff(DELETE,"One"), Diff(EQUAL,"Event"), Diff(DELETE,"ForFilter"), Diff(EQUAL,"s(EventDispatchThread.java:"), Diff(DELETE,"203"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt.EventDispatchThread."), Diff(DELETE,"pumpEventsForFilter"), Diff(INSERT,"run"), Diff(EQUAL,"(EventDispatchThread.java:"), Diff(DELETE,"124"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5159" _type="ConsoleOutput" date="Mon Nov 20 23:36:05 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24780070" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):29
Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Test execution time (ms):29¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5160" _type="ShellCommand" date="Mon Nov 20 23:36:13 EST 2023" starttimestamp="1700516585068" timestamp="24788497" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5182" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:36:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24798399" type="Run" />
  <Command __id="5183" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:36:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24798399" type="Run" />
  <Command __id="5184" _type="ShellCommand" date="Mon Nov 20 23:36:23 EST 2023" starttimestamp="1700516585068" timestamp="24798708" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5185" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801826" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"29¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5186" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801827" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5187" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801832" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5188" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801833" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5189" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801834" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5190" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801834" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5191" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801851" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5192" _type="ExceptionCommand" date="Mon Nov 20 23:36:26 EST 2023" starttimestamp="1700516585068" timestamp="24801853" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'EVAL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5193" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801856" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5194" _type="ExceptionCommand" date="Mon Nov 20 23:36:26 EST 2023" starttimestamp="1700516585068" timestamp="24801857" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5195" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801859" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶"), Diff(EQUAL,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):31¶")]]]></diff>
  </Command>
  <Command __id="5196" _type="ConsoleOutput" date="Mon Nov 20 23:36:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24801861" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):31"), Diff(INSERT,"Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5197" _type="ConsoleOutput" date="Mon Nov 20 23:36:39 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24814181" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to LIST try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):2
Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Error finding call to LIST try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oa"), Diff(INSERT,"istTeste"), Diff(EQUAL,"dChecker,0.0% complete,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"Index -1 out of bounds"), Diff(INSERT,"Encountered an unexpected error, see console"), Diff(EQUAL," for "), Diff(DELETE,"length 0"), Diff(INSERT,"potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5198" _type="ConsoleOutput" date="Mon Nov 20 23:36:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24816898" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):0
Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Error finding call to "), Diff(DELETE,"LIST"), Diff(INSERT,"COND"), Diff(EQUAL," try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Cond"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶")]]]></diff>
  </Command>
  <Command __id="5199" _type="ConsoleOutput" date="Mon Nov 20 23:36:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24818983" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:Con"), Diff(DELETE,"d"), Diff(INSERT,"s"), Diff(EQUAL,"Tested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,0.0% complete,0.0,10.0,E"), Diff(DELETE,"ncountered an unexpected error, see console for potential fixes"), Diff(INSERT,"xpecting in test file two results of CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5200" _type="ConsoleOutput" date="Mon Nov 20 23:36:44 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24819770" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of "), Diff(DELETE,"CONS"), Diff(INSERT,"QUOTE"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5201" _type="ConsoleOutput" date="Mon Nov 20 23:36:45 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24820914" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of "), Diff(DELETE,"QUOTE"), Diff(INSERT,"LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5202" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[109,Mon Nov 20 23:36:26 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5203" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[109,Mon Nov 20 23:36:26 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5204" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[110,Mon Nov 20 23:36:39 EST 2023,11,0,ListTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,1,false, , , ,ListTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5205" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[110,Mon Nov 20 23:36:39 EST 2023,11,0,ListTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,1,false, , , ,ListTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5206" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[111,Mon Nov 20 23:36:41 EST 2023,11,0,CondTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,2,false, , , ,CondTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5207" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[111,Mon Nov 20 23:36:41 EST 2023,11,0,CondTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,2,false, , , ,CondTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5208" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[112,Mon Nov 20 23:36:44 EST 2023,11,0,ConsTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,3,false, , , ,ConsTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5209" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[112,Mon Nov 20 23:36:44 EST 2023,11,0,ConsTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,3,false, , , ,ConsTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5210" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[113,Mon Nov 20 23:36:44 EST 2023,11,0,QuoteTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,4,false, , , ,QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5211" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[113,Mon Nov 20 23:36:44 EST 2023,11,0,QuoteTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,4,false, , , ,QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5212" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[114,Mon Nov 20 23:36:45 EST 2023,11,0,ListTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,5,false, , , ,ListTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5213" _type="LocalChecksRawCommand" date="Mon Nov 20 23:36:45 EST 2023" starttimestamp="1700516585068" timestamp="24820917">
    <CSVRow><![CDATA[114,Mon Nov 20 23:36:45 EST 2023,11,0,ListTestedTwoResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,5,false, , , ,ListTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5214" _type="ConsoleOutput" date="Mon Nov 20 23:36:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24822780" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to CONS try:
Make sure your load evaluator works properly
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Test execution time (ms):1¶Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST"), Diff(INSERT,"Error finding call to CONS try:¶Make sure your load evaluator works properly"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5215" _type="ConsoleOutput" date="Mon Nov 20 23:36:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24822786" type="ConsoleOutput">
    <outputString><![CDATA[Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Error finding call to CONS try:¶Make sure your load evaluator works properly"), Diff(INSERT,"Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5216" _type="ConsoleOutput" date="Mon Nov 20 23:36:48 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24823924" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Test execution time (ms):0
Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶"), Diff(EQUAL,"Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Test execution time (ms):0¶Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5217" _type="ConsoleOutput" date="Mon Nov 20 23:36:48 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24823924" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Test execution time (ms):0¶Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5218" _type="ConsoleOutput" date="Mon Nov 20 23:36:48 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="24823925" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5219" _type="ShellCommand" date="Mon Nov 20 23:36:52 EST 2023" starttimestamp="1700516585068" timestamp="24827393" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5220" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:36:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24827400" type="Run" />
  <Command __id="5221" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:36:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24827400" type="Run" />
  <DocumentChange __id="5098" _type="Insert" date="Mon Nov 20 23:35:44 EST 2023" docASTNodeCount="126" docActiveCodeLength="713" docExpressionCount="90" docLength="713" length="7" offset="577" repeat="7" starttimestamp="1700516585068" timestamp="24759914" timestamp2="24761250">
    <text><![CDATA[expr.ev]]></text>
  </DocumentChange>
  <DocumentChange __id="5117" _type="Replace" date="Mon Nov 20 23:35:46 EST 2023" docASTNodeCount="127" docActiveCodeLength="728" docExpressionCount="91" docLength="728" endLine="20" insertionLength="17" int_docASTNodeCount="124" int_docActiveCodeLength="711" int_docExpressionCount="88" int_docLength="711" length="2" offset="582" startLine="20" starttimestamp="1700516585068" timestamp="24761428">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5122" _type="Insert" date="Mon Nov 20 23:35:48 EST 2023" docASTNodeCount="124" docActiveCodeLength="729" docExpressionCount="88" docLength="729" length="1" offset="598" starttimestamp="1700516585068" timestamp="24763170">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5125" _type="Delete" date="Mon Nov 20 23:35:48 EST 2023" docASTNodeCount="127" docActiveCodeLength="728" docExpressionCount="91" docLength="728" endLine="20" length="1" offset="598" startLine="20" starttimestamp="1700516585068" timestamp="24763841">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5134" _type="Insert" date="Mon Nov 20 23:35:51 EST 2023" docASTNodeCount="127" docActiveCodeLength="729" docExpressionCount="91" docLength="729" length="1" offset="599" starttimestamp="1700516585068" timestamp="24766802">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5163" _type="Delete" date="Mon Nov 20 23:36:17 EST 2023" docASTNodeCount="117" docActiveCodeLength="670" docExpressionCount="84" docLength="670" endLine="21" length="59" offset="545" startLine="19" starttimestamp="1700516585068" timestamp="24792344">
    <text><![CDATA[		if(expr.isAtom()) {
			return expr.eval(environment);
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="5167" _type="Insert" date="Mon Nov 20 23:36:18 EST 2023" docASTNodeCount="117" docActiveCodeLength="673" docExpressionCount="84" docLength="673" length="3" offset="484" starttimestamp="1700516585068" timestamp="24793531">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="5170" _type="Replace" date="Mon Nov 20 23:36:18 EST 2023" docASTNodeCount="127" docActiveCodeLength="730" docExpressionCount="91" docLength="730" endLine="16" insertionLength="59" int_docASTNodeCount="117" int_docActiveCodeLength="671" int_docExpressionCount="84" int_docLength="671" length="2" offset="485" startLine="16" starttimestamp="1700516585068" timestamp="24793796">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		if(expr.isAtom()) {
			return expr.eval(environment);
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5174" _type="Delete" date="Mon Nov 20 23:36:20 EST 2023" docASTNodeCount="127" docActiveCodeLength="729" docExpressionCount="91" docLength="729" endLine="22" length="1" offset="604" startLine="21" starttimestamp="1700516585068" timestamp="24795223">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="5222" _type="MoveCaretCommand" caretOffset="435" date="Mon Nov 20 23:36:54 EST 2023" docOffset="604" starttimestamp="1700516585068" timestamp="24828996" />
  <Command __id="5223" _type="MoveCaretCommand" caretOffset="435" date="Mon Nov 20 23:36:54 EST 2023" docOffset="604" starttimestamp="1700516585068" timestamp="24828996" />
  <Command __id="5225" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:36:55 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="24830120" />
  <Command __id="5226" _type="ShellCommand" date="Mon Nov 20 23:37:00 EST 2023" starttimestamp="1700516585068" timestamp="24835465" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5224" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:36:55 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24830078">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("), Diff(DELETE,"fileName"), Diff(INSERT,""./test.lisp""), Diff(EQUAL,"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="5227" _type="ShellCommand" date="Mon Nov 20 23:37:24 EST 2023" starttimestamp="1700516585068" timestamp="24859044" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5228" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:26 EST 2023" docASTNodeCount="127" docActiveCodeLength="729" docExpressionCount="91" docLength="729" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24861164">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		"), Diff(INSERT,"if(expr.isAtom()) {			return expr.eval(environment);		}		"), Diff(EQUAL,"if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="5230" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:26 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24861611">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5231" _type="LocalChecksRawCommand" date="Mon Nov 20 23:37:26 EST 2023" starttimestamp="1700516585068" timestamp="24861613">
    <CSVRow><![CDATA[115,Mon Nov 20 23:36:47 EST 2023,11,0,ConsTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,6,false, , , ,ConsTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5232" _type="LocalChecksRawCommand" date="Mon Nov 20 23:37:26 EST 2023" starttimestamp="1700516585068" timestamp="24861613">
    <CSVRow><![CDATA[115,Mon Nov 20 23:36:47 EST 2023,11,0,ConsTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,6,false, , , ,ConsTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5233" _type="LocalChecksRawCommand" date="Mon Nov 20 23:37:26 EST 2023" starttimestamp="1700516585068" timestamp="24861613">
    <CSVRow><![CDATA[116,Mon Nov 20 23:36:48 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,7,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5234" _type="LocalChecksRawCommand" date="Mon Nov 20 23:37:26 EST 2023" starttimestamp="1700516585068" timestamp="24861613">
    <CSVRow><![CDATA[116,Mon Nov 20 23:36:48 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,7,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5235" _type="LocalChecksRawCommand" date="Mon Nov 20 23:37:26 EST 2023" starttimestamp="1700516585068" timestamp="24861613">
    <CSVRow><![CDATA[117,Mon Nov 20 23:36:49 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,8,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5236" _type="LocalChecksRawCommand" date="Mon Nov 20 23:37:26 EST 2023" starttimestamp="1700516585068" timestamp="24861613">
    <CSVRow><![CDATA[117,Mon Nov 20 23:36:49 EST 2023,11,0,LispInterpreterLoadSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,64,8,true,CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker LoadChecker QuoteTestedChecker QuoteTestedTwoResultsChecker , , ,CondTestedChecker-(0.0/10.0) CondTestedResultsChecker-(0.0/20.0) ConsTestedChecker-(0.0/10.0) ConsTestedTwoResultsChecker-(0.0/10.0) EvalTestedChecker-(0.0/10.0) EvalTestedTwoResultsChecker-(0.0/10.0) ListTestedChecker-(0.0/10.0) ListTestedTwoResultsChecker-(0.0/10.0) LoadChecker-(0.0/0.0) QuoteTestedChecker-(0.0/10.0) QuoteTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5237" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 23:37:26 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="24861673" />
  <Command __id="5238" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:27 EST 2023" docASTNodeCount="127" docActiveCodeLength="729" docExpressionCount="91" docLength="729" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24861984">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5239" _type="MoveCaretCommand" caretOffset="435" date="Mon Nov 20 23:37:27 EST 2023" docOffset="604" starttimestamp="1700516585068" timestamp="24862043" />
  <Command __id="5240" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:28 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24863045">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5241" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 23:37:28 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="24863092" />
  <Command __id="5242" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:28 EST 2023" docASTNodeCount="127" docActiveCodeLength="729" docExpressionCount="91" docLength="729" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24863625">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5243" _type="MoveCaretCommand" caretOffset="435" date="Mon Nov 20 23:37:28 EST 2023" docOffset="604" starttimestamp="1700516585068" timestamp="24863676" />
  <Command __id="5244" _type="MoveCaretCommand" caretOffset="208" date="Mon Nov 20 23:37:29 EST 2023" docOffset="377" starttimestamp="1700516585068" timestamp="24864523" />
  <Command __id="5245" _type="MoveCaretCommand" caretOffset="208" date="Mon Nov 20 23:37:29 EST 2023" docOffset="377" starttimestamp="1700516585068" timestamp="24864523" />
  <Command __id="5246" _type="MoveCaretCommand" caretOffset="216" date="Mon Nov 20 23:37:29 EST 2023" docOffset="385" starttimestamp="1700516585068" timestamp="24864881" />
  <Command __id="5247" _type="MoveCaretCommand" caretOffset="216" date="Mon Nov 20 23:37:29 EST 2023" docOffset="385" starttimestamp="1700516585068" timestamp="24864881" />
  <Command __id="5248" _type="MoveCaretCommand" caretOffset="227" date="Mon Nov 20 23:37:30 EST 2023" docOffset="396" starttimestamp="1700516585068" timestamp="24865097" />
  <Command __id="5249" _type="MoveCaretCommand" caretOffset="227" date="Mon Nov 20 23:37:30 EST 2023" docOffset="396" starttimestamp="1700516585068" timestamp="24865097" />
  <Command __id="5250" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:30 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24865610">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5251" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 23:37:30 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="24865670" />
  <Command __id="5253" _type="MoveCaretCommand" caretOffset="227" date="Mon Nov 20 23:37:33 EST 2023" docOffset="396" starttimestamp="1700516585068" timestamp="24868377" />
  <Command __id="5254" _type="SelectTextCommand" caretOffset="202" date="Mon Nov 20 23:37:35 EST 2023" end="203" start="202" starttimestamp="1700516585068" timestamp="24870159" />
  <Command __id="5255" _type="SelectTextCommand" caretOffset="202" date="Mon Nov 20 23:37:35 EST 2023" end="203" start="202" starttimestamp="1700516585068" timestamp="24870159" />
  <Command __id="5256" _type="MoveCaretCommand" caretOffset="232" date="Mon Nov 20 23:37:35 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="24870585" />
  <Command __id="5257" _type="MoveCaretCommand" caretOffset="232" date="Mon Nov 20 23:37:35 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="24870585" />
  <Command __id="5258" _type="MoveCaretCommand" caretOffset="335" date="Mon Nov 20 23:37:35 EST 2023" docOffset="504" starttimestamp="1700516585068" timestamp="24870893" />
  <Command __id="5259" _type="MoveCaretCommand" caretOffset="335" date="Mon Nov 20 23:37:35 EST 2023" docOffset="504" starttimestamp="1700516585068" timestamp="24870893" />
  <Command __id="5260" _type="MoveCaretCommand" caretOffset="266" date="Mon Nov 20 23:37:36 EST 2023" docOffset="435" starttimestamp="1700516585068" timestamp="24871247" />
  <Command __id="5261" _type="MoveCaretCommand" caretOffset="266" date="Mon Nov 20 23:37:36 EST 2023" docOffset="435" starttimestamp="1700516585068" timestamp="24871247" />
  <Command __id="5262" _type="MoveCaretCommand" caretOffset="133" date="Mon Nov 20 23:37:36 EST 2023" docOffset="302" starttimestamp="1700516585068" timestamp="24871770" />
  <Command __id="5263" _type="MoveCaretCommand" caretOffset="133" date="Mon Nov 20 23:37:36 EST 2023" docOffset="302" starttimestamp="1700516585068" timestamp="24871770" />
  <Command __id="5264" _type="SelectTextCommand" caretOffset="204" date="Mon Nov 20 23:37:37 EST 2023" end="204" start="203" starttimestamp="1700516585068" timestamp="24872142" />
  <Command __id="5265" _type="SelectTextCommand" caretOffset="204" date="Mon Nov 20 23:37:37 EST 2023" end="204" start="203" starttimestamp="1700516585068" timestamp="24872142" />
  <Command __id="5266" _type="MoveCaretCommand" caretOffset="232" date="Mon Nov 20 23:37:37 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="24872495" />
  <Command __id="5267" _type="MoveCaretCommand" caretOffset="232" date="Mon Nov 20 23:37:37 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="24872495" />
  <Command __id="5268" _type="SelectTextCommand" caretOffset="286" date="Mon Nov 20 23:37:38 EST 2023" end="286" start="285" starttimestamp="1700516585068" timestamp="24872969" />
  <Command __id="5269" _type="SelectTextCommand" caretOffset="286" date="Mon Nov 20 23:37:38 EST 2023" end="286" start="285" starttimestamp="1700516585068" timestamp="24872969" />
  <Command __id="5270" _type="MoveCaretCommand" caretOffset="304" date="Mon Nov 20 23:37:38 EST 2023" docOffset="473" starttimestamp="1700516585068" timestamp="24873341" />
  <Command __id="5271" _type="MoveCaretCommand" caretOffset="304" date="Mon Nov 20 23:37:38 EST 2023" docOffset="473" starttimestamp="1700516585068" timestamp="24873341" />
  <Command __id="5272" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 23:37:39 EST 2023" docOffset="500" starttimestamp="1700516585068" timestamp="24874081" />
  <Command __id="5273" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 23:37:39 EST 2023" docOffset="500" starttimestamp="1700516585068" timestamp="24874081" />
  <Command __id="5274" _type="MoveCaretCommand" caretOffset="354" date="Mon Nov 20 23:37:39 EST 2023" docOffset="523" starttimestamp="1700516585068" timestamp="24874673" />
  <Command __id="5275" _type="MoveCaretCommand" caretOffset="354" date="Mon Nov 20 23:37:39 EST 2023" docOffset="523" starttimestamp="1700516585068" timestamp="24874673" />
  <Command __id="5276" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:37:40 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24875315" />
  <Command __id="5277" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:37:40 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24875315" />
  <Command __id="5278" _type="MoveCaretCommand" caretOffset="356" date="Mon Nov 20 23:37:41 EST 2023" docOffset="525" starttimestamp="1700516585068" timestamp="24876701" />
  <Command __id="5279" _type="MoveCaretCommand" caretOffset="356" date="Mon Nov 20 23:37:41 EST 2023" docOffset="525" starttimestamp="1700516585068" timestamp="24876701" />
  <Command __id="5252" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:37:33 EST 2023" docASTNodeCount="127" docActiveCodeLength="729" docExpressionCount="91" docLength="729" projectName="Assignment5" starttimestamp="1700516585068" timestamp="24868327">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		if(expr.getHead().isNIL()) {			return new NilAtom();		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5280" _type="SelectTextCommand" caretOffset="376" date="Mon Nov 20 23:38:10 EST 2023" end="435" start="376" starttimestamp="1700516585068" timestamp="24905417" />
  <Command __id="5281" _type="SelectTextCommand" caretOffset="376" date="Mon Nov 20 23:38:10 EST 2023" end="435" start="376" starttimestamp="1700516585068" timestamp="24905417" />
  <Command __id="5283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:38:19 EST 2023" starttimestamp="1700516585068" timestamp="24914302" />
  <Command __id="5284" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:38:19 EST 2023" starttimestamp="1700516585068" timestamp="24914302" />
  <Command __id="5286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:38:19 EST 2023" starttimestamp="1700516585068" timestamp="24914745" />
  <Command __id="5287" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:38:19 EST 2023" starttimestamp="1700516585068" timestamp="24914745" />
  <Command __id="5288" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:20 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24915418" />
  <Command __id="5289" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:20 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24915418" />
  <Command __id="5290" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:38:21 EST 2023" starttimestamp="1700516585068" timestamp="24916158" />
  <Command __id="5291" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:38:21 EST 2023" starttimestamp="1700516585068" timestamp="24916260" />
  <Command __id="5292" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:38:21 EST 2023" starttimestamp="1700516585068" timestamp="24916266" />
  <Command __id="5293" _type="MoveCaretCommand" caretOffset="334" date="Mon Nov 20 23:38:22 EST 2023" docOffset="503" starttimestamp="1700516585068" timestamp="24917135" />
  <Command __id="5294" _type="MoveCaretCommand" caretOffset="334" date="Mon Nov 20 23:38:22 EST 2023" docOffset="503" starttimestamp="1700516585068" timestamp="24917135" />
  <Command __id="5295" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:22 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24917658" />
  <Command __id="5296" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:22 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24917658" />
  <Command __id="5297" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:23 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24918157" />
  <Command __id="5298" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:23 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24918157" />
  <Command __id="5299" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:23 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24918397" />
  <Command __id="5300" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:23 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24918397" />
  <Command __id="5301" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:23 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24918628" />
  <Command __id="5302" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:23 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24918628" />
  <Command __id="5303" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:23 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24918901" />
  <Command __id="5304" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:23 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24918901" />
  <Command __id="5305" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:24 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24919090" />
  <Command __id="5306" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:24 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24919090" />
  <Command __id="5307" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:24 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24919279" />
  <Command __id="5308" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:24 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24919279" />
  <Command __id="5309" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:24 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24919704" />
  <Command __id="5310" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:24 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24919704" />
  <Command __id="5311" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:25 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24920029" />
  <Command __id="5312" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:25 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24920030" />
  <Command __id="5313" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:25 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24920235" />
  <Command __id="5314" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:25 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24920235" />
  <Command __id="5315" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:25 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24920427" />
  <Command __id="5316" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:25 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24920427" />
  <Command __id="5317" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:25 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24920633" />
  <Command __id="5318" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:25 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24920633" />
  <Command __id="5319" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:25 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24920841" />
  <Command __id="5320" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:25 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24920841" />
  <Command __id="5321" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:26 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24921093" />
  <Command __id="5322" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:26 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24921093" />
  <Command __id="5323" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:26 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24921340" />
  <Command __id="5324" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:26 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24921340" />
  <Command __id="5325" _type="SelectTextCommand" caretOffset="374" date="Mon Nov 20 23:38:26 EST 2023" end="374" start="337" starttimestamp="1700516585068" timestamp="24921456" />
  <Command __id="5326" _type="SelectTextCommand" caretOffset="374" date="Mon Nov 20 23:38:26 EST 2023" end="374" start="337" starttimestamp="1700516585068" timestamp="24921456" />
  <Command __id="5327" _type="SelectTextCommand" caretOffset="376" date="Mon Nov 20 23:38:26 EST 2023" end="376" start="372" starttimestamp="1700516585068" timestamp="24921870" />
  <Command __id="5328" _type="SelectTextCommand" caretOffset="376" date="Mon Nov 20 23:38:26 EST 2023" end="376" start="372" starttimestamp="1700516585068" timestamp="24921870" />
  <Command __id="5329" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:27 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24922214" />
  <Command __id="5330" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:27 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24922214" />
  <Command __id="5331" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:27 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24922520" />
  <Command __id="5332" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:27 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24922520" />
  <Command __id="5333" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:27 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24922796" />
  <Command __id="5334" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:27 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24922796" />
  <Command __id="5335" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:28 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24923512" />
  <Command __id="5336" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:28 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24923512" />
  <Command __id="5337" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:28 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24923814" />
  <Command __id="5338" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:28 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24923814" />
  <Command __id="5339" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:29 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24924031" />
  <Command __id="5340" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:29 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24924031" />
  <Command __id="5341" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:29 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24924243" />
  <Command __id="5342" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 23:38:29 EST 2023" docOffset="540" starttimestamp="1700516585068" timestamp="24924243" />
  <Command __id="5343" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:31 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24926347" />
  <Command __id="5344" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:38:31 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="24926347" />
  <Command __id="5345" _type="ShellCommand" date="Mon Nov 20 23:38:36 EST 2023" starttimestamp="1700516585068" timestamp="24931303" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="5282" _type="Delete" date="Mon Nov 20 23:38:19 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" endLine="21" length="60" offset="544" repeat="2" startLine="18" starttimestamp="1700516585068" timestamp="24914294" timestamp2="24914741">
    <text><![CDATA[
		if(expr.getHead().isNIL()) {
			return new NilAtom();
		}]]></text>
  </DocumentChange>
  <Command __id="5346" _type="ShellCommand" date="Mon Nov 20 23:39:43 EST 2023" starttimestamp="1700516585068" timestamp="24998855" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5348" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:39:45 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25000547" />
  <Command __id="5349" _type="ShellCommand" date="Mon Nov 20 23:39:48 EST 2023" starttimestamp="1700516585068" timestamp="25003737" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5350" _type="ShellCommand" date="Mon Nov 20 23:39:49 EST 2023" starttimestamp="1700516585068" timestamp="25004834" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5351" _type="ShellCommand" date="Mon Nov 20 23:39:52 EST 2023" starttimestamp="1700516585068" timestamp="25007862" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5352" _type="ShellCommand" date="Mon Nov 20 23:40:09 EST 2023" starttimestamp="1700516585068" timestamp="25024429" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5353" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:40:09 EST 2023" starttimestamp="1700516585068" timestamp="25024463" />
  <Command __id="5354" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:40:09 EST 2023" starttimestamp="1700516585068" timestamp="25024475" />
  <Command __id="5356" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 23:40:09 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="25024580" />
  <Command __id="5358" _type="MoveCaretCommand" caretOffset="220" date="Mon Nov 20 23:40:10 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="25025600" />
  <Command __id="5359" _type="SelectTextCommand" caretOffset="16" date="Mon Nov 20 23:40:13 EST 2023" end="136" start="16" starttimestamp="1700516585068" timestamp="25028100" />
  <Command __id="5360" _type="SelectTextCommand" caretOffset="16" date="Mon Nov 20 23:40:13 EST 2023" end="136" start="16" starttimestamp="1700516585068" timestamp="25028100" />
  <Command __id="5361" _type="MoveCaretCommand" caretOffset="92" date="Mon Nov 20 23:40:13 EST 2023" docOffset="92" starttimestamp="1700516585068" timestamp="25028397" />
  <Command __id="5362" _type="MoveCaretCommand" caretOffset="92" date="Mon Nov 20 23:40:13 EST 2023" docOffset="92" starttimestamp="1700516585068" timestamp="25028397" />
  <Command __id="5363" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:40:14 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25029043" />
  <Command __id="5364" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:40:14 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25029043" />
  <Command __id="5365" _type="CopyCommand" date="Mon Nov 20 23:40:14 EST 2023" starttimestamp="1700516585068" timestamp="25029193" />
  <Command __id="5367" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 23:40:14 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="25029635" />
  <Command __id="5368" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 23:40:15 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="25030306" />
  <Command __id="5370" _type="InsertStringCommand" date="Mon Nov 20 23:40:16 EST 2023" starttimestamp="1700516585068" timestamp="25030987" timestamp2="25030987">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5372" _type="InsertStringCommand" date="Mon Nov 20 23:40:16 EST 2023" starttimestamp="1700516585068" timestamp="25031077" timestamp2="25031077">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5373" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Mon Nov 20 23:40:16 EST 2023" starttimestamp="1700516585068" timestamp="25031241" />
  <Command __id="5375" _type="PasteCommand" date="Mon Nov 20 23:40:16 EST 2023" starttimestamp="1700516585068" timestamp="25031414" />
  <Command __id="5376" _type="MoveCaretCommand" caretOffset="82" date="Mon Nov 20 23:40:17 EST 2023" docOffset="82" starttimestamp="1700516585068" timestamp="25032146" />
  <Command __id="5378" _type="InsertStringCommand" date="Mon Nov 20 23:40:17 EST 2023" starttimestamp="1700516585068" timestamp="25032870" timestamp2="25032870">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5380" _type="InsertStringCommand" date="Mon Nov 20 23:40:18 EST 2023" starttimestamp="1700516585068" timestamp="25032964" timestamp2="25032964">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5382" _type="InsertStringCommand" date="Mon Nov 20 23:40:18 EST 2023" starttimestamp="1700516585068" timestamp="25033508" timestamp2="25033508">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5384" _type="InsertStringCommand" date="Mon Nov 20 23:40:18 EST 2023" starttimestamp="1700516585068" timestamp="25033784" timestamp2="25033784">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5386" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:40:19 EST 2023" starttimestamp="1700516585068" timestamp="25034020" />
  <Command __id="5388" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:40:19 EST 2023" starttimestamp="1700516585068" timestamp="25034128" />
  <Command __id="5390" _type="InsertStringCommand" date="Mon Nov 20 23:40:19 EST 2023" starttimestamp="1700516585068" timestamp="25034312" timestamp2="25034312">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5392" _type="InsertStringCommand" date="Mon Nov 20 23:40:19 EST 2023" starttimestamp="1700516585068" timestamp="25034494" timestamp2="25034494">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5394" _type="InsertStringCommand" date="Mon Nov 20 23:40:19 EST 2023" starttimestamp="1700516585068" timestamp="25034660" timestamp2="25034660">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5396" _type="InsertStringCommand" date="Mon Nov 20 23:40:19 EST 2023" starttimestamp="1700516585068" timestamp="25034909" timestamp2="25034909">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5398" _type="InsertStringCommand" date="Mon Nov 20 23:40:20 EST 2023" starttimestamp="1700516585068" timestamp="25035000" timestamp2="25035000">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5400" _type="InsertStringCommand" date="Mon Nov 20 23:40:20 EST 2023" starttimestamp="1700516585068" timestamp="25035091" timestamp2="25035091">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5402" _type="InsertStringCommand" date="Mon Nov 20 23:40:20 EST 2023" starttimestamp="1700516585068" timestamp="25035192" timestamp2="25035192">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5404" _type="InsertStringCommand" date="Mon Nov 20 23:40:20 EST 2023" starttimestamp="1700516585068" timestamp="25035314" timestamp2="25035314">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5406" _type="InsertStringCommand" date="Mon Nov 20 23:40:20 EST 2023" starttimestamp="1700516585068" timestamp="25035735" timestamp2="25035735">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5408" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036096" timestamp2="25036096">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5410" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036294" timestamp2="25036294">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5412" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036349" timestamp2="25036349">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5414" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036453" timestamp2="25036453">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5416" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036561" timestamp2="25036561">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="5418" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036648" timestamp2="25036648">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5420" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036756" timestamp2="25036756">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5422" _type="InsertStringCommand" date="Mon Nov 20 23:40:21 EST 2023" starttimestamp="1700516585068" timestamp="25036873" timestamp2="25036873">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5424" _type="InsertStringCommand" date="Mon Nov 20 23:40:22 EST 2023" starttimestamp="1700516585068" timestamp="25036973" timestamp2="25036973">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5425" _type="ShellCommand" date="Mon Nov 20 23:40:23 EST 2023" starttimestamp="1700516585068" timestamp="25038760" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5426" _type="ShellCommand" date="Mon Nov 20 23:40:23 EST 2023" starttimestamp="1700516585068" timestamp="25038845" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5435" _type="MoveCaretCommand" caretOffset="198" date="Mon Nov 20 23:40:24 EST 2023" docOffset="198" starttimestamp="1700516585068" timestamp="25039538" />
  <Command __id="5436" _type="MoveCaretCommand" caretOffset="298" date="Mon Nov 20 23:40:24 EST 2023" docOffset="298" starttimestamp="1700516585068" timestamp="25039802" />
  <Command __id="5437" _type="MoveCaretCommand" caretOffset="298" date="Mon Nov 20 23:40:25 EST 2023" docOffset="298" starttimestamp="1700516585068" timestamp="25040071" />
  <Command __id="5438" _type="ShellCommand" date="Mon Nov 20 23:40:25 EST 2023" starttimestamp="1700516585068" timestamp="25040883" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5439" _type="ShellCommand" date="Mon Nov 20 23:40:26 EST 2023" starttimestamp="1700516585068" timestamp="25041135" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5440" _type="ShellCommand" date="Mon Nov 20 23:40:26 EST 2023" starttimestamp="1700516585068" timestamp="25041403" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5441" _type="ShellCommand" date="Mon Nov 20 23:40:31 EST 2023" starttimestamp="1700516585068" timestamp="25046445" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5442" _type="MoveCaretCommand" caretOffset="313" date="Mon Nov 20 23:40:33 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="25048750" />
  <Command __id="5443" _type="ShellCommand" date="Mon Nov 20 23:40:35 EST 2023" starttimestamp="1700516585068" timestamp="25050124" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5444" _type="ShellCommand" date="Mon Nov 20 23:40:57 EST 2023" starttimestamp="1700516585068" timestamp="25072715" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5347" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:39:45 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25000482">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5355" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:40:09 EST 2023" docASTNodeCount="6" docActiveCodeLength="48" docExpressionCount="2" docLength="48" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25024540">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class EvalEvaluator {

}
]]></snapshot>
  </Command>
  <Command __id="5357" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:40:10 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25025545">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5366" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:40:14 EST 2023" docASTNodeCount="6" docActiveCodeLength="48" docExpressionCount="2" docLength="48" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25029587">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;public class EvalEvaluator {}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5369" _type="Insert" date="Mon Nov 20 23:40:16 EST 2023" docASTNodeCount="14" docActiveCodeLength="87" docExpressionCount="9" docLength="87" length="39" offset="15" repeat="3" starttimestamp="1700516585068" timestamp="25030986" timestamp2="25031412">
    <text><![CDATA[
import main.lisp.evaluator.Evaluator;
]]></text>
  </DocumentChange>
  <DocumentChange __id="5377" _type="Insert" date="Mon Nov 20 23:40:17 EST 2023" docASTNodeCount="16" docActiveCodeLength="91" docExpressionCount="9" docLength="91" length="4" offset="82" repeat="4" starttimestamp="1700516585068" timestamp="25032869" timestamp2="25033783">
    <text><![CDATA[imol]]></text>
  </DocumentChange>
  <DocumentChange __id="5385" _type="Delete" date="Mon Nov 20 23:40:19 EST 2023" docASTNodeCount="16" docActiveCodeLength="89" docExpressionCount="9" docLength="89" endLine="4" length="2" offset="84" repeat="2" startLine="4" starttimestamp="1700516585068" timestamp="25034019" timestamp2="25034126">
    <text><![CDATA[ol]]></text>
  </DocumentChange>
  <DocumentChange __id="5389" _type="Insert" date="Mon Nov 20 23:40:19 EST 2023" docASTNodeCount="16" docActiveCodeLength="107" docExpressionCount="10" docLength="107" length="18" offset="84" repeat="18" starttimestamp="1700516585068" timestamp="25034311" timestamp2="25036973">
    <text><![CDATA[plements Evaluator]]></text>
  </DocumentChange>
  <DocumentChange __id="5427" _type="Insert" date="Mon Nov 20 23:40:23 EST 2023" docASTNodeCount="34" docActiveCodeLength="203" docExpressionCount="19" docLength="237" length="130" offset="103" repeat="4" starttimestamp="1700516585068" timestamp="25038859" timestamp2="25038860">
    <text><![CDATA[

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="5431" _type="Insert" date="Mon Nov 20 23:40:23 EST 2023" docASTNodeCount="44" docActiveCodeLength="246" docExpressionCount="28" docLength="280" length="43" offset="53" repeat="2" starttimestamp="1700516585068" timestamp="25038860" timestamp2="25038860">
    <text><![CDATA[
import main.lisp.parser.terms.SExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="5433" _type="Insert" date="Mon Nov 20 23:40:23 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" length="40" offset="16" repeat="2" starttimestamp="1700516585068" timestamp="25038860" timestamp2="25038860">
    <text><![CDATA[import main.lisp.evaluator.Environment;
]]></text>
  </DocumentChange>
  <Command __id="5445" _type="ShellCommand" date="Mon Nov 20 23:40:59 EST 2023" starttimestamp="1700516585068" timestamp="25074827" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5446" _type="ShellCommand" date="Mon Nov 20 23:41:00 EST 2023" starttimestamp="1700516585068" timestamp="25075115" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5447" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:01 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25076493">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5448" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:41:01 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25076544" />
  <Command __id="5449" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:02 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25077475">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		"), Diff(DELETE,"if(expr.getHead().isNIL()) {			return new NilAtom();		}		"), Diff(EQUAL,"return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;

public class ListEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="5450" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:41:02 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="25077519" />
  <Command __id="5451" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:03 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25078846">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5452" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:41:03 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25078913" />
  <Command __id="5453" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:06 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25081724">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5454" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 23:41:06 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="25081775" />
  <Command __id="5455" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:07 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25082033">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5456" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 23:41:07 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="25082080" />
  <Command __id="5457" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:07 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25082876">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5458" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:41:07 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25082926" />
  <Command __id="5459" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:09 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25084737">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5460" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:41:09 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="25084787" />
  <Command __id="5461" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:10 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25085094">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5462" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:41:10 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25085149" />
  <Command __id="5464" _type="MoveCaretCommand" caretOffset="313" date="Mon Nov 20 23:41:10 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="25085508" />
  <Command __id="5465" _type="ShellCommand" date="Mon Nov 20 23:41:11 EST 2023" starttimestamp="1700516585068" timestamp="25086508" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5466" _type="ShellCommand" date="Mon Nov 20 23:41:38 EST 2023" starttimestamp="1700516585068" timestamp="25113113" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5467" _type="ShellCommand" date="Mon Nov 20 23:41:40 EST 2023" starttimestamp="1700516585068" timestamp="25115306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5463" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:41:10 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25085457">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class EvalEvaluator {"), Diff(INSERT,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="5468" _type="ShellCommand" date="Mon Nov 20 23:41:55 EST 2023" starttimestamp="1700516585068" timestamp="25130728" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5469" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:42:03 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25138586">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5470" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:42:03 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25138644" />
  <Command __id="5471" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:42:05 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25140126">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5472" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:42:05 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25140176" />
  <Command __id="5474" _type="MoveCaretCommand" caretOffset="313" date="Mon Nov 20 23:42:07 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="25142113" />
  <Command __id="5475" _type="SelectTextCommand" caretOffset="301" date="Mon Nov 20 23:42:08 EST 2023" end="313" start="301" starttimestamp="1700516585068" timestamp="25143789" />
  <Command __id="5476" _type="SelectTextCommand" caretOffset="301" date="Mon Nov 20 23:42:10 EST 2023" end="313" start="301" starttimestamp="1700516585068" timestamp="25145542" />
  <Command __id="5477" _type="ShellCommand" date="Mon Nov 20 23:42:22 EST 2023" starttimestamp="1700516585068" timestamp="25157285" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5478" _type="ShellCommand" date="Mon Nov 20 23:42:55 EST 2023" starttimestamp="1700516585068" timestamp="25190788" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5479" _type="ShellCommand" date="Mon Nov 20 23:42:57 EST 2023" starttimestamp="1700516585068" timestamp="25191938" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5473" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:42:07 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25142069">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5480" _type="ShellCommand" date="Mon Nov 20 23:43:02 EST 2023" starttimestamp="1700516585068" timestamp="25197191" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5482" _type="MoveCaretCommand" caretOffset="375" date="Mon Nov 20 23:43:04 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="25199162" />
  <Command __id="5483" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 23:43:06 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="25201232" />
  <Command __id="5484" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 23:43:06 EST 2023" docOffset="301" starttimestamp="1700516585068" timestamp="25201232" />
  <Command __id="5485" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 23:43:06 EST 2023" docOffset="311" starttimestamp="1700516585068" timestamp="25201680" />
  <Command __id="5486" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 23:43:06 EST 2023" docOffset="311" starttimestamp="1700516585068" timestamp="25201680" />
  <Command __id="5481" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:43:04 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25199112">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5487" _type="SelectTextCommand" caretOffset="233" date="Mon Nov 20 23:43:08 EST 2023" end="496" start="233" starttimestamp="1700516585068" timestamp="25202974" />
  <Command __id="5488" _type="SelectTextCommand" caretOffset="233" date="Mon Nov 20 23:43:08 EST 2023" end="496" start="233" starttimestamp="1700516585068" timestamp="25202975" />
  <Command __id="5489" _type="CopyCommand" date="Mon Nov 20 23:43:08 EST 2023" starttimestamp="1700516585068" timestamp="25203177" />
  <Command __id="5490" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:43:12 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25207789">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5491" _type="SelectTextCommand" caretOffset="301" date="Mon Nov 20 23:43:12 EST 2023" end="313" start="301" starttimestamp="1700516585068" timestamp="25207847" />
  <Command __id="5492" _type="MoveCaretCommand" caretOffset="316" date="Mon Nov 20 23:43:13 EST 2023" docOffset="316" starttimestamp="1700516585068" timestamp="25208641" />
  <DocumentChange __id="5493" _type="Insert" date="Mon Nov 20 23:43:14 EST 2023" docASTNodeCount="52" docActiveCodeLength="290" docExpressionCount="35" docLength="324" length="4" offset="316" repeat="2" starttimestamp="1700516585068" timestamp="25209523" timestamp2="25210017">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="5494" _type="InsertStringCommand" date="Mon Nov 20 23:43:14 EST 2023" starttimestamp="1700516585068" timestamp="25209527" timestamp2="25209527">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5496" _type="InsertStringCommand" date="Mon Nov 20 23:43:15 EST 2023" starttimestamp="1700516585068" timestamp="25210020" timestamp2="25210020">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5500" _type="PasteCommand" date="Mon Nov 20 23:43:15 EST 2023" starttimestamp="1700516585068" timestamp="25210457" />
  <Command __id="5501" _type="MoveCaretCommand" caretOffset="391" date="Mon Nov 20 23:43:17 EST 2023" docOffset="391" starttimestamp="1700516585068" timestamp="25212189" />
  <Command __id="5502" _type="SelectTextCommand" caretOffset="404" date="Mon Nov 20 23:43:17 EST 2023" end="404" start="403" starttimestamp="1700516585068" timestamp="25212460" />
  <Command __id="5503" _type="MoveCaretCommand" caretOffset="416" date="Mon Nov 20 23:43:18 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="25213393" />
  <Command __id="5504" _type="MoveCaretCommand" caretOffset="422" date="Mon Nov 20 23:43:18 EST 2023" docOffset="422" starttimestamp="1700516585068" timestamp="25213657" />
  <Command __id="5505" _type="MoveCaretCommand" caretOffset="435" date="Mon Nov 20 23:43:19 EST 2023" docOffset="435" starttimestamp="1700516585068" timestamp="25213935" />
  <Command __id="5506" _type="MoveCaretCommand" caretOffset="416" date="Mon Nov 20 23:43:19 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="25214273" />
  <Command __id="5508" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:43:20 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25215066" />
  <Command __id="5510" _type="SelectTextCommand" caretOffset="233" date="Mon Nov 20 23:43:20 EST 2023" end="496" start="233" starttimestamp="1700516585068" timestamp="25215331" />
  <Command __id="5511" _type="MoveCaretCommand" caretOffset="232" date="Mon Nov 20 23:43:21 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="25216169" />
  <Command __id="5512" _type="MoveCaretCommand" caretOffset="232" date="Mon Nov 20 23:43:21 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="25216169" />
  <Command __id="5513" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:43:22 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="25217237" />
  <Command __id="5514" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:43:22 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="25217237" />
  <Command __id="5515" _type="CopyCommand" date="Mon Nov 20 23:43:22 EST 2023" starttimestamp="1700516585068" timestamp="25217414" />
  <Command __id="5517" _type="MoveCaretCommand" caretOffset="416" date="Mon Nov 20 23:43:23 EST 2023" docOffset="416" starttimestamp="1700516585068" timestamp="25217975" />
  <Command __id="5518" _type="SelectTextCommand" caretOffset="350" date="Mon Nov 20 23:43:24 EST 2023" end="362" start="350" starttimestamp="1700516585068" timestamp="25219432" />
  <Command __id="5520" _type="PasteCommand" date="Mon Nov 20 23:43:24 EST 2023" starttimestamp="1700516585068" timestamp="25219594" />
  <Command __id="5521" _type="MoveCaretCommand" caretOffset="378" date="Mon Nov 20 23:43:24 EST 2023" docOffset="378" starttimestamp="1700516585068" timestamp="25219785" />
  <Command __id="5522" _type="MoveCaretCommand" caretOffset="347" date="Mon Nov 20 23:43:25 EST 2023" docOffset="347" starttimestamp="1700516585068" timestamp="25220257" />
  <Command __id="5523" _type="InsertStringCommand" date="Mon Nov 20 23:43:25 EST 2023" starttimestamp="1700516585068" timestamp="25220479" timestamp2="25220479">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5525" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 23:43:25 EST 2023" starttimestamp="1700516585068" timestamp="25220791" />
  <Command __id="5526" _type="MoveCaretCommand" caretOffset="350" date="Mon Nov 20 23:43:26 EST 2023" docOffset="350" starttimestamp="1700516585068" timestamp="25221214" />
  <Command __id="5527" _type="MoveCaretCommand" caretOffset="288" date="Mon Nov 20 23:43:27 EST 2023" docOffset="288" starttimestamp="1700516585068" timestamp="25221948" />
  <Command __id="5528" _type="SelectTextCommand" caretOffset="289" date="Mon Nov 20 23:43:27 EST 2023" end="289" start="285" starttimestamp="1700516585068" timestamp="25222100" />
  <Command __id="5530" _type="InsertStringCommand" date="Mon Nov 20 23:43:27 EST 2023" starttimestamp="1700516585068" timestamp="25222322" timestamp2="25222322">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5532" _type="InsertStringCommand" date="Mon Nov 20 23:43:27 EST 2023" starttimestamp="1700516585068" timestamp="25222515" timestamp2="25222515">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5534" _type="InsertStringCommand" date="Mon Nov 20 23:43:27 EST 2023" starttimestamp="1700516585068" timestamp="25222725" timestamp2="25222725">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5536" _type="InsertStringCommand" date="Mon Nov 20 23:43:27 EST 2023" starttimestamp="1700516585068" timestamp="25222844" timestamp2="25222844">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5537" _type="MoveCaretCommand" caretOffset="346" date="Mon Nov 20 23:43:28 EST 2023" docOffset="346" starttimestamp="1700516585068" timestamp="25223565" />
  <Command __id="5538" _type="MoveCaretCommand" caretOffset="345" date="Mon Nov 20 23:43:28 EST 2023" docOffset="345" starttimestamp="1700516585068" timestamp="25223712" />
  <Command __id="5539" _type="InsertStringCommand" date="Mon Nov 20 23:43:28 EST 2023" starttimestamp="1700516585068" timestamp="25223765" timestamp2="25223765">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5540" _type="MoveCaretCommand" caretOffset="305" date="Mon Nov 20 23:43:29 EST 2023" docOffset="305" starttimestamp="1700516585068" timestamp="25224147" />
  <Command __id="5541" _type="SelectTextCommand" caretOffset="307" date="Mon Nov 20 23:43:29 EST 2023" end="307" start="303" starttimestamp="1700516585068" timestamp="25224294" />
  <Command __id="5543" _type="PasteCommand" date="Mon Nov 20 23:43:29 EST 2023" starttimestamp="1700516585068" timestamp="25224448" />
  <Command __id="5545" _type="UndoCommand" date="Mon Nov 20 23:43:30 EST 2023" starttimestamp="1700516585068" timestamp="25225230" />
  <Command __id="5546" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 23:43:30 EST 2023" docOffset="344" starttimestamp="1700516585068" timestamp="25225485" />
  <Command __id="5547" _type="SelectTextCommand" caretOffset="348" date="Mon Nov 20 23:43:30 EST 2023" end="348" start="337" starttimestamp="1700516585068" timestamp="25225626" />
  <Command __id="5548" _type="CopyCommand" date="Mon Nov 20 23:43:30 EST 2023" starttimestamp="1700516585068" timestamp="25225749" />
  <Command __id="5549" _type="MoveCaretCommand" caretOffset="306" date="Mon Nov 20 23:43:31 EST 2023" docOffset="306" starttimestamp="1700516585068" timestamp="25226049" />
  <Command __id="5550" _type="SelectTextCommand" caretOffset="307" date="Mon Nov 20 23:43:31 EST 2023" end="307" start="303" starttimestamp="1700516585068" timestamp="25226196" />
  <Command __id="5552" _type="PasteCommand" date="Mon Nov 20 23:43:31 EST 2023" starttimestamp="1700516585068" timestamp="25226287" />
  <Command __id="5553" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 23:43:31 EST 2023" docOffset="362" starttimestamp="1700516585068" timestamp="25226450" />
  <Command __id="5554" _type="MoveCaretCommand" caretOffset="467" date="Mon Nov 20 23:43:33 EST 2023" docOffset="467" starttimestamp="1700516585068" timestamp="25228030" />
  <Command __id="5555" _type="MoveCaretCommand" caretOffset="462" date="Mon Nov 20 23:43:34 EST 2023" docOffset="462" starttimestamp="1700516585068" timestamp="25229367" />
  <Command __id="5556" _type="MoveCaretCommand" caretOffset="463" date="Mon Nov 20 23:43:34 EST 2023" docOffset="463" starttimestamp="1700516585068" timestamp="25229529" />
  <Command __id="5557" _type="MoveCaretCommand" caretOffset="460" date="Mon Nov 20 23:43:35 EST 2023" docOffset="460" starttimestamp="1700516585068" timestamp="25230003" />
  <Command __id="5558" _type="SelectTextCommand" caretOffset="462" date="Mon Nov 20 23:43:35 EST 2023" end="462" start="456" starttimestamp="1700516585068" timestamp="25230146" />
  <Command __id="5559" _type="MoveCaretCommand" caretOffset="464" date="Mon Nov 20 23:43:35 EST 2023" docOffset="464" starttimestamp="1700516585068" timestamp="25230470" />
  <Command __id="5560" _type="SelectTextCommand" caretOffset="455" date="Mon Nov 20 23:43:39 EST 2023" end="464" start="455" starttimestamp="1700516585068" timestamp="25234927" />
  <Command __id="5561" _type="MoveCaretCommand" caretOffset="467" date="Mon Nov 20 23:43:40 EST 2023" docOffset="467" starttimestamp="1700516585068" timestamp="25235181" />
  <Command __id="5562" _type="ShellCommand" date="Mon Nov 20 23:43:40 EST 2023" starttimestamp="1700516585068" timestamp="25235444" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5563" _type="ShellCommand" date="Mon Nov 20 23:43:45 EST 2023" starttimestamp="1700516585068" timestamp="25240136" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5564" _type="MoveCaretCommand" caretOffset="467" date="Mon Nov 20 23:43:46 EST 2023" docOffset="467" starttimestamp="1700516585068" timestamp="25241173" />
  <Command __id="5565" _type="ShellCommand" date="Mon Nov 20 23:43:51 EST 2023" starttimestamp="1700516585068" timestamp="25246062" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5566" _type="ShellCommand" date="Mon Nov 20 23:44:33 EST 2023" starttimestamp="1700516585068" timestamp="25288413" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5567" _type="ShellCommand" date="Mon Nov 20 23:44:38 EST 2023" starttimestamp="1700516585068" timestamp="25293268" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5568" _type="ShellCommand" date="Mon Nov 20 23:46:38 EST 2023" starttimestamp="1700516585068" timestamp="25412980" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5569" _type="ShellCommand" date="Mon Nov 20 23:46:41 EST 2023" starttimestamp="1700516585068" timestamp="25416233" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5570" _type="ShellCommand" date="Mon Nov 20 23:46:43 EST 2023" starttimestamp="1700516585068" timestamp="25418049" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5571" _type="MoveCaretCommand" caretOffset="287" date="Mon Nov 20 23:46:44 EST 2023" docOffset="287" starttimestamp="1700516585068" timestamp="25419195" />
  <Command __id="5572" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 23:46:46 EST 2023" docOffset="362" starttimestamp="1700516585068" timestamp="25421010" />
  <Command __id="5573" _type="MoveCaretCommand" caretOffset="467" date="Mon Nov 20 23:46:47 EST 2023" docOffset="467" starttimestamp="1700516585068" timestamp="25422078" />
  <Command __id="5574" _type="ShellCommand" date="Mon Nov 20 23:46:54 EST 2023" starttimestamp="1700516585068" timestamp="25428933" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5575" _type="ShellCommand" date="Mon Nov 20 23:47:14 EST 2023" starttimestamp="1700516585068" timestamp="25449674" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5576" _type="MoveCaretCommand" caretOffset="479" date="Mon Nov 20 23:47:19 EST 2023" docOffset="479" starttimestamp="1700516585068" timestamp="25454771" />
  <DocumentChange __id="5497" _type="Replace" date="Mon Nov 20 23:43:15 EST 2023" docASTNodeCount="93" docActiveCodeLength="552" docExpressionCount="63" docLength="586" endLine="14" insertionLength="263" int_docASTNodeCount="52" int_docActiveCodeLength="289" int_docExpressionCount="35" int_docLength="323" length="1" offset="319" startLine="14" starttimestamp="1700516585068" timestamp="25210405">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5498" _type="Insert" date="Mon Nov 20 23:43:15 EST 2023" docASTNodeCount="103" docActiveCodeLength="601" docExpressionCount="72" docLength="635" length="49" offset="93" repeat="2" starttimestamp="1700516585068" timestamp="25210438" timestamp2="25210438">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <Command __id="5507" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:43:20 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25215016">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5509" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:43:20 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25215285">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5516" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:43:22 EST 2023" docASTNodeCount="103" docActiveCodeLength="601" docExpressionCount="72" docLength="635" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25217914">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;"), Diff(INSERT,"import main.lisp.parser.terms.ExpressionFactory;"), Diff(EQUAL,"import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {		// TODO Auto-generated method stub		return null;	}"), Diff(INSERT,"		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5519" _type="Replace" date="Mon Nov 20 23:43:24 EST 2023" docASTNodeCount="106" docActiveCodeLength="626" docExpressionCount="75" docLength="660" endLine="12" insertionLength="39" int_docASTNodeCount="101" int_docActiveCodeLength="587" int_docExpressionCount="71" int_docLength="621" length="14" offset="348" startLine="12" starttimestamp="1700516585068" timestamp="25219592">
    <deletedText><![CDATA[		return null;]]></deletedText>
    <insertedText><![CDATA[		return evalHelper(expr, environment);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5524" _type="Delete" date="Mon Nov 20 23:43:25 EST 2023" docASTNodeCount="106" docActiveCodeLength="623" docExpressionCount="75" docLength="623" endLine="12" length="37" offset="311" startLine="11" starttimestamp="1700516585068" timestamp="25220788">
    <text><![CDATA[		// TODO Auto-generated method stub
]]></text>
  </DocumentChange>
  <DocumentChange __id="5529" _type="Replace" date="Mon Nov 20 23:43:27 EST 2023" docASTNodeCount="106" docActiveCodeLength="620" docExpressionCount="75" docLength="620" endLine="10" insertionLength="1" int_docASTNodeCount="93" int_docActiveCodeLength="619" int_docExpressionCount="67" int_docLength="619" length="4" offset="285" startLine="10" starttimestamp="1700516585068" timestamp="25222318">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5531" _type="Insert" date="Mon Nov 20 23:43:27 EST 2023" docASTNodeCount="106" docActiveCodeLength="623" docExpressionCount="75" docLength="623" length="3" offset="286" repeat="3" starttimestamp="1700516585068" timestamp="25222512" timestamp2="25222842">
    <text><![CDATA[xpr]]></text>
  </DocumentChange>
  <DocumentChange __id="5542" _type="Replace" date="Mon Nov 20 23:43:29 EST 2023" docASTNodeCount="97" docActiveCodeLength="656" docExpressionCount="69" docLength="656" endLine="10" insertionLength="37" int_docASTNodeCount="97" int_docActiveCodeLength="619" int_docExpressionCount="69" int_docLength="619" length="4" offset="303" startLine="10" starttimestamp="1700516585068" timestamp="25224443">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[return evalHelper(expr, environment);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5544" _type="Replace" date="Mon Nov 20 23:43:30 EST 2023" docASTNodeCount="106" docActiveCodeLength="623" docExpressionCount="75" docLength="623" endLine="10" insertionLength="4" int_docASTNodeCount="97" int_docActiveCodeLength="619" int_docExpressionCount="69" int_docLength="619" length="37" offset="303" startLine="10" starttimestamp="1700516585068" timestamp="25225228">
    <deletedText><![CDATA[return evalHelper(expr, environment);]]></deletedText>
    <insertedText><![CDATA[arg1]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5551" _type="Replace" date="Mon Nov 20 23:43:31 EST 2023" docASTNodeCount="106" docActiveCodeLength="630" docExpressionCount="75" docLength="630" endLine="10" insertionLength="11" int_docASTNodeCount="97" int_docActiveCodeLength="619" int_docExpressionCount="69" int_docLength="619" length="4" offset="303" startLine="10" starttimestamp="1700516585068" timestamp="25226285">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <Command __id="5579" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:47:27 EST 2023" projectName="null" starttimestamp="1700516585068" timestamp="25462891">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5577" _type="MoveCaretCommand" caretOffset="480" date="Mon Nov 20 23:47:26 EST 2023" docOffset="480" starttimestamp="1700516585068" timestamp="25461434" />
  <Command __id="5578" _type="MoveCaretCommand" caretOffset="467" date="Mon Nov 20 23:47:27 EST 2023" docOffset="467" starttimestamp="1700516585068" timestamp="25462238" />
  <Command __id="5580" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 23:47:28 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="25462949" />
  <Command __id="5582" _type="MoveCaretCommand" caretOffset="486" date="Mon Nov 20 23:47:29 EST 2023" docOffset="486" starttimestamp="1700516585068" timestamp="25464383" />
  <Command __id="5583" _type="ShellCommand" date="Mon Nov 20 23:47:30 EST 2023" starttimestamp="1700516585068" timestamp="25465610" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5584" _type="ShellCommand" date="Mon Nov 20 23:47:56 EST 2023" starttimestamp="1700516585068" timestamp="25491623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5585" _type="MoveCaretCommand" caretOffset="385" date="Mon Nov 20 23:47:58 EST 2023" docOffset="385" starttimestamp="1700516585068" timestamp="25493572" />
  <Command __id="5586" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 23:47:59 EST 2023" docOffset="403" starttimestamp="1700516585068" timestamp="25494074" />
  <Command __id="5587" _type="SelectTextCommand" caretOffset="412" date="Mon Nov 20 23:47:59 EST 2023" end="412" start="401" starttimestamp="1700516585068" timestamp="25494241" />
  <Command __id="5588" _type="MoveCaretCommand" caretOffset="382" date="Mon Nov 20 23:47:59 EST 2023" docOffset="382" starttimestamp="1700516585068" timestamp="25494821" />
  <Command __id="5589" _type="SelectTextCommand" caretOffset="389" date="Mon Nov 20 23:48:00 EST 2023" end="389" start="378" starttimestamp="1700516585068" timestamp="25494970" />
  <Command __id="5590" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 23:48:01 EST 2023" docOffset="362" starttimestamp="1700516585068" timestamp="25496588" />
  <Command __id="5591" _type="ShellCommand" date="Mon Nov 20 23:48:02 EST 2023" starttimestamp="1700516585068" timestamp="25496960" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5592" _type="ShellCommand" date="Mon Nov 20 23:48:55 EST 2023" starttimestamp="1700516585068" timestamp="25550703" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5593" _type="SelectTextCommand" caretOffset="327" date="Mon Nov 20 23:49:30 EST 2023" end="357" start="327" starttimestamp="1700516585068" timestamp="25585480" />
  <Command __id="5594" _type="MoveCaretCommand" caretOffset="327" date="Mon Nov 20 23:49:30 EST 2023" docOffset="327" starttimestamp="1700516585068" timestamp="25585561" />
  <Command __id="5595" _type="MoveCaretCommand" caretOffset="357" date="Mon Nov 20 23:49:31 EST 2023" docOffset="357" starttimestamp="1700516585068" timestamp="25586518" />
  <Command __id="5596" _type="SelectTextCommand" caretOffset="327" date="Mon Nov 20 23:49:34 EST 2023" end="357" start="327" starttimestamp="1700516585068" timestamp="25589142" />
  <Command __id="5597" _type="MoveCaretCommand" caretOffset="445" date="Mon Nov 20 23:49:38 EST 2023" docOffset="445" starttimestamp="1700516585068" timestamp="25593626" />
  <Command __id="5598" _type="SelectTextCommand" caretOffset="363" date="Mon Nov 20 23:49:39 EST 2023" end="626" start="363" starttimestamp="1700516585068" timestamp="25594735" />
  <Command __id="5599" _type="MoveCaretCommand" caretOffset="357" date="Mon Nov 20 23:49:41 EST 2023" docOffset="357" starttimestamp="1700516585068" timestamp="25596066" />
  <Command __id="5600" _type="SelectTextCommand" caretOffset="327" date="Mon Nov 20 23:49:42 EST 2023" end="357" start="327" starttimestamp="1700516585068" timestamp="25597431" />
  <Command __id="5601" _type="InsertStringCommand" date="Mon Nov 20 23:49:42 EST 2023" starttimestamp="1700516585068" timestamp="25597841" timestamp2="25597841">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5602" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598066" timestamp2="25598066">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5603" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598295" timestamp2="25598295">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5604" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598413" timestamp2="25598413">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5605" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598501" timestamp2="25598501">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5606" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598670" timestamp2="25598670">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5607" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598746" timestamp2="25598746">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5608" _type="InsertStringCommand" date="Mon Nov 20 23:49:43 EST 2023" starttimestamp="1700516585068" timestamp="25598872" timestamp2="25598872">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5609" _type="InsertStringCommand" date="Mon Nov 20 23:49:44 EST 2023" starttimestamp="1700516585068" timestamp="25599220" timestamp2="25599220">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="5610" _type="InsertStringCommand" date="Mon Nov 20 23:49:44 EST 2023" starttimestamp="1700516585068" timestamp="25599603" timestamp2="25599603">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5611" _type="InsertStringCommand" date="Mon Nov 20 23:49:44 EST 2023" starttimestamp="1700516585068" timestamp="25599824" timestamp2="25599824">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5612" _type="InsertStringCommand" date="Mon Nov 20 23:49:45 EST 2023" starttimestamp="1700516585068" timestamp="25600369" timestamp2="25600369">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5613" _type="InsertStringCommand" date="Mon Nov 20 23:49:46 EST 2023" starttimestamp="1700516585068" timestamp="25601139" timestamp2="25601139">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5614" _type="InsertStringCommand" date="Mon Nov 20 23:49:46 EST 2023" starttimestamp="1700516585068" timestamp="25601411" timestamp2="25601411">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5615" _type="InsertStringCommand" date="Mon Nov 20 23:49:47 EST 2023" starttimestamp="1700516585068" timestamp="25602060" timestamp2="25602060">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5622" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:49:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25607824" type="Run" />
  <Command __id="5623" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:49:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25607824" type="Run" />
  <Command __id="5624" _type="ShellCommand" date="Mon Nov 20 23:49:53 EST 2023" starttimestamp="1700516585068" timestamp="25608125" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5625" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611724" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5626" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611725" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5627" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611731" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5628" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611732" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5629" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611732" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5630" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611734" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5631" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611749" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5632" _type="ExceptionCommand" date="Mon Nov 20 23:49:56 EST 2023" starttimestamp="1700516585068" timestamp="25611751" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'EVAL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5633" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611751" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5634" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611756" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at org.junit.runners."), Diff(DELETE,"model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at org.junit."), Diff(DELETE,"internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(I"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.i"), Diff(EQUAL,"nvoke"), Diff(INSERT,"("), Diff(EQUAL,"Method.java:"), Diff(DELETE,"17"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"270"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"78"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"57"), Diff(INSERT,"69"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5635" _type="ExceptionCommand" date="Mon Nov 20 23:49:56 EST 2023" starttimestamp="1700516585068" timestamp="25611759" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5636" _type="ConsoleOutput" date="Mon Nov 20 23:49:56 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25611761" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)"), Diff(INSERT,"Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5637" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613954" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to CONS try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Error finding call to CONS try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Loa"), Diff(INSERT,"ConsTeste"), Diff(EQUAL,"dChecker,0.0% complete,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"Index -1 out of bounds for length 0"), Diff(INSERT,"Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5638" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613958" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to LIST try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to EVAL try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Error finding call to "), Diff(DELETE,"CONS"), Diff(INSERT,"LIST"), Diff(EQUAL," try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to "), Diff(DELETE,"QUOTE"), Diff(INSERT,"EVAL"), Diff(EQUAL," try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="5639" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613959" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Error finding call to "), Diff(DELETE,"LIST"), Diff(INSERT,"COND"), Diff(EQUAL," try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶"), Diff(INSERT,""), Diff(EQUAL,"Test execution time (ms):1¶"), Diff(DELETE,"Test Result:ListTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to EVAL try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1¶Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶")]]]></diff>
  </Command>
  <Command __id="5640" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613960" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):1"), Diff(INSERT,"Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5641" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613960" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5642" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613961" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file two results of CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5643" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613962" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of CONS"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5644" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613963" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE¶¶"), Diff(EQUAL,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="5645" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613964" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of "), Diff(DELETE,"QUOTE¶¶¶Test execution time (ms):0"), Diff(INSERT,"LIST"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5646" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613965" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of LIST"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5647" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613966" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of EVAL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5648" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613967" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file two results of EVAL"), Diff(INSERT,"on time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5649" _type="ConsoleOutput" date="Mon Nov 20 23:49:59 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25613967" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5657" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:50:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25620517" type="Run" />
  <Command __id="5658" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:50:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25620517" type="Run" />
  <Command __id="5659" _type="ShellCommand" date="Mon Nov 20 23:50:05 EST 2023" starttimestamp="1700516585068" timestamp="25620829" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5660" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626140" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file 3 or more results of CONDwith 3 or more cases"), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5661" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626141" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5662" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626146" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5663" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626147" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5664" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626148" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5665" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626149" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5666" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626164" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5667" _type="ExceptionCommand" date="Mon Nov 20 23:50:11 EST 2023" starttimestamp="1700516585068" timestamp="25626166" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'EVAL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5668" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626167" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5669" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626170" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at gradingTools.comp524f19.assignment1.testcases."), Diff(INSERT,"load."), Diff(EQUAL,"Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.test(Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.java:4"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶"), Diff(DELETE,""), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶"), Diff(INSERT,"	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶")]]]></diff>
  </Command>
  <Command __id="5670" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626191" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶"), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"GradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:5"), Diff(DELETE,"2"), Diff(INSERT,"66"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"190"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"43"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"71"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"85"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5671" _type="ConsoleOutput" date="Mon Nov 20 23:50:11 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25626198" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):32
Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0


Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):33
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶"), Diff(EQUAL,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶"), Diff(INSERT,"	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):32¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):33¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶")]]]></diff>
  </Command>
  <Command __id="5581" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:47:29 EST 2023" docASTNodeCount="106" docActiveCodeLength="630" docExpressionCount="75" docLength="630" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25464333">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1) {		// TODO Auto-generated method stub		return null"), Diff(INSERT,"environment) {		return evalHelper(expr, environment)"), Diff(EQUAL,";	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="5674" _type="LocalChecksRawCommand" date="Mon Nov 20 23:50:21 EST 2023" starttimestamp="1700516585068" timestamp="25636088">
    <CSVRow><![CDATA[120,Mon Nov 20 23:50:11 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,66,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5675" _type="LocalChecksRawCommand" date="Mon Nov 20 23:50:21 EST 2023" starttimestamp="1700516585068" timestamp="25636088">
    <CSVRow><![CDATA[120,Mon Nov 20 23:50:11 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,66,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5676" _type="MoveCaretCommand" caretOffset="506" date="Mon Nov 20 23:50:21 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="25636126" />
  <Command __id="5677" _type="MoveCaretCommand" caretOffset="518" date="Mon Nov 20 23:50:22 EST 2023" docOffset="518" starttimestamp="1700516585068" timestamp="25637291" />
  <Command __id="5678" _type="MoveCaretCommand" caretOffset="518" date="Mon Nov 20 23:50:22 EST 2023" docOffset="518" starttimestamp="1700516585068" timestamp="25637291" />
  <Command __id="5679" _type="SelectTextCommand" caretOffset="427" date="Mon Nov 20 23:50:24 EST 2023" end="518" start="427" starttimestamp="1700516585068" timestamp="25639371" />
  <Command __id="5680" _type="SelectTextCommand" caretOffset="427" date="Mon Nov 20 23:50:24 EST 2023" end="518" start="427" starttimestamp="1700516585068" timestamp="25639371" />
  <Command __id="5681" _type="CopyCommand" date="Mon Nov 20 23:50:24 EST 2023" starttimestamp="1700516585068" timestamp="25639529" />
  <Command __id="5682" _type="MoveCaretCommand" caretOffset="518" date="Mon Nov 20 23:50:24 EST 2023" docOffset="518" starttimestamp="1700516585068" timestamp="25639921" />
  <Command __id="5683" _type="MoveCaretCommand" caretOffset="518" date="Mon Nov 20 23:50:24 EST 2023" docOffset="518" starttimestamp="1700516585068" timestamp="25639921" />
  <Command __id="5685" _type="InsertStringCommand" date="Mon Nov 20 23:50:25 EST 2023" starttimestamp="1700516585068" timestamp="25640525" timestamp2="25640525">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5686" _type="InsertStringCommand" date="Mon Nov 20 23:50:25 EST 2023" starttimestamp="1700516585068" timestamp="25640525" timestamp2="25640525">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5688" _type="PasteCommand" date="Mon Nov 20 23:50:25 EST 2023" starttimestamp="1700516585068" timestamp="25640706" />
  <Command __id="5689" _type="MoveCaretCommand" caretOffset="606" date="Mon Nov 20 23:50:26 EST 2023" docOffset="606" starttimestamp="1700516585068" timestamp="25641711" />
  <Command __id="5690" _type="MoveCaretCommand" caretOffset="606" date="Mon Nov 20 23:50:26 EST 2023" docOffset="606" starttimestamp="1700516585068" timestamp="25641712" />
  <Command __id="5691" _type="SelectTextCommand" caretOffset="608" date="Mon Nov 20 23:50:26 EST 2023" end="608" start="595" starttimestamp="1700516585068" timestamp="25641850" />
  <Command __id="5692" _type="SelectTextCommand" caretOffset="608" date="Mon Nov 20 23:50:26 EST 2023" end="608" start="595" starttimestamp="1700516585068" timestamp="25641850" />
  <Command __id="5694" _type="MoveCaretCommand" caretOffset="363" date="Mon Nov 20 23:50:27 EST 2023" docOffset="363" starttimestamp="1700516585068" timestamp="25642709" />
  <Command __id="5673" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:21 EST 2023" docASTNodeCount="70" docActiveCodeLength="599" docExpressionCount="47" docLength="599" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25636086">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5684" _type="Insert" date="Mon Nov 20 23:50:25 EST 2023" docASTNodeCount="70" docActiveCodeLength="602" docExpressionCount="47" docLength="602" length="3" offset="518" starttimestamp="1700516585068" timestamp="25640520">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="5687" _type="Replace" date="Mon Nov 20 23:50:25 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" endLine="11" insertionLength="93" int_docASTNodeCount="70" int_docActiveCodeLength="600" int_docExpressionCount="47" int_docLength="600" length="2" offset="519" startLine="11" starttimestamp="1700516585068" timestamp="25640703">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());]]></insertedText>
  </DocumentChange>
  <Command __id="5693" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:27 EST 2023" docASTNodeCount="67" docActiveCodeLength="376" docExpressionCount="49" docLength="647" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25642654">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return e"), Diff(DELETE,"valHelper(expr, "), Diff(INSERT,"xpr.getTail().eval("), Diff(EQUAL,"environment);	}	"), Diff(INSERT,"//"), Diff(EQUAL,"	public static SExpression evalHelper(SExpression expr, Environment environment) {"), Diff(INSERT,"//"), Diff(EQUAL,"		if(expr.isAtom()) {"), Diff(INSERT,"//"), Diff(EQUAL,"			return expr.eval(environment);"), Diff(INSERT,"//"), Diff(EQUAL,"		}"), Diff(INSERT,"//"), Diff(EQUAL,"		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));"), Diff(INSERT,"//"), Diff(EQUAL,"		"), Diff(INSERT,"//"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail().eval(environment);
	}
	
//	public static SExpression evalHelper(SExpression expr, Environment environment) {
//		if(expr.isAtom()) {
//			return expr.eval(environment);
//		}
//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
//		
//	}

}
]]></snapshot>
  </Command>
  <Command __id="5700" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:29 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25644647">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	"), Diff(INSERT,"	BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());	"), Diff(EQUAL,"}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5704" _type="Replace" date="Mon Nov 20 23:50:30 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" endLine="11" insertionLength="13" int_docASTNodeCount="70" int_docActiveCodeLength="680" int_docExpressionCount="47" int_docLength="680" length="13" offset="595" startLine="11" starttimestamp="1700516585068" timestamp="25645556">
    <deletedText><![CDATA[LoadEvaluator]]></deletedText>
    <insertedText><![CDATA[EvalEvaluator]]></insertedText>
  </DocumentChange>
  <Command __id="5711" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:34 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25649640">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5695" _type="MoveCaretCommand" caretOffset="207" date="Mon Nov 20 23:50:28 EST 2023" docOffset="207" starttimestamp="1700516585068" timestamp="25643926" />
  <Command __id="5696" _type="MoveCaretCommand" caretOffset="207" date="Mon Nov 20 23:50:28 EST 2023" docOffset="207" starttimestamp="1700516585068" timestamp="25643926" />
  <Command __id="5697" _type="SelectTextCommand" caretOffset="213" date="Mon Nov 20 23:50:29 EST 2023" end="213" start="200" starttimestamp="1700516585068" timestamp="25644065" />
  <Command __id="5698" _type="SelectTextCommand" caretOffset="213" date="Mon Nov 20 23:50:29 EST 2023" end="213" start="200" starttimestamp="1700516585068" timestamp="25644065" />
  <Command __id="5699" _type="CopyCommand" date="Mon Nov 20 23:50:29 EST 2023" starttimestamp="1700516585068" timestamp="25644255" />
  <Command __id="5701" _type="SelectTextCommand" caretOffset="608" date="Mon Nov 20 23:50:29 EST 2023" end="608" start="595" starttimestamp="1700516585068" timestamp="25644691" />
  <Command __id="5702" _type="MoveCaretCommand" caretOffset="604" date="Mon Nov 20 23:50:30 EST 2023" docOffset="604" starttimestamp="1700516585068" timestamp="25645267" />
  <Command __id="5703" _type="MoveCaretCommand" caretOffset="604" date="Mon Nov 20 23:50:30 EST 2023" docOffset="604" starttimestamp="1700516585068" timestamp="25645267" />
  <Command __id="5705" _type="PasteCommand" date="Mon Nov 20 23:50:30 EST 2023" starttimestamp="1700516585068" timestamp="25645559" />
  <Command __id="5706" _type="MoveCaretCommand" caretOffset="612" date="Mon Nov 20 23:50:30 EST 2023" docOffset="612" starttimestamp="1700516585068" timestamp="25645770" />
  <Command __id="5707" _type="MoveCaretCommand" caretOffset="612" date="Mon Nov 20 23:50:30 EST 2023" docOffset="612" starttimestamp="1700516585068" timestamp="25645770" />
  <Command __id="5708" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:50:31 EST 2023" starttimestamp="1700516585068" timestamp="25646392" />
  <Command __id="5709" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:50:31 EST 2023" starttimestamp="1700516585068" timestamp="25646490" />
  <Command __id="5710" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:50:31 EST 2023" starttimestamp="1700516585068" timestamp="25646497" />
  <Command __id="5712" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:50:34 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25649689" />
  <Command __id="5714" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:50:38 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25653043" />
  <Command __id="5716" _type="MoveCaretCommand" caretOffset="612" date="Mon Nov 20 23:50:38 EST 2023" docOffset="612" starttimestamp="1700516585068" timestamp="25653292" />
  <Command __id="5718" _type="MoveCaretCommand" caretOffset="1373" date="Mon Nov 20 23:50:39 EST 2023" docOffset="1502" starttimestamp="1700516585068" timestamp="25654264" />
  <Command __id="5713" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:38 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25652996">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5715" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:38 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25653258">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new "), Diff(DELETE,"Load"), Diff(INSERT,"Eval"), Diff(EQUAL,"Evaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new EvalEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="5717" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:50:39 EST 2023" docASTNodeCount="256" docActiveCodeLength="1645" docExpressionCount="123" docLength="2155" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25654218">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5723" _type="Replace" date="Mon Nov 20 23:50:43 EST 2023" docASTNodeCount="256" docActiveCodeLength="1654" docExpressionCount="123" docLength="2164" endLine="30" insertionLength="13" int_docASTNodeCount="255" int_docActiveCodeLength="1641" int_docExpressionCount="122" int_docLength="2151" length="4" offset="735" startLine="30" starttimestamp="1700516585068" timestamp="25658591">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[EvalEvaluator]]></insertedText>
  </DocumentChange>
  <Command __id="5740" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:50:48 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25663032" type="Run" />
  <Command __id="5741" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:50:48 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25663033" type="Run" />
  <Command __id="5742" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:50:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25663917" type="Run" />
  <Command __id="5743" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:50:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25663924" type="Run" />
  <Command __id="5744" _type="ShellCommand" date="Mon Nov 20 23:50:49 EST 2023" starttimestamp="1700516585068" timestamp="25664219" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5745" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669666" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):32¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0¶¶¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):33¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5746" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669666" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5747" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669673" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):5¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="5748" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669674" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5749" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669674" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5750" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669692" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5751" _type="ExceptionCommand" date="Mon Nov 20 23:50:54 EST 2023" starttimestamp="1700516585068" timestamp="25669693" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'EVAL'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5752" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669694" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5753" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669694" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶"), Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶")]]]></diff>
  </Command>
  <Command __id="5754" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669697" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRun"), Diff(EQUAL,"GradableJUnit"), Diff(DELETE,"Test(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:7"), Diff(INSERT,"Suite.open(AGradableJUnitSuite.java:19"), Diff(EQUAL,"1)¶")]]]></diff>
  </Command>
  <Command __id="5755" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669708" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"1"), Diff(EQUAL,"58"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.jun"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.secur"), Diff(EQUAL,"it"), Diff(INSERT,"y"), Diff(EQUAL,".A"), Diff(DELETE,"GradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"ccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5756" _type="ConsoleOutput" date="Mon Nov 20 23:50:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25669710" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶"), Diff(DELETE,"	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0¶")]]]></diff>
  </Command>
  <DocumentChange __id="5725" _type="Insert" date="Mon Nov 20 23:50:44 EST 2023" docASTNodeCount="258" docActiveCodeLength="1660" docExpressionCount="124" docLength="2170" length="6" offset="748" repeat="6" starttimestamp="1700516585068" timestamp="25659833" timestamp2="25660358">
    <text><![CDATA[.class]]></text>
  </DocumentChange>
  <Command __id="5757" _type="ShellCommand" date="Mon Nov 20 23:50:57 EST 2023" starttimestamp="1700516585068" timestamp="25672156" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5758" _type="LocalChecksRawCommand" date="Mon Nov 20 23:50:57 EST 2023" starttimestamp="1700516585068" timestamp="25672159">
    <CSVRow><![CDATA[121,Mon Nov 20 23:50:54 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,67,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5759" _type="LocalChecksRawCommand" date="Mon Nov 20 23:50:57 EST 2023" starttimestamp="1700516585068" timestamp="25672159">
    <CSVRow><![CDATA[121,Mon Nov 20 23:50:54 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,67,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5760" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:51:05 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25680371">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5761" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:51:05 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25680412" />
  <Command __id="5762" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:51:05 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25680835">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5763" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:51:05 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="25680871" />
  <Command __id="5764" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:51:06 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25681593">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5765" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:51:06 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25681639" />
  <Command __id="5767" _type="MoveCaretCommand" caretOffset="612" date="Mon Nov 20 23:51:07 EST 2023" docOffset="612" starttimestamp="1700516585068" timestamp="25682170" />
  <Command __id="5768" _type="MoveCaretCommand" caretOffset="601" date="Mon Nov 20 23:51:10 EST 2023" docOffset="601" starttimestamp="1700516585068" timestamp="25685861" />
  <Command __id="5769" _type="MoveCaretCommand" caretOffset="601" date="Mon Nov 20 23:51:10 EST 2023" docOffset="601" starttimestamp="1700516585068" timestamp="25685861" />
  <Command __id="5770" _type="SelectTextCommand" caretOffset="608" date="Mon Nov 20 23:51:11 EST 2023" end="608" start="595" starttimestamp="1700516585068" timestamp="25685990" />
  <Command __id="5771" _type="SelectTextCommand" caretOffset="608" date="Mon Nov 20 23:51:11 EST 2023" end="608" start="595" starttimestamp="1700516585068" timestamp="25685990" />
  <Command __id="5772" _type="MoveCaretCommand" caretOffset="587" date="Mon Nov 20 23:51:11 EST 2023" docOffset="587" starttimestamp="1700516585068" timestamp="25686766" />
  <Command __id="5773" _type="MoveCaretCommand" caretOffset="587" date="Mon Nov 20 23:51:11 EST 2023" docOffset="587" starttimestamp="1700516585068" timestamp="25686766" />
  <Command __id="5774" _type="SelectTextCommand" caretOffset="588" date="Mon Nov 20 23:51:11 EST 2023" end="588" start="584" starttimestamp="1700516585068" timestamp="25686923" />
  <Command __id="5775" _type="SelectTextCommand" caretOffset="588" date="Mon Nov 20 23:51:11 EST 2023" end="588" start="584" starttimestamp="1700516585068" timestamp="25686923" />
  <Command __id="5777" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687700" timestamp2="25687700">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5778" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687700" timestamp2="25687700">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5780" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687777" timestamp2="25687777">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5781" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687777" timestamp2="25687777">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5783" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687837" timestamp2="25687837">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5784" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687837" timestamp2="25687837">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5786" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687911" timestamp2="25687911">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5787" _type="InsertStringCommand" date="Mon Nov 20 23:51:12 EST 2023" starttimestamp="1700516585068" timestamp="25687911" timestamp2="25687911">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5788" _type="MoveCaretCommand" caretOffset="617" date="Mon Nov 20 23:51:14 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="25689450" />
  <Command __id="5789" _type="MoveCaretCommand" caretOffset="617" date="Mon Nov 20 23:51:14 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="25689451" />
  <Command __id="5793" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:51:20 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25695008" type="Run" />
  <Command __id="5794" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:51:20 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25695008" type="Run" />
  <Command __id="5795" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:51:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25695791" type="Run" />
  <Command __id="5796" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:51:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25695791" type="Run" />
  <Command __id="5797" _type="ShellCommand" date="Mon Nov 20 23:51:21 EST 2023" starttimestamp="1700516585068" timestamp="25696090" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5798" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701152" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5799" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701153" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5800" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701159" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):5¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="5801" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701160" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5802" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701161" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5803" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701178" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5804" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701179" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"java.lang.IllegalStateException: Expression does not start with an operator"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5805" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701180" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: Expression does not start with an operator"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.EvalEvaluator.eval(EvalEvaluator.java:12)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5806" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701191" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.Basic"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluator.eval(Basic"), Diff(INSERT,"Checker.test(AbstractLisp"), Diff(EQUAL,"Expression"), Diff(DELETE,"Evaluato"), Diff(INSERT,"Checke"), Diff(EQUAL,"r.java:"), Diff(DELETE,"18"), Diff(INSERT,"44"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:2"), Diff(DELETE,"6"), Diff(INSERT,"31"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.EvalEvaluator.eval(EvalEvaluator"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"11"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"42"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"290"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"363"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5807" _type="ConsoleOutput" date="Mon Nov 20 23:51:26 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25701193" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.load.AbstractFunctionTestedChecker.test(AbstractFunctionTestedChecker.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶"), Diff(EQUAL,"	at gradingTools.comp524f19.assignment1.testcases."), Diff(INSERT,"load."), Diff(EQUAL,"Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.test(Abstract"), Diff(DELETE,"LispExpression"), Diff(INSERT,"FunctionTested"), Diff(EQUAL,"Checker.java:4"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶"), Diff(DELETE,""), Diff(EQUAL,"	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶"), Diff(INSERT,"	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶")]]]></diff>
  </Command>
  <Command __id="5808" _type="ShellCommand" date="Mon Nov 20 23:51:31 EST 2023" starttimestamp="1700516585068" timestamp="25706353" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5766" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:51:07 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25682123">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5776" _type="Replace" date="Mon Nov 20 23:51:12 EST 2023" docASTNodeCount="80" docActiveCodeLength="690" docExpressionCount="55" docLength="690" endLine="11" insertionLength="1" int_docASTNodeCount="80" int_docActiveCodeLength="689" int_docExpressionCount="55" int_docLength="689" length="4" offset="584" startLine="11" starttimestamp="1700516585068" timestamp="25687693">
    <deletedText><![CDATA[load]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5779" _type="Insert" date="Mon Nov 20 23:51:12 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" length="3" offset="585" repeat="3" starttimestamp="1700516585068" timestamp="25687775" timestamp2="25687909">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <Command __id="5809" _type="BalloonCommand" date="Mon Nov 20 23:51:50 EST 2023" message="*******************************************
Worked 28 minutes(fixed)/60 minutes(context based) from
Mon Nov 20 22:51:50 EST 2023 to Mon Nov 20 23:51:31 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 5 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java
Number of insert: 600
Number of delete: 369
" starttimestamp="1700516585068" timestamp="25725076">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[600]]></insert>
    <startTime><![CDATA[1700538710141]]></startTime>
    <endTime><![CDATA[1700542291421]]></endTime>
    <workTime><![CDATA[28]]></workTime>
    <delete><![CDATA[369]]></delete>
  </Command>
  <Command __id="5811" _type="SelectTextCommand" caretOffset="360" date="Mon Nov 20 23:52:02 EST 2023" end="360" start="318" starttimestamp="1700516585068" timestamp="25737868" />
  <Command __id="5812" _type="LocalChecksRawCommand" date="Mon Nov 20 23:52:02 EST 2023" starttimestamp="1700516585068" timestamp="25737869">
    <CSVRow><![CDATA[122,Mon Nov 20 23:51:26 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,68,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5813" _type="LocalChecksRawCommand" date="Mon Nov 20 23:52:02 EST 2023" starttimestamp="1700516585068" timestamp="25737869">
    <CSVRow><![CDATA[122,Mon Nov 20 23:51:26 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,68,0,false, ,ClassRegistryProvided LoadChecker MainClassProvided TestLispFileProvided , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5814" _type="ShellCommand" date="Mon Nov 20 23:52:15 EST 2023" starttimestamp="1700516585068" timestamp="25750857" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5810" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:52:02 EST 2023" docASTNodeCount="67" docActiveCodeLength="376" docExpressionCount="49" docLength="647" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25737829">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5815" _type="ShellCommand" date="Mon Nov 20 23:52:20 EST 2023" starttimestamp="1700516585068" timestamp="25755210" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5816" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:09 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25804171">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5817" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:53:09 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25804212" />
  <Command __id="5818" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:09 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25804543">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5819" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:53:09 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="25804592" />
  <Command __id="5820" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:10 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25805154">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5821" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:53:10 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25805199" />
  <Command __id="5822" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:10 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25805493">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(""), Diff(DELETE,"load"), Diff(INSERT,"eval"), Diff(EQUAL,"", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());
	}
	
	

	@Override
	public void registerOperations() {
		registerBasic();
	}

}
]]></snapshot>
  </Command>
  <Command __id="5823" _type="MoveCaretCommand" caretOffset="617" date="Mon Nov 20 23:53:10 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="25805533" />
  <Command __id="5825" _type="MoveCaretCommand" caretOffset="374" date="Mon Nov 20 23:53:11 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="25806150" />
  <Command __id="5826" _type="SelectTextCommand" caretOffset="1033" date="Mon Nov 20 23:53:13 EST 2023" end="1035" start="1033" starttimestamp="1700516585068" timestamp="25808257" />
  <Command __id="5827" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:53:13 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="25808664" />
  <Command __id="5828" _type="MoveCaretCommand" caretOffset="786" date="Mon Nov 20 23:53:14 EST 2023" docOffset="786" starttimestamp="1700516585068" timestamp="25809479" />
  <Command __id="5829" _type="MoveCaretCommand" caretOffset="816" date="Mon Nov 20 23:53:15 EST 2023" docOffset="816" starttimestamp="1700516585068" timestamp="25810658" />
  <Command __id="5830" _type="MoveCaretCommand" caretOffset="824" date="Mon Nov 20 23:53:16 EST 2023" docOffset="824" starttimestamp="1700516585068" timestamp="25811885" />
  <Command __id="5824" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:11 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25806105">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5831" _type="MoveCaretCommand" caretOffset="895" date="Mon Nov 20 23:53:18 EST 2023" docOffset="895" starttimestamp="1700516585068" timestamp="25813088" />
  <Command __id="5832" _type="MoveCaretCommand" caretOffset="896" date="Mon Nov 20 23:53:18 EST 2023" docOffset="896" starttimestamp="1700516585068" timestamp="25813841" />
  <Command __id="5833" _type="MoveCaretCommand" caretOffset="784" date="Mon Nov 20 23:53:19 EST 2023" docOffset="784" starttimestamp="1700516585068" timestamp="25814744" />
  <Command __id="5835" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 23:53:31 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="25825940" />
  <Command __id="5836" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 23:53:33 EST 2023" starttimestamp="1700516585068" timestamp="25828521" />
  <Command __id="5837" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Mon Nov 20 23:53:33 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25828604" type="Run" />
  <Command __id="5834" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:30 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25825872">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5840" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 23:53:51 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25846397" type="Run" />
  <Command __id="5841" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 23:53:51 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25846397" type="Run" />
  <Command __id="5843" _type="MoveCaretCommand" caretOffset="784" date="Mon Nov 20 23:53:58 EST 2023" docOffset="784" starttimestamp="1700516585068" timestamp="25853707" />
  <Command __id="5844" _type="MoveCaretCommand" caretOffset="1034" date="Mon Nov 20 23:54:00 EST 2023" docOffset="1034" starttimestamp="1700516585068" timestamp="25854945" />
  <Command __id="5845" _type="SelectTextCommand" caretOffset="1033" date="Mon Nov 20 23:54:01 EST 2023" end="1035" start="1033" starttimestamp="1700516585068" timestamp="25856415" />
  <Command __id="5842" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:53:58 EST 2023" docASTNodeCount="231" docActiveCodeLength="1456" docExpressionCount="170" docLength="1683" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25853657">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("./test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5846" _type="SelectTextCommand" caretOffset="1045" date="Mon Nov 20 23:54:11 EST 2023" end="1045" start="1032" starttimestamp="1700516585068" timestamp="25866358" />
  <DocumentChange __id="5847" _type="Replace" date="Mon Nov 20 23:54:12 EST 2023" docASTNodeCount="231" docActiveCodeLength="1444" docExpressionCount="170" docLength="1671" endLine="30" insertionLength="1" int_docASTNodeCount="230" int_docActiveCodeLength="1443" int_docExpressionCount="169" int_docLength="1670" length="13" offset="1032" startLine="30" starttimestamp="1700516585068" timestamp="25867362">
    <deletedText><![CDATA["./test.lisp"]]></deletedText>
    <insertedText><![CDATA[f]]></insertedText>
  </DocumentChange>
  <Command __id="5848" _type="InsertStringCommand" date="Mon Nov 20 23:54:12 EST 2023" starttimestamp="1700516585068" timestamp="25867371" timestamp2="25867371">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5850" _type="InsertStringCommand" date="Mon Nov 20 23:54:12 EST 2023" starttimestamp="1700516585068" timestamp="25867427" timestamp2="25867427">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5852" _type="InsertStringCommand" date="Mon Nov 20 23:54:12 EST 2023" starttimestamp="1700516585068" timestamp="25867595" timestamp2="25867595">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5854" _type="InsertStringCommand" date="Mon Nov 20 23:54:12 EST 2023" starttimestamp="1700516585068" timestamp="25867684" timestamp2="25867684">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5856" _type="InsertStringCommand" date="Mon Nov 20 23:54:13 EST 2023" starttimestamp="1700516585068" timestamp="25867994" timestamp2="25867994">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="5858" _type="InsertStringCommand" date="Mon Nov 20 23:54:13 EST 2023" starttimestamp="1700516585068" timestamp="25868185" timestamp2="25868185">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5860" _type="InsertStringCommand" date="Mon Nov 20 23:54:13 EST 2023" starttimestamp="1700516585068" timestamp="25868249" timestamp2="25868249">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5862" _type="InsertStringCommand" date="Mon Nov 20 23:54:13 EST 2023" starttimestamp="1700516585068" timestamp="25868369" timestamp2="25868369">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5863" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:54:14 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="25869019" />
  <Command __id="5864" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:54:14 EST 2023" starttimestamp="1700516585068" timestamp="25869166" />
  <Command __id="5865" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:54:14 EST 2023" starttimestamp="1700516585068" timestamp="25869268" />
  <Command __id="5866" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:54:14 EST 2023" starttimestamp="1700516585068" timestamp="25869275" />
  <Command __id="5867" _type="ShellCommand" date="Mon Nov 20 23:54:16 EST 2023" starttimestamp="1700516585068" timestamp="25871658" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5868" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:54:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25871859" type="Run" />
  <Command __id="5869" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:54:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25871859" type="Run" />
  <Command __id="5870" _type="ShellCommand" date="Mon Nov 20 23:54:16 EST 2023" starttimestamp="1700516585068" timestamp="25871886" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5872" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 23:54:17 EST 2023" docOffset="585" starttimestamp="1700516585068" timestamp="25872929" />
  <Command __id="5873" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 23:54:19 EST 2023" starttimestamp="1700516585068" timestamp="25874837" />
  <Command __id="5874" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:54:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25874980" type="Run" />
  <Command __id="5875" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:54:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25874980" type="Run" />
  <Command __id="5876" _type="ShellCommand" date="Mon Nov 20 23:54:20 EST 2023" starttimestamp="1700516585068" timestamp="25875270" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5877" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878766" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LOAD¶TEST.LISP"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5878" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878767" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5879" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878772" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5880" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878773" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5881" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878774" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5882" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878774" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5883" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878790" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5884" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878793" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"¶java.io.FileNotFoundException: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp" (No such file or directory)¶NIL"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5885" _type="ConsoleOutput" date="Mon Nov 20 23:54:23 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25878794" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5886" _type="ShellCommand" date="Mon Nov 20 23:54:29 EST 2023" starttimestamp="1700516585068" timestamp="25884500" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="5849" _type="Insert" date="Mon Nov 20 23:54:12 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" length="7" offset="1033" repeat="7" starttimestamp="1700516585068" timestamp="25867426" timestamp2="25868366">
    <text><![CDATA[ileName]]></text>
  </DocumentChange>
  <Command __id="5871" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:17 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25872877">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5887" _type="MoveCaretCommand" caretOffset="564" date="Mon Nov 20 23:54:35 EST 2023" docOffset="681" starttimestamp="1700516585068" timestamp="25889998" />
  <Command __id="5888" _type="MoveCaretCommand" caretOffset="564" date="Mon Nov 20 23:54:35 EST 2023" docOffset="681" starttimestamp="1700516585068" timestamp="25889998" />
  <Command __id="5889" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:36 EST 2023" docASTNodeCount="67" docActiveCodeLength="376" docExpressionCount="49" docLength="647" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25891168">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5890" _type="SelectTextCommand" caretOffset="360" date="Mon Nov 20 23:54:36 EST 2023" end="360" start="318" starttimestamp="1700516585068" timestamp="25891226" />
  <Command __id="5891" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:37 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25891997">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5892" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:54:37 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="25892045" />
  <Command __id="5893" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:37 EST 2023" docASTNodeCount="258" docActiveCodeLength="1660" docExpressionCount="124" docLength="2170" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25892693">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"EvalEvaluator.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="5894" _type="MoveCaretCommand" caretOffset="559" date="Mon Nov 20 23:54:37 EST 2023" docOffset="688" starttimestamp="1700516585068" timestamp="25892741" />
  <Command __id="5895" _type="LocalChecksRawCommand" date="Mon Nov 20 23:54:37 EST 2023" starttimestamp="1700516585068" timestamp="25892742">
    <CSVRow><![CDATA[123,Mon Nov 20 23:54:23 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,69,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5896" _type="LocalChecksRawCommand" date="Mon Nov 20 23:54:37 EST 2023" starttimestamp="1700516585068" timestamp="25892742">
    <CSVRow><![CDATA[123,Mon Nov 20 23:54:23 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,69,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5897" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:38 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25893235">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5898" _type="MoveCaretCommand" caretOffset="564" date="Mon Nov 20 23:54:38 EST 2023" docOffset="681" starttimestamp="1700516585068" timestamp="25893290" />
  <Command __id="5899" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:39 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25894405">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5900" _type="MoveCaretCommand" caretOffset="617" date="Mon Nov 20 23:54:39 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="25894454" />
  <Command __id="5902" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:54:40 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="25894990" />
  <Command __id="5901" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:54:40 EST 2023" docASTNodeCount="231" docActiveCodeLength="1451" docExpressionCount="170" docLength="1678" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25894940">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("), Diff(DELETE,""./test.lisp""), Diff(INSERT,"fileName"), Diff(EQUAL,"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader(fileName));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="5903" _type="MoveCaretCommand" caretOffset="1036" date="Mon Nov 20 23:54:41 EST 2023" docOffset="1036" starttimestamp="1700516585068" timestamp="25896020" />
  <Command __id="5904" _type="SelectTextCommand" caretOffset="1040" date="Mon Nov 20 23:54:41 EST 2023" end="1040" start="1032" starttimestamp="1700516585068" timestamp="25896140" />
  <DocumentChange __id="5905" _type="Replace" date="Mon Nov 20 23:54:42 EST 2023" docASTNodeCount="126" docActiveCodeLength="1444" docExpressionCount="100" docLength="1671" endLine="30" insertionLength="1" int_docASTNodeCount="230" int_docActiveCodeLength="1443" int_docExpressionCount="169" int_docLength="1670" length="8" offset="1032" startLine="30" starttimestamp="1700516585068" timestamp="25897286">
    <deletedText><![CDATA[fileName]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <Command __id="5906" _type="InsertStringCommand" date="Mon Nov 20 23:54:42 EST 2023" starttimestamp="1700516585068" timestamp="25897294" timestamp2="25897294">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5908" _type="InsertStringCommand" date="Mon Nov 20 23:54:42 EST 2023" starttimestamp="1700516585068" timestamp="25897319" timestamp2="25897319">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5910" _type="InsertStringCommand" date="Mon Nov 20 23:54:42 EST 2023" starttimestamp="1700516585068" timestamp="25897330" timestamp2="25897330">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5912" _type="InsertStringCommand" date="Mon Nov 20 23:54:42 EST 2023" starttimestamp="1700516585068" timestamp="25897352" timestamp2="25897352">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5914" _type="InsertStringCommand" date="Mon Nov 20 23:54:42 EST 2023" starttimestamp="1700516585068" timestamp="25897446" timestamp2="25897446">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5916" _type="InsertStringCommand" date="Mon Nov 20 23:54:43 EST 2023" starttimestamp="1700516585068" timestamp="25898278" timestamp2="25898278">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 23:54:43 EST 2023" starttimestamp="1700516585068" timestamp="25898719" />
  <Command __id="5919" _type="InsertStringCommand" date="Mon Nov 20 23:54:44 EST 2023" starttimestamp="1700516585068" timestamp="25899569" timestamp2="25899569">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5921" _type="InsertStringCommand" date="Mon Nov 20 23:54:44 EST 2023" starttimestamp="1700516585068" timestamp="25899915" timestamp2="25899915">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5923" _type="InsertStringCommand" date="Mon Nov 20 23:54:45 EST 2023" starttimestamp="1700516585068" timestamp="25900017" timestamp2="25900017">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5925" _type="InsertStringCommand" date="Mon Nov 20 23:54:45 EST 2023" starttimestamp="1700516585068" timestamp="25900093" timestamp2="25900093">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5927" _type="InsertStringCommand" date="Mon Nov 20 23:54:45 EST 2023" starttimestamp="1700516585068" timestamp="25900150" timestamp2="25900150">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5928" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:54:46 EST 2023" starttimestamp="1700516585068" timestamp="25900976" />
  <Command __id="5929" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:54:46 EST 2023" starttimestamp="1700516585068" timestamp="25901077" />
  <Command __id="5930" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:54:46 EST 2023" starttimestamp="1700516585068" timestamp="25901084" />
  <Command __id="5935" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:54:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25903564" type="Run" />
  <Command __id="5936" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:54:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25903564" type="Run" />
  <Command __id="5937" _type="ShellCommand" date="Mon Nov 20 23:54:48 EST 2023" starttimestamp="1700516585068" timestamp="25903865" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5938" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907062" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string NIL"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5939" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907064" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5940" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907068" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5941" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907070" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5942" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907087" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5943" _type="ExceptionCommand" date="Mon Nov 20 23:54:52 EST 2023" starttimestamp="1700516585068" timestamp="25907089" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.EvalEvaluator.eval(EvalEvaluator.java:12)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5944" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907093" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5945" _type="ExceptionCommand" date="Mon Nov 20 23:54:52 EST 2023" starttimestamp="1700516585068" timestamp="25907094" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5946" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907094" type="ConsoleOutput">
    <outputString><![CDATA[
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)"), Diff(EQUAL,"¶"), Diff(INSERT,""), Diff(EQUAL,"	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶"), Diff(DELETE,""), Diff(EQUAL,"	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶"), Diff(INSERT,"	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶")]]]></diff>
  </Command>
  <Command __id="5947" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907096" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"Test execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5948" _type="ConsoleOutput" date="Mon Nov 20 23:54:52 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="25907100" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):32"), Diff(INSERT,"Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="5907" _type="Insert" date="Mon Nov 20 23:54:42 EST 2023" docASTNodeCount="231" docActiveCodeLength="1454" docExpressionCount="170" docLength="1681" length="10" offset="1033" repeat="10" starttimestamp="1700516585068" timestamp="25897317" timestamp2="25900147">
    <text><![CDATA[test.lisp"]]></text>
  </DocumentChange>
  <Command __id="5949" _type="ShellCommand" date="Mon Nov 20 23:54:55 EST 2023" starttimestamp="1700516585068" timestamp="25910676" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5951" _type="SelectTextCommand" caretOffset="360" date="Mon Nov 20 23:55:03 EST 2023" end="360" start="318" starttimestamp="1700516585068" timestamp="25918512" />
  <Command __id="5950" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:55:03 EST 2023" docASTNodeCount="67" docActiveCodeLength="376" docExpressionCount="49" docLength="647" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25918468">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5952" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 23:55:04 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="25919915" />
  <Command __id="5953" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 23:55:04 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="25919915" />
  <DocumentChange __id="5954" _type="Insert" date="Mon Nov 20 23:55:08 EST 2023" docASTNodeCount="69" docActiveCodeLength="383" docExpressionCount="50" docLength="654" length="7" offset="317" repeat="5" starttimestamp="1700516585068" timestamp="25923047" timestamp2="25924382">
    <text><![CDATA[
		prin]]></text>
  </DocumentChange>
  <Command __id="5955" _type="InsertStringCommand" date="Mon Nov 20 23:55:08 EST 2023" starttimestamp="1700516585068" timestamp="25923051" timestamp2="25923051">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5956" _type="InsertStringCommand" date="Mon Nov 20 23:55:08 EST 2023" starttimestamp="1700516585068" timestamp="25923051" timestamp2="25923051">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5957" _type="LocalChecksRawCommand" date="Mon Nov 20 23:55:08 EST 2023" starttimestamp="1700516585068" timestamp="25923053">
    <CSVRow><![CDATA[124,Mon Nov 20 23:54:52 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,70,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5958" _type="LocalChecksRawCommand" date="Mon Nov 20 23:55:08 EST 2023" starttimestamp="1700516585068" timestamp="25923053">
    <CSVRow><![CDATA[124,Mon Nov 20 23:54:52 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,70,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5960" _type="InsertStringCommand" date="Mon Nov 20 23:55:08 EST 2023" starttimestamp="1700516585068" timestamp="25923625" timestamp2="25923625">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5961" _type="InsertStringCommand" date="Mon Nov 20 23:55:08 EST 2023" starttimestamp="1700516585068" timestamp="25923625" timestamp2="25923625">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5963" _type="InsertStringCommand" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924167" timestamp2="25924167">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5964" _type="InsertStringCommand" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924167" timestamp2="25924167">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5966" _type="InsertStringCommand" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924300" timestamp2="25924300">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5967" _type="InsertStringCommand" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924300" timestamp2="25924300">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5969" _type="InsertStringCommand" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924383" timestamp2="25924383">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5970" _type="InsertStringCommand" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924383" timestamp2="25924383">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="5971" _type="Delete" date="Mon Nov 20 23:55:09 EST 2023" docASTNodeCount="67" docActiveCodeLength="379" docExpressionCount="49" docLength="650" endLine="11" length="4" offset="320" repeat="4" startLine="11" starttimestamp="1700516585068" timestamp="25924631" timestamp2="25925006">
    <text><![CDATA[prin]]></text>
  </DocumentChange>
  <Command __id="5972" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924633" />
  <Command __id="5973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924633" />
  <Command __id="5975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924749" />
  <Command __id="5976" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924749" />
  <Command __id="5978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924869" />
  <Command __id="5979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:09 EST 2023" starttimestamp="1700516585068" timestamp="25924869" />
  <Command __id="5981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925008" />
  <Command __id="5982" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925008" />
  <DocumentChange __id="5983" _type="Insert" date="Mon Nov 20 23:55:10 EST 2023" docASTNodeCount="71" docActiveCodeLength="389" docExpressionCount="52" docLength="660" length="10" offset="320" repeat="10" starttimestamp="1700516585068" timestamp="25925202" timestamp2="25926559">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="5984" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925204" timestamp2="25925204">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5985" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925204" timestamp2="25925204">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5987" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925397" timestamp2="25925397">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5988" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925397" timestamp2="25925397">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5990" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925488" timestamp2="25925488">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5991" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925488" timestamp2="25925488">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5993" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925605" timestamp2="25925605">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5994" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925605" timestamp2="25925605">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5996" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925696" timestamp2="25925696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5997" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925696" timestamp2="25925696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5999" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925799" timestamp2="25925799">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6000" _type="InsertStringCommand" date="Mon Nov 20 23:55:10 EST 2023" starttimestamp="1700516585068" timestamp="25925799" timestamp2="25925799">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6002" _type="InsertStringCommand" date="Mon Nov 20 23:55:11 EST 2023" starttimestamp="1700516585068" timestamp="25926114" timestamp2="25926114">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6003" _type="InsertStringCommand" date="Mon Nov 20 23:55:11 EST 2023" starttimestamp="1700516585068" timestamp="25926114" timestamp2="25926114">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6004" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:55:11 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="25926120" />
  <Command __id="6008" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:55:11 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="25926650" />
  <DocumentChange __id="6009" _type="Replace" date="Mon Nov 20 23:55:11 EST 2023" docASTNodeCount="71" docActiveCodeLength="390" docExpressionCount="53" docLength="661" endLine="11" insertionLength="4" int_docASTNodeCount="69" int_docActiveCodeLength="386" int_docExpressionCount="51" int_docLength="657" length="3" offset="327" startLine="11" starttimestamp="1700516585068" timestamp="25926652">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="6010" _type="InsertStringCommand" date="Mon Nov 20 23:55:11 EST 2023" starttimestamp="1700516585068" timestamp="25926656" timestamp2="25926656">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6011" _type="InsertStringCommand" date="Mon Nov 20 23:55:11 EST 2023" starttimestamp="1700516585068" timestamp="25926656" timestamp2="25926656">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6012" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:55:11 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="25926664" />
  <DocumentChange __id="6013" _type="Insert" date="Mon Nov 20 23:55:11 EST 2023" docASTNodeCount="73" docActiveCodeLength="391" docExpressionCount="54" docLength="662" length="1" offset="331" starttimestamp="1700516585068" timestamp="25926857">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <Command __id="6014" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:55:12 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="25927240" />
  <DocumentChange __id="6015" _type="Replace" date="Mon Nov 20 23:55:12 EST 2023" docASTNodeCount="74" docActiveCodeLength="403" docExpressionCount="55" docLength="674" endLine="11" insertionLength="13" int_docASTNodeCount="71" int_docActiveCodeLength="390" int_docExpressionCount="53" int_docLength="661" length="1" offset="331" startLine="11" starttimestamp="1700516585068" timestamp="25927243">
    <deletedText><![CDATA[p]]></deletedText>
    <insertedText><![CDATA[print(false);]]></insertedText>
  </DocumentChange>
  <Command __id="6016" _type="InsertStringCommand" date="Mon Nov 20 23:55:12 EST 2023" starttimestamp="1700516585068" timestamp="25927270" timestamp2="25927270">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6017" _type="InsertStringCommand" date="Mon Nov 20 23:55:12 EST 2023" starttimestamp="1700516585068" timestamp="25927270" timestamp2="25927270">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="6018" _type="Delete" date="Mon Nov 20 23:55:13 EST 2023" docASTNodeCount="73" docActiveCodeLength="396" docExpressionCount="54" docLength="667" endLine="11" length="7" offset="335" repeat="3" startLine="11" starttimestamp="1700516585068" timestamp="25928032" timestamp2="25928283">
    <text><![CDATA[t(false]]></text>
  </DocumentChange>
  <Command __id="6019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:13 EST 2023" starttimestamp="1700516585068" timestamp="25928037" />
  <Command __id="6020" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:13 EST 2023" starttimestamp="1700516585068" timestamp="25928037" />
  <Command __id="6022" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:13 EST 2023" starttimestamp="1700516585068" timestamp="25928159" />
  <Command __id="6023" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:13 EST 2023" starttimestamp="1700516585068" timestamp="25928159" />
  <Command __id="6025" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:13 EST 2023" starttimestamp="1700516585068" timestamp="25928284" />
  <Command __id="6026" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:13 EST 2023" starttimestamp="1700516585068" timestamp="25928284" />
  <DocumentChange __id="6027" _type="Insert" date="Mon Nov 20 23:55:14 EST 2023" docASTNodeCount="73" docActiveCodeLength="401" docExpressionCount="54" docLength="672" length="5" offset="335" repeat="4" starttimestamp="1700516585068" timestamp="25929067" timestamp2="25929655">
    <text><![CDATA[tln()]]></text>
  </DocumentChange>
  <Command __id="6028" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929069" timestamp2="25929069">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6029" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929069" timestamp2="25929069">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6031" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929315" timestamp2="25929315">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6032" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929315" timestamp2="25929315">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6034" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929389" timestamp2="25929389">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6035" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929389" timestamp2="25929389">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6037" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929658" timestamp2="25929658">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6038" _type="InsertStringCommand" date="Mon Nov 20 23:55:14 EST 2023" starttimestamp="1700516585068" timestamp="25929658" timestamp2="25929658">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6039" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:55:15 EST 2023" starttimestamp="1700516585068" timestamp="25930490" />
  <Command __id="6040" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 23:55:15 EST 2023" starttimestamp="1700516585068" timestamp="25930490" />
  <DocumentChange __id="6041" _type="Delete" date="Mon Nov 20 23:55:16 EST 2023" docASTNodeCount="73" docActiveCodeLength="400" docExpressionCount="54" docLength="671" endLine="11" length="1" offset="339" startLine="11" starttimestamp="1700516585068" timestamp="25930945">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="6042" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:16 EST 2023" starttimestamp="1700516585068" timestamp="25930948" />
  <Command __id="6043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 23:55:16 EST 2023" starttimestamp="1700516585068" timestamp="25930948" />
  <DocumentChange __id="6044" _type="Insert" date="Mon Nov 20 23:55:17 EST 2023" docASTNodeCount="76" docActiveCodeLength="409" docExpressionCount="57" docLength="680" length="9" offset="339" repeat="9" starttimestamp="1700516585068" timestamp="25932413" timestamp2="25933421">
    <text><![CDATA[expr.getT]]></text>
  </DocumentChange>
  <Command __id="6045" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932417" timestamp2="25932417">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6046" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932417" timestamp2="25932417">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6048" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932634" timestamp2="25932634">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6049" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932634" timestamp2="25932634">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6051" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932710" timestamp2="25932710">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6052" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932710" timestamp2="25932710">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6054" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932805" timestamp2="25932805">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6055" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932805" timestamp2="25932805">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6057" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932924" timestamp2="25932924">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6058" _type="InsertStringCommand" date="Mon Nov 20 23:55:17 EST 2023" starttimestamp="1700516585068" timestamp="25932924" timestamp2="25932924">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6059" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:55:17 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="25932930" />
  <Command __id="6064" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:55:18 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="25933674" />
  <DocumentChange __id="6065" _type="Replace" date="Mon Nov 20 23:55:18 EST 2023" docASTNodeCount="76" docActiveCodeLength="414" docExpressionCount="57" docLength="685" endLine="11" insertionLength="9" int_docASTNodeCount="76" int_docActiveCodeLength="405" int_docExpressionCount="56" int_docLength="676" length="4" offset="344" startLine="11" starttimestamp="1700516585068" timestamp="25933676">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="6066" _type="InsertStringCommand" date="Mon Nov 20 23:55:18 EST 2023" starttimestamp="1700516585068" timestamp="25933681" timestamp2="25933681">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6067" _type="InsertStringCommand" date="Mon Nov 20 23:55:18 EST 2023" starttimestamp="1700516585068" timestamp="25933681" timestamp2="25933681">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="6068" _type="Insert" date="Mon Nov 20 23:55:19 EST 2023" docASTNodeCount="78" docActiveCodeLength="418" docExpressionCount="59" docLength="689" length="4" offset="353" repeat="4" starttimestamp="1700516585068" timestamp="25934423" timestamp2="25935802">
    <text><![CDATA[.toS]]></text>
  </DocumentChange>
  <Command __id="6069" _type="InsertStringCommand" date="Mon Nov 20 23:55:19 EST 2023" starttimestamp="1700516585068" timestamp="25934425" timestamp2="25934425">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6070" _type="InsertStringCommand" date="Mon Nov 20 23:55:19 EST 2023" starttimestamp="1700516585068" timestamp="25934425" timestamp2="25934425">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6071" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:55:19 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="25934432" />
  <Command __id="6075" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:55:21 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="25935969" />
  <Command __id="6077" _type="InsertStringCommand" date="Mon Nov 20 23:55:21 EST 2023" starttimestamp="1700516585068" timestamp="25935976" timestamp2="25935976">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6078" _type="InsertStringCommand" date="Mon Nov 20 23:55:21 EST 2023" starttimestamp="1700516585068" timestamp="25935976" timestamp2="25935976">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6079" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 23:55:22 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="25937100" />
  <Command __id="6080" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 23:55:22 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="25937100" />
  <Command __id="6081" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 23:55:22 EST 2023" starttimestamp="1700516585068" timestamp="25937287" />
  <Command __id="6082" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:55:22 EST 2023" starttimestamp="1700516585068" timestamp="25937388" />
  <Command __id="6083" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:55:22 EST 2023" starttimestamp="1700516585068" timestamp="25937394" />
  <Command __id="6084" _type="ShellCommand" date="Mon Nov 20 23:55:23 EST 2023" starttimestamp="1700516585068" timestamp="25938727" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6085" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:55:24 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25938935" type="Run" />
  <Command __id="6086" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:55:24 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25938935" type="Run" />
  <Command __id="6087" _type="ShellCommand" date="Mon Nov 20 23:55:24 EST 2023" starttimestamp="1700516585068" timestamp="25938943" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6088" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:55:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25939883" type="Run" />
  <Command __id="6089" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:55:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25939883" type="Run" />
  <Command __id="6090" _type="ShellCommand" date="Mon Nov 20 23:55:25 EST 2023" starttimestamp="1700516585068" timestamp="25940182" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6103" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:56:19 EST 2023" projectName="null" starttimestamp="1700516585068" timestamp="25994563">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6108" _type="ShellCommand" date="Mon Nov 20 23:56:20 EST 2023" starttimestamp="1700516585068" timestamp="25995884" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6110" _type="MoveCaretCommand" caretOffset="317" date="Mon Nov 20 23:56:22 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="25997346" />
  <Command __id="6111" _type="ShellCommand" date="Mon Nov 20 23:56:27 EST 2023" starttimestamp="1700516585068" timestamp="26002719" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6109" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:56:22 EST 2023" docASTNodeCount="78" docActiveCodeLength="425" docExpressionCount="59" docLength="696" projectName="Assignment5" starttimestamp="1700516585068" timestamp="25997297">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(INSERT,"System.out.println(expr.getTail().toString());		"), Diff(EQUAL,"return expr.getTail().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		System.out.println(expr.getTail().toString());
		return expr.getTail().eval(environment);
	}
	
//	public static SExpression evalHelper(SExpression expr, Environment environment) {
//		if(expr.isAtom()) {
//			return expr.eval(environment);
//		}
//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
//		
//	}

}
]]></snapshot>
  </Command>
  <Command __id="6112" _type="ShellCommand" date="Mon Nov 20 23:56:39 EST 2023" starttimestamp="1700516585068" timestamp="26014828" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6113" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:56:42 EST 2023" docASTNodeCount="78" docActiveCodeLength="425" docExpressionCount="59" docLength="696" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26017058">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		System.out.println(expr.getTail().toString());		return expr.getTail().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6114" _type="MoveCaretCommand" caretOffset="354" date="Mon Nov 20 23:56:42 EST 2023" docOffset="354" starttimestamp="1700516585068" timestamp="26017093" />
  <Command __id="6115" _type="MoveCaretCommand" caretOffset="354" date="Mon Nov 20 23:56:42 EST 2023" docOffset="354" starttimestamp="1700516585068" timestamp="26017095" />
  <Command __id="6150" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:56:48 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26023521" type="Run" />
  <Command __id="6151" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:56:48 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26023521" type="Run" />
  <Command __id="6152" _type="ShellCommand" date="Mon Nov 20 23:56:49 EST 2023" starttimestamp="1700516585068" timestamp="26024610" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="6116" _type="Insert" date="Mon Nov 20 23:56:43 EST 2023" docASTNodeCount="80" docActiveCodeLength="435" docExpressionCount="61" docLength="706" length="10" offset="354" repeat="10" starttimestamp="1700516585068" timestamp="26018638" timestamp2="26020719">
    <text><![CDATA[getHead().]]></text>
  </DocumentChange>
  <Command __id="6154" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 23:56:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26029629" type="Run" />
  <Command __id="6155" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Mon Nov 20 23:56:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26029629" type="Run" />
  <Command __id="6157" _type="MoveCaretCommand" caretOffset="564" date="Mon Nov 20 23:56:55 EST 2023" docOffset="681" starttimestamp="1700516585068" timestamp="26030844" />
  <Command __id="6158" _type="ShellCommand" date="Mon Nov 20 23:56:57 EST 2023" starttimestamp="1700516585068" timestamp="26032578" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6159" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.show.outline" date="Mon Nov 20 23:56:57 EST 2023" starttimestamp="1700516585068" timestamp="26032617" />
  <Command __id="6160" _type="ShellCommand" date="Mon Nov 20 23:56:58 EST 2023" starttimestamp="1700516585068" timestamp="26033468" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6161" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 23:56:58 EST 2023" docOffset="215" starttimestamp="1700516585068" timestamp="26033538" />
  <Command __id="6162" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 23:56:58 EST 2023" docOffset="215" starttimestamp="1700516585068" timestamp="26033538" />
  <Command __id="6163" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 23:57:00 EST 2023" starttimestamp="1700516585068" timestamp="26035857" />
  <Command __id="6164" _type="ShellCommand" date="Mon Nov 20 23:57:00 EST 2023" starttimestamp="1700516585068" timestamp="26035914" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6165" _type="ShellCommand" date="Mon Nov 20 23:57:05 EST 2023" starttimestamp="1700516585068" timestamp="26040769" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6166" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:57:05 EST 2023" starttimestamp="1700516585068" timestamp="26040832" />
  <Command __id="6167" _type="EclipseCommand" commandID="" date="Mon Nov 20 23:57:05 EST 2023" starttimestamp="1700516585068" timestamp="26040839" />
  <Command __id="6168" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:57:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26040906" type="Run" />
  <Command __id="6169" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:57:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26040906" type="Run" />
  <Command __id="6170" _type="ShellCommand" date="Mon Nov 20 23:57:06 EST 2023" starttimestamp="1700516585068" timestamp="26041209" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6171" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044627" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6172" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044628" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6173" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044634" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="6174" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044635" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="6175" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044651" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6176" _type="ExceptionCommand" date="Mon Nov 20 23:57:09 EST 2023" starttimestamp="1700516585068" timestamp="26044653" type="Exception">
    <exceptionString><![CDATA[(QUOTE (+ 1 2))
java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.EvalEvaluator.eval(EvalEvaluator.java:13)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6177" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044657" type="ConsoleOutput">
    <outputString><![CDATA[	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6178" _type="ExceptionCommand" date="Mon Nov 20 23:57:09 EST 2023" starttimestamp="1700516585068" timestamp="26044658" type="Exception">
    <exceptionString><![CDATA[java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6179" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044682" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"42"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpr"), Diff(INSERT,"java.base/java.security.Acc"), Diff(EQUAL,"ess"), Diff(DELETE,"i"), Diff(INSERT,"C"), Diff(EQUAL,"on"), Diff(DELETE,"Checker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethod"), Diff(INSERT,"troller.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"42"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"270"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"70"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"46"), Diff(INSERT,"10"), Diff(EQUAL,"9)¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,"EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"3342"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6180" _type="ConsoleOutput" date="Mon Nov 20 23:57:09 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26044695" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):31
Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Test execution time (ms):31¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6156" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:56:55 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26030806">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6181" _type="ShellCommand" date="Mon Nov 20 23:57:18 EST 2023" starttimestamp="1700516585068" timestamp="26053694" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6182" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:25 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26060604">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6183" _type="MoveCaretCommand" caretOffset="617" date="Mon Nov 20 23:57:25 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="26060652" />
  <Command __id="6184" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:26 EST 2023" docASTNodeCount="258" docActiveCodeLength="1660" docExpressionCount="124" docLength="2170" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26060982">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6185" _type="MoveCaretCommand" caretOffset="559" date="Mon Nov 20 23:57:26 EST 2023" docOffset="688" starttimestamp="1700516585068" timestamp="26061025" />
  <Command __id="6186" _type="LocalChecksRawCommand" date="Mon Nov 20 23:57:26 EST 2023" starttimestamp="1700516585068" timestamp="26061026">
    <CSVRow><![CDATA[126,Mon Nov 20 23:57:09 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,72,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6187" _type="LocalChecksRawCommand" date="Mon Nov 20 23:57:26 EST 2023" starttimestamp="1700516585068" timestamp="26061026">
    <CSVRow><![CDATA[126,Mon Nov 20 23:57:09 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,72,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6188" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:26 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26061626">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6189" _type="MoveCaretCommand" caretOffset="617" date="Mon Nov 20 23:57:26 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="26061672" />
  <Command __id="6190" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:28 EST 2023" docASTNodeCount="231" docActiveCodeLength="1454" docExpressionCount="170" docLength="1681" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26063007">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("), Diff(DELETE,"fileName"), Diff(INSERT,""test.lisp""), Diff(EQUAL,"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="6191" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:57:28 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="26063059" />
  <Command __id="6192" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:31 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26066180">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6193" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:57:31 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="26066243" />
  <Command __id="6194" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:31 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26066476">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6195" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:57:31 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="26066520" />
  <Command __id="6197" _type="MoveCaretCommand" caretOffset="247" date="Mon Nov 20 23:57:31 EST 2023" docOffset="247" starttimestamp="1700516585068" timestamp="26066862" />
  <Command __id="6198" _type="MoveCaretCommand" caretOffset="295" date="Mon Nov 20 23:57:33 EST 2023" docOffset="295" starttimestamp="1700516585068" timestamp="26068237" />
  <Command __id="6199" _type="MoveCaretCommand" caretOffset="295" date="Mon Nov 20 23:57:33 EST 2023" docOffset="295" starttimestamp="1700516585068" timestamp="26068237" />
  <Command __id="6200" _type="MoveCaretCommand" caretOffset="360" date="Mon Nov 20 23:57:33 EST 2023" docOffset="360" starttimestamp="1700516585068" timestamp="26068777" />
  <Command __id="6201" _type="MoveCaretCommand" caretOffset="360" date="Mon Nov 20 23:57:33 EST 2023" docOffset="360" starttimestamp="1700516585068" timestamp="26068777" />
  <Command __id="6196" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:57:31 EST 2023" docASTNodeCount="80" docActiveCodeLength="435" docExpressionCount="61" docLength="706" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26066807">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		System.out.println(expr.getTail()."), Diff(INSERT,"getHead()."), Diff(EQUAL,"toString());		return expr.getTail().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		System.out.println(expr.getTail().getHead().toString());
		return expr.getTail().eval(environment);
	}
	
//	public static SExpression evalHelper(SExpression expr, Environment environment) {
//		if(expr.isAtom()) {
//			return expr.eval(environment);
//		}
//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
//		
//	}

}
]]></snapshot>
  </Command>
  <Command __id="6202" _type="MoveCaretCommand" caretOffset="358" date="Mon Nov 20 23:57:34 EST 2023" docOffset="358" starttimestamp="1700516585068" timestamp="26069865" />
  <Command __id="6203" _type="MoveCaretCommand" caretOffset="358" date="Mon Nov 20 23:57:34 EST 2023" docOffset="358" starttimestamp="1700516585068" timestamp="26069865" />
  <Command __id="6204" _type="MoveCaretCommand" caretOffset="365" date="Mon Nov 20 23:57:35 EST 2023" docOffset="365" starttimestamp="1700516585068" timestamp="26070132" />
  <Command __id="6205" _type="MoveCaretCommand" caretOffset="365" date="Mon Nov 20 23:57:35 EST 2023" docOffset="365" starttimestamp="1700516585068" timestamp="26070132" />
  <Command __id="6206" _type="MoveCaretCommand" caretOffset="369" date="Mon Nov 20 23:57:35 EST 2023" docOffset="369" starttimestamp="1700516585068" timestamp="26070468" />
  <Command __id="6207" _type="MoveCaretCommand" caretOffset="369" date="Mon Nov 20 23:57:35 EST 2023" docOffset="369" starttimestamp="1700516585068" timestamp="26070468" />
  <Command __id="6208" _type="MoveCaretCommand" caretOffset="401" date="Mon Nov 20 23:57:36 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="26071118" />
  <Command __id="6209" _type="MoveCaretCommand" caretOffset="401" date="Mon Nov 20 23:57:36 EST 2023" docOffset="401" starttimestamp="1700516585068" timestamp="26071118" />
  <Command __id="6211" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073139" timestamp2="26073139">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6212" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073139" timestamp2="26073139">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6214" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073187" timestamp2="26073187">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6215" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073187" timestamp2="26073187">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6217" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073289" timestamp2="26073289">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6218" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073289" timestamp2="26073289">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6220" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073521" timestamp2="26073521">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="6221" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073522" timestamp2="26073522">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="6223" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073654" timestamp2="26073654">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6224" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073654" timestamp2="26073654">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6226" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073749" timestamp2="26073749">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6227" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073749" timestamp2="26073749">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6229" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073884" timestamp2="26073884">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6230" _type="InsertStringCommand" date="Mon Nov 20 23:57:38 EST 2023" starttimestamp="1700516585068" timestamp="26073884" timestamp2="26073884">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6232" _type="InsertStringCommand" date="Mon Nov 20 23:57:39 EST 2023" starttimestamp="1700516585068" timestamp="26074433" timestamp2="26074433">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6233" _type="InsertStringCommand" date="Mon Nov 20 23:57:39 EST 2023" starttimestamp="1700516585068" timestamp="26074433" timestamp2="26074433">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6235" _type="InsertStringCommand" date="Mon Nov 20 23:57:39 EST 2023" starttimestamp="1700516585068" timestamp="26074509" timestamp2="26074509">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6236" _type="InsertStringCommand" date="Mon Nov 20 23:57:39 EST 2023" starttimestamp="1700516585068" timestamp="26074509" timestamp2="26074509">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="6238" _type="InsertStringCommand" date="Mon Nov 20 23:57:39 EST 2023" starttimestamp="1700516585068" timestamp="26074857" timestamp2="26074857">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6239" _type="InsertStringCommand" date="Mon Nov 20 23:57:39 EST 2023" starttimestamp="1700516585068" timestamp="26074857" timestamp2="26074857">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6240" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 23:57:39 EST 2023" start_end="START" starttimestamp="1700516585068" timestamp="26074863" />
  <Command __id="6241" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 23:57:41 EST 2023" start_end="END" starttimestamp="1700516585068" timestamp="26076013" />
  <Command __id="6242" _type="MoveCaretCommand" caretOffset="376" date="Mon Nov 20 23:57:41 EST 2023" docOffset="376" starttimestamp="1700516585068" timestamp="26076099" />
  <Command __id="6243" _type="MoveCaretCommand" caretOffset="376" date="Mon Nov 20 23:57:41 EST 2023" docOffset="376" starttimestamp="1700516585068" timestamp="26076100" />
  <Command __id="6244" _type="MoveCaretCommand" caretOffset="376" date="Mon Nov 20 23:57:41 EST 2023" docOffset="376" starttimestamp="1700516585068" timestamp="26076750" />
  <Command __id="6245" _type="MoveCaretCommand" caretOffset="376" date="Mon Nov 20 23:57:41 EST 2023" docOffset="376" starttimestamp="1700516585068" timestamp="26076750" />
  <Command __id="6253" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:57:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26083349" type="Run" />
  <Command __id="6254" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 23:57:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26083349" type="Run" />
  <Command __id="6255" _type="ShellCommand" date="Mon Nov 20 23:57:48 EST 2023" starttimestamp="1700516585068" timestamp="26083653" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6256" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088891" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"31¶Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length "), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="6257" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088892" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6258" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088899" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="6259" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088899" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="6260" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088915" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6261" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088916" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (+ 1 2))
(QUOTE (+ 3 4))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(QUOTE (+ 1 2))¶(QUOTE (+ 3 4))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6262" _type="ExceptionCommand" date="Mon Nov 20 23:57:53 EST 2023" starttimestamp="1700516585068" timestamp="26088916" type="Exception">
    <exceptionString><![CDATA[java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6263" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088917" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(QUOTE (+ 1 2))¶(QUOTE (+ 3 4)"), Diff(INSERT,"	at java.base/java.util.Objects.checkIndex(Objects.java:372)¶	at java.base/java.util.ArrayList.get(ArrayList.java:459)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6264" _type="ConsoleOutput" date="Mon Nov 20 23:57:53 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088921" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/java.util.Objects.checkIndex(Objects"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"372"), Diff(INSERT,"111"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"ava.util.ArrayList.get(ArrayList.java:459)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker"), Diff(INSERT,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:5"), Diff(INSERT,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"21"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"57"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="6265" _type="ConsoleOutput" date="Mon Nov 20 23:57:54 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26088943" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"135"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"8"), Diff(INSERT,"45"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(INSERT,"8"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <DocumentChange __id="6210" _type="Insert" date="Mon Nov 20 23:57:38 EST 2023" docASTNodeCount="82" docActiveCodeLength="445" docExpressionCount="63" docLength="716" length="10" offset="401" repeat="10" starttimestamp="1700516585068" timestamp="26073137" timestamp2="26074853">
    <text><![CDATA[getHead().]]></text>
  </DocumentChange>
  <Command __id="6266" _type="ShellCommand" date="Mon Nov 20 23:57:57 EST 2023" starttimestamp="1700516585068" timestamp="26092282" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6267" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:58:16 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26111116">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6268" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:58:16 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="26111167" />
  <Command __id="6269" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:58:16 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26111754">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6270" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:58:16 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="26111802" />
  <Command __id="6271" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:59:02 EST 2023" docASTNodeCount="82" docActiveCodeLength="445" docExpressionCount="63" docLength="716" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26157207">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		System.out.println(expr.getTail().getHead().toString());		return expr.getTail()."), Diff(INSERT,"getHead()."), Diff(EQUAL,"eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		System.out.println(expr.getTail().getHead().toString());
		return expr.getTail().getHead().eval(environment);
	}
	
//	public static SExpression evalHelper(SExpression expr, Environment environment) {
//		if(expr.isAtom()) {
//			return expr.eval(environment);
//		}
//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
//		
//	}

}
]]></snapshot>
  </Command>
  <Command __id="6273" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:59:03 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26158855">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6274" _type="LocalChecksRawCommand" date="Mon Nov 20 23:59:03 EST 2023" starttimestamp="1700516585068" timestamp="26158857">
    <CSVRow><![CDATA[127,Mon Nov 20 23:57:53 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,73,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6275" _type="LocalChecksRawCommand" date="Mon Nov 20 23:59:03 EST 2023" starttimestamp="1700516585068" timestamp="26158857">
    <CSVRow><![CDATA[127,Mon Nov 20 23:57:53 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,73,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6276" _type="SelectTextCommand" caretOffset="56" date="Mon Nov 20 23:59:03 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="26158902" />
  <Command __id="6277" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:59:04 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26159263">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6278" _type="SelectTextCommand" caretOffset="190" date="Mon Nov 20 23:59:04 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="26159313" />
  <Command __id="6280" _type="MoveCaretCommand" caretOffset="964" date="Mon Nov 20 23:59:05 EST 2023" docOffset="964" starttimestamp="1700516585068" timestamp="26160577" />
  <Command __id="6281" _type="MoveCaretCommand" caretOffset="1377" date="Mon Nov 20 23:59:07 EST 2023" docOffset="1377" starttimestamp="1700516585068" timestamp="26162542" />
  <Command __id="6282" _type="MoveCaretCommand" caretOffset="1381" date="Mon Nov 20 23:59:08 EST 2023" docOffset="1381" starttimestamp="1700516585068" timestamp="26163553" />
  <Command __id="6283" _type="MoveCaretCommand" caretOffset="1477" date="Mon Nov 20 23:59:11 EST 2023" docOffset="1477" starttimestamp="1700516585068" timestamp="26166423" />
  <Command __id="6284" _type="ShellCommand" date="Mon Nov 20 23:59:22 EST 2023" starttimestamp="1700516585068" timestamp="26177592" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6285" _type="ShellCommand" date="Mon Nov 20 23:59:30 EST 2023" starttimestamp="1700516585068" timestamp="26185483" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6286" _type="ShellCommand" date="Tue Nov 21 00:00:14 EST 2023" starttimestamp="1700516585068" timestamp="26229892" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6287" _type="ConsoleOutput" date="Tue Nov 21 00:00:16 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26231768" type="ConsoleOutput">
    <outputString><![CDATA[
Error finding call to QUOTE try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):2
Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)"), Diff(INSERT,"¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):2¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6288" _type="ShellCommand" date="Tue Nov 21 00:00:24 EST 2023" starttimestamp="1700516585068" timestamp="26239468" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6289" _type="ShellCommand" date="Tue Nov 21 00:00:27 EST 2023" starttimestamp="1700516585068" timestamp="26242193" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6290" _type="ShellCommand" date="Tue Nov 21 00:00:37 EST 2023" starttimestamp="1700516585068" timestamp="26252132" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6291" _type="ShellCommand" date="Tue Nov 21 00:00:37 EST 2023" starttimestamp="1700516585068" timestamp="26252923" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6298" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:01:00 EST 2023" starttimestamp="1700516585068" timestamp="26275016" />
  <Command __id="6299" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:01:00 EST 2023" starttimestamp="1700516585068" timestamp="26275017" />
  <Command __id="6300" _type="ShellCommand" date="Tue Nov 21 00:01:01 EST 2023" starttimestamp="1700516585068" timestamp="26276012" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6301" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:01:01 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26276476" type="Run" />
  <Command __id="6302" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:01:01 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26276476" type="Run" />
  <Command __id="6303" _type="ShellCommand" date="Tue Nov 21 00:01:01 EST 2023" starttimestamp="1700516585068" timestamp="26276920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6304" _type="ShellCommand" date="Tue Nov 21 00:01:03 EST 2023" starttimestamp="1700516585068" timestamp="26278675" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6305" _type="LocalChecksRawCommand" date="Tue Nov 21 00:01:03 EST 2023" starttimestamp="1700516585068" timestamp="26278679">
    <CSVRow><![CDATA[128,Tue Nov 21 00:00:16 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,73,1,false, , , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6306" _type="LocalChecksRawCommand" date="Tue Nov 21 00:01:03 EST 2023" starttimestamp="1700516585068" timestamp="26278679">
    <CSVRow><![CDATA[128,Tue Nov 21 00:00:16 EST 2023,11,0,QuoteTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,73,1,false, , , ,QuoteTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6307" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:01:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26278924" type="Run" />
  <Command __id="6308" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:01:03 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26278924" type="Run" />
  <Command __id="6309" _type="ShellCommand" date="Tue Nov 21 00:01:04 EST 2023" starttimestamp="1700516585068" timestamp="26279243" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6310" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282227" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Error finding call to QUOTE try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):2¶Test Result:QuoteTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6311" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282228" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6312" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282234" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="6313" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282235" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6314" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282235" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6315" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282251" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6316" _type="ExceptionCommand" date="Tue Nov 21 00:01:07 EST 2023" starttimestamp="1700516585068" timestamp="26282253" type="Exception">
    <exceptionString><![CDATA[(QUOTE (+ 1 2))
(QUOTE (+ 3 4))
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionLastResultChecker.actualOutput(AbstractLispExpressionLastResultChecker.java:5)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6317" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282256" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6318" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282275" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):28
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JCo"), Diff(INSERT,"EventDispatchThread.pu"), Diff(EQUAL,"mp"), Diff(DELETE,"o"), Diff(INSERT,"O"), Diff(EQUAL,"ne"), Diff(DELETE,"nt.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(INSERT,"EventForFilters(EventDispatchThread"), Diff(EQUAL,".java:2"), Diff(DELETE,"26"), Diff(INSERT,"0"), Diff(EQUAL,"3)¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"EventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Compon"), Diff(INSERT,"Thread.pumpEventsForFilter(Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Lightweigh"), Diff(INSERT,"Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(INSERT,"Thread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"4556"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(INSERT,"EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"2307"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Compon"), Diff(INSERT,"EventDispatchThread.pumpEvents(Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt.Event"), Diff(DELETE,"Queue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)"), Diff(INSERT,"DispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):28"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6319" _type="ConsoleOutput" date="Tue Nov 21 00:01:07 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26282287" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):28"), Diff(INSERT,"Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6279" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 23:59:05 EST 2023" docASTNodeCount="231" docActiveCodeLength="1454" docExpressionCount="170" docLength="1681" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26160532">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6321" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:01:14 EST 2023" projectName="null" starttimestamp="1700516585068" timestamp="26289525">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6324" _type="ShellCommand" date="Tue Nov 21 00:01:15 EST 2023" starttimestamp="1700516585068" timestamp="26290644" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6325" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:01:20 EST 2023" docASTNodeCount="231" docActiveCodeLength="1454" docExpressionCount="170" docLength="1681" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26295638">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6328" _type="LocalChecksRawCommand" date="Tue Nov 21 00:01:32 EST 2023" starttimestamp="1700516585068" timestamp="26307307">
    <CSVRow><![CDATA[129,Tue Nov 21 00:01:07 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,74,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6329" _type="LocalChecksRawCommand" date="Tue Nov 21 00:01:32 EST 2023" starttimestamp="1700516585068" timestamp="26307307">
    <CSVRow><![CDATA[129,Tue Nov 21 00:01:07 EST 2023,11,0,LoadChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringCheckerBasic ListToStringDeepCheckerBasic MainClassProvided TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,74,0,false, ,ClassRegistryProvided MainClassProvided TestLispFileProvided , ,LoadChecker-(0.0/0.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6330" _type="MoveCaretCommand" caretOffset="1477" date="Tue Nov 21 00:01:32 EST 2023" docOffset="1477" starttimestamp="1700516585068" timestamp="26307351" />
  <Command __id="6331" _type="ShellCommand" date="Tue Nov 21 00:01:35 EST 2023" starttimestamp="1700516585068" timestamp="26310145" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6332" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:01:35 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26310630" type="Run" />
  <Command __id="6333" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:01:35 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26310630" type="Run" />
  <Command __id="6334" _type="ShellCommand" date="Tue Nov 21 00:01:35 EST 2023" starttimestamp="1700516585068" timestamp="26310632" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6335" _type="MoveCaretCommand" caretOffset="1475" date="Tue Nov 21 00:01:36 EST 2023" docOffset="1475" starttimestamp="1700516585068" timestamp="26311684" />
  <Command __id="6336" _type="MoveCaretCommand" caretOffset="1475" date="Tue Nov 21 00:01:36 EST 2023" docOffset="1475" starttimestamp="1700516585068" timestamp="26311684" />
  <Command __id="6337" _type="MoveCaretCommand" caretOffset="1557" date="Tue Nov 21 00:01:40 EST 2023" docOffset="1557" starttimestamp="1700516585068" timestamp="26315132" />
  <Command __id="6338" _type="MoveCaretCommand" caretOffset="1557" date="Tue Nov 21 00:01:40 EST 2023" docOffset="1557" starttimestamp="1700516585068" timestamp="26315132" />
  <Command __id="6339" _type="MoveCaretCommand" caretOffset="1620" date="Tue Nov 21 00:01:42 EST 2023" docOffset="1620" starttimestamp="1700516585068" timestamp="26317643" />
  <Command __id="6340" _type="MoveCaretCommand" caretOffset="1620" date="Tue Nov 21 00:01:42 EST 2023" docOffset="1620" starttimestamp="1700516585068" timestamp="26317643" />
  <Command __id="6341" _type="MoveCaretCommand" caretOffset="1624" date="Tue Nov 21 00:01:43 EST 2023" docOffset="1624" starttimestamp="1700516585068" timestamp="26318266" />
  <Command __id="6342" _type="MoveCaretCommand" caretOffset="1624" date="Tue Nov 21 00:01:43 EST 2023" docOffset="1624" starttimestamp="1700516585068" timestamp="26318266" />
  <Command __id="6343" _type="MoveCaretCommand" caretOffset="1625" date="Tue Nov 21 00:01:43 EST 2023" docOffset="1625" starttimestamp="1700516585068" timestamp="26318687" />
  <Command __id="6344" _type="MoveCaretCommand" caretOffset="1625" date="Tue Nov 21 00:01:43 EST 2023" docOffset="1625" starttimestamp="1700516585068" timestamp="26318687" />
  <Command __id="6345" _type="MoveCaretCommand" caretOffset="1626" date="Tue Nov 21 00:01:44 EST 2023" docOffset="1626" starttimestamp="1700516585068" timestamp="26319078" />
  <Command __id="6346" _type="MoveCaretCommand" caretOffset="1626" date="Tue Nov 21 00:01:44 EST 2023" docOffset="1626" starttimestamp="1700516585068" timestamp="26319078" />
  <Command __id="6347" _type="MoveCaretCommand" caretOffset="1627" date="Tue Nov 21 00:01:44 EST 2023" docOffset="1627" starttimestamp="1700516585068" timestamp="26319829" />
  <Command __id="6348" _type="MoveCaretCommand" caretOffset="1627" date="Tue Nov 21 00:01:44 EST 2023" docOffset="1627" starttimestamp="1700516585068" timestamp="26319829" />
  <Command __id="6349" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 00:01:46 EST 2023" docOffset="910" starttimestamp="1700516585068" timestamp="26320957" />
  <Command __id="6350" _type="MoveCaretCommand" caretOffset="910" date="Tue Nov 21 00:01:46 EST 2023" docOffset="910" starttimestamp="1700516585068" timestamp="26320957" />
  <Command __id="6351" _type="MoveCaretCommand" caretOffset="1038" date="Tue Nov 21 00:02:04 EST 2023" docOffset="1038" starttimestamp="1700516585068" timestamp="26339836" />
  <Command __id="6352" _type="MoveCaretCommand" caretOffset="1038" date="Tue Nov 21 00:02:04 EST 2023" docOffset="1038" starttimestamp="1700516585068" timestamp="26339836" />
  <Command __id="6353" _type="MoveCaretCommand" caretOffset="1037" date="Tue Nov 21 00:02:05 EST 2023" docOffset="1037" starttimestamp="1700516585068" timestamp="26340491" />
  <Command __id="6354" _type="MoveCaretCommand" caretOffset="1037" date="Tue Nov 21 00:02:05 EST 2023" docOffset="1037" starttimestamp="1700516585068" timestamp="26340491" />
  <Command __id="6355" _type="MoveCaretCommand" caretOffset="1037" date="Tue Nov 21 00:02:06 EST 2023" docOffset="1037" starttimestamp="1700516585068" timestamp="26341848" />
  <Command __id="6356" _type="MoveCaretCommand" caretOffset="1037" date="Tue Nov 21 00:02:06 EST 2023" docOffset="1037" starttimestamp="1700516585068" timestamp="26341848" />
  <Command __id="6357" _type="SelectTextCommand" caretOffset="1037" date="Tue Nov 21 00:02:07 EST 2023" end="1037" start="1033" starttimestamp="1700516585068" timestamp="26341992" />
  <Command __id="6358" _type="SelectTextCommand" caretOffset="1037" date="Tue Nov 21 00:02:07 EST 2023" end="1037" start="1033" starttimestamp="1700516585068" timestamp="26341992" />
  <Command __id="6359" _type="MoveCaretCommand" caretOffset="1196" date="Tue Nov 21 00:02:07 EST 2023" docOffset="1196" starttimestamp="1700516585068" timestamp="26342454" />
  <Command __id="6360" _type="MoveCaretCommand" caretOffset="1196" date="Tue Nov 21 00:02:07 EST 2023" docOffset="1196" starttimestamp="1700516585068" timestamp="26342454" />
  <Command __id="6361" _type="MoveCaretCommand" caretOffset="1185" date="Tue Nov 21 00:02:07 EST 2023" docOffset="1185" starttimestamp="1700516585068" timestamp="26342853" />
  <Command __id="6362" _type="MoveCaretCommand" caretOffset="1185" date="Tue Nov 21 00:02:07 EST 2023" docOffset="1185" starttimestamp="1700516585068" timestamp="26342853" />
  <Command __id="6363" _type="SelectTextCommand" caretOffset="1188" date="Tue Nov 21 00:02:08 EST 2023" end="1188" start="1163" starttimestamp="1700516585068" timestamp="26343014" />
  <Command __id="6364" _type="SelectTextCommand" caretOffset="1188" date="Tue Nov 21 00:02:08 EST 2023" end="1188" start="1163" starttimestamp="1700516585068" timestamp="26343014" />
  <Command __id="6365" _type="MoveCaretCommand" caretOffset="1156" date="Tue Nov 21 00:02:09 EST 2023" docOffset="1156" starttimestamp="1700516585068" timestamp="26344321" />
  <Command __id="6366" _type="MoveCaretCommand" caretOffset="1156" date="Tue Nov 21 00:02:09 EST 2023" docOffset="1156" starttimestamp="1700516585068" timestamp="26344321" />
  <Command __id="6327" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:01:32 EST 2023" docASTNodeCount="231" docActiveCodeLength="1454" docExpressionCount="170" docLength="1681" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26307305">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6367" _type="SelectTextCommand" caretOffset="1197" date="Tue Nov 21 00:02:13 EST 2023" end="1317" start="1197" starttimestamp="1700516585068" timestamp="26348930" />
  <Command __id="6368" _type="SelectTextCommand" caretOffset="1197" date="Tue Nov 21 00:02:13 EST 2023" end="1317" start="1197" starttimestamp="1700516585068" timestamp="26348930" />
  <Command __id="6370" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:02:15 EST 2023" starttimestamp="1700516585068" timestamp="26350744" />
  <Command __id="6371" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:02:15 EST 2023" starttimestamp="1700516585068" timestamp="26350745" />
  <Command __id="6373" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:02:16 EST 2023" starttimestamp="1700516585068" timestamp="26351005" />
  <Command __id="6374" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:02:16 EST 2023" starttimestamp="1700516585068" timestamp="26351005" />
  <Command __id="6376" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:02:16 EST 2023" starttimestamp="1700516585068" timestamp="26351354" />
  <Command __id="6377" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:02:16 EST 2023" starttimestamp="1700516585068" timestamp="26351354" />
  <Command __id="6378" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 00:02:17 EST 2023" starttimestamp="1700516585068" timestamp="26352352" />
  <Command __id="6379" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:02:17 EST 2023" starttimestamp="1700516585068" timestamp="26352454" />
  <Command __id="6380" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:02:17 EST 2023" starttimestamp="1700516585068" timestamp="26352461" />
  <Command __id="6383" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:02:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26359330" type="Run" />
  <Command __id="6384" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:02:24 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26359330" type="Run" />
  <Command __id="6385" _type="ShellCommand" date="Tue Nov 21 00:02:24 EST 2023" starttimestamp="1700516585068" timestamp="26359648" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6386" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362869" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length "), Diff(INSERT,"execution time (ms):"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="6387" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362870" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6388" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362875" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6389" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362876" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6390" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362877" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6391" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362877" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6392" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362893" type="ConsoleOutput">
    <outputString><![CDATA[Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp"
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6393" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362895" type="ConsoleOutput">
    <outputString><![CDATA[(LIST 1 2)
(LIST 3 4)
(QUOTE (+ 1 2))
((+ 1 2))
(QUOTE (+ 3 4))
((+ 3 4))
T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Filename: "/Users/shanw25/College/JuniorFall/COMP524/Assignment5/test.lisp""), Diff(INSERT,"(LIST 1 2)¶(LIST 3 4)¶(QUOTE (+ 1 2))¶((+ 1 2))¶(QUOTE (+ 3 4))¶((+ 3 4))¶T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6394" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362898" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(LIST 1 2)¶(LIST 3 4)¶(QUOTE (+ 1 2))¶((+ 1 2))¶(QUOTE (+ 3 4))¶((+ 3 4))¶T"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6395" _type="ConsoleOutput" date="Tue Nov 21 00:02:27 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26362899" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:LoadChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6396" _type="ConsoleOutput" date="Tue Nov 21 00:02:30 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26365514" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
Test Result:ConsTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to CONS
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):3¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Loa"), Diff(INSERT,"ConsTeste"), Diff(EQUAL,"dChecker,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"Expecting in test file a call to CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6397" _type="ConsoleOutput" date="Tue Nov 21 00:02:31 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26366615" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:QuoteTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"Cons"), Diff(INSERT,"Quote"), Diff(EQUAL,"TestedChecker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Expecting in test file a call to CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6398" _type="ConsoleOutput" date="Tue Nov 21 00:02:33 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26368606" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:ListTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="6399" _type="ConsoleOutput" date="Tue Nov 21 00:02:34 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26369848" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:EvalTestedChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="6400" _type="ConsoleOutput" date="Tue Nov 21 00:02:41 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26376516" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Quote"), Diff(EQUAL,"Tested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="6401" _type="ConsoleOutput" date="Tue Nov 21 00:02:42 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26377503" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ListTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶Test Result:"), Diff(DELETE,"Quote"), Diff(INSERT,"List"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="6402" _type="ConsoleOutput" date="Tue Nov 21 00:02:43 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26378215" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:EvalTestedTwoResultsChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶Test Result:"), Diff(DELETE,"List"), Diff(INSERT,"Eval"), Diff(EQUAL,"TestedTwoResultsChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="6403" _type="ConsoleOutput" date="Tue Nov 21 00:02:47 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26382428" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"Eval"), Diff(INSERT,"Cons"), Diff(EQUAL,"TestedTwoResultsChecker,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(INSERT,"Expecting in test file two results of CONS"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6404" _type="ConsoleOutput" date="Tue Nov 21 00:02:48 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26383066" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to COND
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:Con"), Diff(DELETE,"s"), Diff(INSERT,"d"), Diff(EQUAL,"Tested"), Diff(DELETE,"TwoResults"), Diff(EQUAL,"Checker,0.0% complete,0.0,10.0,Expecting in test file "), Diff(DELETE,"two results of"), Diff(INSERT,"a call to"), Diff(EQUAL," CON"), Diff(DELETE,"S"), Diff(INSERT,"D"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6405" _type="ConsoleOutput" date="Tue Nov 21 00:02:49 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26384347" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):0¶Test Result:CondTested"), Diff(INSERT,"Results"), Diff(EQUAL,"Checker,0.0% complete,0.0,"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"0.0,Expecting in test file "), Diff(DELETE,"a call to COND"), Diff(INSERT,"3 or more results of CONDwith 3 or more cases"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6430" _type="LocalChecksRawCommand" date="Tue Nov 21 00:02:56 EST 2023" starttimestamp="1700516585068" timestamp="26391083">
    <CSVRow><![CDATA[139,Tue Nov 21 00:02:48 EST 2023,23,0,CondTestedChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,75,9,false, , , ,CondTestedChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6431" _type="LocalChecksRawCommand" date="Tue Nov 21 00:02:56 EST 2023" starttimestamp="1700516585068" timestamp="26391083">
    <CSVRow><![CDATA[140,Tue Nov 21 00:02:49 EST 2023,23,0,CondTestedResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,75,10,false, , , ,CondTestedResultsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6432" _type="LocalChecksRawCommand" date="Tue Nov 21 00:02:56 EST 2023" starttimestamp="1700516585068" timestamp="26391083">
    <CSVRow><![CDATA[140,Tue Nov 21 00:02:49 EST 2023,23,0,CondTestedResultsChecker,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,75,10,false, , , ,CondTestedResultsChecker-(0.0/20.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6433" _type="LocalChecksRawCommand" date="Tue Nov 21 00:02:56 EST 2023" starttimestamp="1700516585068" timestamp="26391083">
    <CSVRow><![CDATA[141,Tue Nov 21 00:02:56 EST 2023,23,0,LispInterpreterLoadLogicalSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,75,11,true,AndTestedChecker AndTestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker , , ,AndTestedChecker-(0.0/10.0) AndTestedTwoResultsChecker-(0.0/10.0) NotTestedChecker-(0.0/10.0) NotTestedTwoResultsChecker-(0.0/10.0) OrTestedChecker-(0.0/10.0) OrTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6434" _type="LocalChecksRawCommand" date="Tue Nov 21 00:02:56 EST 2023" starttimestamp="1700516585068" timestamp="26391083">
    <CSVRow><![CDATA[141,Tue Nov 21 00:02:56 EST 2023,23,0,LispInterpreterLoadLogicalSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided EvalTestedChecker EvalTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerBasic ListToStringDeepCheckerBasic LoadChecker MainClassProvided QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,75,11,true,AndTestedChecker AndTestedTwoResultsChecker NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker , , ,AndTestedChecker-(0.0/10.0) AndTestedTwoResultsChecker-(0.0/10.0) NotTestedChecker-(0.0/10.0) NotTestedTwoResultsChecker-(0.0/10.0) OrTestedChecker-(0.0/10.0) OrTestedTwoResultsChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="6435" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393854" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:GreaterTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to >


Test execution time (ms):1
Test Result:GreaterTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of >


Test execution time (ms):1
Test Result:LessTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to <


Test execution time (ms):1
Test Result:LessTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of <
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:OrTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of OR"), Diff(INSERT,"¶Test execution time (ms):1¶Test Result:GreaterTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to >¶¶¶Test execution time (ms):1¶Test Result:GreaterTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of >¶¶¶Test execution time (ms):1¶Test Result:LessTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to <¶¶¶Test execution time (ms):1¶Test Result:LessTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of <"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6436" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393855" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:GorETestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to >=

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1¶Test Result:GreaterTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to >¶¶¶Test execution time (ms):1¶Test Result:GreaterTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of >¶¶¶Test execution time (ms):1¶Test Result:LessTestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to <¶¶¶Test execution time (ms):1¶Test Result:LessTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of <"), Diff(INSERT,"0¶Test Result:GorETestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to >=¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6437" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393856" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:GorETestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of >=
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):0¶Test Result:GorETested"), Diff(INSERT,"TwoResults"), Diff(EQUAL,"Checker,0.0% complete,0.0,10.0,Expecting in test file "), Diff(DELETE,"a call to"), Diff(INSERT,"two results of"), Diff(EQUAL," >=¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="6438" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393856" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:GorETestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of >=¶")]]]></diff>
  </Command>
  <Command __id="6439" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393857" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedChecker,0.0% complete,0.0,10.0,Expecting in test file a call to <=
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:LorETestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):0"), Diff(INSERT,"ng in test file a call to <="), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6440" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393858" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:LorETestedChecker,0.0% complete,0.0,10.0,Exp"), Diff(INSERT,"ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"ng in test file a call to <="), Diff(INSERT,"on time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6441" _type="ConsoleOutput" date="Tue Nov 21 00:02:58 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26393859" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LorETestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of <=
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"ex"), Diff(INSERT,"Result:LorETestedTwoResultsChecker,0.0% complete,0.0,10.0,Exp"), Diff(EQUAL,"ec"), Diff(DELETE,"u"), Diff(EQUAL,"ti"), Diff(DELETE,"on time (ms):1"), Diff(INSERT,"ng in test file two results of <="), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6442" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395658" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
(5 . 2)
Test execution time (ms):4
Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LorETestedTwoResults"), Diff(INSERT,"(5 . 2)¶(5 . 2)¶Test execution time (ms):4¶Test Result:BaseCaseSExpressionToString"), Diff(EQUAL,"Checker,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"Expecting in test file two results of <="), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6443" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395660" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"(5"), Diff(DELETE," . 2"), Diff(EQUAL,")¶(5"), Diff(DELETE," . 2)¶Test execution time (ms):4¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,")¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6444" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395660" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6445" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395662" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6446" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395667" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):3
Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):3¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"BaseCase"), Diff(EQUAL,"ListToStringChecker"), Diff(INSERT,"Basic"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶")]]]></diff>
  </Command>
  <Command __id="6447" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395670" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (LIST 1 (AND T T)))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"("), Diff(DELETE,"5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,100.0% complete,15.0,15.0,"), Diff(INSERT,"QUOTE (LIST 1 (AND T T)))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6448" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395670" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(QUOTE (LIST 1 (AND T T)))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6449" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395670" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6450" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395674" type="ConsoleOutput">
    <outputString><![CDATA[(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
(5 (("A" . "6")) (7))
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:"), Diff(INSERT,"(5 (("A" . "6")) (7))¶(5 ("), Diff(EQUAL,"(""), Diff(DELETE,"a"), Diff(INSERT,"A"), Diff(EQUAL,"" "), Diff(DELETE,"(1 . 2) (1 T))actual string (LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶"), Diff(INSERT,". "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6451" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395674" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶(5 (("A" . "6")) (7))¶Test execution time (ms):2"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6452" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395675" type="ConsoleOutput">
    <outputString><![CDATA[(QUOTE (LIST 1 (AND T T)))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
(LIST "a" (1 . 2) ((LIST 1 (AND T T))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,¶"), Diff(INSERT,"(QUOTE (LIST 1 (AND T T)))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6453" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395676" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(QUOTE (LIST 1 (AND T T)))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))¶(LIST "a" (1 . 2) ((LIST 1 (AND T T))))"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6454" _type="ConsoleOutput" date="Tue Nov 21 00:03:00 EST 2023" overflow="false" starttimestamp="1700516585068" timestamp="26395676" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Expected strings:("a" . ((1 . 2) . ((1 . (T . NIL)) . NIL)))actual string (LIST . ("a" . ((1 . 2) . (((LIST . (1 . ((AND . (T . (T . NIL))) . NIL))) . NIL) . NIL))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="6369" _type="Delete" date="Tue Nov 21 00:02:15 EST 2023" docASTNodeCount="227" docActiveCodeLength="1379" docExpressionCount="167" docLength="1559" endLine="36" length="122" offset="1195" repeat="3" startLine="33" starttimestamp="1700516585068" timestamp="26350735" timestamp2="26351350">
    <text><![CDATA[

            // Clear any previous property change listeners
            interpreterModel.clearPropertyChangeListeners();]]></text>
  </DocumentChange>
  <Command __id="6475" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:03:14 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26409443" type="Run" />
  <Command __id="6476" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Nov 21 00:03:14 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26409444" type="Run" />
  <Command __id="6477" _type="ShellCommand" date="Tue Nov 21 00:03:14 EST 2023" starttimestamp="1700516585068" timestamp="26409448" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6479" _type="MoveCaretCommand" caretOffset="432" date="Tue Nov 21 00:03:48 EST 2023" docOffset="432" starttimestamp="1700516585068" timestamp="26443671" />
  <Command __id="6480" _type="MoveCaretCommand" caretOffset="376" date="Tue Nov 21 00:03:51 EST 2023" docOffset="376" starttimestamp="1700516585068" timestamp="26446554" />
  <Command __id="6481" _type="MoveCaretCommand" caretOffset="376" date="Tue Nov 21 00:03:51 EST 2023" docOffset="376" starttimestamp="1700516585068" timestamp="26446554" />
  <Command __id="6483" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 00:03:52 EST 2023" starttimestamp="1700516585068" timestamp="26447471" />
  <Command __id="6478" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:03:48 EST 2023" docASTNodeCount="82" docActiveCodeLength="445" docExpressionCount="63" docLength="716" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26443623">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		System.out.println(expr.getTail().getHead().toString());		return expr.getTail().getHead().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="6482" _type="Delete" date="Tue Nov 21 00:03:52 EST 2023" docASTNodeCount="69" docActiveCodeLength="386" docExpressionCount="51" docLength="657" endLine="12" length="59" offset="318" startLine="11" starttimestamp="1700516585068" timestamp="26447466">
    <text><![CDATA[		System.out.println(expr.getTail().getHead().toString());
]]></text>
  </DocumentChange>
  <DocumentChange __id="6486" _type="Delete" date="Tue Nov 21 00:03:54 EST 2023" docASTNodeCount="69" docActiveCodeLength="377" docExpressionCount="51" docLength="377" endLine="20" length="280" offset="373" repeat="4" startLine="12" starttimestamp="1700516585068" timestamp="26449882" timestamp2="26450766">
    <text><![CDATA[
	
//	public static SExpression evalHelper(SExpression expr, Environment environment) {
//		if(expr.isAtom()) {
//			return expr.eval(environment);
//		}
//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
//		
//	}]]></text>
  </DocumentChange>
  <Command __id="6484" _type="SelectTextCommand" caretOffset="376" date="Tue Nov 21 00:03:54 EST 2023" end="653" start="376" starttimestamp="1700516585068" timestamp="26449485" />
  <Command __id="6485" _type="SelectTextCommand" caretOffset="376" date="Tue Nov 21 00:03:54 EST 2023" end="653" start="376" starttimestamp="1700516585068" timestamp="26449485" />
  <Command __id="6487" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:54 EST 2023" starttimestamp="1700516585068" timestamp="26449887" />
  <Command __id="6488" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:54 EST 2023" starttimestamp="1700516585068" timestamp="26449887" />
  <Command __id="6490" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:55 EST 2023" starttimestamp="1700516585068" timestamp="26450061" />
  <Command __id="6491" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:55 EST 2023" starttimestamp="1700516585068" timestamp="26450061" />
  <Command __id="6493" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:55 EST 2023" starttimestamp="1700516585068" timestamp="26450368" />
  <Command __id="6494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:55 EST 2023" starttimestamp="1700516585068" timestamp="26450368" />
  <Command __id="6496" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:55 EST 2023" starttimestamp="1700516585068" timestamp="26450768" />
  <Command __id="6497" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:03:55 EST 2023" starttimestamp="1700516585068" timestamp="26450768" />
  <Command __id="6499" _type="SelectTextCommand" caretOffset="56" date="Tue Nov 21 00:03:56 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="26451870" />
  <Command __id="6500" _type="MoveCaretCommand" caretOffset="294" date="Tue Nov 21 00:03:58 EST 2023" docOffset="294" starttimestamp="1700516585068" timestamp="26452945" />
  <Command __id="6501" _type="MoveCaretCommand" caretOffset="294" date="Tue Nov 21 00:03:58 EST 2023" docOffset="294" starttimestamp="1700516585068" timestamp="26452945" />
  <Command __id="6503" _type="SelectTextCommand" caretOffset="190" date="Tue Nov 21 00:03:58 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="26453600" />
  <Command __id="6504" _type="MoveCaretCommand" caretOffset="227" date="Tue Nov 21 00:03:59 EST 2023" docOffset="396" starttimestamp="1700516585068" timestamp="26454431" />
  <Command __id="6505" _type="MoveCaretCommand" caretOffset="227" date="Tue Nov 21 00:03:59 EST 2023" docOffset="396" starttimestamp="1700516585068" timestamp="26454431" />
  <Command __id="6506" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 00:03:59 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="26454929" />
  <Command __id="6507" _type="MoveCaretCommand" caretOffset="337" date="Tue Nov 21 00:03:59 EST 2023" docOffset="506" starttimestamp="1700516585068" timestamp="26454929" />
  <Command __id="6508" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 00:04:00 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="26455262" />
  <Command __id="6509" _type="MoveCaretCommand" caretOffset="375" date="Tue Nov 21 00:04:00 EST 2023" docOffset="544" starttimestamp="1700516585068" timestamp="26455262" />
  <Command __id="6510" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 00:04:00 EST 2023" docOffset="588" starttimestamp="1700516585068" timestamp="26455523" />
  <Command __id="6511" _type="MoveCaretCommand" caretOffset="419" date="Tue Nov 21 00:04:00 EST 2023" docOffset="588" starttimestamp="1700516585068" timestamp="26455523" />
  <Command __id="6513" _type="MoveCaretCommand" caretOffset="213" date="Tue Nov 21 00:04:01 EST 2023" docOffset="213" starttimestamp="1700516585068" timestamp="26456564" />
  <Command __id="6498" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:03:56 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26451817">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6502" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:03:58 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26453552">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6512" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:01 EST 2023" docASTNodeCount="227" docActiveCodeLength="1379" docExpressionCount="167" docLength="1559" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26456518">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();"), Diff(DELETE,"            // Clear any previous property change listeners            interpreterModel.clearPropertyChangeListeners();"), Diff(EQUAL,"            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return new NilAtom();
        }

        String fileName = expr.getTail().getHead().eval(environment).toString();
        System.out.println("Filename: " + fileName);
        try {
            // Read all lines from the specified file
        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));

            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            String line;
            while ((line = reader.readLine()) != null) {
                // Process the line here
            	interpreterModel.newInput(line); // Example: Print each line
            }

            return new TAtom();
        } catch (IOException e) {
        	System.out.println(e);
            return new NilAtom();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="6514" _type="MoveCaretCommand" caretOffset="1467" date="Tue Nov 21 00:04:02 EST 2023" docOffset="1467" starttimestamp="1700516585068" timestamp="26457688" />
  <Command __id="6515" _type="MoveCaretCommand" caretOffset="1467" date="Tue Nov 21 00:04:02 EST 2023" docOffset="1467" starttimestamp="1700516585068" timestamp="26457688" />
  <Command __id="6517" _type="MoveCaretCommand" caretOffset="617" date="Tue Nov 21 00:04:04 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="26459162" />
  <Command __id="6518" _type="ShellCommand" date="Tue Nov 21 00:04:06 EST 2023" starttimestamp="1700516585068" timestamp="26461870" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6519" _type="ShellCommand" date="Tue Nov 21 00:04:11 EST 2023" starttimestamp="1700516585068" timestamp="26466103" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6520" _type="ShellCommand" date="Tue Nov 21 00:04:12 EST 2023" starttimestamp="1700516585068" timestamp="26467051" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6521" _type="ShellCommand" date="Tue Nov 21 00:04:15 EST 2023" starttimestamp="1700516585068" timestamp="26469965" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6522" _type="ShellCommand" date="Tue Nov 21 00:04:15 EST 2023" starttimestamp="1700516585068" timestamp="26470420" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6523" _type="ShellCommand" date="Tue Nov 21 00:04:15 EST 2023" starttimestamp="1700516585068" timestamp="26470726" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6525" _type="MoveCaretCommand" caretOffset="373" date="Tue Nov 21 00:04:15 EST 2023" docOffset="373" starttimestamp="1700516585068" timestamp="26470852" />
  <Command __id="6526" _type="MoveCaretCommand" caretOffset="377" date="Tue Nov 21 00:04:16 EST 2023" docOffset="377" starttimestamp="1700516585068" timestamp="26471254" />
  <Command __id="6527" _type="MoveCaretCommand" caretOffset="377" date="Tue Nov 21 00:04:16 EST 2023" docOffset="377" starttimestamp="1700516585068" timestamp="26471254" />
  <Command __id="6528" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Nov 21 00:04:17 EST 2023" starttimestamp="1700516585068" timestamp="26472784" />
  <Command __id="6529" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:04:17 EST 2023" starttimestamp="1700516585068" timestamp="26472896" />
  <Command __id="6530" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:04:17 EST 2023" starttimestamp="1700516585068" timestamp="26472904" />
  <Command __id="6516" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:04 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26459111">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6524" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:15 EST 2023" docASTNodeCount="69" docActiveCodeLength="377" docExpressionCount="51" docLength="377" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26470804">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.SExpression;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(DELETE,"System.out.println(expr.getTail().getHead().toString());		return expr.getTail().getHead().eval(environment);	}	//	public static SExpression evalHelper(SExpression expr, Environment environment) {//		if(expr.isAtom()) {//			return expr.eval(environment);//		}//		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));//		//"), Diff(INSERT,"return expr.getTail().getHead().eval(environment);"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.SExpression;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail().getHead().eval(environment);
	}

}
]]></snapshot>
  </Command>
  <Command __id="6531" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:19 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26474033" />
  <Command __id="6532" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:19 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26474033" />
  <Command __id="6533" _type="MoveCaretCommand" caretOffset="317" date="Tue Nov 21 00:04:19 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="26474281" />
  <Command __id="6534" _type="MoveCaretCommand" caretOffset="317" date="Tue Nov 21 00:04:19 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="26474281" />
  <Command __id="6535" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:19 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26474594" />
  <Command __id="6536" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:19 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26474594" />
  <Command __id="6537" _type="MoveCaretCommand" caretOffset="374" date="Tue Nov 21 00:04:19 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="26474786" />
  <Command __id="6538" _type="MoveCaretCommand" caretOffset="374" date="Tue Nov 21 00:04:19 EST 2023" docOffset="374" starttimestamp="1700516585068" timestamp="26474786" />
  <Command __id="6539" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:20 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26475442" />
  <Command __id="6540" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:20 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26475442" />
  <Command __id="6541" _type="MoveCaretCommand" caretOffset="317" date="Tue Nov 21 00:04:20 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="26475640" />
  <Command __id="6542" _type="MoveCaretCommand" caretOffset="317" date="Tue Nov 21 00:04:20 EST 2023" docOffset="317" starttimestamp="1700516585068" timestamp="26475641" />
  <Command __id="6543" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:21 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26475943" />
  <Command __id="6544" _type="MoveCaretCommand" caretOffset="370" date="Tue Nov 21 00:04:21 EST 2023" docOffset="370" starttimestamp="1700516585068" timestamp="26475943" />
  <Command __id="6545" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:22 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26477485">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6546" _type="MoveCaretCommand" caretOffset="617" date="Tue Nov 21 00:04:22 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="26477547" />
  <Command __id="6547" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:23 EST 2023" docASTNodeCount="55" docActiveCodeLength="361" docExpressionCount="33" docLength="361" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26478368">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		OperationRegistererImpl operationRegistererImpl = new OperationRegistererImpl();		operationRegistererImpl.registerOperations();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6548" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 00:04:23 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="26478415" />
  <Command __id="6549" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:24 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26479713">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6550" _type="MoveCaretCommand" caretOffset="617" date="Tue Nov 21 00:04:24 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="26479769" />
  <Command __id="6551" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:26 EST 2023" docASTNodeCount="227" docActiveCodeLength="1379" docExpressionCount="167" docLength="1559" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26481822">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.TAtom;import main.lisp.parser.terms.SExpression;import main.lisp.interpreter.InterpreterModel;import main.lisp.interpreter.InterpreterModelSingleton;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;public class LoadEvaluator implements Evaluator {    @Override    public SExpression eval(SExpression expr, Environment environment) {        // Ensure the argument is a string        if(expr.getTail().getHead() instanceof NilAtom) {        	return new NilAtom();        }        String fileName = expr.getTail().getHead().eval(environment).toString();        System.out.println("Filename: " + fileName);        try {            // Read all lines from the specified file        	BufferedReader reader = new BufferedReader(new FileReader("test.lisp"));            // Get the singleton instance of the interpreter model            InterpreterModel interpreterModel = InterpreterModelSingleton.get();            String line;            while ((line = reader.readLine()) != null) {                // Process the line here            	interpreterModel.newInput(line); // Example: Print each line            }            return new TAtom();        } catch (IOException e) {        	System.out.println(e);            return new NilAtom();        }    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6552" _type="MoveCaretCommand" caretOffset="1467" date="Tue Nov 21 00:04:26 EST 2023" docOffset="1467" starttimestamp="1700516585068" timestamp="26481870" />
  <Command __id="6554" _type="MoveCaretCommand" caretOffset="617" date="Tue Nov 21 00:04:28 EST 2023" docOffset="617" starttimestamp="1700516585068" timestamp="26483517" />
  <Command __id="6555" _type="ShellCommand" date="Tue Nov 21 00:04:30 EST 2023" starttimestamp="1700516585068" timestamp="26485324" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6556" _type="ShellCommand" date="Tue Nov 21 00:07:14 EST 2023" starttimestamp="1700516585068" timestamp="26649347" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6557" _type="MoveCaretCommand" caretOffset="612" date="Tue Nov 21 00:07:18 EST 2023" docOffset="612" starttimestamp="1700516585068" timestamp="26653488" />
  <Command __id="6558" _type="ShellCommand" date="Tue Nov 21 00:07:23 EST 2023" starttimestamp="1700516585068" timestamp="26658730" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6559" _type="ShellCommand" date="Tue Nov 21 00:07:29 EST 2023" starttimestamp="1700516585068" timestamp="26664778" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6560" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:07:29 EST 2023" starttimestamp="1700516585068" timestamp="26664820" />
  <Command __id="6561" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:07:29 EST 2023" starttimestamp="1700516585068" timestamp="26664828" />
  <Command __id="6563" _type="MoveCaretCommand" caretOffset="0" date="Tue Nov 21 00:07:30 EST 2023" docOffset="0" starttimestamp="1700516585068" timestamp="26664936" />
  <Command __id="6564" _type="ShellCommand" date="Tue Nov 21 00:07:31 EST 2023" starttimestamp="1700516585068" timestamp="26665960" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6565" _type="ShellCommand" date="Tue Nov 21 00:07:31 EST 2023" starttimestamp="1700516585068" timestamp="26666928" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6566" _type="MoveCaretCommand" caretOffset="45" date="Tue Nov 21 00:07:32 EST 2023" docOffset="45" starttimestamp="1700516585068" timestamp="26667671" />
  <Command __id="6553" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:04:28 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26483452">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6562" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:07:29 EST 2023" docASTNodeCount="6" docActiveCodeLength="48" docExpressionCount="2" docLength="48" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26664891">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

public class CondEvaluator {

}
]]></snapshot>
  </Command>
  <Command __id="6568" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:07:34 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26669666">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6567" _type="MoveCaretCommand" caretOffset="15" date="Tue Nov 21 00:07:34 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="26669114" />
  <Command __id="6569" _type="MoveCaretCommand" caretOffset="612" date="Tue Nov 21 00:07:34 EST 2023" docOffset="612" starttimestamp="1700516585068" timestamp="26669721" />
  <Command __id="6571" _type="SelectTextCommand" caretOffset="84" date="Tue Nov 21 00:07:36 EST 2023" end="84" start="70" starttimestamp="1700516585068" timestamp="26671219" />
  <Command __id="6572" _type="SelectTextCommand" caretOffset="84" date="Tue Nov 21 00:07:36 EST 2023" end="84" start="70" starttimestamp="1700516585068" timestamp="26671250" />
  <Command __id="6570" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:07:36 EST 2023" docASTNodeCount="54" docActiveCodeLength="301" docExpressionCount="37" docLength="301" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26671202">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class QuoteEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return expr.getTail();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6575" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:07:40 EST 2023" docASTNodeCount="6" docActiveCodeLength="48" docExpressionCount="2" docLength="48" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26674981">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;public class CondEvaluator {}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6573" _type="SelectTextCommand" caretOffset="56" date="Tue Nov 21 00:07:39 EST 2023" end="93" start="56" starttimestamp="1700516585068" timestamp="26674443" />
  <Command __id="6574" _type="CopyCommand" date="Tue Nov 21 00:07:39 EST 2023" starttimestamp="1700516585068" timestamp="26674586" />
  <Command __id="6576" _type="MoveCaretCommand" caretOffset="15" date="Tue Nov 21 00:07:40 EST 2023" docOffset="15" starttimestamp="1700516585068" timestamp="26675039" />
  <Command __id="6578" _type="InsertStringCommand" date="Tue Nov 21 00:07:41 EST 2023" starttimestamp="1700516585068" timestamp="26676305" timestamp2="26676305">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6580" _type="InsertStringCommand" date="Tue Nov 21 00:07:41 EST 2023" starttimestamp="1700516585068" timestamp="26676410" timestamp2="26676410">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6581" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 00:07:41 EST 2023" starttimestamp="1700516585068" timestamp="26676570" />
  <Command __id="6583" _type="PasteCommand" date="Tue Nov 21 00:07:42 EST 2023" starttimestamp="1700516585068" timestamp="26676958" />
  <Command __id="6584" _type="MoveCaretCommand" caretOffset="47" date="Tue Nov 21 00:07:43 EST 2023" docOffset="47" starttimestamp="1700516585068" timestamp="26678115" />
  <Command __id="6585" _type="SelectTextCommand" caretOffset="52" date="Tue Nov 21 00:07:43 EST 2023" end="52" start="43" starttimestamp="1700516585068" timestamp="26678244" />
  <Command __id="6586" _type="CopyCommand" date="Tue Nov 21 00:07:43 EST 2023" starttimestamp="1700516585068" timestamp="26678348" />
  <Command __id="6587" _type="MoveCaretCommand" caretOffset="82" date="Tue Nov 21 00:07:43 EST 2023" docOffset="82" starttimestamp="1700516585068" timestamp="26678618" />
  <Command __id="6589" _type="InsertStringCommand" date="Tue Nov 21 00:07:44 EST 2023" starttimestamp="1700516585068" timestamp="26679284" timestamp2="26679284">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6591" _type="InsertStringCommand" date="Tue Nov 21 00:07:44 EST 2023" starttimestamp="1700516585068" timestamp="26679357" timestamp2="26679357">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6593" _type="InsertStringCommand" date="Tue Nov 21 00:07:44 EST 2023" starttimestamp="1700516585068" timestamp="26679507" timestamp2="26679507">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6595" _type="InsertStringCommand" date="Tue Nov 21 00:07:44 EST 2023" starttimestamp="1700516585068" timestamp="26679884" timestamp2="26679884">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6597" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680048" timestamp2="26680048">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6599" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680192" timestamp2="26680192">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6601" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680301" timestamp2="26680301">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6603" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680375" timestamp2="26680375">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6605" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680465" timestamp2="26680465">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6607" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680554" timestamp2="26680554">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6609" _type="InsertStringCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680675" timestamp2="26680675">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6611" _type="PasteCommand" date="Tue Nov 21 00:07:45 EST 2023" starttimestamp="1700516585068" timestamp="26680887" />
  <Command __id="6612" _type="ShellCommand" date="Tue Nov 21 00:07:47 EST 2023" starttimestamp="1700516585068" timestamp="26682712" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6613" _type="ShellCommand" date="Tue Nov 21 00:07:47 EST 2023" starttimestamp="1700516585068" timestamp="26682802" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6622" _type="MoveCaretCommand" caretOffset="289" date="Tue Nov 21 00:07:48 EST 2023" docOffset="289" starttimestamp="1700516585068" timestamp="26683765" />
  <Command __id="6623" _type="MoveCaretCommand" caretOffset="237" date="Tue Nov 21 00:07:49 EST 2023" docOffset="237" starttimestamp="1700516585068" timestamp="26684079" />
  <Command __id="6624" _type="SelectTextCommand" caretOffset="264" date="Tue Nov 21 00:07:50 EST 2023" end="313" start="264" starttimestamp="1700516585068" timestamp="26685566" />
  <DocumentChange __id="6577" _type="Insert" date="Tue Nov 21 00:07:41 EST 2023" docASTNodeCount="14" docActiveCodeLength="87" docExpressionCount="9" docLength="87" length="39" offset="15" repeat="3" starttimestamp="1700516585068" timestamp="26676304" timestamp2="26676956">
    <text><![CDATA[
import main.lisp.evaluator.Evaluator;
]]></text>
  </DocumentChange>
  <DocumentChange __id="6588" _type="Insert" date="Tue Nov 21 00:07:44 EST 2023" docASTNodeCount="16" docActiveCodeLength="107" docExpressionCount="10" docLength="107" length="20" offset="82" repeat="12" starttimestamp="1700516585068" timestamp="26679283" timestamp2="26680884">
    <text><![CDATA[implements Evaluator]]></text>
  </DocumentChange>
  <DocumentChange __id="6614" _type="Insert" date="Tue Nov 21 00:07:47 EST 2023" docASTNodeCount="34" docActiveCodeLength="203" docExpressionCount="19" docLength="237" length="130" offset="103" repeat="4" starttimestamp="1700516585068" timestamp="26682819" timestamp2="26682820">
    <text><![CDATA[

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="6618" _type="Insert" date="Tue Nov 21 00:07:47 EST 2023" docASTNodeCount="44" docActiveCodeLength="246" docExpressionCount="28" docLength="280" length="43" offset="53" repeat="2" starttimestamp="1700516585068" timestamp="26682820" timestamp2="26682820">
    <text><![CDATA[
import main.lisp.parser.terms.SExpression;]]></text>
  </DocumentChange>
  <DocumentChange __id="6620" _type="Insert" date="Tue Nov 21 00:07:47 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="320" length="40" offset="16" repeat="2" starttimestamp="1700516585068" timestamp="26682820" timestamp2="26682820">
    <text><![CDATA[import main.lisp.evaluator.Environment;
]]></text>
  </DocumentChange>
  <DocumentChange __id="6627" _type="Replace" date="Tue Nov 21 00:08:00 EST 2023" docASTNodeCount="52" docActiveCodeLength="272" docExpressionCount="35" docLength="272" endLine="11" insertionLength="1" int_docASTNodeCount="50" int_docActiveCodeLength="271" int_docExpressionCount="34" int_docLength="271" length="49" offset="264" startLine="10" starttimestamp="1700516585068" timestamp="26695182">
    <deletedText><![CDATA[// TODO Auto-generated method stub
		return null;]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6629" _type="Insert" date="Tue Nov 21 00:08:00 EST 2023" docASTNodeCount="50" docActiveCodeLength="277" docExpressionCount="34" docLength="277" length="5" offset="265" repeat="3" starttimestamp="1700516585068" timestamp="26695246" timestamp2="26696097">
    <text><![CDATA[f
		r]]></text>
  </DocumentChange>
  <DocumentChange __id="6634" _type="Replace" date="Tue Nov 21 00:08:01 EST 2023" docASTNodeCount="50" docActiveCodeLength="278" docExpressionCount="34" docLength="278" endLine="11" insertionLength="2" int_docASTNodeCount="50" int_docActiveCodeLength="276" int_docExpressionCount="34" int_docLength="276" length="1" offset="269" startLine="11" starttimestamp="1700516585068" timestamp="26696152">
    <deletedText><![CDATA[r]]></deletedText>
    <insertedText><![CDATA[re]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6635" _type="Replace" date="Tue Nov 21 00:08:01 EST 2023" docASTNodeCount="50" docActiveCodeLength="280" docExpressionCount="34" docLength="280" endLine="11" insertionLength="4" int_docASTNodeCount="50" int_docActiveCodeLength="276" int_docExpressionCount="34" int_docLength="276" length="2" offset="269" startLine="11" starttimestamp="1700516585068" timestamp="26696240">
    <deletedText><![CDATA[re]]></deletedText>
    <insertedText><![CDATA[re't]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6636" _type="Replace" date="Tue Nov 21 00:08:01 EST 2023" docASTNodeCount="50" docActiveCodeLength="280" docExpressionCount="34" docLength="280" endLine="11" insertionLength="4" int_docASTNodeCount="50" int_docActiveCodeLength="276" int_docExpressionCount="34" int_docLength="276" length="4" offset="269" startLine="11" starttimestamp="1700516585068" timestamp="26696334">
    <deletedText><![CDATA[re't]]></deletedText>
    <insertedText><![CDATA[retu]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6637" _type="Replace" date="Tue Nov 21 00:08:01 EST 2023" docASTNodeCount="50" docActiveCodeLength="283" docExpressionCount="34" docLength="283" endLine="11" insertionLength="7" int_docASTNodeCount="50" int_docActiveCodeLength="276" int_docExpressionCount="34" int_docLength="276" length="4" offset="269" startLine="11" starttimestamp="1700516585068" timestamp="26696457">
    <deletedText><![CDATA[retu]]></deletedText>
    <insertedText><![CDATA[re'tu'r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6638" _type="Replace" date="Tue Nov 21 00:08:01 EST 2023" docASTNodeCount="50" docActiveCodeLength="282" docExpressionCount="34" docLength="282" endLine="11" insertionLength="6" int_docASTNodeCount="50" int_docActiveCodeLength="276" int_docExpressionCount="34" int_docLength="276" length="7" offset="269" startLine="11" starttimestamp="1700516585068" timestamp="26696495">
    <deletedText><![CDATA[re'tu'r]]></deletedText>
    <insertedText><![CDATA[return]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6639" _type="Delete" date="Tue Nov 21 00:08:01 EST 2023" docASTNodeCount="50" docActiveCodeLength="276" docExpressionCount="34" docLength="276" endLine="11" length="6" offset="269" startLine="11" starttimestamp="1700516585068" timestamp="26696901">
    <text><![CDATA[return]]></text>
  </DocumentChange>
  <DocumentChange __id="6640" _type="Insert" date="Tue Nov 21 00:08:02 EST 2023" docASTNodeCount="52" docActiveCodeLength="288" docExpressionCount="35" docLength="288" length="12" offset="269" repeat="12" starttimestamp="1700516585068" timestamp="26697454" timestamp2="26699066">
    <text><![CDATA[return null;]]></text>
  </DocumentChange>
  <DocumentChange __id="6665" _type="Insert" date="Tue Nov 21 00:08:05 EST 2023" docASTNodeCount="54" docActiveCodeLength="294" docExpressionCount="36" docLength="294" length="6" offset="266" repeat="5" starttimestamp="1700516585068" timestamp="26700789" timestamp2="26702980">
    <text><![CDATA[(arg0)]]></text>
  </DocumentChange>
  <Command __id="6625" _type="MoveCaretCommand" caretOffset="313" date="Tue Nov 21 00:07:58 EST 2023" docOffset="313" starttimestamp="1700516585068" timestamp="26693266" />
  <Command __id="6626" _type="SelectTextCommand" caretOffset="264" date="Tue Nov 21 00:07:59 EST 2023" end="313" start="264" starttimestamp="1700516585068" timestamp="26694225" />
  <Command __id="6628" _type="InsertStringCommand" date="Tue Nov 21 00:08:00 EST 2023" starttimestamp="1700516585068" timestamp="26695189" timestamp2="26695189">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6630" _type="InsertStringCommand" date="Tue Nov 21 00:08:00 EST 2023" starttimestamp="1700516585068" timestamp="26695247" timestamp2="26695247">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="6632" _type="InsertStringCommand" date="Tue Nov 21 00:08:00 EST 2023" starttimestamp="1700516585068" timestamp="26695817" timestamp2="26695817">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6641" _type="InsertStringCommand" date="Tue Nov 21 00:08:02 EST 2023" starttimestamp="1700516585068" timestamp="26697455" timestamp2="26697455">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6643" _type="InsertStringCommand" date="Tue Nov 21 00:08:02 EST 2023" starttimestamp="1700516585068" timestamp="26697532" timestamp2="26697532">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6645" _type="InsertStringCommand" date="Tue Nov 21 00:08:02 EST 2023" starttimestamp="1700516585068" timestamp="26697684" timestamp2="26697684">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6647" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698038" timestamp2="26698038">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6649" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698206" timestamp2="26698206">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6651" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698271" timestamp2="26698271">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6653" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698405" timestamp2="26698405">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6655" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698495" timestamp2="26698495">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6657" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698651" timestamp2="26698651">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6659" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698784" timestamp2="26698784">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6661" _type="InsertStringCommand" date="Tue Nov 21 00:08:03 EST 2023" starttimestamp="1700516585068" timestamp="26698913" timestamp2="26698913">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6663" _type="InsertStringCommand" date="Tue Nov 21 00:08:04 EST 2023" starttimestamp="1700516585068" timestamp="26699068" timestamp2="26699068">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6664" _type="MoveCaretCommand" caretOffset="266" date="Tue Nov 21 00:08:05 EST 2023" docOffset="266" starttimestamp="1700516585068" timestamp="26700054" />
  <Command __id="6666" _type="InsertStringCommand" date="Tue Nov 21 00:08:05 EST 2023" starttimestamp="1700516585068" timestamp="26700794" timestamp2="26700794">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6668" _type="InsertStringCommand" date="Tue Nov 21 00:08:07 EST 2023" starttimestamp="1700516585068" timestamp="26702416" timestamp2="26702416">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6670" _type="InsertStringCommand" date="Tue Nov 21 00:08:07 EST 2023" starttimestamp="1700516585068" timestamp="26702505" timestamp2="26702505">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6672" _type="InsertStringCommand" date="Tue Nov 21 00:08:07 EST 2023" starttimestamp="1700516585068" timestamp="26702699" timestamp2="26702699">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="6674" _type="InsertStringCommand" date="Tue Nov 21 00:08:08 EST 2023" starttimestamp="1700516585068" timestamp="26702984" timestamp2="26702984">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="6676" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26704946" />
  <Command __id="6678" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26705077" />
  <Command __id="6680" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26705216" />
  <Command __id="6682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26705363" />
  <Command __id="6685" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26705502" />
  <Command __id="6687" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26705633" />
  <Command __id="6689" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Nov 21 00:08:10 EST 2023" starttimestamp="1700516585068" timestamp="26705811" />
  <DocumentChange __id="6675" _type="Delete" date="Tue Nov 21 00:08:10 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="286" endLine="10" length="8" offset="264" repeat="8" startLine="10" starttimestamp="1700516585068" timestamp="26704943" timestamp2="26705809">
    <text><![CDATA[if(arg0)]]></text>
  </DocumentChange>
  <Command __id="6690" _type="MoveCaretCommand" caretOffset="279" date="Tue Nov 21 00:08:12 EST 2023" docOffset="279" starttimestamp="1700516585068" timestamp="26707163" />
  <Command __id="6691" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:08:13 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26708356">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6692" _type="MoveCaretCommand" caretOffset="319" date="Tue Nov 21 00:08:13 EST 2023" docOffset="319" starttimestamp="1700516585068" timestamp="26708418" />
  <Command __id="6693" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:08:14 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26709362">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6694" _type="SelectTextCommand" caretOffset="83" date="Tue Nov 21 00:08:14 EST 2023" end="83" start="70" starttimestamp="1700516585068" timestamp="26709389" />
  <Command __id="6695" _type="SelectTextCommand" caretOffset="83" date="Tue Nov 21 00:08:14 EST 2023" end="83" start="70" starttimestamp="1700516585068" timestamp="26709416" />
  <Command __id="6696" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:08:17 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26712448">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6697" _type="MoveCaretCommand" caretOffset="412" date="Tue Nov 21 00:08:17 EST 2023" docOffset="412" starttimestamp="1700516585068" timestamp="26712518" />
  <Command __id="6698" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:08:18 EST 2023" docASTNodeCount="52" docActiveCodeLength="286" docExpressionCount="35" docLength="286" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26713165">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(DELETE,"public class CondEvaluator {"), Diff(INSERT,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {				return null;	}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="6699" _type="MoveCaretCommand" caretOffset="279" date="Tue Nov 21 00:08:18 EST 2023" docOffset="279" starttimestamp="1700516585068" timestamp="26713214" />
  <Command __id="6700" _type="MoveCaretCommand" caretOffset="283" date="Tue Nov 21 00:08:19 EST 2023" docOffset="283" starttimestamp="1700516585068" timestamp="26713967" />
  <DocumentChange __id="6701" _type="Insert" date="Tue Nov 21 00:08:19 EST 2023" docASTNodeCount="93" docActiveCodeLength="553" docExpressionCount="63" docLength="553" length="267" offset="283" repeat="3" starttimestamp="1700516585068" timestamp="26714576" timestamp2="26716075">
    <text><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}
	
	]]></text>
  </DocumentChange>
  <Command __id="6702" _type="InsertStringCommand" date="Tue Nov 21 00:08:19 EST 2023" starttimestamp="1700516585068" timestamp="26714579" timestamp2="26714579">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6704" _type="InsertStringCommand" date="Tue Nov 21 00:08:19 EST 2023" starttimestamp="1700516585068" timestamp="26714698" timestamp2="26714698">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.SELECT_LINE_UP" date="Tue Nov 21 00:08:19 EST 2023" starttimestamp="1700516585068" timestamp="26714892" />
  <Command __id="6706" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue Nov 21 00:08:20 EST 2023" starttimestamp="1700516585068" timestamp="26715864" />
  <DocumentChange __id="6708" _type="Insert" date="Tue Nov 21 00:08:21 EST 2023" docASTNodeCount="103" docActiveCodeLength="602" docExpressionCount="72" docLength="602" length="49" offset="93" repeat="2" starttimestamp="1700516585068" timestamp="26716117" timestamp2="26716118">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <Command __id="6710" _type="PasteCommand" date="Tue Nov 21 00:08:21 EST 2023" starttimestamp="1700516585068" timestamp="26716136" />
  <DocumentChange __id="6711" _type="Delete" date="Tue Nov 21 00:08:21 EST 2023" docASTNodeCount="93" docActiveCodeLength="553" docExpressionCount="63" docLength="553" endLine="4" length="49" offset="93" repeat="2" startLine="3" starttimestamp="1700516585068" timestamp="26716795" timestamp2="26716795">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <DocumentChange __id="6713" _type="Delete" date="Tue Nov 21 00:08:21 EST 2023" docASTNodeCount="52" docActiveCodeLength="290" docExpressionCount="35" docLength="290" endLine="19" length="263" offset="283" startLine="13" starttimestamp="1700516585068" timestamp="26716795">
    <text><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></text>
  </DocumentChange>
  <Command __id="6714" _type="UndoCommand" date="Tue Nov 21 00:08:21 EST 2023" starttimestamp="1700516585068" timestamp="26716805" />
  <Command __id="6715" _type="MoveCaretCommand" caretOffset="287" date="Tue Nov 21 00:08:22 EST 2023" docOffset="287" starttimestamp="1700516585068" timestamp="26717296" />
  <DocumentChange __id="6716" _type="Replace" date="Tue Nov 21 00:08:22 EST 2023" docASTNodeCount="93" docActiveCodeLength="552" docExpressionCount="63" docLength="552" endLine="15" insertionLength="263" int_docASTNodeCount="52" int_docActiveCodeLength="289" int_docExpressionCount="35" int_docLength="289" length="1" offset="286" startLine="15" starttimestamp="1700516585068" timestamp="26717478">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6717" _type="Insert" date="Tue Nov 21 00:08:22 EST 2023" docASTNodeCount="103" docActiveCodeLength="601" docExpressionCount="72" docLength="601" length="49" offset="93" repeat="2" starttimestamp="1700516585068" timestamp="26717506" timestamp2="26717506">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <Command __id="6719" _type="PasteCommand" date="Tue Nov 21 00:08:22 EST 2023" starttimestamp="1700516585068" timestamp="26717526" />
  <DocumentChange __id="6720" _type="Delete" date="Tue Nov 21 00:08:23 EST 2023" docASTNodeCount="93" docActiveCodeLength="552" docExpressionCount="63" docLength="552" endLine="4" length="49" offset="93" repeat="2" startLine="3" starttimestamp="1700516585068" timestamp="26718011" timestamp2="26718012">
    <text><![CDATA[
import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <DocumentChange __id="6722" _type="Replace" date="Tue Nov 21 00:08:23 EST 2023" docASTNodeCount="52" docActiveCodeLength="290" docExpressionCount="35" docLength="290" endLine="21" insertionLength="1" int_docASTNodeCount="52" int_docActiveCodeLength="289" int_docExpressionCount="35" int_docLength="289" length="263" offset="286" startLine="15" starttimestamp="1700516585068" timestamp="26718012">
    <deletedText><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <Command __id="6723" _type="UndoCommand" date="Tue Nov 21 00:08:23 EST 2023" starttimestamp="1700516585068" timestamp="26718023" />
  <Command __id="6724" _type="MoveCaretCommand" caretOffset="285" date="Tue Nov 21 00:08:23 EST 2023" docOffset="285" starttimestamp="1700516585068" timestamp="26718346" />
  <DocumentChange __id="6725" _type="Replace" date="Tue Nov 21 00:08:23 EST 2023" docASTNodeCount="93" docActiveCodeLength="552" docExpressionCount="63" docLength="552" endLine="14" insertionLength="263" int_docASTNodeCount="52" int_docActiveCodeLength="289" int_docExpressionCount="35" int_docLength="289" length="1" offset="284" startLine="14" starttimestamp="1700516585068" timestamp="26718485">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}]]></insertedText>
  </DocumentChange>
  <Command __id="6726" _type="PasteCommand" date="Tue Nov 21 00:08:23 EST 2023" starttimestamp="1700516585068" timestamp="26718538" />
  <Command __id="6728" _type="SelectTextCommand" caretOffset="233" date="Tue Nov 21 00:08:25 EST 2023" end="496" start="233" starttimestamp="1700516585068" timestamp="26720055" />
  <Command __id="6729" _type="SelectTextCommand" caretOffset="227" date="Tue Nov 21 00:08:26 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="26721736" />
  <Command __id="6730" _type="CopyCommand" date="Tue Nov 21 00:08:26 EST 2023" starttimestamp="1700516585068" timestamp="26721835" />
  <Command __id="6731" _type="ShellCommand" date="Tue Nov 21 00:08:27 EST 2023" starttimestamp="1700516585068" timestamp="26722133" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6732" _type="ShellCommand" date="Tue Nov 21 00:08:27 EST 2023" starttimestamp="1700516585068" timestamp="26722758" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6734" _type="MoveCaretCommand" caretOffset="547" date="Tue Nov 21 00:08:28 EST 2023" docOffset="547" starttimestamp="1700516585068" timestamp="26723312" />
  <Command __id="6735" _type="MoveCaretCommand" caretOffset="264" date="Tue Nov 21 00:08:28 EST 2023" docOffset="264" starttimestamp="1700516585068" timestamp="26723790" />
  <Command __id="6737" _type="PasteCommand" date="Tue Nov 21 00:08:29 EST 2023" starttimestamp="1700516585068" timestamp="26724043" />
  <Command __id="6738" _type="MoveCaretCommand" caretOffset="285" date="Tue Nov 21 00:08:30 EST 2023" docOffset="285" starttimestamp="1700516585068" timestamp="26725529" />
  <Command __id="6739" _type="SelectTextCommand" caretOffset="286" date="Tue Nov 21 00:08:30 EST 2023" end="286" start="282" starttimestamp="1700516585068" timestamp="26725694" />
  <Command __id="6740" _type="CopyCommand" date="Tue Nov 21 00:08:30 EST 2023" starttimestamp="1700516585068" timestamp="26725839" />
  <Command __id="6741" _type="MoveCaretCommand" caretOffset="238" date="Tue Nov 21 00:08:31 EST 2023" docOffset="238" starttimestamp="1700516585068" timestamp="26726192" />
  <Command __id="6742" _type="SelectTextCommand" caretOffset="240" date="Tue Nov 21 00:08:31 EST 2023" end="240" start="236" starttimestamp="1700516585068" timestamp="26726350" />
  <Command __id="6744" _type="PasteCommand" date="Tue Nov 21 00:08:31 EST 2023" starttimestamp="1700516585068" timestamp="26726442" />
  <Command __id="6745" _type="MoveCaretCommand" caretOffset="296" date="Tue Nov 21 00:08:31 EST 2023" docOffset="296" starttimestamp="1700516585068" timestamp="26726680" />
  <Command __id="6746" _type="SelectTextCommand" caretOffset="299" date="Tue Nov 21 00:08:31 EST 2023" end="299" start="288" starttimestamp="1700516585068" timestamp="26726804" />
  <Command __id="6747" _type="CopyCommand" date="Tue Nov 21 00:08:31 EST 2023" starttimestamp="1700516585068" timestamp="26726900" />
  <Command __id="6748" _type="MoveCaretCommand" caretOffset="253" date="Tue Nov 21 00:08:32 EST 2023" docOffset="253" starttimestamp="1700516585068" timestamp="26727151" />
  <Command __id="6749" _type="MoveCaretCommand" caretOffset="256" date="Tue Nov 21 00:08:32 EST 2023" docOffset="256" starttimestamp="1700516585068" timestamp="26727458" />
  <Command __id="6750" _type="SelectTextCommand" caretOffset="258" date="Tue Nov 21 00:08:32 EST 2023" end="258" start="254" starttimestamp="1700516585068" timestamp="26727595" />
  <Command __id="6752" _type="PasteCommand" date="Tue Nov 21 00:08:32 EST 2023" starttimestamp="1700516585068" timestamp="26727695" />
  <Command __id="6753" _type="MoveCaretCommand" caretOffset="268" date="Tue Nov 21 00:08:32 EST 2023" docOffset="268" starttimestamp="1700516585068" timestamp="26727872" />
  <Command __id="6754" _type="MoveCaretCommand" caretOffset="308" date="Tue Nov 21 00:08:33 EST 2023" docOffset="308" starttimestamp="1700516585068" timestamp="26728731" />
  <Command __id="6755" _type="SelectTextCommand" caretOffset="317" date="Tue Nov 21 00:08:33 EST 2023" end="317" start="308" starttimestamp="1700516585068" timestamp="26728805" />
  <Command __id="6756" _type="SelectTextCommand" caretOffset="492" date="Tue Nov 21 00:08:34 EST 2023" end="493" start="492" starttimestamp="1700516585068" timestamp="26729348" />
  <Command __id="6757" _type="MoveCaretCommand" caretOffset="464" date="Tue Nov 21 00:08:36 EST 2023" docOffset="464" starttimestamp="1700516585068" timestamp="26731719" />
  <Command __id="6758" _type="MoveCaretCommand" caretOffset="323" date="Tue Nov 21 00:08:37 EST 2023" docOffset="323" starttimestamp="1700516585068" timestamp="26732571" />
  <Command __id="6759" _type="InsertStringCommand" date="Tue Nov 21 00:08:38 EST 2023" starttimestamp="1700516585068" timestamp="26733151" timestamp2="26733151">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6760" _type="MoveCaretCommand" caretOffset="326" date="Tue Nov 21 00:08:38 EST 2023" docOffset="326" starttimestamp="1700516585068" timestamp="26733761" />
  <Command __id="6762" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 00:08:39 EST 2023" starttimestamp="1700516585068" timestamp="26733953" />
  <Command __id="6764" _type="UndoCommand" date="Tue Nov 21 00:08:39 EST 2023" starttimestamp="1700516585068" timestamp="26734635" />
  <Command __id="6765" _type="MoveCaretCommand" caretOffset="323" date="Tue Nov 21 00:08:39 EST 2023" docOffset="323" starttimestamp="1700516585068" timestamp="26734906" />
  <Command __id="6767" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Nov 21 00:08:40 EST 2023" starttimestamp="1700516585068" timestamp="26735091" />
  <Command __id="6768" _type="MoveCaretCommand" caretOffset="311" date="Tue Nov 21 00:08:40 EST 2023" docOffset="311" starttimestamp="1700516585068" timestamp="26735563" />
  <Command __id="6769" _type="MoveCaretCommand" caretOffset="573" date="Tue Nov 21 00:08:41 EST 2023" docOffset="573" starttimestamp="1700516585068" timestamp="26736012" />
  <Command __id="6770" _type="MoveCaretCommand" caretOffset="475" date="Tue Nov 21 00:08:41 EST 2023" docOffset="475" starttimestamp="1700516585068" timestamp="26736247" />
  <Command __id="6771" _type="SelectTextCommand" caretOffset="482" date="Tue Nov 21 00:08:41 EST 2023" end="482" start="465" starttimestamp="1700516585068" timestamp="26736411" />
  <Command __id="6772" _type="MoveCaretCommand" caretOffset="311" date="Tue Nov 21 00:08:42 EST 2023" docOffset="311" starttimestamp="1700516585068" timestamp="26737132" />
  <Command __id="6773" _type="MoveCaretCommand" caretOffset="308" date="Tue Nov 21 00:08:42 EST 2023" docOffset="308" starttimestamp="1700516585068" timestamp="26737509" />
  <Command __id="6774" _type="MoveCaretCommand" caretOffset="312" date="Tue Nov 21 00:08:42 EST 2023" docOffset="312" starttimestamp="1700516585068" timestamp="26737798" />
  <Command __id="6775" _type="MoveCaretCommand" caretOffset="358" date="Tue Nov 21 00:08:43 EST 2023" docOffset="358" starttimestamp="1700516585068" timestamp="26738148" />
  <Command __id="6776" _type="MoveCaretCommand" caretOffset="365" date="Tue Nov 21 00:08:43 EST 2023" docOffset="365" starttimestamp="1700516585068" timestamp="26738506" />
  <Command __id="6777" _type="MoveCaretCommand" caretOffset="417" date="Tue Nov 21 00:08:43 EST 2023" docOffset="417" starttimestamp="1700516585068" timestamp="26738888" />
  <Command __id="6778" _type="MoveCaretCommand" caretOffset="408" date="Tue Nov 21 00:08:44 EST 2023" docOffset="408" starttimestamp="1700516585068" timestamp="26739313" />
  <Command __id="6779" _type="SelectTextCommand" caretOffset="412" date="Tue Nov 21 00:08:44 EST 2023" end="412" start="406" starttimestamp="1700516585068" timestamp="26739489" />
  <Command __id="6780" _type="MoveCaretCommand" caretOffset="403" date="Tue Nov 21 00:08:44 EST 2023" docOffset="403" starttimestamp="1700516585068" timestamp="26739826" />
  <Command __id="6781" _type="SelectTextCommand" caretOffset="405" date="Tue Nov 21 00:08:45 EST 2023" end="405" start="401" starttimestamp="1700516585068" timestamp="26739986" />
  <Command __id="6782" _type="MoveCaretCommand" caretOffset="407" date="Tue Nov 21 00:08:45 EST 2023" docOffset="407" starttimestamp="1700516585068" timestamp="26740232" />
  <Command __id="6783" _type="SelectTextCommand" caretOffset="412" date="Tue Nov 21 00:08:45 EST 2023" end="412" start="406" starttimestamp="1700516585068" timestamp="26740356" />
  <Command __id="6784" _type="MoveCaretCommand" caretOffset="413" date="Tue Nov 21 00:08:47 EST 2023" docOffset="413" starttimestamp="1700516585068" timestamp="26742533" />
  <Command __id="6785" _type="SelectTextCommand" caretOffset="406" date="Tue Nov 21 00:08:48 EST 2023" end="414" start="406" starttimestamp="1700516585068" timestamp="26743658" />
  <Command __id="6786" _type="ShellCommand" date="Tue Nov 21 00:08:59 EST 2023" starttimestamp="1700516585068" timestamp="26754564" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6787" _type="ShellCommand" date="Tue Nov 21 00:11:03 EST 2023" starttimestamp="1700516585068" timestamp="26878473" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6788" _type="ShellCommand" date="Tue Nov 21 00:11:03 EST 2023" starttimestamp="1700516585068" timestamp="26878778" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6727" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:08:25 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26719999">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6733" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:08:28 EST 2023" docASTNodeCount="93" docActiveCodeLength="552" docExpressionCount="63" docLength="552" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26723261">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression arg0, Environment arg1) {				return null;	}"), Diff(INSERT,"	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}	"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		
		return null;
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="6736" _type="Replace" date="Tue Nov 21 00:08:29 EST 2023" docASTNodeCount="98" docActiveCodeLength="589" docExpressionCount="67" docLength="589" endLine="10" insertionLength="39" int_docASTNodeCount="93" int_docActiveCodeLength="550" int_docExpressionCount="63" int_docLength="550" length="2" offset="262" startLine="10" starttimestamp="1700516585068" timestamp="26724041">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		return evalHelper(expr, environment);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6743" _type="Replace" date="Tue Nov 21 00:08:31 EST 2023" docASTNodeCount="98" docActiveCodeLength="589" docExpressionCount="67" docLength="589" endLine="9" insertionLength="4" int_docASTNodeCount="83" int_docActiveCodeLength="585" int_docExpressionCount="58" int_docLength="585" length="4" offset="236" startLine="9" starttimestamp="1700516585068" timestamp="26726440">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[expr]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6751" _type="Replace" date="Tue Nov 21 00:08:32 EST 2023" docASTNodeCount="98" docActiveCodeLength="596" docExpressionCount="67" docLength="596" endLine="9" insertionLength="11" int_docASTNodeCount="87" int_docActiveCodeLength="585" int_docExpressionCount="60" int_docLength="585" length="4" offset="254" startLine="9" starttimestamp="1700516585068" timestamp="26727693">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6761" _type="Delete" date="Tue Nov 21 00:08:39 EST 2023" docASTNodeCount="91" docActiveCodeLength="593" docExpressionCount="62" docLength="593" endLine="13" length="3" offset="324" startLine="12" starttimestamp="1700516585068" timestamp="26733951">
    <text><![CDATA[	}
]]></text>
  </DocumentChange>
  <DocumentChange __id="6763" _type="Insert" date="Tue Nov 21 00:08:39 EST 2023" docASTNodeCount="98" docActiveCodeLength="596" docExpressionCount="67" docLength="596" length="3" offset="324" starttimestamp="1700516585068" timestamp="26734630">
    <text><![CDATA[	}
]]></text>
  </DocumentChange>
  <DocumentChange __id="6766" _type="Delete" date="Tue Nov 21 00:08:40 EST 2023" docASTNodeCount="96" docActiveCodeLength="581" docExpressionCount="66" docLength="581" endLine="12" length="15" offset="309" startLine="11" starttimestamp="1700516585068" timestamp="26735089">
    <text><![CDATA[		return null;
]]></text>
  </DocumentChange>
  <Command __id="6789" _type="ShellCommand" date="Tue Nov 21 00:11:09 EST 2023" starttimestamp="1700516585068" timestamp="26884825" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6790" _type="ShellCommand" date="Tue Nov 21 00:11:10 EST 2023" starttimestamp="1700516585068" timestamp="26885813" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6791" _type="ShellCommand" date="Tue Nov 21 00:11:11 EST 2023" starttimestamp="1700516585068" timestamp="26886618" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6792" _type="ShellCommand" date="Tue Nov 21 00:11:11 EST 2023" starttimestamp="1700516585068" timestamp="26886867" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6793" _type="ShellCommand" date="Tue Nov 21 00:11:12 EST 2023" starttimestamp="1700516585068" timestamp="26887291" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6794" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:11:13 EST 2023" docASTNodeCount="116" docActiveCodeLength="669" docExpressionCount="84" docLength="669" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26888833">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ListEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;public class ListEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6795" _type="SelectTextCommand" caretOffset="227" date="Tue Nov 21 00:11:13 EST 2023" end="227" start="190" starttimestamp="1700516585068" timestamp="26888889" />
  <Command __id="6797" _type="SelectTextCommand" caretOffset="406" date="Tue Nov 21 00:11:14 EST 2023" end="414" start="406" starttimestamp="1700516585068" timestamp="26889459" />
  <Command __id="6798" _type="ShellCommand" date="Tue Nov 21 00:11:15 EST 2023" starttimestamp="1700516585068" timestamp="26890496" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6796" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:11:14 EST 2023" docASTNodeCount="96" docActiveCodeLength="581" docExpressionCount="66" docLength="581" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26889396">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression "), Diff(DELETE,"arg0"), Diff(INSERT,"expr"), Diff(EQUAL,", Environment "), Diff(DELETE,"arg1"), Diff(INSERT,"environment"), Diff(EQUAL,") {		"), Diff(DELETE,"		"), Diff(EQUAL,"return "), Diff(DELETE,"null"), Diff(INSERT,"evalHelper(expr, environment)"), Diff(EQUAL,";	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}	}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return evalHelper(expr, environment);
	}

	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			return expr.eval(environment);
		}
		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));
		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="6799" _type="ShellCommand" date="Tue Nov 21 00:11:19 EST 2023" starttimestamp="1700516585068" timestamp="26894644" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6800" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:11:21 EST 2023" docASTNodeCount="80" docActiveCodeLength="693" docExpressionCount="55" docLength="693" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26896714">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("quote", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("list", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("load", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("eval", new EvalEvaluator());	}			@Override	public void registerOperations() {		registerBasic();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6801" _type="MoveCaretCommand" caretOffset="412" date="Tue Nov 21 00:11:21 EST 2023" docOffset="412" starttimestamp="1700516585068" timestamp="26896772" />
  <Command __id="6803" _type="SelectTextCommand" caretOffset="406" date="Tue Nov 21 00:11:22 EST 2023" end="414" start="406" starttimestamp="1700516585068" timestamp="26897627" />
  <Command __id="6804" _type="ShellCommand" date="Tue Nov 21 00:11:24 EST 2023" starttimestamp="1700516585068" timestamp="26899216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6805" _type="ShellCommand" date="Tue Nov 21 00:17:27 EST 2023" starttimestamp="1700516585068" timestamp="27262805" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6808" _type="EclipseCommand" commandID="" date="Tue Nov 21 00:17:31 EST 2023" starttimestamp="1700516585068" timestamp="27265981" />
  <Command __id="6809" _type="ShellCommand" date="Tue Nov 21 00:17:32 EST 2023" starttimestamp="1700516585068" timestamp="27267590" type="ECLIPSE_CLOSED" />
  <Command __id="6802" _type="DiffBasedFileOpenCommand" date="Tue Nov 21 00:11:22 EST 2023" docASTNodeCount="96" docActiveCodeLength="581" docExpressionCount="66" docLength="581" projectName="Assignment5" starttimestamp="1700516585068" timestamp="26897572">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/CondEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.SExpression;public class CondEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		return evalHelper(expr, environment);	}	public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			return expr.eval(environment);		}		return ExpressionFactory.newInstance(expr.getHead().eval(environment), evalHelper(expr.getTail(), environment));			}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
</Events>
